{"ast":null,"code":"// OpenAI/AI service for triage and analysis\nimport axios from'axios';const openaiService={// Analyze symptoms using AI\nasync analyzeSymptoms(symptoms,petInfo){try{// Note: This would typically call your backend API that interfaces with OpenAI\n// For now, return a mock response\nconst response={success:true,data:{urgency:'moderate',recommendations:['Monitor your pet closely for the next 24 hours','Contact a veterinarian if symptoms worsen','Ensure your pet stays hydrated'],possibleCauses:['Infection','Dietary issue','Stress'],nextSteps:'Schedule a veterinary consultation within 48 hours'}};return response;}catch(error){return{success:false,error:error.message||'Failed to analyze symptoms'};}},// Generate health report\nasync generateHealthReport(triageData){try{// Mock health report generation\nreturn{success:true,data:{report:'Health report generated successfully',timestamp:new Date().toISOString()}};}catch(error){return{success:false,error:error.message||'Failed to generate health report'};}},// Get triage recommendation\nasync getTriageRecommendation(symptoms,petDetails){try{// Mock triage recommendation\nreturn{success:true,data:{urgency:'routine',recommendation:'Schedule a routine checkup',confidence:0.85}};}catch(error){return{success:false,error:error.message||'Failed to get recommendation'};}}};export default openaiService;","map":{"version":3,"names":["axios","openaiService","analyzeSymptoms","symptoms","petInfo","response","success","data","urgency","recommendations","possibleCauses","nextSteps","error","message","generateHealthReport","triageData","report","timestamp","Date","toISOString","getTriageRecommendation","petDetails","recommendation","confidence"],"sources":["/workspace/src/services/openaiService.js"],"sourcesContent":["// OpenAI/AI service for triage and analysis\nimport axios from 'axios';\n\nconst openaiService = {\n  // Analyze symptoms using AI\n  async analyzeSymptoms(symptoms, petInfo) {\n    try {\n      // Note: This would typically call your backend API that interfaces with OpenAI\n      // For now, return a mock response\n      const response = {\n        success: true,\n        data: {\n          urgency: 'moderate',\n          recommendations: [\n            'Monitor your pet closely for the next 24 hours',\n            'Contact a veterinarian if symptoms worsen',\n            'Ensure your pet stays hydrated'\n          ],\n          possibleCauses: ['Infection', 'Dietary issue', 'Stress'],\n          nextSteps: 'Schedule a veterinary consultation within 48 hours'\n        }\n      };\n\n      return response;\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message || 'Failed to analyze symptoms'\n      };\n    }\n  },\n\n  // Generate health report\n  async generateHealthReport(triageData) {\n    try {\n      // Mock health report generation\n      return {\n        success: true,\n        data: {\n          report: 'Health report generated successfully',\n          timestamp: new Date().toISOString()\n        }\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message || 'Failed to generate health report'\n      };\n    }\n  },\n\n  // Get triage recommendation\n  async getTriageRecommendation(symptoms, petDetails) {\n    try {\n      // Mock triage recommendation\n      return {\n        success: true,\n        data: {\n          urgency: 'routine',\n          recommendation: 'Schedule a routine checkup',\n          confidence: 0.85\n        }\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message || 'Failed to get recommendation'\n      };\n    }\n  }\n};\n\nexport default openaiService;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,aAAa,CAAG,CACpB;AACA,KAAM,CAAAC,eAAeA,CAACC,QAAQ,CAAEC,OAAO,CAAE,CACvC,GAAI,CACF;AACA;AACA,KAAM,CAAAC,QAAQ,CAAG,CACfC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,CACJC,OAAO,CAAE,UAAU,CACnBC,eAAe,CAAE,CACf,gDAAgD,CAChD,2CAA2C,CAC3C,gCAAgC,CACjC,CACDC,cAAc,CAAE,CAAC,WAAW,CAAE,eAAe,CAAE,QAAQ,CAAC,CACxDC,SAAS,CAAE,oDACb,CACF,CAAC,CAED,MAAO,CAAAN,QAAQ,CACjB,CAAE,MAAOO,KAAK,CAAE,CACd,MAAO,CACLN,OAAO,CAAE,KAAK,CACdM,KAAK,CAAEA,KAAK,CAACC,OAAO,EAAI,4BAC1B,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAC,oBAAoBA,CAACC,UAAU,CAAE,CACrC,GAAI,CACF;AACA,MAAO,CACLT,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,CACJS,MAAM,CAAE,sCAAsC,CAC9CC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CACF,CAAC,CACH,CAAE,MAAOP,KAAK,CAAE,CACd,MAAO,CACLN,OAAO,CAAE,KAAK,CACdM,KAAK,CAAEA,KAAK,CAACC,OAAO,EAAI,kCAC1B,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAO,uBAAuBA,CAACjB,QAAQ,CAAEkB,UAAU,CAAE,CAClD,GAAI,CACF;AACA,MAAO,CACLf,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,CACJC,OAAO,CAAE,SAAS,CAClBc,cAAc,CAAE,4BAA4B,CAC5CC,UAAU,CAAE,IACd,CACF,CAAC,CACH,CAAE,MAAOX,KAAK,CAAE,CACd,MAAO,CACLN,OAAO,CAAE,KAAK,CACdM,KAAK,CAAEA,KAAK,CAACC,OAAO,EAAI,8BAC1B,CAAC,CACH,CACF,CACF,CAAC,CAED,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}