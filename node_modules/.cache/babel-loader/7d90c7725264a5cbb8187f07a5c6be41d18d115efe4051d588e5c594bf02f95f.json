{"ast":null,"code":"import { defineIntegration } from '../integration.js';\nimport { applyAggregateErrorsToEvent } from '../utils/aggregate-errors.js';\nimport { exceptionFromError } from '../utils/eventbuilder.js';\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\nconst INTEGRATION_NAME = 'LinkedErrors';\nconst _linkedErrorsIntegration = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n      applyAggregateErrorsToEvent(exceptionFromError, options.stackParser, key, limit, event, hint);\n    }\n  };\n};\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\nexport { linkedErrorsIntegration };","map":{"version":3,"names":["DEFAULT_KEY","DEFAULT_LIMIT","INTEGRATION_NAME","_linkedErrorsIntegration","options","arguments","length","undefined","limit","key","name","preprocessEvent","event","hint","client","getOptions","applyAggregateErrorsToEvent","exceptionFromError","stackParser","linkedErrorsIntegration","defineIntegration"],"sources":["/workspace/node_modules/@sentry/core/src/integrations/linkederrors.ts"],"sourcesContent":["import { defineIntegration } from '../integration';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport { applyAggregateErrorsToEvent } from '../utils/aggregate-errors';\nimport { exceptionFromError } from '../utils/eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(exceptionFromError, options.stackParser, key, limit, event, hint);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n"],"mappings":";;;AAUA,MAAMA,WAAA,GAAc,OAAO;AAC3B,MAAMC,aAAA,GAAgB,CAAC;AAEvB,MAAMC,gBAAA,GAAmB,cAAc;AAEvC,MAAMC,wBAAA,GAA4B,SAAAA,CAAA,EAAuC;EAAA,IAAtCC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAwB,EAAE;EAClE,MAAMG,KAAA,GAAQJ,OAAO,CAACI,KAAA,IAASP,aAAa;EAC5C,MAAMQ,GAAA,GAAML,OAAO,CAACK,GAAA,IAAOT,WAAW;EAEtC,OAAO;IACLU,IAAI,EAAER,gBAAgB;IACtBS,eAAeA,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAE;MACnC,MAAMV,OAAA,GAAUU,MAAM,CAACC,UAAU,EAAE;MAEnCC,2BAA2B,CAACC,kBAAkB,EAAEb,OAAO,CAACc,WAAW,EAAET,GAAG,EAAED,KAAK,EAAEI,KAAK,EAAEC,IAAI,CAAC;IACnG;EACA,CAAG;AACH,CAAC;MAEYM,uBAAA,GAA0BC,iBAAiB,CAACjB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}