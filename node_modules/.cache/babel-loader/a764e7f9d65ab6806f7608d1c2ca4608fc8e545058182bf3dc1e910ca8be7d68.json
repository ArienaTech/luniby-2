{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import{supabase}from'../lib/supabase.js';import*as Sentry from'@sentry/react';// Role-based access control\nimport{ensurePetOwnerAccess,USER_ROLES}from'../utils/roleUtils';// Modular Dashboard Components\nimport PetOwnerLayout from'./dashboard/PetOwnerLayout';import PetOwnerTabs from'./dashboard/PetOwnerTabs';import PetOwnerStats from'./dashboard/PetOwnerStats';import PetOwnerBanners from'./dashboard/PetOwnerBanners';import PetOwnerFloatingActions from'./dashboard/PetOwnerFloatingActions';// Existing Components (reused)\nimport ProfileHeader from'./ProfileHeader';import PetsGallery from'./PetsGallery';import HealthAlerts from'./HealthAlerts';import UsageStatus from'./UsageStatus';import BookingsQuickActions from'./BookingsQuickActions';import HealthRecordsViewer from'./HealthRecordsViewer';import CaseHistoryViewer from'./CaseHistoryViewer';import FavoriteButton from'./FavoriteButton';// Form Components\nimport AddHealthRecordForm from'./AddHealthRecordForm';import EditHealthRecordForm from'./EditHealthRecordForm';import AddPetForm from'./AddPetForm';// Services\nimport favoritesService from'../services/favoritesService';import petService from'../services/petService';import healthRecordService from'../services/healthRecordService';// Constants and Utils\nimport{STORAGE_BUCKETS}from'../lib/constants';import{PetIcon,HealthIcon,UIIcon}from'./MinimalIcons';import{createRealtimeSubscription}from'../lib/supabase-utils.js';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PetOwnerDashboard=()=>{const navigate=useNavigate();// Core State\nconst[user,setUser]=useState(null);const[profile,setProfile]=useState(null);const[loading,setLoading]=useState(true);const[activeTab,setActiveTab]=useState('overview');// Pet and Health Data\nconst[pets,setPets]=useState([]);const[bookings,setBookings]=useState([]);const[healthAlerts,setHealthAlerts]=useState([]);const[healthRecordsData,setHealthRecordsData]=useState({});const[petHealthStats,setPetHealthStats]=useState({});// User Plan and Usage\nconst[userPlan,setUserPlan]=useState('free');const[aiTriageCount,setAiTriageCount]=useState(0);const[weeklyCaseCount,setWeeklyCaseCount]=useState(0);const[lastCaseDate,setLastCaseDate]=useState(null);const[extraCasesPurchased,setExtraCasesPurchased]=useState(0);const[totalSpentOnExtras,setTotalSpentOnExtras]=useState(0);// UI State\nconst[showMobileMenu,setShowMobileMenu]=useState(false);const[showExtraCaseModal,setShowExtraCaseModal]=useState(false);const[uploadingPhoto,setUploadingPhoto]=useState(false);// Form States\nconst[showHealthRecordForm,setShowHealthRecordForm]=useState(false);const[showEditHealthRecordForm,setShowEditHealthRecordForm]=useState(false);const[showAddPetForm,setShowAddPetForm]=useState(false);const[showPetSelectionModal,setShowPetSelectionModal]=useState(false);const[selectedPetForHealth,setSelectedPetForHealth]=useState(null);const[selectedHealthRecordForEdit,setSelectedHealthRecordForEdit]=useState(null);const[editingPet,setEditingPet]=useState(null);const[recordsRefreshKey,setRecordsRefreshKey]=useState(0);// Favorites State\nconst[dashboardFavorites,setDashboardFavorites]=useState([]);const[filteredDashboardFavorites,setFilteredDashboardFavorites]=useState([]);const[favoritesLoading,setFavoritesLoading]=useState(false);const[favoritesFilterType,setFavoritesFilterType]=useState('all');const[favoritesSearchTerm,setFavoritesSearchTerm]=useState('');// Load user data and initialize dashboard\nconst loadUserData=useCallback(async()=>{try{var _currentProfile,_currentProfile2,_currentProfile3,_currentProfile4,_currentProfile5,_currentProfile6;const{data:{user},error:userError}=await supabase.auth.getUser();if(userError||!user){navigate('/signin');return;}setUser(user);// Load or create profile with proper role validation\nconst{data:profileData,error:profileError}=await supabase.from('profiles').select('*').eq('id',user.id).single();let currentProfile=profileData;if(profileError&&profileError.code==='PGRST116'){var _user$user_metadata;// Create profile if it doesn't exist - ensure pet_owner role\nconst correctRole=ensurePetOwnerAccess.getRoleForEmail(user.email);const{data:newProfile}=await supabase.from('profiles').insert([{id:user.id,email:user.email,role:correctRole,full_name:((_user$user_metadata=user.user_metadata)===null||_user$user_metadata===void 0?void 0:_user$user_metadata.full_name)||user.email.split('@')[0],is_active:true}]).select().single();if(newProfile){currentProfile=newProfile;}}else if(!profileError){// Validate existing profile access\nconst accessValidation=ensurePetOwnerAccess.validateDashboardAccess(profileData);if(!accessValidation.hasAccess){console.warn('User does not have dashboard access:',accessValidation.message);// Optionally redirect to appropriate dashboard or show access denied\n}// Special handling for Anna Wilson to ensure she has pet_owner role\nif(user.email==='anna-wilson@gmail.com'&&profileData.role!==USER_ROLES.PET_OWNER){console.log('Updating Anna Wilson to pet_owner role');const{data:updatedProfile}=await supabase.from('profiles').update({role:USER_ROLES.PET_OWNER,updated_at:new Date().toISOString()}).eq('id',user.id).select().single();if(updatedProfile){currentProfile=updatedProfile;}}}setProfile(currentProfile);// Set usage data\nsetUserPlan(((_currentProfile=currentProfile)===null||_currentProfile===void 0?void 0:_currentProfile.subscription_plan)||'free');setAiTriageCount(((_currentProfile2=currentProfile)===null||_currentProfile2===void 0?void 0:_currentProfile2.ai_triage_count)||0);setWeeklyCaseCount(((_currentProfile3=currentProfile)===null||_currentProfile3===void 0?void 0:_currentProfile3.weekly_case_count)||0);setLastCaseDate((_currentProfile4=currentProfile)===null||_currentProfile4===void 0?void 0:_currentProfile4.last_case_date);setExtraCasesPurchased(((_currentProfile5=currentProfile)===null||_currentProfile5===void 0?void 0:_currentProfile5.extra_cases_purchased)||0);setTotalSpentOnExtras(((_currentProfile6=currentProfile)===null||_currentProfile6===void 0?void 0:_currentProfile6.total_spent_on_extras)||0);// Load bookings\nconst{data:bookingsData}=await supabase.from('consultation_bookings').select('*, provider_listings(title, provider_name, service_type)').eq('user_id',user.id).order('created_at',{ascending:false}).limit(5);setBookings(bookingsData||[]);// Load pets and health data\nawait loadPetsData(user.id);}catch(error){Sentry.captureException(error);console.error('Error loading user data:',error);}finally{setLoading(false);}},[navigate]);// Load pets and associated health data\nconst loadPetsData=async userId=>{try{const petsResult=await petService.getUserPets(userId);if(petsResult.success){setPets(petsResult.data);// Load health data for all pets\nconst alerts=[];const healthRecords={};const healthStats={};const healthPromises=petsResult.data.map(async pet=>{const[recordsResult,statsResult]=await Promise.all([healthRecordService.getHealthRecords(pet.id),healthRecordService.getHealthStats(pet.id)]);healthRecords[pet.id]=recordsResult.success?recordsResult.data||[]:[];if(statsResult.success){healthStats[pet.id]=statsResult.data;// Generate alerts\nif(statsResult.data.overdueVaccinations>0){alerts.push({petId:pet.id,petName:pet.name,type:'vaccination',message:`${statsResult.data.overdueVaccinations} overdue vaccination${statsResult.data.overdueVaccinations>1?'s':''}`,urgent:true});}}});await Promise.all(healthPromises);setHealthAlerts(alerts);setHealthRecordsData(healthRecords);setPetHealthStats(healthStats);}}catch(error){console.error('Error loading pets data:',error);}};// Utility functions for usage limits\nconst getWeekStart=function(){let date=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Date();const d=new Date(date);const day=d.getDay();const diff=d.getDate()-day+(day===0?-6:1);return new Date(d.setDate(diff));};const canAddMorePets=()=>userPlan==='premium'||pets.length<3;const canUseAiTriage=()=>userPlan==='premium'||aiTriageCount<3;const canCreateCaseThisWeek=()=>{if(userPlan==='premium')return true;const currentWeekStart=getWeekStart().toDateString();const lastCaseWeekStart=lastCaseDate?getWeekStart(new Date(lastCaseDate)).toDateString():null;return lastCaseWeekStart!==currentWeekStart||weeklyCaseCount<1;};const getRemainingFreeCasesThisWeek=()=>{if(userPlan==='premium')return'Unlimited';const currentWeekStart=getWeekStart().toDateString();const lastCaseWeekStart=lastCaseDate?getWeekStart(new Date(lastCaseDate)).toDateString():null;return lastCaseWeekStart!==currentWeekStart?1:Math.max(0,1-weeklyCaseCount);};// Health statistics calculation\nconst getHealthStats=()=>{const totalPets=pets.length;const totalHealthRecords=Object.values(healthRecordsData).reduce((sum,records)=>sum+records.length,0);const healthyPets=pets.length-healthAlerts.filter(alert=>alert.urgent).length;const overdueVaccinations=healthAlerts.filter(alert=>alert.type==='vaccination').length;const petsUpToDate=pets.filter(pet=>{const petRecords=healthRecordsData[pet.id]||[];const vaccinationRecords=petRecords.filter(record=>record.record_type==='vaccination');if(vaccinationRecords.length===0)return false;const oneYearAgo=new Date();oneYearAgo.setFullYear(oneYearAgo.getFullYear()-1);return vaccinationRecords.some(record=>new Date(record.date_performed)>oneYearAgo);}).length;return{totalPets,totalHealthRecords,healthyPets,petsUpToDate,overdueVaccinations,healthPercentage:totalPets>0?Math.round(healthyPets/totalPets*100):100};};// Event handlers\nconst handleAddPet=()=>{if(!canAddMorePets()){alert('You have reached the 3-pet limit on your current plan. Please upgrade to add more pets.');return;}setEditingPet(null);setShowAddPetForm(true);};const handlePetFormSuccess=newPet=>{if(editingPet){setPets(prevPets=>prevPets.map(pet=>pet.id===editingPet.id?newPet:pet));}else{setPets(prevPets=>[newPet,...prevPets]);}setShowAddPetForm(false);setEditingPet(null);};const handleAddHealthRecord=pet=>{setSelectedPetForHealth(pet);setShowHealthRecordForm(true);};const handleHealthRecordSuccess=async()=>{await loadPetsData(user.id);setShowHealthRecordForm(false);setSelectedPetForHealth(null);setRecordsRefreshKey(prev=>prev+1);};// Effects\nuseEffect(()=>{loadUserData();},[loadUserData]);useEffect(()=>{if(user&&activeTab==='favorites'){loadFavorites();}},[user,activeTab]);// Realtime subscription\nuseEffect(()=>{let channel;const setupRealtime=async()=>{if(!user)return;channel=createRealtimeSubscription('profiles',payload=>{if(!(payload!==null&&payload!==void 0&&payload.new))return;const updated=payload.new;if(typeof updated.ai_triage_count!=='undefined'){setAiTriageCount(updated.ai_triage_count||0);}if(typeof updated.weekly_case_count!=='undefined'){setWeeklyCaseCount(updated.weekly_case_count||0);}if(typeof updated.last_case_date!=='undefined'){setLastCaseDate(updated.last_case_date||null);}},{filter:`id=eq.${user.id}`});};setupRealtime();return()=>{if(channel){channel.cleanup?channel.cleanup():supabase.removeChannel(channel);}};},[user]);const loadFavorites=async()=>{if(!user)return;try{setFavoritesLoading(true);const result=await favoritesService.getUserFavoritesWithDetails(user.id);if(result.success){setDashboardFavorites(result.data);}}catch(error){console.error('Error loading favorites:',error);}finally{setFavoritesLoading(false);}};// Debug logging for Anna Wilson\nuseEffect(()=>{if(user&&user.email==='anna-wilson@gmail.com'){console.log('🎯 Anna Wilson Dashboard Access:',{email:user.email,role:profile===null||profile===void 0?void 0:profile.role,hasAccess:(profile===null||profile===void 0?void 0:profile.role)===USER_ROLES.PET_OWNER,dashboardRoute:'/pet-owner-dashboard'});}},[user,profile]);return/*#__PURE__*/_jsxs(PetOwnerLayout,{loading:loading,children:[/*#__PURE__*/_jsx(PetOwnerBanners,{userPlan:userPlan,aiTriageCount:aiTriageCount,totalSpentOnExtras:totalSpentOnExtras,canCreateCaseThisWeek:canCreateCaseThisWeek(),onShowExtraCaseModal:()=>setShowExtraCaseModal(true)}),/*#__PURE__*/_jsx(HealthAlerts,{healthAlerts:healthAlerts}),/*#__PURE__*/_jsx(PetOwnerTabs,{activeTab:activeTab,onTabChange:setActiveTab}),activeTab==='overview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4 sm:space-y-6\",children:[/*#__PURE__*/_jsx(ProfileHeader,{profile:profile,user:user,profilePhotoUrl:profile===null||profile===void 0?void 0:profile.avatar_url,pets:pets,healthStats:getHealthStats(),bookings:bookings,onPhotoUpload:async e=>{// Handle photo upload logic here\n}}),/*#__PURE__*/_jsx(PetsGallery,{pets:pets,userPlan:userPlan,dismissedPetLimitBanner:false,onAddPet:handleAddPet,onEditPet:pet=>{setEditingPet(pet);setShowAddPetForm(true);},onDeletePet:async petId=>{const confirmed=window.confirm('Delete this pet? This removes all data and files. This cannot be undone.');if(confirmed){const result=await petService.deletePetCascade(petId);if(result.success){setPets(prevPets=>prevPets.filter(pet=>pet.id!==petId));}}},onDismissPetLimitBanner:()=>{},FreemiumLimitBanner:()=>null}),/*#__PURE__*/_jsx(BookingsQuickActions,{bookings:bookings,onSetActiveTab:setActiveTab}),/*#__PURE__*/_jsx(UsageStatus,{userPlan:userPlan,totalSpentOnExtras:totalSpentOnExtras,pets:pets,onShowExtraCaseModal:()=>setShowExtraCaseModal(true),getRemainingFreeCasesThisWeek:getRemainingFreeCasesThisWeek,canCreateCaseThisWeek:canCreateCaseThisWeek,canUseAiTriage:canUseAiTriage,canAddMorePets:canAddMorePets})]}),activeTab==='health'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4 sm:space-y-6\",children:pets.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-16 bg-white rounded-xl border-2 border-dashed border-gray-300\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-20 h-20 mx-auto mb-6 bg-[#E5F4F1] rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(HealthIcon,{type:\"health\",className:\"w-10 h-10\",color:\"#5EB47C\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-gray-900 mb-2\",children:\"Start Your Pet's Health Journey\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-8 max-w-md mx-auto\",children:\"Add your pets first to start tracking their health records, vaccinations, medications, and more.\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('overview'),className:\"inline-flex items-center px-6 py-3 bg-[#5EB47C] text-white rounded-xl hover:bg-[#4A9A64] transition-all duration-200 shadow-lg hover:shadow-xl font-medium\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 mr-2\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 4v16m8-8H4\"})}),\"Add Your First Pet\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PetOwnerStats,{totalPets:pets.length,totalHealthRecords:getHealthStats().totalHealthRecords,petsUpToDate:getHealthStats().petsUpToDate,healthPercentage:getHealthStats().healthPercentage,healthAlerts:healthAlerts.length,onHealthRecordsClick:()=>{var _document$getElementB;(_document$getElementB=document.getElementById('health-records-section'))===null||_document$getElementB===void 0?void 0:_document$getElementB.scrollIntoView({behavior:'smooth'});},onAlertsClick:()=>{// Scroll to alerts or handle alert click\n}}),/*#__PURE__*/_jsx(HealthRecordsViewer,{pets:pets,userPlan:userPlan,onEditRecord:record=>{setSelectedHealthRecordForEdit(record);setShowEditHealthRecordForm(true);},onAddRecord:handleAddHealthRecord,onRefresh:()=>loadPetsData(user.id),refreshKey:recordsRefreshKey})]})}),activeTab==='cases'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4 sm:space-y-6\",children:/*#__PURE__*/_jsx(CaseHistoryViewer,{pets:pets,userId:user===null||user===void 0?void 0:user.id})}),activeTab==='favorites'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4 sm:space-y-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl p-6 border border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold text-gray-900 mb-4\",children:\"My Favorites\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Your favorite services and products will appear here.\"})]})}),/*#__PURE__*/_jsx(PetOwnerFloatingActions,{canUseAiTriage:canUseAiTriage,canCreateCaseThisWeek:canCreateCaseThisWeek,userPlan:userPlan,getRemainingFreeCasesThisWeek:getRemainingFreeCasesThisWeek,onShowExtraCaseModal:()=>setShowExtraCaseModal(true),showMobileMenu:showMobileMenu,onToggleMobileMenu:setShowMobileMenu}),showHealthRecordForm&&selectedPetForHealth&&/*#__PURE__*/_jsx(AddHealthRecordForm,{petId:selectedPetForHealth.id,petName:selectedPetForHealth.name,onClose:()=>{setShowHealthRecordForm(false);setSelectedPetForHealth(null);},onSuccess:handleHealthRecordSuccess}),showEditHealthRecordForm&&selectedHealthRecordForEdit&&/*#__PURE__*/_jsx(EditHealthRecordForm,{record:selectedHealthRecordForEdit,onClose:()=>{setShowEditHealthRecordForm(false);setSelectedHealthRecordForEdit(null);},onSuccess:()=>{loadPetsData(user.id);setShowEditHealthRecordForm(false);setSelectedHealthRecordForEdit(null);}}),showAddPetForm&&user&&/*#__PURE__*/_jsx(AddPetForm,{onClose:()=>{setShowAddPetForm(false);setEditingPet(null);},onSuccess:handlePetFormSuccess,userId:user.id,editingPet:editingPet})]});};export default PetOwnerDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","supabase","Sentry","ensurePetOwnerAccess","USER_ROLES","PetOwnerLayout","PetOwnerTabs","PetOwnerStats","PetOwnerBanners","PetOwnerFloatingActions","ProfileHeader","PetsGallery","HealthAlerts","UsageStatus","BookingsQuickActions","HealthRecordsViewer","CaseHistoryViewer","FavoriteButton","AddHealthRecordForm","EditHealthRecordForm","AddPetForm","favoritesService","petService","healthRecordService","STORAGE_BUCKETS","PetIcon","HealthIcon","UIIcon","createRealtimeSubscription","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PetOwnerDashboard","navigate","user","setUser","profile","setProfile","loading","setLoading","activeTab","setActiveTab","pets","setPets","bookings","setBookings","healthAlerts","setHealthAlerts","healthRecordsData","setHealthRecordsData","petHealthStats","setPetHealthStats","userPlan","setUserPlan","aiTriageCount","setAiTriageCount","weeklyCaseCount","setWeeklyCaseCount","lastCaseDate","setLastCaseDate","extraCasesPurchased","setExtraCasesPurchased","totalSpentOnExtras","setTotalSpentOnExtras","showMobileMenu","setShowMobileMenu","showExtraCaseModal","setShowExtraCaseModal","uploadingPhoto","setUploadingPhoto","showHealthRecordForm","setShowHealthRecordForm","showEditHealthRecordForm","setShowEditHealthRecordForm","showAddPetForm","setShowAddPetForm","showPetSelectionModal","setShowPetSelectionModal","selectedPetForHealth","setSelectedPetForHealth","selectedHealthRecordForEdit","setSelectedHealthRecordForEdit","editingPet","setEditingPet","recordsRefreshKey","setRecordsRefreshKey","dashboardFavorites","setDashboardFavorites","filteredDashboardFavorites","setFilteredDashboardFavorites","favoritesLoading","setFavoritesLoading","favoritesFilterType","setFavoritesFilterType","favoritesSearchTerm","setFavoritesSearchTerm","loadUserData","_currentProfile","_currentProfile2","_currentProfile3","_currentProfile4","_currentProfile5","_currentProfile6","data","error","userError","auth","getUser","profileData","profileError","from","select","eq","id","single","currentProfile","code","_user$user_metadata","correctRole","getRoleForEmail","email","newProfile","insert","role","full_name","user_metadata","split","is_active","accessValidation","validateDashboardAccess","hasAccess","console","warn","message","PET_OWNER","log","updatedProfile","update","updated_at","Date","toISOString","subscription_plan","ai_triage_count","weekly_case_count","last_case_date","extra_cases_purchased","total_spent_on_extras","bookingsData","order","ascending","limit","loadPetsData","captureException","userId","petsResult","getUserPets","success","alerts","healthRecords","healthStats","healthPromises","map","pet","recordsResult","statsResult","Promise","all","getHealthRecords","getHealthStats","overdueVaccinations","push","petId","petName","name","type","urgent","getWeekStart","date","arguments","length","undefined","d","day","getDay","diff","getDate","setDate","canAddMorePets","canUseAiTriage","canCreateCaseThisWeek","currentWeekStart","toDateString","lastCaseWeekStart","getRemainingFreeCasesThisWeek","Math","max","totalPets","totalHealthRecords","Object","values","reduce","sum","records","healthyPets","filter","alert","petsUpToDate","petRecords","vaccinationRecords","record","record_type","oneYearAgo","setFullYear","getFullYear","some","date_performed","healthPercentage","round","handleAddPet","handlePetFormSuccess","newPet","prevPets","handleAddHealthRecord","handleHealthRecordSuccess","prev","loadFavorites","channel","setupRealtime","payload","new","updated","cleanup","removeChannel","result","getUserFavoritesWithDetails","dashboardRoute","children","onShowExtraCaseModal","onTabChange","className","profilePhotoUrl","avatar_url","onPhotoUpload","e","dismissedPetLimitBanner","onAddPet","onEditPet","onDeletePet","confirmed","window","confirm","deletePetCascade","onDismissPetLimitBanner","FreemiumLimitBanner","onSetActiveTab","color","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","onHealthRecordsClick","_document$getElementB","document","getElementById","scrollIntoView","behavior","onAlertsClick","onEditRecord","onAddRecord","onRefresh","refreshKey","onToggleMobileMenu","onClose","onSuccess"],"sources":["/workspace/src/components/PetOwnerDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport * as Sentry from '@sentry/react';\n\n// Role-based access control\nimport { ensurePetOwnerAccess, USER_ROLES } from '../utils/roleUtils';\n\n// Modular Dashboard Components\nimport PetOwnerLayout from './dashboard/PetOwnerLayout';\nimport PetOwnerTabs from './dashboard/PetOwnerTabs';\nimport PetOwnerStats from './dashboard/PetOwnerStats';\nimport PetOwnerBanners from './dashboard/PetOwnerBanners';\nimport PetOwnerFloatingActions from './dashboard/PetOwnerFloatingActions';\n\n// Existing Components (reused)\nimport ProfileHeader from './ProfileHeader';\nimport PetsGallery from './PetsGallery';\nimport HealthAlerts from './HealthAlerts';\nimport UsageStatus from './UsageStatus';\nimport BookingsQuickActions from './BookingsQuickActions';\nimport HealthRecordsViewer from './HealthRecordsViewer';\nimport CaseHistoryViewer from './CaseHistoryViewer';\nimport FavoriteButton from './FavoriteButton';\n\n// Form Components\nimport AddHealthRecordForm from './AddHealthRecordForm';\nimport EditHealthRecordForm from './EditHealthRecordForm';\nimport AddPetForm from './AddPetForm';\n\n// Services\nimport favoritesService from '../services/favoritesService';\nimport petService from '../services/petService';\nimport healthRecordService from '../services/healthRecordService';\n\n// Constants and Utils\nimport { STORAGE_BUCKETS } from '../lib/constants';\nimport { PetIcon, HealthIcon, UIIcon } from './MinimalIcons';\nimport { createRealtimeSubscription } from '../lib/supabase-utils.js';\n\nconst PetOwnerDashboard = () => {\n  const navigate = useNavigate();\n  \n  // Core State\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n  \n  // Pet and Health Data\n  const [pets, setPets] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [healthAlerts, setHealthAlerts] = useState([]);\n  const [healthRecordsData, setHealthRecordsData] = useState({});\n  const [petHealthStats, setPetHealthStats] = useState({});\n  \n  // User Plan and Usage\n  const [userPlan, setUserPlan] = useState('free');\n  const [aiTriageCount, setAiTriageCount] = useState(0);\n  const [weeklyCaseCount, setWeeklyCaseCount] = useState(0);\n  const [lastCaseDate, setLastCaseDate] = useState(null);\n  const [extraCasesPurchased, setExtraCasesPurchased] = useState(0);\n  const [totalSpentOnExtras, setTotalSpentOnExtras] = useState(0);\n  \n  // UI State\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [showExtraCaseModal, setShowExtraCaseModal] = useState(false);\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\n  \n  // Form States\n  const [showHealthRecordForm, setShowHealthRecordForm] = useState(false);\n  const [showEditHealthRecordForm, setShowEditHealthRecordForm] = useState(false);\n  const [showAddPetForm, setShowAddPetForm] = useState(false);\n  const [showPetSelectionModal, setShowPetSelectionModal] = useState(false);\n  const [selectedPetForHealth, setSelectedPetForHealth] = useState(null);\n  const [selectedHealthRecordForEdit, setSelectedHealthRecordForEdit] = useState(null);\n  const [editingPet, setEditingPet] = useState(null);\n  const [recordsRefreshKey, setRecordsRefreshKey] = useState(0);\n  \n  // Favorites State\n  const [dashboardFavorites, setDashboardFavorites] = useState([]);\n  const [filteredDashboardFavorites, setFilteredDashboardFavorites] = useState([]);\n  const [favoritesLoading, setFavoritesLoading] = useState(false);\n  const [favoritesFilterType, setFavoritesFilterType] = useState('all');\n  const [favoritesSearchTerm, setFavoritesSearchTerm] = useState('');\n\n  // Load user data and initialize dashboard\n  const loadUserData = useCallback(async () => {\n    try {\n      const { data: { user }, error: userError } = await supabase.auth.getUser();\n      if (userError || !user) {\n        navigate('/signin');\n        return;\n      }\n      setUser(user);\n\n      // Load or create profile with proper role validation\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n      let currentProfile = profileData;\n\n      if (profileError && profileError.code === 'PGRST116') {\n        // Create profile if it doesn't exist - ensure pet_owner role\n        const correctRole = ensurePetOwnerAccess.getRoleForEmail(user.email);\n        \n        const { data: newProfile } = await supabase\n          .from('profiles')\n          .insert([{\n            id: user.id,\n            email: user.email,\n            role: correctRole,\n            full_name: user.user_metadata?.full_name || user.email.split('@')[0],\n            is_active: true,\n          }])\n          .select()\n          .single();\n        \n        if (newProfile) {\n          currentProfile = newProfile;\n        }\n      } else if (!profileError) {\n        // Validate existing profile access\n        const accessValidation = ensurePetOwnerAccess.validateDashboardAccess(profileData);\n        \n        if (!accessValidation.hasAccess) {\n          console.warn('User does not have dashboard access:', accessValidation.message);\n          // Optionally redirect to appropriate dashboard or show access denied\n        }\n\n        // Special handling for Anna Wilson to ensure she has pet_owner role\n        if (user.email === 'anna-wilson@gmail.com' && profileData.role !== USER_ROLES.PET_OWNER) {\n          console.log('Updating Anna Wilson to pet_owner role');\n          const { data: updatedProfile } = await supabase\n            .from('profiles')\n            .update({ \n              role: USER_ROLES.PET_OWNER,\n              updated_at: new Date().toISOString()\n            })\n            .eq('id', user.id)\n            .select()\n            .single();\n          \n          if (updatedProfile) {\n            currentProfile = updatedProfile;\n          }\n        }\n      }\n\n      setProfile(currentProfile);\n\n      // Set usage data\n      setUserPlan(currentProfile?.subscription_plan || 'free');\n      setAiTriageCount(currentProfile?.ai_triage_count || 0);\n      setWeeklyCaseCount(currentProfile?.weekly_case_count || 0);\n      setLastCaseDate(currentProfile?.last_case_date);\n      setExtraCasesPurchased(currentProfile?.extra_cases_purchased || 0);\n      setTotalSpentOnExtras(currentProfile?.total_spent_on_extras || 0);\n\n      // Load bookings\n      const { data: bookingsData } = await supabase\n        .from('consultation_bookings')\n        .select('*, provider_listings(title, provider_name, service_type)')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n        .limit(5);\n      setBookings(bookingsData || []);\n\n      // Load pets and health data\n      await loadPetsData(user.id);\n\n    } catch (error) {\n      Sentry.captureException(error);\n      console.error('Error loading user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n\n  // Load pets and associated health data\n  const loadPetsData = async (userId) => {\n    try {\n      const petsResult = await petService.getUserPets(userId);\n      if (petsResult.success) {\n        setPets(petsResult.data);\n        \n        // Load health data for all pets\n        const alerts = [];\n        const healthRecords = {};\n        const healthStats = {};\n\n        const healthPromises = petsResult.data.map(async (pet) => {\n          const [recordsResult, statsResult] = await Promise.all([\n            healthRecordService.getHealthRecords(pet.id),\n            healthRecordService.getHealthStats(pet.id)\n          ]);\n\n          healthRecords[pet.id] = recordsResult.success ? (recordsResult.data || []) : [];\n          \n          if (statsResult.success) {\n            healthStats[pet.id] = statsResult.data;\n            \n            // Generate alerts\n            if (statsResult.data.overdueVaccinations > 0) {\n              alerts.push({\n                petId: pet.id,\n                petName: pet.name,\n                type: 'vaccination',\n                message: `${statsResult.data.overdueVaccinations} overdue vaccination${statsResult.data.overdueVaccinations > 1 ? 's' : ''}`,\n                urgent: true\n              });\n            }\n          }\n        });\n\n        await Promise.all(healthPromises);\n        \n        setHealthAlerts(alerts);\n        setHealthRecordsData(healthRecords);\n        setPetHealthStats(healthStats);\n      }\n    } catch (error) {\n      console.error('Error loading pets data:', error);\n    }\n  };\n\n  // Utility functions for usage limits\n  const getWeekStart = (date = new Date()) => {\n    const d = new Date(date);\n    const day = d.getDay();\n    const diff = d.getDate() - day + (day === 0 ? -6 : 1);\n    return new Date(d.setDate(diff));\n  };\n\n  const canAddMorePets = () => userPlan === 'premium' || pets.length < 3;\n  const canUseAiTriage = () => userPlan === 'premium' || aiTriageCount < 3;\n  \n  const canCreateCaseThisWeek = () => {\n    if (userPlan === 'premium') return true;\n    const currentWeekStart = getWeekStart().toDateString();\n    const lastCaseWeekStart = lastCaseDate ? getWeekStart(new Date(lastCaseDate)).toDateString() : null;\n    return lastCaseWeekStart !== currentWeekStart || weeklyCaseCount < 1;\n  };\n\n  const getRemainingFreeCasesThisWeek = () => {\n    if (userPlan === 'premium') return 'Unlimited';\n    const currentWeekStart = getWeekStart().toDateString();\n    const lastCaseWeekStart = lastCaseDate ? getWeekStart(new Date(lastCaseDate)).toDateString() : null;\n    return lastCaseWeekStart !== currentWeekStart ? 1 : Math.max(0, 1 - weeklyCaseCount);\n  };\n\n  // Health statistics calculation\n  const getHealthStats = () => {\n    const totalPets = pets.length;\n    const totalHealthRecords = Object.values(healthRecordsData).reduce((sum, records) => sum + records.length, 0);\n    const healthyPets = pets.length - healthAlerts.filter(alert => alert.urgent).length;\n    const overdueVaccinations = healthAlerts.filter(alert => alert.type === 'vaccination').length;\n    \n    const petsUpToDate = pets.filter(pet => {\n      const petRecords = healthRecordsData[pet.id] || [];\n      const vaccinationRecords = petRecords.filter(record => record.record_type === 'vaccination');\n      if (vaccinationRecords.length === 0) return false;\n      \n      const oneYearAgo = new Date();\n      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);\n      \n      return vaccinationRecords.some(record => \n        new Date(record.date_performed) > oneYearAgo\n      );\n    }).length;\n    \n    return {\n      totalPets,\n      totalHealthRecords,\n      healthyPets,\n      petsUpToDate,\n      overdueVaccinations,\n      healthPercentage: totalPets > 0 ? Math.round((healthyPets / totalPets) * 100) : 100\n    };\n  };\n\n  // Event handlers\n  const handleAddPet = () => {\n    if (!canAddMorePets()) {\n      alert('You have reached the 3-pet limit on your current plan. Please upgrade to add more pets.');\n      return;\n    }\n    setEditingPet(null);\n    setShowAddPetForm(true);\n  };\n\n  const handlePetFormSuccess = (newPet) => {\n    if (editingPet) {\n      setPets(prevPets => prevPets.map(pet => pet.id === editingPet.id ? newPet : pet));\n    } else {\n      setPets(prevPets => [newPet, ...prevPets]);\n    }\n    setShowAddPetForm(false);\n    setEditingPet(null);\n  };\n\n  const handleAddHealthRecord = (pet) => {\n    setSelectedPetForHealth(pet);\n    setShowHealthRecordForm(true);\n  };\n\n  const handleHealthRecordSuccess = async () => {\n    await loadPetsData(user.id);\n    setShowHealthRecordForm(false);\n    setSelectedPetForHealth(null);\n    setRecordsRefreshKey(prev => prev + 1);\n  };\n\n  // Effects\n  useEffect(() => {\n    loadUserData();\n  }, [loadUserData]);\n\n  useEffect(() => {\n    if (user && activeTab === 'favorites') {\n      loadFavorites();\n    }\n  }, [user, activeTab]);\n\n  // Realtime subscription\n  useEffect(() => {\n    let channel;\n    const setupRealtime = async () => {\n      if (!user) return;\n      channel = createRealtimeSubscription('profiles', (payload) => {\n        if (!payload?.new) return;\n        const updated = payload.new;\n        if (typeof updated.ai_triage_count !== 'undefined') {\n          setAiTriageCount(updated.ai_triage_count || 0);\n        }\n        if (typeof updated.weekly_case_count !== 'undefined') {\n          setWeeklyCaseCount(updated.weekly_case_count || 0);\n        }\n        if (typeof updated.last_case_date !== 'undefined') {\n          setLastCaseDate(updated.last_case_date || null);\n        }\n      }, { filter: `id=eq.${user.id}` });\n    };\n    setupRealtime();\n    return () => {\n      if (channel) {\n        channel.cleanup ? channel.cleanup() : supabase.removeChannel(channel);\n      }\n    };\n  }, [user]);\n\n  const loadFavorites = async () => {\n    if (!user) return;\n    try {\n      setFavoritesLoading(true);\n      const result = await favoritesService.getUserFavoritesWithDetails(user.id);\n      if (result.success) {\n        setDashboardFavorites(result.data);\n      }\n    } catch (error) {\n      console.error('Error loading favorites:', error);\n    } finally {\n      setFavoritesLoading(false);\n    }\n  };\n\n  // Debug logging for Anna Wilson\n  useEffect(() => {\n    if (user && user.email === 'anna-wilson@gmail.com') {\n      console.log('🎯 Anna Wilson Dashboard Access:', {\n        email: user.email,\n        role: profile?.role,\n        hasAccess: profile?.role === USER_ROLES.PET_OWNER,\n        dashboardRoute: '/pet-owner-dashboard'\n      });\n    }\n  }, [user, profile]);\n  \n  return (\n    <PetOwnerLayout loading={loading}>\n      {/* Banners */}\n      <PetOwnerBanners\n        userPlan={userPlan}\n        aiTriageCount={aiTriageCount}\n        totalSpentOnExtras={totalSpentOnExtras}\n        canCreateCaseThisWeek={canCreateCaseThisWeek()}\n        onShowExtraCaseModal={() => setShowExtraCaseModal(true)}\n      />\n\n      {/* Health Alerts */}\n      <HealthAlerts healthAlerts={healthAlerts} />\n\n      {/* Navigation Tabs */}\n      <PetOwnerTabs \n        activeTab={activeTab} \n        onTabChange={setActiveTab}\n      />\n\n      {/* Tab Content */}\n      {activeTab === 'overview' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          <ProfileHeader\n            profile={profile}\n            user={user}\n            profilePhotoUrl={profile?.avatar_url}\n            pets={pets}\n            healthStats={getHealthStats()}\n            bookings={bookings}\n            onPhotoUpload={async (e) => {\n              // Handle photo upload logic here\n            }}\n          />\n\n          <PetsGallery\n            pets={pets}\n            userPlan={userPlan}\n            dismissedPetLimitBanner={false}\n            onAddPet={handleAddPet}\n            onEditPet={(pet) => {\n              setEditingPet(pet);\n              setShowAddPetForm(true);\n            }}\n            onDeletePet={async (petId) => {\n              const confirmed = window.confirm('Delete this pet? This removes all data and files. This cannot be undone.');\n              if (confirmed) {\n                const result = await petService.deletePetCascade(petId);\n                if (result.success) {\n                  setPets(prevPets => prevPets.filter(pet => pet.id !== petId));\n                }\n              }\n            }}\n            onDismissPetLimitBanner={() => {}}\n            FreemiumLimitBanner={() => null}\n          />\n\n          <BookingsQuickActions \n            bookings={bookings} \n            onSetActiveTab={setActiveTab}\n          />\n\n          <UsageStatus\n            userPlan={userPlan}\n            totalSpentOnExtras={totalSpentOnExtras}\n            pets={pets}\n            onShowExtraCaseModal={() => setShowExtraCaseModal(true)}\n            getRemainingFreeCasesThisWeek={getRemainingFreeCasesThisWeek}\n            canCreateCaseThisWeek={canCreateCaseThisWeek}\n            canUseAiTriage={canUseAiTriage}\n            canAddMorePets={canAddMorePets}\n          />\n        </div>\n      )}\n\n      {activeTab === 'health' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          {pets.length === 0 ? (\n            <div className=\"text-center py-16 bg-white rounded-xl border-2 border-dashed border-gray-300\">\n              <div className=\"w-20 h-20 mx-auto mb-6 bg-[#E5F4F1] rounded-full flex items-center justify-center\">\n                <HealthIcon type=\"health\" className=\"w-10 h-10\" color=\"#5EB47C\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Start Your Pet's Health Journey</h3>\n              <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\n                Add your pets first to start tracking their health records, vaccinations, medications, and more.\n              </p>\n              <button\n                onClick={() => setActiveTab('overview')}\n                className=\"inline-flex items-center px-6 py-3 bg-[#5EB47C] text-white rounded-xl hover:bg-[#4A9A64] transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n              >\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                </svg>\n                Add Your First Pet\n              </button>\n            </div>\n          ) : (\n            <>\n              <PetOwnerStats \n                totalPets={pets.length}\n                totalHealthRecords={getHealthStats().totalHealthRecords}\n                petsUpToDate={getHealthStats().petsUpToDate}\n                healthPercentage={getHealthStats().healthPercentage}\n                healthAlerts={healthAlerts.length}\n                onHealthRecordsClick={() => {\n                  document.getElementById('health-records-section')?.scrollIntoView({ behavior: 'smooth' });\n                }}\n                onAlertsClick={() => {\n                  // Scroll to alerts or handle alert click\n                }}\n              />\n\n              <HealthRecordsViewer \n                pets={pets} \n                userPlan={userPlan}\n                onEditRecord={(record) => {\n                  setSelectedHealthRecordForEdit(record);\n                  setShowEditHealthRecordForm(true);\n                }}\n                onAddRecord={handleAddHealthRecord}\n                onRefresh={() => loadPetsData(user.id)}\n                refreshKey={recordsRefreshKey}\n              />\n            </>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'cases' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          <CaseHistoryViewer pets={pets} userId={user?.id} />\n        </div>\n      )}\n\n      {activeTab === 'favorites' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          {/* Favorites content would go here */}\n          <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n            <h3 className=\"text-lg font-bold text-gray-900 mb-4\">My Favorites</h3>\n            <p className=\"text-gray-600\">Your favorite services and products will appear here.</p>\n          </div>\n        </div>\n      )}\n\n      {/* Floating Action Buttons */}\n      <PetOwnerFloatingActions\n        canUseAiTriage={canUseAiTriage}\n        canCreateCaseThisWeek={canCreateCaseThisWeek}\n        userPlan={userPlan}\n        getRemainingFreeCasesThisWeek={getRemainingFreeCasesThisWeek}\n        onShowExtraCaseModal={() => setShowExtraCaseModal(true)}\n        showMobileMenu={showMobileMenu}\n        onToggleMobileMenu={setShowMobileMenu}\n      />\n\n      {/* Modals */}\n      {showHealthRecordForm && selectedPetForHealth && (\n        <AddHealthRecordForm\n          petId={selectedPetForHealth.id}\n          petName={selectedPetForHealth.name}\n          onClose={() => {\n            setShowHealthRecordForm(false);\n            setSelectedPetForHealth(null);\n          }}\n          onSuccess={handleHealthRecordSuccess}\n        />\n      )}\n\n      {showEditHealthRecordForm && selectedHealthRecordForEdit && (\n        <EditHealthRecordForm\n          record={selectedHealthRecordForEdit}\n          onClose={() => {\n            setShowEditHealthRecordForm(false);\n            setSelectedHealthRecordForEdit(null);\n          }}\n          onSuccess={() => {\n            loadPetsData(user.id);\n            setShowEditHealthRecordForm(false);\n            setSelectedHealthRecordForEdit(null);\n          }}\n        />\n      )}\n\n      {showAddPetForm && user && (\n        <AddPetForm\n          onClose={() => {\n            setShowAddPetForm(false);\n            setEditingPet(null);\n          }}\n          onSuccess={handlePetFormSuccess}\n          userId={user.id}\n          editingPet={editingPet}\n        />\n      )}\n    </PetOwnerLayout>\n  );\n};\n\nexport default PetOwnerDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}