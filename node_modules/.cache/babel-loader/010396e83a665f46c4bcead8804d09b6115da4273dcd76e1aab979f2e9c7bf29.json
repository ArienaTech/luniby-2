{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{supabase}from'../lib/supabase.js';import{getDashboardRoute}from'../utils/roleUtils.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthCallback=()=>{const navigate=useNavigate();const[error,setError]=useState('');useEffect(()=>{const completeAuth=async()=>{try{// With detectSessionInUrl: true, Supabase parses URL and stores session on load.\n// We validate session and user before redirecting.\nconst{data:{session},error:sessionError}=await supabase.auth.getSession();if(sessionError){console.error('AuthCallback Debug - Session error:',sessionError);throw sessionError;}if(!session||!session.user){console.log('AuthCallback Debug - No valid session found');navigate('/signin',{replace:true});return;}console.log('AuthCallback Debug - Valid session for user:',session.user.email);// Get user profile to validate and check role\nconst{data:profile,error:profileError}=await supabase.from('profiles').select('role, email, id').eq('id',session.user.id).single();if(profileError&&profileError.code!=='PGRST116'){// PGRST116 = no rows returned, other errors are actual problems\nconsole.error('AuthCallback Debug - Profile query error:',profileError);setError('Error loading user profile. Please try signing in again.');setTimeout(()=>navigate('/signin',{replace:true}),2000);return;}if(profile){// Profile exists - validate role\nconsole.log('AuthCallback Debug - Profile found:',profile);console.log('AuthCallback Debug - Role:',profile.role);if(!profile.role){console.log('AuthCallback Debug - Profile exists but no role assigned');setError('Account setup incomplete. Redirecting...');setTimeout(()=>navigate('/signin',{replace:true}),2000);return;}// Valid profile with role - redirect based on role\nconsole.log('AuthCallback Debug - Redirecting authenticated user based on role:',profile.role);if(profile.role==='admin'){console.log('üëë AuthCallback Debug - ADMIN DETECTED - Redirecting to admin');navigate('/admin',{replace:true});}else if(profile.role==='veterinarian'){console.log('üè• AuthCallback Debug - VETERINARIAN DETECTED - Redirecting to veterinarian-portal');navigate('/veterinarian-portal',{replace:true});}else if(profile.role==='vet_nurse'){console.log('üë©‚Äç‚öïÔ∏è AuthCallback Debug - VET NURSE DETECTED - Redirecting to vet-nurse-dashboard');navigate('/vet-nurse-dashboard',{replace:true});}else{// Check if user is a provider and get provider type for more specific routing\nlet effectiveRole=profile.role;if(profile.role==='provider'){console.log('AuthCallback Debug - User is a provider, checking provider_type...');const{data:providerData,error:providerError}=await supabase.from('providers').select('provider_type').eq('user_id',session.user.id).single();console.log('AuthCallback Debug - Provider query result:',{providerData,providerError});if((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='groomer'){effectiveRole='groomer';console.log('AuthCallback Debug - Setting effectiveRole to groomer');}}const dashboardRoute=getDashboardRoute(effectiveRole);console.log('üë§ AuthCallback Debug - Redirecting user to:',dashboardRoute,'effectiveRole:',effectiveRole);navigate(dashboardRoute,{replace:true});}}else{// No profile found - check if this is a new OAuth user\nconsole.log('AuthCallback Debug - No profile found for OAuth user:',session.user.email);// For OAuth users, we might need to create a profile or redirect to setup\nconst accountAge=new Date()-new Date(session.user.created_at);const isNewAccount=accountAge<5*60*1000;// Less than 5 minutes old\nif(isNewAccount){console.log('AuthCallback Debug - New OAuth account detected, checking for provider record...');// Check if this user has a provider record to determine their role\ntry{const{data:providerData}=await supabase.from('providers').select('provider_type').eq('user_id',session.user.id).single();if(providerData!==null&&providerData!==void 0&&providerData.provider_type){console.log('AuthCallback Debug - Found provider type:',providerData.provider_type);let effectiveRole='provider';if(providerData.provider_type==='groomer'){effectiveRole='groomer';}else if(providerData.provider_type==='trainer'){effectiveRole='trainer';}else if(providerData.provider_type==='breeder'){effectiveRole='breeder';}else if(providerData.provider_type==='nutritionist'){effectiveRole='nutritionist';}else if(providerData.provider_type==='pet_business'){effectiveRole='pet_business';}else if(providerData.provider_type==='holistic_care'){effectiveRole='holistic_care';}const dashboardRoute=getDashboardRoute(effectiveRole);console.log('AuthCallback Debug - Redirecting OAuth provider to:',dashboardRoute);navigate(dashboardRoute,{replace:true});}else{console.log('AuthCallback Debug - No provider record found, defaulting to pet owner dashboard');navigate('/pet-owner-dashboard',{replace:true});}}catch(error){console.log('AuthCallback Debug - Error checking provider record, defaulting to pet owner dashboard');navigate('/pet-owner-dashboard',{replace:true});}}else{// Older OAuth account without profile - needs investigation\nsetError('Profile setup required. Please complete your registration.');setTimeout(()=>navigate('/signup',{replace:true}),2000);return;}}}catch(e){setError('Authentication failed. Redirecting to sign in...');setTimeout(()=>navigate('/signin',{replace:true}),1500);}};completeAuth();},[navigate]);return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-10 w-10 border-b-2 border-[#5EB47C] mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 font-montserrat\",children:\"Completing sign-in...\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 mt-2 font-montserrat text-sm\",children:error})]})});};export default AuthCallback;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","supabase","getDashboardRoute","jsx","_jsx","jsxs","_jsxs","AuthCallback","navigate","error","setError","completeAuth","data","session","sessionError","auth","getSession","console","user","log","replace","email","profile","profileError","from","select","eq","id","single","code","setTimeout","role","effectiveRole","providerData","providerError","provider_type","dashboardRoute","accountAge","Date","created_at","isNewAccount","e","className","children"],"sources":["/workspace/src/components/AuthCallback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport { getDashboardRoute } from '../utils/roleUtils.js';\n\nconst AuthCallback = () => {\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const completeAuth = async () => {\n      try {\n        // With detectSessionInUrl: true, Supabase parses URL and stores session on load.\n        // We validate session and user before redirecting.\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n        \n        if (sessionError) {\n          console.error('AuthCallback Debug - Session error:', sessionError);\n          throw sessionError;\n        }\n        \n        if (!session || !session.user) {\n          console.log('AuthCallback Debug - No valid session found');\n          navigate('/signin', { replace: true });\n          return;\n        }\n\n        console.log('AuthCallback Debug - Valid session for user:', session.user.email);\n\n        // Get user profile to validate and check role\n        const { data: profile, error: profileError } = await supabase\n          .from('profiles')\n          .select('role, email, id')\n          .eq('id', session.user.id)\n          .single();\n\n        if (profileError && profileError.code !== 'PGRST116') {\n          // PGRST116 = no rows returned, other errors are actual problems\n          console.error('AuthCallback Debug - Profile query error:', profileError);\n          setError('Error loading user profile. Please try signing in again.');\n          setTimeout(() => navigate('/signin', { replace: true }), 2000);\n          return;\n        }\n\n        if (profile) {\n          // Profile exists - validate role\n          console.log('AuthCallback Debug - Profile found:', profile);\n          console.log('AuthCallback Debug - Role:', profile.role);\n          \n          if (!profile.role) {\n            console.log('AuthCallback Debug - Profile exists but no role assigned');\n            setError('Account setup incomplete. Redirecting...');\n            setTimeout(() => navigate('/signin', { replace: true }), 2000);\n            return;\n          }\n\n          // Valid profile with role - redirect based on role\n          console.log('AuthCallback Debug - Redirecting authenticated user based on role:', profile.role);\n          \n          if (profile.role === 'admin') {\n            console.log('üëë AuthCallback Debug - ADMIN DETECTED - Redirecting to admin');\n            navigate('/admin', { replace: true });\n          } else if (profile.role === 'veterinarian') {\n            console.log('üè• AuthCallback Debug - VETERINARIAN DETECTED - Redirecting to veterinarian-portal');\n            navigate('/veterinarian-portal', { replace: true });\n          } else if (profile.role === 'vet_nurse') {\n            console.log('üë©‚Äç‚öïÔ∏è AuthCallback Debug - VET NURSE DETECTED - Redirecting to vet-nurse-dashboard');\n            navigate('/vet-nurse-dashboard', { replace: true });\n          } else {\n            // Check if user is a provider and get provider type for more specific routing\n            let effectiveRole = profile.role;\n            if (profile.role === 'provider') {\n              console.log('AuthCallback Debug - User is a provider, checking provider_type...');\n              const { data: providerData, error: providerError } = await supabase\n                .from('providers')\n                .select('provider_type')\n                .eq('user_id', session.user.id)\n                .single();\n              \n              console.log('AuthCallback Debug - Provider query result:', { providerData, providerError });\n              \n              if (providerData?.provider_type === 'groomer') {\n                effectiveRole = 'groomer';\n                console.log('AuthCallback Debug - Setting effectiveRole to groomer');\n              }\n            }\n            \n            const dashboardRoute = getDashboardRoute(effectiveRole);\n            console.log('üë§ AuthCallback Debug - Redirecting user to:', dashboardRoute, 'effectiveRole:', effectiveRole);\n            navigate(dashboardRoute, { replace: true });\n          }\n        } else {\n          // No profile found - check if this is a new OAuth user\n          console.log('AuthCallback Debug - No profile found for OAuth user:', session.user.email);\n          \n          // For OAuth users, we might need to create a profile or redirect to setup\n          const accountAge = new Date() - new Date(session.user.created_at);\n          const isNewAccount = accountAge < 5 * 60 * 1000; // Less than 5 minutes old\n          \n          if (isNewAccount) {\n            console.log('AuthCallback Debug - New OAuth account detected, checking for provider record...');\n            \n            // Check if this user has a provider record to determine their role\n            try {\n              const { data: providerData } = await supabase\n                .from('providers')\n                .select('provider_type')\n                .eq('user_id', session.user.id)\n                .single();\n              \n              if (providerData?.provider_type) {\n                console.log('AuthCallback Debug - Found provider type:', providerData.provider_type);\n                \n                let effectiveRole = 'provider';\n                if (providerData.provider_type === 'groomer') {\n                  effectiveRole = 'groomer';\n                } else if (providerData.provider_type === 'trainer') {\n                  effectiveRole = 'trainer';\n                } else if (providerData.provider_type === 'breeder') {\n                  effectiveRole = 'breeder';\n                } else if (providerData.provider_type === 'nutritionist') {\n                  effectiveRole = 'nutritionist';\n                } else if (providerData.provider_type === 'pet_business') {\n                  effectiveRole = 'pet_business';\n                } else if (providerData.provider_type === 'holistic_care') {\n                  effectiveRole = 'holistic_care';\n                }\n                \n                const dashboardRoute = getDashboardRoute(effectiveRole);\n                console.log('AuthCallback Debug - Redirecting OAuth provider to:', dashboardRoute);\n                navigate(dashboardRoute, { replace: true });\n              } else {\n                console.log('AuthCallback Debug - No provider record found, defaulting to pet owner dashboard');\n                navigate('/pet-owner-dashboard', { replace: true });\n              }\n            } catch (error) {\n              console.log('AuthCallback Debug - Error checking provider record, defaulting to pet owner dashboard');\n              navigate('/pet-owner-dashboard', { replace: true });\n            }\n          } else {\n            // Older OAuth account without profile - needs investigation\n            setError('Profile setup required. Please complete your registration.');\n            setTimeout(() => navigate('/signup', { replace: true }), 2000);\n            return;\n          }\n        }\n      } catch (e) {\n        setError('Authentication failed. Redirecting to sign in...');\n        setTimeout(() => navigate('/signin', { replace: true }), 1500);\n      }\n    };\n\n    completeAuth();\n  }, [navigate]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-[#5EB47C] mx-auto mb-4\"></div>\n        <p className=\"text-gray-600 font-montserrat\">Completing sign-in...</p>\n        {error && <p className=\"text-red-600 mt-2 font-montserrat text-sm\">{error}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthCallback;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}