{"ast":null,"code":"import{useEffect,useRef}from'react';import logger from'../lib/logger';// Custom hook for performance monitoring\nexport const usePerformance=componentName=>{const startTimeRef=useRef(null);useEffect(()=>{startTimeRef.current=performance.now();logger.debug(`‚è±Ô∏è ${componentName} - Component mounted, starting performance measurement`);return()=>{if(startTimeRef.current){const duration=performance.now()-startTimeRef.current;logger.debug(`‚è±Ô∏è ${componentName} - Component unmounted after ${duration.toFixed(2)}ms`);}};},[componentName]);const measureOperation=(operationName,operation)=>{return async function(){const start=performance.now();logger.debug(`‚è±Ô∏è ${componentName} - Starting ${operationName}`);try{const result=await operation(...arguments);const duration=performance.now()-start;logger.debug(`‚è±Ô∏è ${componentName} - ${operationName} completed in ${duration.toFixed(2)}ms`);return result;}catch(error){const duration=performance.now()-start;logger.warn(`‚è±Ô∏è ${componentName} - ${operationName} failed after ${duration.toFixed(2)}ms`);throw error;}};};const markTime=label=>{if(startTimeRef.current){const duration=performance.now()-startTimeRef.current;logger.debug(`‚è±Ô∏è ${componentName} - ${label}: ${duration.toFixed(2)}ms from mount`);}};return{measureOperation,markTime};};// Hook for measuring network requests\nexport const useNetworkPerformance=()=>{const measureRequest=async(requestName,requestFn)=>{const start=performance.now();logger.debug(`üåê Starting ${requestName}`);try{const result=await requestFn();const duration=performance.now()-start;logger.debug(`üåê ${requestName} completed in ${duration.toFixed(2)}ms`);// Log slow requests\nif(duration>1000){logger.warn(`üêå Slow request detected: ${requestName} took ${duration.toFixed(2)}ms`);}return result;}catch(error){const duration=performance.now()-start;logger.error(`üåê ${requestName} failed after ${duration.toFixed(2)}ms:`,error);throw error;}};return{measureRequest};};export default usePerformance;","map":{"version":3,"names":["useEffect","useRef","logger","usePerformance","componentName","startTimeRef","current","performance","now","debug","duration","toFixed","measureOperation","operationName","operation","start","result","arguments","error","warn","markTime","label","useNetworkPerformance","measureRequest","requestName","requestFn"],"sources":["/workspace/src/hooks/usePerformance.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport logger from '../lib/logger';\n\n// Custom hook for performance monitoring\nexport const usePerformance = (componentName) => {\n  const startTimeRef = useRef(null);\n\n  useEffect(() => {\n    startTimeRef.current = performance.now();\n    logger.debug(`‚è±Ô∏è ${componentName} - Component mounted, starting performance measurement`);\n\n    return () => {\n      if (startTimeRef.current) {\n        const duration = performance.now() - startTimeRef.current;\n        logger.debug(`‚è±Ô∏è ${componentName} - Component unmounted after ${duration.toFixed(2)}ms`);\n      }\n    };\n  }, [componentName]);\n\n  const measureOperation = (operationName, operation) => {\n    return async (...args) => {\n      const start = performance.now();\n      logger.debug(`‚è±Ô∏è ${componentName} - Starting ${operationName}`);\n      \n      try {\n        const result = await operation(...args);\n        const duration = performance.now() - start;\n        logger.debug(`‚è±Ô∏è ${componentName} - ${operationName} completed in ${duration.toFixed(2)}ms`);\n        return result;\n      } catch (error) {\n        const duration = performance.now() - start;\n        logger.warn(`‚è±Ô∏è ${componentName} - ${operationName} failed after ${duration.toFixed(2)}ms`);\n        throw error;\n      }\n    };\n  };\n\n  const markTime = (label) => {\n    if (startTimeRef.current) {\n      const duration = performance.now() - startTimeRef.current;\n      logger.debug(`‚è±Ô∏è ${componentName} - ${label}: ${duration.toFixed(2)}ms from mount`);\n    }\n  };\n\n  return { measureOperation, markTime };\n};\n\n// Hook for measuring network requests\nexport const useNetworkPerformance = () => {\n  const measureRequest = async (requestName, requestFn) => {\n    const start = performance.now();\n    logger.debug(`üåê Starting ${requestName}`);\n    \n    try {\n      const result = await requestFn();\n      const duration = performance.now() - start;\n      logger.debug(`üåê ${requestName} completed in ${duration.toFixed(2)}ms`);\n      \n      // Log slow requests\n      if (duration > 1000) {\n        logger.warn(`üêå Slow request detected: ${requestName} took ${duration.toFixed(2)}ms`);\n      }\n      \n      return result;\n    } catch (error) {\n      const duration = performance.now() - start;\n      logger.error(`üåê ${requestName} failed after ${duration.toFixed(2)}ms:`, error);\n      throw error;\n    }\n  };\n\n  return { measureRequest };\n};\n\nexport default usePerformance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}