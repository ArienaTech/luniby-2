{"ast":null,"code":"import{useState}from'react';import{Link,useNavigate}from'react-router-dom';import{supabase}from'../lib/supabase.js';import{signInWithRetry,handleSupabaseError}from'../lib/supabase-utils.js';import{getDashboardRoute}from'../utils/roleUtils.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignIn=()=>{const[formData,setFormData]=useState({email:'',password:''});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[pendingMessage,setPendingMessage]=useState('');const[showPassword,setShowPassword]=useState(false);const navigate=useNavigate();const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});// Clear error and pending message when user starts typing\nif(error)setError('');if(pendingMessage)setPendingMessage('');};// New feature: Anonymous sign-in (from Supabase GA Week updates)\nconst handleAnonymousSignIn=async()=>{setLoading(true);setError('');setPendingMessage('');try{const{error}=await supabase.auth.signInAnonymously();if(error){setError(error.message);return;}// Navigate to marketplace for anonymous users\nnavigate('/marketplace');}catch(err){setError('Failed to sign in anonymously. Please try again.');}finally{setLoading(false);}};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');setPendingMessage('');try{// Use enhanced sign-in with retry logic\nawait signInWithRetry({email:formData.email,password:formData.password});// Get user profile to check role and validate authentication\nconst{data:{user:currentUser},error:userError}=await supabase.auth.getUser();if(userError){console.error('SignIn Debug - Error getting user:',userError);setError('Authentication failed. Please try again.');setLoading(false);return;}if(!currentUser){console.log('SignIn Debug - No authenticated user found');setError('Authentication failed. Please try signing in again.');setLoading(false);return;}console.log('SignIn Debug - Authenticated user:',currentUser.email);// Try to get user profile\nconst{data:profile,error:profileError}=await supabase.from('profiles').select('role, email, id').eq('id',currentUser.id).single();if(profileError&&profileError.code!=='PGRST116'){// PGRST116 = no rows returned, other errors are actual problems\nconsole.error('SignIn Debug - Profile query error:',profileError);setError('Error loading user profile. Please try again.');setLoading(false);return;}if(profile){var _currentUser$user_met;// Profile exists - validate role\nconsole.log('SignIn Debug - Profile found:',profile);console.log('SignIn Debug - Role:',profile.role);console.log('SignIn Debug - User email:',currentUser.email);// Check if user has trainer role or is a known trainer\nif(currentUser.email==='tim-davis909@gmail.com'||(profile===null||profile===void 0?void 0:profile.role)==='trainer'){console.log('🔄 SignIn Debug - Trainer detected, redirecting to trainer dashboard');navigate('/trainer-dashboard');return;}if(!profile.role){console.log('SignIn Debug - Profile exists but no role assigned');setError('Your account is not properly configured. Please contact support.');setLoading(false);return;}// Valid profile with role - redirect based on role\nconsole.log('SignIn Debug - Checking role for redirect:',profile.role);// Check for admin role first (highest priority)\nif(profile.role==='admin'){console.log('👑 SignIn Debug - ADMIN DETECTED - Redirecting to admin dashboard');navigate('/admin');return;}// Check user_type from user metadata first (like navbar does)\nconst userTypeFromMetadata=currentUser===null||currentUser===void 0?void 0:(_currentUser$user_met=currentUser.user_metadata)===null||_currentUser$user_met===void 0?void 0:_currentUser$user_met.user_type;console.log('SignIn Debug - User type from metadata:',userTypeFromMetadata);// Use user_type from metadata as the primary role source\nlet effectiveRole=userTypeFromMetadata||profile.role;console.log('SignIn Debug - Effective role after metadata check:',effectiveRole);// Always check provider type to handle trainer accounts correctly\nconsole.log('SignIn Debug - Checking provider_type for user...');const{data:providerData,error:providerError}=await supabase.from('providers').select('provider_type').eq('user_id',currentUser.id).single();console.log('SignIn Debug - Provider query result:',{providerData,providerError});console.log('SignIn Debug - Provider type found:',providerData===null||providerData===void 0?void 0:providerData.provider_type);// Override role based on provider_type for specific cases\nif((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='groomer'){effectiveRole='groomer';console.log('SignIn Debug - Setting effectiveRole to groomer based on provider_type');}else if((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='trainer'){effectiveRole='trainer';console.log('SignIn Debug - Setting effectiveRole to trainer based on provider_type');}else if((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='breeder'){effectiveRole='breeder';console.log('SignIn Debug - Setting effectiveRole to breeder based on provider_type');}else if((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='nutritionist'){effectiveRole='nutritionist';console.log('SignIn Debug - Setting effectiveRole to nutritionist based on provider_type');}else if((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='pet_business'){effectiveRole='pet_business';console.log('SignIn Debug - Setting effectiveRole to pet_business based on provider_type');}else if((providerData===null||providerData===void 0?void 0:providerData.provider_type)==='holistic_care'){effectiveRole='holistic_care';console.log('SignIn Debug - Setting effectiveRole to holistic_care based on provider_type');}else if(providerData!==null&&providerData!==void 0&&providerData.provider_type){console.log('SignIn Debug - Found provider_type but no specific mapping:',providerData.provider_type);// For other provider types, keep the original profile role or set to provider\nif(profile.role==='pet_owner'||!profile.role){effectiveRole='provider';console.log('SignIn Debug - Upgrading pet_owner to provider based on provider_type');}}else{console.log('SignIn Debug - No provider record found, using profile role:',profile.role);}// Use getDashboardRoute for consistent role-based routing\nconst dashboardRoute=getDashboardRoute(effectiveRole);console.log('SignIn Debug - Final routing decision:');console.log('  - Original profile role:',profile.role);console.log('  - Provider type:',providerData===null||providerData===void 0?void 0:providerData.provider_type);console.log('  - Effective role:',effectiveRole);console.log('  - Dashboard route:',dashboardRoute);console.log('  - User email:',currentUser.email);// Special handling for veterinarian role (redirect to veterinarian-portal instead of dashboard)\nif(effectiveRole==='veterinarian'){console.log('🏥 SignIn Debug - VETERINARIAN DETECTED - Redirecting to /veterinarian-portal');navigate('/veterinarian-portal');}else{console.log(`✅ SignIn Debug - Redirecting user '${currentUser.email}' with effectiveRole '${effectiveRole}' to ${dashboardRoute}`);navigate(dashboardRoute);}}else{var _currentUser$user_met2;// No profile found - check user metadata first, then provider record\nconsole.log('SignIn Debug - No profile found for user:',currentUser.email);// Check user_type from user metadata first (like navbar does)\nconst userTypeFromMetadata=currentUser===null||currentUser===void 0?void 0:(_currentUser$user_met2=currentUser.user_metadata)===null||_currentUser$user_met2===void 0?void 0:_currentUser$user_met2.user_type;console.log('SignIn Debug - User type from metadata:',userTypeFromMetadata);if(userTypeFromMetadata){// User has role in metadata, route them to appropriate dashboard\nconst dashboardRoute=getDashboardRoute(userTypeFromMetadata);console.log('SignIn Debug - Routing based on metadata to:',dashboardRoute);navigate(dashboardRoute);return;}// Check if this user has a provider record to determine their role\ntry{const{data:providerData,error:providerError}=await supabase.from('providers').select('provider_type').eq('user_id',currentUser.id).single();if(providerData!==null&&providerData!==void 0&&providerData.provider_type){console.log('SignIn Debug - Found provider type:',providerData.provider_type);let effectiveRole='pet_owner';// Default fallback\nif(providerData.provider_type==='groomer'){effectiveRole='groomer';}else if(providerData.provider_type==='trainer'){effectiveRole='trainer';}else if(providerData.provider_type==='breeder'){effectiveRole='breeder';}else if(providerData.provider_type==='nutritionist'){effectiveRole='nutritionist';}else if(providerData.provider_type==='pet_business'){effectiveRole='pet_business';}else if(providerData.provider_type==='holistic_care'){effectiveRole='holistic_care';}const dashboardRoute=getDashboardRoute(effectiveRole);console.log('SignIn Debug - Redirecting provider to:',dashboardRoute);navigate(dashboardRoute);}else{console.log('SignIn Debug - No provider record found, defaulting to pet owner dashboard');navigate('/pet-owner-dashboard');}}catch(error){console.log('SignIn Debug - Error checking provider record, defaulting to pet owner dashboard');navigate('/pet-owner-dashboard');}}}catch(error){const supabaseError=handleSupabaseError(error,'sign in');setError(supabaseError.message);setLoading(false);}};const handleGoogleSignIn=async()=>{setLoading(true);setError('');try{const{error}=await supabase.auth.signInWithOAuth({provider:'google',options:{redirectTo:`${window.location.origin}/auth/callback`}});if(error){setError(error.message);setLoading(false);}}catch(error){setError('Failed to sign in with Google. Please try again.');setLoading(false);}};const handleForgotPassword=async()=>{if(!formData.email){setError('Please enter your email address first.');return;}setLoading(true);setError('');try{const{error}=await supabase.auth.resetPasswordForEmail(formData.email,{redirectTo:`${window.location.origin}/reset-password`});if(error){setError(error.message);}else{setError('Password reset email sent! Check your inbox.');}}catch(error){setError('Failed to send reset email. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sm:mx-auto sm:w-full sm:max-w-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 font-montserrat leading-tight\",children:\"Sign in to your account\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-2 text-center text-sm text-gray-600 font-montserrat\",children:[\"Or\",' ',/*#__PURE__*/_jsx(Link,{to:\"/signup\",className:\"font-medium text-[#5EB47C] hover:text-[#4A9A64] transition-colors\",children:\"create a new account\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white py-8 px-4 shadow-lg sm:rounded-2xl sm:px-10 border border-gray-200\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"space-y-6\",onSubmit:handleSubmit,children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-xl font-montserrat text-sm\",children:error}),pendingMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-orange-50 border border-orange-200 text-orange-700 px-4 py-3 rounded-xl font-montserrat text-sm whitespace-pre-line\",children:pendingMessage}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"block text-sm font-medium text-gray-700 font-montserrat\",children:\"Email address\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:/*#__PURE__*/_jsx(\"input\",{id:\"email\",name:\"email\",type:\"email\",autoComplete:\"email\",required:true,value:formData.email,onChange:handleChange,className:\"appearance-none block w-full px-3 py-3 border border-gray-300 rounded-xl placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\",placeholder:\"Enter your email\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block text-sm font-medium text-gray-700 font-montserrat\",children:\"Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 relative\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"password\",name:\"password\",type:showPassword?'text':'password',autoComplete:\"current-password\",required:true,value:formData.password,onChange:handleChange,className:\"appearance-none block w-full px-3 py-3 pr-10 border border-gray-300 rounded-xl placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\",placeholder:\"Enter your password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"absolute inset-y-0 right-0 pr-3 flex items-center\",onClick:()=>setShowPassword(!showPassword),children:showPassword?/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5 text-gray-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"})}):/*#__PURE__*/_jsxs(\"svg\",{className:\"h-5 w-5 text-gray-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"}),/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"remember-me\",name:\"remember-me\",type:\"checkbox\",className:\"h-4 w-4 text-[#5EB47C] focus:ring-[#5EB47C] border-gray-300 rounded\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"remember-me\",className:\"ml-2 block text-sm text-gray-900 font-montserrat\",children:\"Remember me\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleForgotPassword,className:\"font-medium text-[#5EB47C] hover:text-[#4A9A64] transition-colors font-montserrat\",children:\"Forgot your password?\"})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-xl text-white bg-[#5EB47C] hover:bg-[#4A9A64] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#5EB47C] disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-montserrat\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"}),\"Signing in...\"]}):'Sign in'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full border-t border-gray-300\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative flex justify-center text-sm\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-2 bg-white text-gray-500 font-montserrat\",children:\"Or continue with\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 space-y-3\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:handleGoogleSignIn,disabled:loading,className:\"w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-xl shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#5EB47C] disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-montserrat\",children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"w-5 h-5 mr-2\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"path\",{fill:\"#4285F4\",d:\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"}),/*#__PURE__*/_jsx(\"path\",{fill:\"#34A853\",d:\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"}),/*#__PURE__*/_jsx(\"path\",{fill:\"#FBBC05\",d:\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"}),/*#__PURE__*/_jsx(\"path\",{fill:\"#EA4335\",d:\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"})]}),\"Sign in with Google\"]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:handleAnonymousSignIn,disabled:loading,className:\"w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-xl shadow-sm bg-gray-50 text-sm font-medium text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#5EB47C] disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-montserrat\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 mr-2\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"})}),\"Browse as Guest\"]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 text-center\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 font-montserrat\",children:[\"Are you a pet care provider?\",' ',/*#__PURE__*/_jsx(Link,{to:\"/provider-signup\",className:\"font-medium text-[#5EB47C] hover:text-[#4A9A64] transition-colors\",children:\"Join as a Provider\"})]})})]})})]});};export default SignIn;","map":{"version":3,"names":["useState","Link","useNavigate","supabase","signInWithRetry","handleSupabaseError","getDashboardRoute","jsx","_jsx","jsxs","_jsxs","SignIn","formData","setFormData","email","password","loading","setLoading","error","setError","pendingMessage","setPendingMessage","showPassword","setShowPassword","navigate","handleChange","e","target","name","value","handleAnonymousSignIn","auth","signInAnonymously","message","err","handleSubmit","preventDefault","data","user","currentUser","userError","getUser","console","log","profile","profileError","from","select","eq","id","single","code","_currentUser$user_met","role","userTypeFromMetadata","user_metadata","user_type","effectiveRole","providerData","providerError","provider_type","dashboardRoute","_currentUser$user_met2","supabaseError","handleGoogleSignIn","signInWithOAuth","provider","options","redirectTo","window","location","origin","handleForgotPassword","resetPasswordForEmail","className","children","to","onSubmit","htmlFor","type","autoComplete","required","onChange","placeholder","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","disabled"],"sources":["/workspace/src/components/SignIn.js"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport { signInWithRetry, handleSupabaseError } from '../lib/supabase-utils.js';\nimport { getDashboardRoute } from '../utils/roleUtils.js';\n\nconst SignIn = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [pendingMessage, setPendingMessage] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    // Clear error and pending message when user starts typing\n    if (error) setError('');\n    if (pendingMessage) setPendingMessage('');\n  };\n\n  // New feature: Anonymous sign-in (from Supabase GA Week updates)\n  const handleAnonymousSignIn = async () => {\n    setLoading(true);\n    setError('');\n    setPendingMessage('');\n\n    try {\n      const { error } = await supabase.auth.signInAnonymously();\n      \n      if (error) {\n        setError(error.message);\n        return;\n      }\n\n      // Navigate to marketplace for anonymous users\n      navigate('/marketplace');\n    } catch (err) {\n      setError('Failed to sign in anonymously. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPendingMessage('');\n\n    try {\n      // Use enhanced sign-in with retry logic\n      await signInWithRetry({\n        email: formData.email,\n        password: formData.password,\n      });\n\n      // Get user profile to check role and validate authentication\n      const { data: { user: currentUser }, error: userError } = await supabase.auth.getUser();\n      \n      if (userError) {\n        console.error('SignIn Debug - Error getting user:', userError);\n        setError('Authentication failed. Please try again.');\n        setLoading(false);\n        return;\n      }\n\n      if (!currentUser) {\n        console.log('SignIn Debug - No authenticated user found');\n        setError('Authentication failed. Please try signing in again.');\n        setLoading(false);\n        return;\n      }\n\n      console.log('SignIn Debug - Authenticated user:', currentUser.email);\n\n      // Try to get user profile\n      const { data: profile, error: profileError } = await supabase\n        .from('profiles')\n        .select('role, email, id')\n        .eq('id', currentUser.id)\n        .single();\n\n      if (profileError && profileError.code !== 'PGRST116') {\n        // PGRST116 = no rows returned, other errors are actual problems\n        console.error('SignIn Debug - Profile query error:', profileError);\n        setError('Error loading user profile. Please try again.');\n        setLoading(false);\n        return;\n      }\n\n      if (profile) {\n        // Profile exists - validate role\n        console.log('SignIn Debug - Profile found:', profile);\n        console.log('SignIn Debug - Role:', profile.role);\n        console.log('SignIn Debug - User email:', currentUser.email);\n        \n        // Check if user has trainer role or is a known trainer\n        if (currentUser.email === 'tim-davis909@gmail.com' || profile?.role === 'trainer') {\n          console.log('🔄 SignIn Debug - Trainer detected, redirecting to trainer dashboard');\n          navigate('/trainer-dashboard');\n          return;\n        }\n        \n        if (!profile.role) {\n          console.log('SignIn Debug - Profile exists but no role assigned');\n          setError('Your account is not properly configured. Please contact support.');\n          setLoading(false);\n          return;\n        }\n\n        // Valid profile with role - redirect based on role\n        console.log('SignIn Debug - Checking role for redirect:', profile.role);\n        \n        // Check for admin role first (highest priority)\n        if (profile.role === 'admin') {\n          console.log('👑 SignIn Debug - ADMIN DETECTED - Redirecting to admin dashboard');\n          navigate('/admin');\n          return;\n        }\n        \n        // Check user_type from user metadata first (like navbar does)\n        const userTypeFromMetadata = currentUser?.user_metadata?.user_type;\n        console.log('SignIn Debug - User type from metadata:', userTypeFromMetadata);\n        \n        // Use user_type from metadata as the primary role source\n        let effectiveRole = userTypeFromMetadata || profile.role;\n        console.log('SignIn Debug - Effective role after metadata check:', effectiveRole);\n        \n        // Always check provider type to handle trainer accounts correctly\n        console.log('SignIn Debug - Checking provider_type for user...');\n        const { data: providerData, error: providerError } = await supabase\n          .from('providers')\n          .select('provider_type')\n          .eq('user_id', currentUser.id)\n          .single();\n        \n        console.log('SignIn Debug - Provider query result:', { providerData, providerError });\n        console.log('SignIn Debug - Provider type found:', providerData?.provider_type);\n        \n        // Override role based on provider_type for specific cases\n        if (providerData?.provider_type === 'groomer') {\n          effectiveRole = 'groomer';\n          console.log('SignIn Debug - Setting effectiveRole to groomer based on provider_type');\n        } else if (providerData?.provider_type === 'trainer') {\n          effectiveRole = 'trainer';\n          console.log('SignIn Debug - Setting effectiveRole to trainer based on provider_type');\n        } else if (providerData?.provider_type === 'breeder') {\n          effectiveRole = 'breeder';\n          console.log('SignIn Debug - Setting effectiveRole to breeder based on provider_type');\n        } else if (providerData?.provider_type === 'nutritionist') {\n          effectiveRole = 'nutritionist';\n          console.log('SignIn Debug - Setting effectiveRole to nutritionist based on provider_type');\n        } else if (providerData?.provider_type === 'pet_business') {\n          effectiveRole = 'pet_business';\n          console.log('SignIn Debug - Setting effectiveRole to pet_business based on provider_type');\n        } else if (providerData?.provider_type === 'holistic_care') {\n          effectiveRole = 'holistic_care';\n          console.log('SignIn Debug - Setting effectiveRole to holistic_care based on provider_type');\n        } else if (providerData?.provider_type) {\n          console.log('SignIn Debug - Found provider_type but no specific mapping:', providerData.provider_type);\n          // For other provider types, keep the original profile role or set to provider\n          if (profile.role === 'pet_owner' || !profile.role) {\n            effectiveRole = 'provider';\n            console.log('SignIn Debug - Upgrading pet_owner to provider based on provider_type');\n          }\n        } else {\n          console.log('SignIn Debug - No provider record found, using profile role:', profile.role);\n        }\n        \n        // Use getDashboardRoute for consistent role-based routing\n        const dashboardRoute = getDashboardRoute(effectiveRole);\n        \n        console.log('SignIn Debug - Final routing decision:');\n        console.log('  - Original profile role:', profile.role);\n        console.log('  - Provider type:', providerData?.provider_type);\n        console.log('  - Effective role:', effectiveRole);\n        console.log('  - Dashboard route:', dashboardRoute);\n        console.log('  - User email:', currentUser.email);\n        \n        // Special handling for veterinarian role (redirect to veterinarian-portal instead of dashboard)\n        if (effectiveRole === 'veterinarian') {\n          console.log('🏥 SignIn Debug - VETERINARIAN DETECTED - Redirecting to /veterinarian-portal');\n          navigate('/veterinarian-portal');\n        } else {\n          console.log(`✅ SignIn Debug - Redirecting user '${currentUser.email}' with effectiveRole '${effectiveRole}' to ${dashboardRoute}`);\n          navigate(dashboardRoute);\n        }\n      } else {\n        // No profile found - check user metadata first, then provider record\n        console.log('SignIn Debug - No profile found for user:', currentUser.email);\n        \n        // Check user_type from user metadata first (like navbar does)\n        const userTypeFromMetadata = currentUser?.user_metadata?.user_type;\n        console.log('SignIn Debug - User type from metadata:', userTypeFromMetadata);\n        \n        if (userTypeFromMetadata) {\n          // User has role in metadata, route them to appropriate dashboard\n          const dashboardRoute = getDashboardRoute(userTypeFromMetadata);\n          console.log('SignIn Debug - Routing based on metadata to:', dashboardRoute);\n          navigate(dashboardRoute);\n          return;\n        }\n        \n        // Check if this user has a provider record to determine their role\n        try {\n          const { data: providerData, error: providerError } = await supabase\n            .from('providers')\n            .select('provider_type')\n            .eq('user_id', currentUser.id)\n            .single();\n          \n          if (providerData?.provider_type) {\n            console.log('SignIn Debug - Found provider type:', providerData.provider_type);\n            \n            let effectiveRole = 'pet_owner'; // Default fallback\n            if (providerData.provider_type === 'groomer') {\n              effectiveRole = 'groomer';\n            } else if (providerData.provider_type === 'trainer') {\n              effectiveRole = 'trainer';\n            } else if (providerData.provider_type === 'breeder') {\n              effectiveRole = 'breeder';\n            } else if (providerData.provider_type === 'nutritionist') {\n              effectiveRole = 'nutritionist';\n            } else if (providerData.provider_type === 'pet_business') {\n              effectiveRole = 'pet_business';\n            } else if (providerData.provider_type === 'holistic_care') {\n              effectiveRole = 'holistic_care';\n            }\n            \n            const dashboardRoute = getDashboardRoute(effectiveRole);\n            console.log('SignIn Debug - Redirecting provider to:', dashboardRoute);\n            navigate(dashboardRoute);\n          } else {\n            console.log('SignIn Debug - No provider record found, defaulting to pet owner dashboard');\n            navigate('/pet-owner-dashboard');\n          }\n        } catch (error) {\n          console.log('SignIn Debug - Error checking provider record, defaulting to pet owner dashboard');\n          navigate('/pet-owner-dashboard');\n        }\n      }\n\n    } catch (error) {\n      const supabaseError = handleSupabaseError(error, 'sign in');\n      setError(supabaseError.message);\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSignIn = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`\n        }\n      });\n\n      if (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    } catch (error) {\n      setError('Failed to sign in with Google. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleForgotPassword = async () => {\n    if (!formData.email) {\n      setError('Please enter your email address first.');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(formData.email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setError('Password reset email sent! Check your inbox.');\n      }\n    } catch (error) {\n      setError('Failed to send reset email. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"text-center text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 font-montserrat leading-tight\">\n          Sign in to your account\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600 font-montserrat\">\n          Or{' '}\n          <Link\n            to=\"/signup\"\n            className=\"font-medium text-[#5EB47C] hover:text-[#4A9A64] transition-colors\"\n          >\n            create a new account\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-lg sm:rounded-2xl sm:px-10 border border-gray-200\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-xl font-montserrat text-sm\">\n                {error}\n              </div>\n            )}\n\n            {pendingMessage && (\n              <div className=\"bg-orange-50 border border-orange-200 text-orange-700 px-4 py-3 rounded-xl font-montserrat text-sm whitespace-pre-line\">\n                {pendingMessage}\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 font-montserrat\">\n                Email address\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={formData.email}\n                  onChange={handleChange}\n                  className=\"appearance-none block w-full px-3 py-3 border border-gray-300 rounded-xl placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\"\n                  placeholder=\"Enter your email\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 font-montserrat\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  required\n                  value={formData.password}\n                  onChange={handleChange}\n                  className=\"appearance-none block w-full px-3 py-3 pr-10 border border-gray-300 rounded-xl placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\"\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-[#5EB47C] focus:ring-[#5EB47C] border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900 font-montserrat\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <button\n                  type=\"button\"\n                  onClick={handleForgotPassword}\n                  className=\"font-medium text-[#5EB47C] hover:text-[#4A9A64] transition-colors font-montserrat\"\n                >\n                  Forgot your password?\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-xl text-white bg-[#5EB47C] hover:bg-[#4A9A64] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#5EB47C] disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-montserrat\"\n              >\n                {loading ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Signing in...\n                  </div>\n                ) : (\n                  'Sign in'\n                )}\n              </button>\n            </div>\n\n            <div className=\"mt-6\">\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"w-full border-t border-gray-300\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white text-gray-500 font-montserrat\">Or continue with</span>\n                </div>\n              </div>\n\n              <div className=\"mt-6 space-y-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleGoogleSignIn}\n                  disabled={loading}\n                  className=\"w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-xl shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#5EB47C] disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-montserrat\"\n                >\n                  <svg className=\"w-5 h-5 mr-2\" viewBox=\"0 0 24 24\">\n                    <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                    <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                    <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                    <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                  </svg>\n                  Sign in with Google\n                </button>\n\n                {/* New Anonymous Sign-in Feature */}\n                <button\n                  type=\"button\"\n                  onClick={handleAnonymousSignIn}\n                  disabled={loading}\n                  className=\"w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-xl shadow-sm bg-gray-50 text-sm font-medium text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#5EB47C] disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-montserrat\"\n                >\n                  <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"/>\n                  </svg>\n                  Browse as Guest\n                </button>\n              </div>\n            </div>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-gray-600 font-montserrat\">\n              Are you a pet care provider?{' '}\n              <Link\n                to=\"/provider-signup\"\n                className=\"font-medium text-[#5EB47C] hover:text-[#4A9A64] transition-colors\"\n              >\n                Join as a Provider\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}