{"ast":null,"code":"// Supabase client initialization\nimport{createClient}from'@supabase/supabase-js';// Get environment variables\nconst supabaseUrl=process.env.REACT_APP_SUPABASE_URL||'';const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY||'';// Create and export Supabase client\nlet supabase=null;if(supabaseUrl&&supabaseAnonKey){supabase=createClient(supabaseUrl,supabaseAnonKey,{auth:{autoRefreshToken:true,persistSession:true,detectSessionInUrl:true}});}else{console.warn('⚠️ Supabase configuration missing. Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY environment variables.');// Create a mock client for development if credentials are missing\nsupabase={auth:{getSession:async()=>({data:{session:null},error:null}),getUser:async()=>({data:{user:null},error:null}),signInWithPassword:async()=>({data:null,error:new Error('Supabase not configured')}),signUp:async()=>({data:null,error:new Error('Supabase not configured')}),signOut:async()=>({error:null}),onAuthStateChange:()=>({data:{subscription:{unsubscribe:()=>{}}}})},from:()=>({select:()=>({data:[],error:null}),insert:()=>({data:null,error:new Error('Supabase not configured')}),update:()=>({data:null,error:new Error('Supabase not configured')}),delete:()=>({data:null,error:new Error('Supabase not configured')})}),storage:{from:()=>({upload:async()=>({data:null,error:new Error('Supabase not configured')}),getPublicUrl:()=>({data:{publicUrl:''}})})}};}export{supabase};export default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","auth","autoRefreshToken","persistSession","detectSessionInUrl","console","warn","getSession","data","session","error","getUser","user","signInWithPassword","Error","signUp","signOut","onAuthStateChange","subscription","unsubscribe","from","select","insert","update","delete","storage","upload","getPublicUrl","publicUrl"],"sources":["/workspace/src/lib/supabase.js"],"sourcesContent":["// Supabase client initialization\nimport { createClient } from '@supabase/supabase-js';\n\n// Get environment variables\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || '';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || '';\n\n// Create and export Supabase client\nlet supabase = null;\n\nif (supabaseUrl && supabaseAnonKey) {\n  supabase = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true\n    }\n  });\n} else {\n  console.warn('⚠️ Supabase configuration missing. Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY environment variables.');\n  \n  // Create a mock client for development if credentials are missing\n  supabase = {\n    auth: {\n      getSession: async () => ({ data: { session: null }, error: null }),\n      getUser: async () => ({ data: { user: null }, error: null }),\n      signInWithPassword: async () => ({ data: null, error: new Error('Supabase not configured') }),\n      signUp: async () => ({ data: null, error: new Error('Supabase not configured') }),\n      signOut: async () => ({ error: null }),\n      onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } })\n    },\n    from: () => ({\n      select: () => ({ data: [], error: null }),\n      insert: () => ({ data: null, error: new Error('Supabase not configured') }),\n      update: () => ({ data: null, error: new Error('Supabase not configured') }),\n      delete: () => ({ data: null, error: new Error('Supabase not configured') })\n    }),\n    storage: {\n      from: () => ({\n        upload: async () => ({ data: null, error: new Error('Supabase not configured') }),\n        getPublicUrl: () => ({ data: { publicUrl: '' } })\n      })\n    }\n  };\n}\n\nexport { supabase };\nexport default supabase;\n"],"mappings":"AAAA;AACA,OAASA,YAAY,KAAQ,uBAAuB,CAEpD;AACA,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,EAAE,CAC5D,KAAM,CAAAC,eAAe,CAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,EAAI,EAAE,CAErE;AACA,GAAI,CAAAC,QAAQ,CAAG,IAAI,CAEnB,GAAIN,WAAW,EAAII,eAAe,CAAE,CAClCE,QAAQ,CAAGP,YAAY,CAACC,WAAW,CAAEI,eAAe,CAAE,CACpDG,IAAI,CAAE,CACJC,gBAAgB,CAAE,IAAI,CACtBC,cAAc,CAAE,IAAI,CACpBC,kBAAkB,CAAE,IACtB,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAAC,6HAA6H,CAAC,CAE3I;AACAN,QAAQ,CAAG,CACTC,IAAI,CAAE,CACJM,UAAU,CAAE,KAAAA,CAAA,IAAa,CAAEC,IAAI,CAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAClEC,OAAO,CAAE,KAAAA,CAAA,IAAa,CAAEH,IAAI,CAAE,CAAEI,IAAI,CAAE,IAAK,CAAC,CAAEF,KAAK,CAAE,IAAK,CAAC,CAAC,CAC5DG,kBAAkB,CAAE,KAAAA,CAAA,IAAa,CAAEL,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,GAAI,CAAAI,KAAK,CAAC,yBAAyB,CAAE,CAAC,CAAC,CAC7FC,MAAM,CAAE,KAAAA,CAAA,IAAa,CAAEP,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,GAAI,CAAAI,KAAK,CAAC,yBAAyB,CAAE,CAAC,CAAC,CACjFE,OAAO,CAAE,KAAAA,CAAA,IAAa,CAAEN,KAAK,CAAE,IAAK,CAAC,CAAC,CACtCO,iBAAiB,CAAEA,CAAA,IAAO,CAAET,IAAI,CAAE,CAAEU,YAAY,CAAE,CAAEC,WAAW,CAAEA,CAAA,GAAM,CAAC,CAAE,CAAE,CAAE,CAAC,CACjF,CAAC,CACDC,IAAI,CAAEA,CAAA,IAAO,CACXC,MAAM,CAAEA,CAAA,IAAO,CAAEb,IAAI,CAAE,EAAE,CAAEE,KAAK,CAAE,IAAK,CAAC,CAAC,CACzCY,MAAM,CAAEA,CAAA,IAAO,CAAEd,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,GAAI,CAAAI,KAAK,CAAC,yBAAyB,CAAE,CAAC,CAAC,CAC3ES,MAAM,CAAEA,CAAA,IAAO,CAAEf,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,GAAI,CAAAI,KAAK,CAAC,yBAAyB,CAAE,CAAC,CAAC,CAC3EU,MAAM,CAAEA,CAAA,IAAO,CAAEhB,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,GAAI,CAAAI,KAAK,CAAC,yBAAyB,CAAE,CAAC,CAC5E,CAAC,CAAC,CACFW,OAAO,CAAE,CACPL,IAAI,CAAEA,CAAA,IAAO,CACXM,MAAM,CAAE,KAAAA,CAAA,IAAa,CAAElB,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,GAAI,CAAAI,KAAK,CAAC,yBAAyB,CAAE,CAAC,CAAC,CACjFa,YAAY,CAAEA,CAAA,IAAO,CAAEnB,IAAI,CAAE,CAAEoB,SAAS,CAAE,EAAG,CAAE,CAAC,CAClD,CAAC,CACH,CACF,CAAC,CACH,CAEA,OAAS5B,QAAQ,EACjB,cAAe,CAAAA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}