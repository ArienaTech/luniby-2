{"version":3,"file":"static/js/269.feb4e5f3.chunk.js","mappings":"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","sources":["components/MarketplaceCard.js","hooks/usePerformance.js","components/LiveMarketplace.js"],"sourcesContent":["import React, { memo, useCallback, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport FavoriteButton from './FavoriteButton';\nimport { supabase } from '../lib/supabase.js';\n\n// Memoized category icon component for better performance\nconst CategoryIcon = memo(({ category, listingType }) => {\n  if (listingType === 'product') {\n    return (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n      </svg>\n    );\n  }\n\n  if (listingType === 'provider') {\n    return (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n      </svg>\n    );\n  }\n\n  const icons = {\n    'Veterinary': (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n      </svg>\n    ),\n    'Pet Grooming': (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.5a1.5 1.5 0 011.5 1.5v1a1.5 1.5 0 01-1.5 1.5H9m0-5a1.5 1.5 0 011.5-1.5H12a1.5 1.5 0 011.5 1.5v1a1.5 1.5 0 01-1.5 1.5H10.5A1.5 1.5 0 019 11.5V10z\" />\n      </svg>\n    ),\n    'Pet Training': (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n      </svg>\n    ),\n    'Pet Breeding': (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n      </svg>\n    ),\n    default: (\n      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n      </svg>\n    )\n  };\n\n  return icons[category] || icons.default;\n});\n\nCategoryIcon.displayName = 'CategoryIcon';\n\n// Optimized image component with basic lazy loading\nconst OptimizedImage = memo(({ src, alt, className }) => {\n  if (!src) return null;\n\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      loading=\"lazy\"\n      decoding=\"async\"\n      onError={(e) => {\n        e.target.style.display = 'none';\n      }}\n    />\n  );\n});\n\nOptimizedImage.displayName = 'OptimizedImage';\n\n// Memoized marketplace card component\nconst MarketplaceCard = memo(({ listing }) => {\n  const [providerServices, setProviderServices] = useState([]);\n  const [servicesLoading, setServicesLoading] = useState(false);\n\n  const handleScrollToTop = useCallback(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  // Fetch services for provider listings\n  useEffect(() => {\n    const fetchProviderServices = async () => {\n      if (listing.listing_type !== 'provider' || (!listing.provider_email && !listing.provider_id)) return;\n      \n      setServicesLoading(true);\n      try {\n        let query = supabase\n          .from('marketplace_listings')\n          .select('listing_id, name, service_types, price, provider_email')\n          .eq('active', true)\n          .not('service_type', 'like', '%LuniTriage%') // Exclude LuniTriage services\n          .order('service_type', { ascending: true }) // Order by service_type to group Mobile services first\n\n        // Try provider_email first, then provider_id approach\n        if (listing.provider_email) {\n          query = query.eq('provider_email', listing.provider_email);\n        } else if (listing.provider_id) {\n          // Get provider email first, then use it to fetch services\n          const { data: providerData } = await supabase\n            .from('providers')\n            .select('email')\n            .eq('id', listing.provider_id)\n            .single();\n            \n          if (providerData?.email) {\n            query = query.eq('provider_email', providerData.email);\n          } else {\n            console.log('No provider email found for provider_id:', listing.provider_id);\n            setServicesLoading(false);\n            return;\n          }\n        } else {\n          console.log('No provider_email or provider_id found for listing:', listing.name);\n          setServicesLoading(false);\n          return;\n        }\n\n        const { data: services, error } = await query;\n\n        if (!error && services) {\n          // Store all services for count, but show top 3 for display\n          const allNonLuniServices = services.filter(service => \n            !service.service_type.includes('LuniTriage')\n          );\n          \n          // Prioritize Mobile services first for display\n          const mobileServices = services\n            .filter(service => \n              !service.service_type.includes('LuniTriage') &&\n              service.service_type.includes('Mobile')\n            )\n            .slice(0, 3);\n          \n          // If we don't have 3 mobile services, fill with other non-LuniTriage services\n          if (mobileServices.length < 3) {\n            const otherServices = services\n              .filter(service => \n                !service.service_type.includes('LuniTriage') &&\n                !service.service_type.includes('Mobile')\n              )\n              .slice(0, 3 - mobileServices.length);\n            mobileServices.push(...otherServices);\n          }\n          \n          // Add total count to the services for display\n          const servicesWithCount = mobileServices.map(service => ({\n            ...service,\n            totalCount: allNonLuniServices.length\n          }));\n          \n          console.log('Fetched services for provider:', listing.name);\n          console.log('Total non-LuniTriage services:', allNonLuniServices.length);\n          console.log('Top 3 services to display:', servicesWithCount);\n          setProviderServices(servicesWithCount);\n        } else if (error) {\n          console.error('Error fetching services for provider:', listing.name, error);\n        }\n      } catch (error) {\n        console.error('Error fetching provider services:', error);\n      } finally {\n        setServicesLoading(false);\n      }\n    };\n\n    fetchProviderServices();\n  }, [listing.listing_type, listing.provider_email, listing.provider_id]);\n\n  // Get fallback emoji for category\n  const getCategoryEmoji = useCallback((category, listingType) => {\n    if (listingType === 'product') return '📦';\n    if (listingType === 'provider') return '👩‍⚕️';\n    \n    const emojis = {\n      'Veterinary': '🏥',\n      'Pet Grooming': '✂️',\n      'Pet Training': '🎓',\n      'Pet Breeding': '🐕',\n      'Nutritionists': '🥗',\n      'Holistic Care': '🌿',\n      'vet_nurse': '👩‍⚕️'\n    };\n    \n    return emojis[category] || '🐾';\n  }, []);\n\n  // Get price range for provider services\n  const getPriceRange = useCallback(() => {\n    if (listing.listing_type !== 'provider') {\n      return `$${listing.price || 0}`;\n    }\n\n    // For providers, use the pre-calculated price range\n    if (listing.price_min && listing.price_max) {\n      if (listing.price_min === listing.price_max) {\n        return `$${listing.price_min}`;\n      } else {\n        return `$${listing.price_min} - $${listing.price_max}`;\n      }\n    }\n\n    // Fallback to providerServices if available\n    if (providerServices.length > 0) {\n      const prices = providerServices.map(service => parseFloat(service.price_from));\n      const minPrice = Math.min(...prices);\n      const maxPrice = Math.max(...prices);\n\n      if (minPrice === maxPrice) {\n        return `$${minPrice}`;\n      } else {\n        return `$${minPrice} - $${maxPrice}`;\n      }\n    }\n\n    return `$${listing.price || 0}`;\n  }, [listing, providerServices]);\n\n  return (\n    <Link\n      to={listing.listing_type === 'provider' ? `/provider/${encodeURIComponent(listing.provider_email || listing.provider_id)}` : \n          listing.listing_type === 'service' ? `/provider/${encodeURIComponent(listing.provider_email || listing.provider_id)}` : \n          `/product/${listing.listing_id}`}\n      className=\"group h-full\"\n      onClick={handleScrollToTop}\n    >\n      <div className=\"bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow duration-300 h-full flex flex-col\">\n        {/* Listing Image */}\n        <div className=\"relative h-44 sm:h-52 bg-gradient-to-br from-primary-100 to-primary-200 rounded-t-2xl overflow-hidden\">\n          {listing.image_url && (\n            <OptimizedImage\n              src={listing.image_url}\n              alt={listing.name}\n              className=\"w-full h-full object-cover border-0\"\n            />\n          )}\n          <div className={`${listing.image_url ? 'hidden' : 'flex'} w-full h-full items-center justify-center text-base`}>\n            {getCategoryEmoji(listing.category, listing.listing_type)}\n          </div>\n          \n          {/* Listing Type Badge */}\n          <div className=\"absolute top-2 sm:top-3 left-2 sm:left-3\">\n            <span className={`inline-flex items-center px-1.5 sm:px-2 py-0.5 sm:py-1 rounded-full text-xs font-medium font-montserrat ${\n              listing.listing_type === 'product' \n                ? 'bg-[#E5F4F1] text-[#4A9A64]' \n                : listing.listing_type === 'provider'\n                ? 'bg-[#f0f4ff] text-[#3b82f6]'\n                : 'bg-[#fef7f0] text-[#e06b1a]'\n            }`}>\n              <CategoryIcon category={listing.category} listingType={listing.listing_type} />\n              <span className=\"ml-1 hidden sm:inline\">\n                {listing.listing_type === 'product' ? 'Product' : \n                 listing.listing_type === 'provider' ? 'Provider' : 'Service'}\n              </span>\n            </span>\n          </div>\n\n          {/* Top right badges and favorite button */}\n          <div className=\"absolute top-2 sm:top-3 right-2 sm:right-3 flex items-center space-x-2\">\n            {/* Verified Badge */}\n            {listing.verified && (\n              <span className=\"inline-flex items-center px-1.5 sm:px-2 py-0.5 sm:py-1 rounded-full text-xs font-medium bg-[#E5F4F1] text-[#4A9A64] font-montserrat\">\n                <svg className=\"w-3 h-3 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                <span className=\"hidden sm:inline\">Verified</span>\n              </span>\n            )}\n            \n            {/* Favorite Button */}\n            <FavoriteButton\n              listingId={listing.listing_id}\n              listingType={listing.listing_type}\n              size=\"sm\"\n              className=\"z-10\"\n            />\n          </div>\n        </div>\n\n        {/* Listing Content */}\n        <div className=\"flex-1 flex flex-col p-3 sm:p-4\">\n          <h3 className=\"font-semibold text-gray-900 mb-2 font-montserrat group-hover:text-[#5EB47C] transition-colors min-w-0 line-clamp-2\">\n            {listing.name}\n          </h3>\n          \n          {/* Description - Show services for providers */}\n          <div className=\"text-sm text-gray-600 mb-3 font-montserrat flex-1\">\n            {listing.listing_type === 'provider' && providerServices.length > 0 ? (\n              <div className=\"space-y-1\">\n                {providerServices.slice(0, 3).map((service, index) => (\n                  <div key={index} className=\"flex justify-between items-center\">\n                    <span>• {service.title}</span>\n                    <span className=\"font-medium\">${service.price_from}</span>\n                  </div>\n                ))}\n                {providerServices[0]?.totalCount > 3 && (\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    + {(providerServices[0]?.totalCount || providerServices.length) - 3} more services\n                  </div>\n                )}\n              </div>\n            ) : listing.listing_type === 'provider' && servicesLoading ? (\n              <div className=\"text-xs text-gray-400\">Loading services...</div>\n            ) : (\n              <div className=\"line-clamp-2\">{listing.description}</div>\n            )}\n          </div>\n\n          {/* Provider Info */}\n          <div className=\"flex items-center mb-3\">\n            <div className=\"w-8 h-8 bg-[#E5F4F1] rounded-full flex items-center justify-center mr-3\">\n              <span className=\"text-[#5EB47C] font-medium text-sm font-montserrat\">\n                {listing.provider_name?.charAt(0) || 'P'}\n              </span>\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-gray-900 font-montserrat truncate\">\n                {listing.provider_name || 'Provider'}\n              </p>\n              {listing.rating > 0 && (\n                <div className=\"flex items-center\">\n                  <div className=\"flex text-yellow-400 mr-1\">\n                    {[...Array(5)].map((_, i) => (\n                      <svg key={i} className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                    ))}\n                  </div>\n                  <span className=\"text-xs text-gray-500 font-montserrat\">\n                    {listing.rating} ({listing.reviews_count})\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Price and Location */}\n          <div className=\"flex items-center justify-between mt-auto\">\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-lg font-bold text-gray-900 font-montserrat\">\n                {getPriceRange()}\n                {listing.listing_type === 'service' && (\n                  <span className=\"text-xs font-normal text-gray-500 ml-1\">per session</span>\n                )}\n                {listing.listing_type === 'provider' && providerServices.length > 0 && (\n                  <span className=\"text-xs font-normal text-gray-500 ml-1\">\n                    {providerServices[0]?.totalCount || providerServices.length} service{(providerServices[0]?.totalCount || providerServices.length) !== 1 ? 's' : ''}\n                  </span>\n                )}\n              </p>\n            </div>\n            {listing.city && (\n              <div className=\"flex items-center text-gray-500 ml-2 flex-shrink-0\">\n                <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                <span className=\"text-xs font-montserrat truncate\">{listing.city}</span>\n              </div>\n            )}\n          </div>\n\n          {/* Stock for products */}\n          {listing.listing_type === 'product' && listing.stock_quantity !== null && (\n            <div className=\"mt-2\">\n              <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium font-montserrat ${\n                listing.stock_quantity > 10 \n                  ? 'bg-green-100 text-green-800' \n                  : listing.stock_quantity > 0 \n                  ? 'bg-yellow-100 text-yellow-800'\n                  : 'bg-red-100 text-red-800'\n              }`}>\n                {listing.stock_quantity > 10 ? 'In Stock' : \n                 listing.stock_quantity > 0 ? `${listing.stock_quantity} left` : 'Out of Stock'}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </Link>\n  );\n});\n\nMarketplaceCard.displayName = 'MarketplaceCard';\n\nexport default MarketplaceCard;","import { useEffect, useRef } from 'react';\nimport logger from '../lib/logger';\n\n// Custom hook for performance monitoring\nexport const usePerformance = (componentName) => {\n  const startTimeRef = useRef(null);\n\n  useEffect(() => {\n    startTimeRef.current = performance.now();\n    logger.debug(`⏱️ ${componentName} - Component mounted, starting performance measurement`);\n\n    return () => {\n      if (startTimeRef.current) {\n        const duration = performance.now() - startTimeRef.current;\n        logger.debug(`⏱️ ${componentName} - Component unmounted after ${duration.toFixed(2)}ms`);\n      }\n    };\n  }, [componentName]);\n\n  const measureOperation = (operationName, operation) => {\n    return async (...args) => {\n      const start = performance.now();\n      logger.debug(`⏱️ ${componentName} - Starting ${operationName}`);\n      \n      try {\n        const result = await operation(...args);\n        const duration = performance.now() - start;\n        logger.debug(`⏱️ ${componentName} - ${operationName} completed in ${duration.toFixed(2)}ms`);\n        return result;\n      } catch (error) {\n        const duration = performance.now() - start;\n        logger.warn(`⏱️ ${componentName} - ${operationName} failed after ${duration.toFixed(2)}ms`);\n        throw error;\n      }\n    };\n  };\n\n  const markTime = (label) => {\n    if (startTimeRef.current) {\n      const duration = performance.now() - startTimeRef.current;\n      logger.debug(`⏱️ ${componentName} - ${label}: ${duration.toFixed(2)}ms from mount`);\n    }\n  };\n\n  return { measureOperation, markTime };\n};\n\n// Hook for measuring network requests\nexport const useNetworkPerformance = () => {\n  const measureRequest = async (requestName, requestFn) => {\n    const start = performance.now();\n    logger.debug(`🌐 Starting ${requestName}`);\n    \n    try {\n      const result = await requestFn();\n      const duration = performance.now() - start;\n      logger.debug(`🌐 ${requestName} completed in ${duration.toFixed(2)}ms`);\n      \n      // Log slow requests\n      if (duration > 1000) {\n        logger.warn(`🐌 Slow request detected: ${requestName} took ${duration.toFixed(2)}ms`);\n      }\n      \n      return result;\n    } catch (error) {\n      const duration = performance.now() - start;\n      logger.error(`🌐 ${requestName} failed after ${duration.toFixed(2)}ms:`, error);\n      throw error;\n    }\n  };\n\n  return { measureRequest };\n};\n\nexport default usePerformance;","import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { supabase } from '../lib/supabase.js';\nimport MarketplaceCard from './MarketplaceCard';\nimport { usePerformance, useNetworkPerformance } from '../hooks/usePerformance';\n\n\n\n\n// Cache for marketplace data to avoid unnecessary API calls\nconst marketplaceCache = {\n  data: null,\n  timestamp: null,\n  isValid: function() {\n    return this.data && this.timestamp && (Date.now() - this.timestamp < 5 * 60 * 1000); // 5 minute cache\n  }\n};\n\nconst LiveMarketplace = () => {\n  const [listings, setListings] = useState([]);\n  const [filteredListings, setFilteredListings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [priceRange, setPriceRange] = useState({ min: '', max: '' });\n  const [showFilters, setShowFilters] = useState(false);\n  const [cityDropdownOpen, setCityDropdownOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const cityDropdownRef = useRef(null);\n\n  // Performance monitoring\n  const { markTime } = usePerformance('LiveMarketplace');\n  const { measureRequest } = useNetworkPerformance();\n\n  const ITEMS_PER_PAGE = 12; // Reduced from loading all items at once\n\n\n\n  // Load marketplace listings with pagination and performance optimizations\n  const loadListings = useCallback(async (page = 1, useCache = true) => {\n    // Check simple cache first\n    if (useCache && page === 1 && marketplaceCache.isValid()) {\n      setListings(marketplaceCache.data.listings);\n      setTotalCount(marketplaceCache.data.totalCount);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      markTime('Starting API request');\n      \n      // Get total count first (only for first page) with deduplication\n      let totalCount = 0;\n      if (page === 1) {\n        const countResult = await measureRequest('Count query', async () => {\n          return await supabase\n            .from('marketplace_listings')\n            .select('*', { count: 'exact', head: true });\n        });\n        totalCount = countResult.count || 0;\n        setTotalCount(totalCount);\n      }\n\n              // Load data with selected fields for better performance\n        const result = await measureRequest('Marketplace query', async () => {\n          return await supabase\n            .from('marketplace_listings')\n            .select(`\n              listing_type,\n              listing_id,\n              name,\n              description,\n              price,\n              city,\n              category,\n              image_url,\n              provider_id,\n              provider_name,\n              verified,\n              rating,\n              reviews_count,\n              stock_quantity,\n              updated_at\n            `)\n            .order('updated_at', { ascending: false })\n            .range((page - 1) * ITEMS_PER_PAGE, page * ITEMS_PER_PAGE - 1);\n        });\n\n      const { data, error } = result;\n\n      if (error) {\n        if (page === 1) {\n          setListings([]);\n        }\n        setLoading(false);\n        return;\n      }\n\n      const newListings = data || [];\n      \n      if (page === 1) {\n        // First page - replace all listings\n        setListings(newListings);\n        \n        // Cache in both simple and advanced cache\n        const cacheData = { listings: newListings, totalCount };\n        marketplaceCache.data = cacheData;\n        marketplaceCache.timestamp = Date.now();\n        \n\n      } else {\n        // Subsequent pages - append to existing listings\n        setListings(prev => [...prev, ...newListings]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      if (page === 1) {\n        setListings([]);\n      }\n      setLoading(false);\n    }\n  }, [markTime, measureRequest, debouncedSearchTerm, selectedCategory, selectedCity]);\n\n\n\n  // Debounce search term to reduce API calls\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 300); // 300ms debounce\n\n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n\n  // Group listings by provider and filter\n  const filterListings = useMemo(() => {\n    // Add Emily Summer as a standalone provider card (like Sarah Smith)\n    const emilyProvider = {\n      listing_type: 'provider',\n      listing_id: 'emily-summer-provider',\n      provider_id: 'emily-summer-id',\n      provider_email: 'emily@gmail.com',\n      name: 'Emily Summer',\n      description: 'Veterinarian providing quality pet care services',\n      provider_name: 'Emily Summer',\n              provider_type: 'Veterinarian',\n      city: 'Sydney',\n      category: 'Veterinarian',\n      verified: true,\n      rating: 4.8,\n      reviews_count: 23,\n      image_url: null,\n      price: 95,\n      price_min: 95,\n      price_max: 150,\n      services: [],\n      packages: [],\n      products: []\n    };\n    \n    // Use original listings (don't filter Emily Summer)\n    const filteredListings = listings;\n    \n    // First group all listings by provider\n    const providerGroups = {};\n    \n    filteredListings.forEach(listing => {\n      const providerId = listing.provider_email || listing.provider_id;\n      if (!providerId) return;\n      \n      if (!providerGroups[providerId]) {\n        providerGroups[providerId] = {\n          listing_type: 'provider',\n          listing_id: listing.provider_email || listing.provider_id,\n          provider_id: listing.provider_id,\n          provider_email: listing.provider_email,\n          name: listing.provider_name || 'Unknown Provider',\n          description: `${listing.provider_type || 'Provider'} providing quality pet care services`,\n          provider_name: listing.provider_name || 'Unknown Provider',\n          provider_type: listing.provider_type || 'Provider',\n          city: listing.provider_city || listing.city || '',\n          category: listing.provider_type || 'Provider',\n          verified: listing.verified || false,\n          rating: parseFloat(listing.rating) || 0,\n          reviews_count: parseInt(listing.reviews_count) || 0,\n          image_url: listing.profile_image_url || listing.image_url || null,\n          price: 0, // Will be calculated after grouping\n          services: [],\n          packages: [],\n          products: []\n        };\n      }\n      \n      // Update provider info if we have better data\n      if (listing.provider_name && !providerGroups[providerId].name) {\n        providerGroups[providerId].name = listing.provider_name;\n        providerGroups[providerId].provider_name = listing.provider_name;\n      }\n      if (listing.provider_type && providerGroups[providerId].provider_type === 'Provider') {\n        providerGroups[providerId].provider_type = listing.provider_type;\n        providerGroups[providerId].category = listing.provider_type;\n        providerGroups[providerId].description = `${listing.provider_type} providing quality pet care services`;\n      }\n\n      // Group by type\n      if (listing.listing_type === 'service' || (listing.service_types !== 'product' && listing.service_types !== 'package')) {\n        providerGroups[providerId].services.push(listing);\n      } else if (listing.listing_type === 'package' || listing.service_types === 'package') {\n        providerGroups[providerId].packages.push(listing);\n      } else if (listing.listing_type === 'product' || listing.service_types === 'product') {\n        providerGroups[providerId].products.push(listing);\n      }\n    });\n\n    // Convert to array and calculate price ranges\n    let filtered = Object.values(providerGroups).map(provider => {\n      // Calculate min and max prices from all services, packages, and products\n      const allPrices = [\n        ...provider.services.map(s => parseFloat(s.price) || 0),\n        ...provider.packages.map(p => parseFloat(p.price) || 0),\n        ...provider.products.map(p => parseFloat(p.price) || 0)\n      ].filter(price => price > 0);\n      \n      if (allPrices.length > 0) {\n        provider.price = Math.min(...allPrices);\n        provider.price_min = Math.min(...allPrices);\n        provider.price_max = Math.max(...allPrices);\n      } else {\n        provider.price = 0;\n        provider.price_min = 0;\n        provider.price_max = 0;\n      }\n\n      // If no profile image, use the first available image from any listing\n      if (!provider.image_url) {\n        const allListings = [...provider.services, ...provider.packages, ...provider.products];\n        const listingWithImage = allListings.find(listing => listing.image_url);\n        if (listingWithImage) {\n          provider.image_url = listingWithImage.image_url;\n        }\n      }\n\n              // Ensure all veterinarians have consistent card UI and ratings\n        if (provider.provider_type === 'vet_nurse' || \n            provider.provider_type === 'Veterinarian' || \n            provider.provider_type === 'VET_NURSE' ||\n            provider.category === 'vet_nurse' ||\n            provider.category === 'Veterinarian' ||\n            provider.provider_name === 'Sara Lee' ||\n            provider.provider_name === 'Emily Summer') {\n                      // Standardize veterinarian display\n            provider.provider_type = 'Veterinarian';\n            provider.category = 'Veterinarian';\n          provider.description = `Veterinarian providing quality pet care services`;\n          \n          // Ensure all veterinarians have ratings (like Emily Summer)\n          if (!provider.rating || provider.rating === 0) {\n            // Assign varied but good ratings to different veterinarians\n            const veterinarianRatings = {\n              'Emily Summer': { rating: 4.8, reviews: 23 },\n              'Sara Lee': { rating: 4.6, reviews: 15 },\n              'Sarah Smith': { rating: 4.9, reviews: 127 }\n            };\n            \n            const specificRating = veterinarianRatings[provider.provider_name];\n            if (specificRating) {\n              provider.rating = specificRating.rating;\n              provider.reviews_count = specificRating.reviews;\n            } else {\n              // Default rating for other veterinarians\n              provider.rating = 4.7;\n              provider.reviews_count = 18;\n            }\n          }\n          \n          // Ensure consistent verified status for veterinarians\n          provider.verified = true;\n          \n          console.log('Standardized veterinarian card:', provider.provider_name, {\n            rating: provider.rating,\n            reviews: provider.reviews_count,\n            type: provider.provider_type\n          });\n        }\n        \n        // Handle other provider types that need ratings\n        const otherProviderRatings = {\n          'Luna Groomer': { rating: 4.9, reviews: 31 }\n        };\n        \n        if (otherProviderRatings[provider.provider_name]) {\n          const rating = otherProviderRatings[provider.provider_name];\n          provider.rating = rating.rating;\n          provider.reviews_count = rating.reviews;\n        }\n\n\n\n        return provider;\n    });\n\n    // Add Emily Summer as a standalone provider card\n    filtered.push(emilyProvider);\n\n    // Search term filter\n    if (debouncedSearchTerm) {\n      const searchLower = debouncedSearchTerm.toLowerCase();\n      filtered = filtered.filter(provider =>\n        provider.provider_name?.toLowerCase().includes(searchLower) ||\n        provider.provider_type?.toLowerCase().includes(searchLower) ||\n        provider.city?.toLowerCase().includes(searchLower) ||\n        provider.services.some(service => \n          service.name?.toLowerCase().includes(searchLower) ||\n          service.description?.toLowerCase().includes(searchLower)\n        )\n      );\n    }\n\n    // Category filter (based on provider type)\n    if (selectedCategory) {\n      if (selectedCategory === 'Products') {\n        filtered = filtered.filter(provider => provider.products.length > 0);\n      } else if (selectedCategory === 'Veterinary') {\n        filtered = filtered.filter(provider => \n          provider.provider_type === 'veterinarian' || provider.provider_type === 'Veterinarian'\n        );\n      } else if (selectedCategory === 'Groomers') {\n        filtered = filtered.filter(provider => provider.provider_type === 'Pet Groomer');\n      } else if (selectedCategory === 'Trainers') {\n        filtered = filtered.filter(provider => provider.provider_type === 'Pet Trainer');\n      } else if (selectedCategory === 'Nutritionists') {\n        filtered = filtered.filter(provider => provider.provider_type === 'Nutritionist');\n      } else if (selectedCategory === 'Holistic Care') {\n        filtered = filtered.filter(provider => provider.provider_type === 'Holistic Care');\n      }\n    }\n\n    // City filter\n    if (selectedCity) {\n      filtered = filtered.filter(provider =>\n        provider.city?.toLowerCase().includes(selectedCity.toLowerCase())\n      );\n    }\n\n    // Price range filter (check if provider has services in range)\n    if (priceRange.min || priceRange.max) {\n      filtered = filtered.filter(provider => {\n        const allPrices = [\n          ...provider.services.map(s => s.price || 0),\n          ...provider.packages.map(p => p.price || 0),\n          ...provider.products.map(p => p.price || 0)\n        ];\n        \n        return allPrices.some(price => {\n          const priceNum = parseFloat(price);\n          const minCheck = !priceRange.min || priceNum >= parseFloat(priceRange.min);\n          const maxCheck = !priceRange.max || priceNum <= parseFloat(priceRange.max);\n          return minCheck && maxCheck;\n        });\n      });\n    }\n\n    return filtered;\n  }, [listings, debouncedSearchTerm, selectedCategory, selectedCity, priceRange]);\n\n  // Update filtered listings when filter results change\n  useEffect(() => {\n    setFilteredListings(filterListings);\n  }, [filterListings]);\n\n  // Get unique cities for filter dropdown - memoized for performance\n  const uniqueCities = useMemo(() => {\n    return listings\n      .map(listing => listing.city)\n      .filter(city => city)\n      .filter((city, index, arr) => arr.indexOf(city) === index)\n      .sort();\n  }, [listings]);\n\n\n\n\n\n  useEffect(() => {\n    loadListings(1, true); // Initial load\n  }, [loadListings]);\n\n  // Failsafe: Force loading to false after 10 seconds if still loading\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (loading) {\n        setLoading(false);\n      }\n    }, 10000);\n\n    return () => clearTimeout(timeout);\n  }, [loading]);\n\n  // Close city dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (cityDropdownRef.current && !cityDropdownRef.current.contains(event.target)) {\n        setCityDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Show skeleton loading instead of full-screen loader to avoid double loading indicators\n  const isInitialLoad = loading && listings.length === 0;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Search and Filter Section */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"py-8 px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-7xl mx-auto\">\n          <div className=\"mb-6 sm:mb-8\">\n            <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-3 font-montserrat leading-tight\">\n              Find amazing pet care\n            </h1>\n            <p className=\"text-base sm:text-lg text-gray-600 font-montserrat leading-relaxed\">\n              Browse our selection of trusted pet care professionals and products\n            </p>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\n            <div className=\"flex-1 relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 sm:pl-4 flex items-center pointer-events-none\">\n                <svg className=\"h-4 w-4 sm:h-5 sm:w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search services or products...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 sm:pl-12 pr-4 py-3 sm:py-4 bg-white border border-gray-300 rounded-xl focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent shadow-sm text-base font-montserrat placeholder-gray-500\"\n              />\n            </div>\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              className=\"flex items-center justify-center px-4 sm:px-6 py-3 sm:py-4 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-colors duration-200 font-montserrat text-sm sm:text-base font-medium text-gray-700 shadow-sm whitespace-nowrap\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\" />\n              </svg>\n              Filters\n            </button>\n          </div>\n\n          {/* Advanced Filters */}\n          {showFilters && (\n            <div className=\"bg-gray-50 rounded-xl p-6 mb-6 border border-gray-200\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div ref={cityDropdownRef}>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2 font-montserrat\">City</label>\n                  <div className=\"relative\">\n                    <button\n                      onClick={() => setCityDropdownOpen(!cityDropdownOpen)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-left flex items-center justify-between hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\"\n                    >\n                      <span className=\"flex items-center\">\n                        {selectedCity || 'All Cities'}\n                      </span>\n                      <svg\n                        className={`w-4 h-4 transition-transform ${cityDropdownOpen ? 'rotate-180' : ''}`}\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </button>\n                    \n                    {/* Custom Dropdown Menu */}\n                    {cityDropdownOpen && (\n                      <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-xl ring-1 ring-black ring-opacity-5 z-50 overflow-hidden max-h-60 overflow-y-auto\">\n                        <button\n                          onClick={() => {\n                            setSelectedCity('');\n                            setCityDropdownOpen(false);\n                          }}\n                          className={`w-full px-3 py-2 text-left hover:bg-gray-50 flex items-center font-montserrat ${\n                            !selectedCity ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                          }`}\n                        >\n                          All Cities\n                        </button>\n                        {uniqueCities.map(city => (\n                          <button\n                            key={city}\n                            onClick={() => {\n                              setSelectedCity(city);\n                              setCityDropdownOpen(false);\n                            }}\n                            className={`w-full px-3 py-2 text-left hover:bg-gray-50 flex items-center border-t border-gray-200 font-montserrat ${\n                              selectedCity === city ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                            }`}\n                          >\n                            {city}\n                          </button>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2 font-montserrat\">Min Price</label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"$0\"\n                    value={priceRange.min}\n                    onChange={(e) => setPriceRange({ ...priceRange, min: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2 font-montserrat\">Max Price</label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"$1000\"\n                    value={priceRange.max}\n                    onChange={(e) => setPriceRange({ ...priceRange, max: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent font-montserrat\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Category Pills */}\n          <div className=\"overflow-x-auto -mx-4 px-4 sm:mx-0 sm:px-0 scrollbar-hide\">\n            <div className=\"flex space-x-3 pb-2 min-w-max sm:min-w-0\">\n              {[\n                { id: '', label: 'All', icon: '🏠' },\n                { id: 'Products', label: 'Products', icon: '🛍️' },\n                { id: 'Veterinary', label: 'Vets', icon: '🏥' },\n                { id: 'Groomers', label: 'Groomers', icon: '✂️' },\n                { id: 'Trainers', label: 'Trainers', icon: '🎓' },\n                { id: 'Nutritionists', label: 'Nutritionists', icon: '🥗' },\n                { id: 'Holistic Care', label: 'Holistic', icon: '🌿' }\n              ].map((category) => (\n                <button\n                  key={category.id}\n                  onClick={() => setSelectedCategory(category.id)}\n                  className={`flex items-center px-3 sm:px-4 py-2 rounded-full text-xs sm:text-sm font-medium whitespace-nowrap transition-all duration-200 font-montserrat ${\n                    selectedCategory === category.id\n                      ? 'bg-[#5EB47C] text-white shadow-sm'\n                      : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\n                  }`}\n                >\n                  <span className=\"mr-2\">{category.icon}</span>\n                  {category.label}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n\n      {/* Results Section */}\n      <div className=\"py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6\">\n          <p className=\"text-gray-600 font-montserrat mb-4 sm:mb-0\">\n            {filteredListings.length} {filteredListings.length === 1 ? 'listing' : 'listings'} found\n          </p>\n          \n          {/* Filter Tags */}\n          <div className=\"flex flex-wrap gap-2\">\n            {debouncedSearchTerm && (\n              <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-[#E5F4F1] text-[#4A9A64] font-montserrat\">\n                Search: \"{debouncedSearchTerm}\"\n                <button\n                  onClick={() => setSearchTerm('')}\n                  className=\"ml-2 text-[#5EB47C] hover:text-[#4A9A64]\"\n                >\n                  ×\n                </button>\n              </span>\n            )}\n            {selectedCategory && (\n              <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-[#E5F4F1] text-[#4A9A64] font-montserrat\">\n                Category: {selectedCategory}\n                <button\n                  onClick={() => setSelectedCategory('')}\n                  className=\"ml-2 text-[#5EB47C] hover:text-[#4A9A64]\"\n                >\n                  ×\n                </button>\n              </span>\n            )}\n            {selectedCity && (\n              <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-[#E5F4F1] text-[#4A9A64] font-montserrat\">\n                City: {selectedCity}\n                <button\n                  onClick={() => setSelectedCity('')}\n                  className=\"ml-2 text-[#5EB47C] hover:text-[#4A9A64]\"\n                >\n                  ×\n                </button>\n              </span>\n            )}\n            {(debouncedSearchTerm || selectedCategory || selectedCity || priceRange.min || priceRange.max) && (\n              <button\n                onClick={() => {\n                  setSearchTerm('');\n                  setSelectedCategory('');\n                  setSelectedCity('');\n                  setPriceRange({ min: '', max: '' });\n                }}\n                className=\"text-xs text-gray-500 hover:text-gray-700 font-montserrat underline\"\n              >\n                Clear filters\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Listings Grid */}\n        {isInitialLoad ? (\n          // Skeleton loading for initial load\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n            {[...Array(6)].map((_, index) => (\n              <div key={index} className=\"bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden h-full flex flex-col animate-pulse\">\n                <div className=\"h-44 sm:h-52 bg-gray-200\"></div>\n                <div className=\"p-3 sm:p-4 flex-1 flex flex-col\">\n                  <div className=\"h-6 bg-gray-200 rounded mb-2\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded mb-3 w-3/4\"></div>\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-8 h-8 bg-gray-200 rounded-full mr-3\"></div>\n                    <div className=\"flex-1\">\n                      <div className=\"h-4 bg-gray-200 rounded mb-1\"></div>\n                      <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between mt-auto\">\n                    <div className=\"h-6 bg-gray-200 rounded w-20\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : filteredListings.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n              <svg className=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2 font-montserrat\">No listings found</h3>\n            <p className=\"text-gray-500 font-montserrat\">Try adjusting your search criteria or filters</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n            {filteredListings.map((provider) => (\n              <MarketplaceCard\n                key={provider.listing_id}\n                listing={provider}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* Load More Button */}\n        {!loading && filteredListings.length > 0 && filteredListings.length < totalCount && (\n          <div className=\"text-center mt-8\">\n            <button\n              onClick={() => {\n                const nextPage = currentPage + 1;\n                setCurrentPage(nextPage);\n                loadListings(nextPage, false);\n              }}\n              className=\"bg-[#5EB47C] hover:bg-[#4A9A64] text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 font-montserrat shadow-sm hover:shadow-md\"\n            >\n              Load More ({totalCount - filteredListings.length} remaining)\n            </button>\n          </div>\n        )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LiveMarketplace;"],"names":["CategoryIcon","memo","_ref","category","listingType","_jsx","className","fill","stroke","viewBox","children","strokeLinecap","strokeLinejoin","strokeWidth","d","icons","default","displayName","OptimizedImage","_ref2","src","alt","loading","decoding","onError","e","target","style","display","MarketplaceCard","_ref3","_providerServices$","_providerServices$2","_listing$provider_nam","_providerServices$3","_providerServices$4","listing","providerServices","setProviderServices","useState","servicesLoading","setServicesLoading","handleScrollToTop","useCallback","window","scrollTo","top","behavior","useEffect","async","listing_type","provider_email","provider_id","query","supabase","from","select","eq","not","order","ascending","console","log","name","data","providerData","single","email","services","error","allNonLuniServices","filter","service","service_type","includes","mobileServices","slice","length","otherServices","push","servicesWithCount","map","totalCount","fetchProviderServices","getCategoryEmoji","getPriceRange","price","price_min","price_max","prices","parseFloat","price_from","minPrice","Math","min","maxPrice","max","Link","to","encodeURIComponent","listing_id","onClick","_jsxs","image_url","verified","fillRule","clipRule","FavoriteButton","listingId","size","index","title","description","provider_name","charAt","rating","Array","_","i","reviews_count","city","stock_quantity","usePerformance","componentName","startTimeRef","useRef","current","performance","now","logger","debug","duration","toFixed","measureOperation","operationName","operation","start","result","arguments","warn","markTime","label","marketplaceCache","timestamp","isValid","this","Date","LiveMarketplace","listings","setListings","filteredListings","setFilteredListings","setLoading","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","selectedCategory","setSelectedCategory","selectedCity","setSelectedCity","priceRange","setPriceRange","showFilters","setShowFilters","cityDropdownOpen","setCityDropdownOpen","currentPage","setCurrentPage","setTotalCount","cityDropdownRef","measureRequest","requestName","requestFn","loadListings","page","undefined","count","head","range","newListings","cacheData","prev","timer","setTimeout","clearTimeout","filterListings","useMemo","providerGroups","forEach","providerId","provider_type","provider_city","parseInt","profile_image_url","packages","products","service_types","filtered","Object","values","provider","allPrices","s","p","listingWithImage","find","specificRating","reviews","type","otherProviderRatings","searchLower","toLowerCase","_provider$provider_na","_provider$provider_ty","_provider$city","some","_service$name","_service$description","_provider$city2","priceNum","minCheck","maxCheck","uniqueCities","arr","indexOf","sort","timeout","handleClickOutside","event","contains","document","addEventListener","removeEventListener","isInitialLoad","placeholder","value","onChange","ref","id","icon","nextPage"],"sourceRoot":""}