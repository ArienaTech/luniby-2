{"version":3,"file":"static/js/277.2f258bbc.chunk.js","mappings":"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","sources":["services/caseHistoryService.js","components/dashboard/PetOwnerLayout.js","components/dashboard/PetOwnerTabs.js","components/dashboard/PetOwnerStats.js","components/dashboard/PetOwnerBanners.js","components/dashboard/PetOwnerFloatingActions.js","components/ProfileHeader.js","components/PetsGallery.js","components/HealthAlerts.js","components/UsageStatus.js","components/BookingsQuickActions.js","components/HealthRecordsViewer.js","components/CaseHistoryViewer.js","components/AddHealthRecordForm.js","components/EditHealthRecordForm.js","components/AddPetForm.js","components/PetOwnerDashboard.js","utils/roleUtils.js","lib/constants.js"],"sourcesContent":["// Case history management service\nimport { supabase } from '../lib/supabase';\nimport { handleSupabaseError } from '../lib/supabase-utils';\n\nconst caseHistoryService = {\n  // Get case history for a pet\n  async getPetCaseHistory(petId) {\n    try {\n      const { data, error } = await supabase\n        .from('case_history')\n        .select('*')\n        .eq('pet_id', petId)\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: [] };\n      }\n\n      return { success: true, data: data || [] };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: [] };\n    }\n  },\n\n  // Get case history for a user\n  async getUserCaseHistory(userId) {\n    try {\n      const { data, error } = await supabase\n        .from('case_history')\n        .select('*')\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: [] };\n      }\n\n      return { success: true, data: data || [] };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: [] };\n    }\n  },\n\n  // Get a single case\n  async getCase(caseId) {\n    try {\n      const { data, error } = await supabase\n        .from('case_history')\n        .select('*')\n        .eq('id', caseId)\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  },\n\n  // Create a new case\n  async createCase(caseData) {\n    try {\n      const { data, error } = await supabase\n        .from('case_history')\n        .insert([caseData])\n        .select()\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  },\n\n  // Update a case\n  async updateCase(caseId, updates) {\n    try {\n      const { data, error } = await supabase\n        .from('case_history')\n        .update(updates)\n        .eq('id', caseId)\n        .select()\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  }\n};\n\nexport default caseHistoryService;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PetOwnerLayout = ({ \n  children, \n  alerts, \n  loading = false,\n  className = \"\" \n}) => {\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading your dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 relative overflow-x-hidden\">\n      <section className={`pt-4 sm:pt-8 pb-8 px-3 sm:px-6 lg:px-12 ${className}`}>\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Alerts Section */}\n          {alerts && alerts.length > 0 && (\n            <div className=\"mb-6\">\n              {alerts.map((alert, index) => (\n                <div key={index} className=\"mb-4\">\n                  {alert}\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {/* Main Content */}\n          {children}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPetOwnerLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  alerts: PropTypes.arrayOf(PropTypes.element),\n  loading: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default PetOwnerLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabButton = ({ id, label, isActive, onClick, icon }) => (\n  <button\n    onClick={() => onClick(id)}\n    className={`py-2 px-1 font-medium text-sm whitespace-nowrap flex-shrink-0 flex items-center space-x-2 ${\n      isActive\n        ? 'text-[#5EB47C]'\n        : 'text-gray-500 hover:text-gray-700'\n    }`}\n  >\n    {icon && <span>{icon}</span>}\n    <span>{label}</span>\n  </button>\n);\n\nTabButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  icon: PropTypes.element,\n};\n\nconst PetOwnerTabs = ({ activeTab, onTabChange, tabs }) => {\n  const defaultTabs = [\n    { id: 'overview', label: 'Overview' },\n    { id: 'health', label: 'Health Records' },\n    { id: 'cases', label: 'SOAP Notes' },\n    { id: 'favorites', label: 'Favorites' },\n  ];\n\n  const tabsToRender = tabs || defaultTabs;\n\n  return (\n    <div className=\"mb-6 sm:mb-8\">\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"-mb-px flex space-x-6 sm:space-x-8 overflow-x-auto scrollbar-hide\">\n          {tabsToRender.map((tab) => (\n            <TabButton\n              key={tab.id}\n              id={tab.id}\n              label={tab.label}\n              isActive={activeTab === tab.id}\n              onClick={onTabChange}\n              icon={tab.icon}\n            />\n          ))}\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nPetOwnerTabs.propTypes = {\n  activeTab: PropTypes.string.isRequired,\n  onTabChange: PropTypes.func.isRequired,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      icon: PropTypes.element,\n    })\n  ),\n};\n\nexport default PetOwnerTabs;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HealthIcon } from '../MinimalIcons';\n\nconst StatCard = ({ icon, title, value, color = 'blue', onClick, description }) => (\n  <div \n    className={`text-center p-3 sm:p-4 bg-${color}-50 rounded-xl border border-${color}-100 ${onClick ? 'cursor-pointer hover:shadow-md transition-shadow' : ''}`}\n    onClick={onClick}\n  >\n    <div className={`w-10 h-10 sm:w-12 sm:h-12 bg-${color}-100 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3`}>\n      {icon}\n    </div>\n    <div className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-1\">\n      {value}\n    </div>\n    <div className={`text-xs text-${color}-700 font-medium`}>\n      {title}\n    </div>\n    {description && (\n      <div className=\"text-xs text-gray-500 mt-1\">\n        {description}\n      </div>\n    )}\n  </div>\n);\n\nStatCard.propTypes = {\n  icon: PropTypes.element.isRequired,\n  title: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n  description: PropTypes.string,\n};\n\nconst PetOwnerStats = ({ \n  totalPets, \n  totalHealthRecords, \n  petsUpToDate, \n  healthPercentage, \n  healthAlerts,\n  onHealthRecordsClick,\n  onAlertsClick \n}) => {\n  return (\n    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-2 sm:gap-3 lg:gap-4\">\n      <StatCard\n        icon={<HealthIcon type=\"pet\" className=\"w-6 h-6\" color=\"#3B82F6\" />}\n        title=\"My Pets\"\n        value={totalPets}\n        color=\"blue\"\n      />\n      \n      <StatCard\n        icon={<HealthIcon type=\"records\" className=\"w-6 h-6\" color=\"#10B981\" />}\n        title=\"Health Records\"\n        value={totalHealthRecords}\n        color=\"green\"\n        onClick={onHealthRecordsClick}\n      />\n      \n      <StatCard\n        icon={<HealthIcon type=\"vaccination\" className=\"w-6 h-6\" color=\"#8B5CF6\" />}\n        title=\"Up to Date\"\n        value={petsUpToDate}\n        color=\"purple\"\n      />\n      \n      <StatCard\n        icon={<HealthIcon type=\"warning\" className=\"w-6 h-6\" color=\"#F59E0B\" />}\n        title=\"Health Alerts\"\n        value={healthAlerts}\n        color=\"orange\"\n        onClick={onAlertsClick}\n      />\n    </div>\n  );\n};\n\nPetOwnerStats.propTypes = {\n  totalPets: PropTypes.number.isRequired,\n  totalHealthRecords: PropTypes.number.isRequired,\n  petsUpToDate: PropTypes.number.isRequired,\n  healthPercentage: PropTypes.number.isRequired,\n  healthAlerts: PropTypes.number.isRequired,\n  onHealthRecordsClick: PropTypes.func,\n  onAlertsClick: PropTypes.func,\n};\n\nexport default PetOwnerStats;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { UIIcon } from '../MinimalIcons';\n\nconst FreemiumLimitBanner = ({ \n  feature, \n  current, \n  limit, \n  upgradeText, \n  onClose, \n  className = \"\" \n}) => (\n  <div className={`bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden mb-4 sm:mb-6 ${className}`}>\n    <div className=\"px-4 sm:px-8 py-3 sm:py-4\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0\">\n        <div className=\"flex items-start sm:items-center flex-1\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-[#5EB47C]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <div className=\"ml-3 flex-1\">\n            <h3 className=\"text-base sm:text-lg font-bold text-gray-900\">\n              {feature} Limit Reached\n            </h3>\n            <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">\n              You're using {current} of {limit} {feature.toLowerCase()} on your free plan. {upgradeText}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2 sm:ml-4\">\n          <Link\n            to=\"/pricing\"\n            className=\"bg-gradient-to-r from-[#5EB47C] to-green-600 text-white px-3 sm:px-4 py-2 rounded-lg text-xs sm:text-sm font-medium hover:from-[#4A9A64] hover:to-green-700 transition-all shadow-sm hover:shadow-md\"\n          >\n            Upgrade Now\n          </Link>\n          {onClose && (\n            <button\n              onClick={onClose}\n              className=\"p-1 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100 transition-colors\"\n              title=\"Close\"\n            >\n              <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst SpendingAwarenessBanner = ({ totalSpentOnExtras, userPlan }) => {\n  if (userPlan !== 'free' || totalSpentOnExtras < 6) return null;\n\n  return (\n    <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-lg p-4 mb-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-yellow-800 flex items-center\">\n              <UIIcon type=\"money\" className=\"w-4 h-4 mr-2\" color=\"currentColor\" />\n              You've spent ${totalSpentOnExtras.toFixed(2)} on extra Luni Triage\n            </h3>\n            <p className=\"text-sm text-yellow-700\">\n              Premium is only $9.99/month for unlimited access - you'd save money!\n            </p>\n          </div>\n        </div>\n        <div className=\"flex-shrink-0\">\n          <Link\n            to=\"/upgrade\"\n            className=\"bg-gradient-to-r from-[#5EB47C] to-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:from-[#4A9A64] hover:to-green-700 transition-all shadow-sm hover:shadow-md\"\n          >\n            Upgrade Now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst UsageLimitBanner = ({ \n  userPlan, \n  canCreateCaseThisWeek, \n  onShowExtraCaseModal \n}) => {\n  if (userPlan !== 'free' || canCreateCaseThisWeek) return null;\n\n  return (\n    <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0\">\n        <div className=\"flex items-start sm:items-center\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-xs sm:text-sm font-medium text-blue-800\">\n              You've used your free Luni Triage for this week\n            </h3>\n            <p className=\"text-xs sm:text-sm text-blue-700\">\n              Get instant access to another Luni Triage consultation for just $2.99, or upgrade to Premium for unlimited access.\n            </p>\n          </div>\n        </div>\n        <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-shrink-0\">\n          <button\n            onClick={onShowExtraCaseModal}\n            className=\"bg-gradient-to-r from-[#5EB47C] to-green-600 text-white px-3 sm:px-4 py-2 rounded-lg text-xs sm:text-sm font-medium hover:from-[#4A9A64] hover:to-green-700 transition-all shadow-sm hover:shadow-md\"\n          >\n            Buy Extra Luni Triage - $2.99\n          </button>\n          <Link\n            to=\"/upgrade\"\n            className=\"bg-white text-blue-600 border border-blue-200 px-3 sm:px-4 py-2 rounded-lg text-xs sm:text-sm font-medium hover:bg-blue-50 transition-all text-center\"\n          >\n            Upgrade\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PetOwnerBanners = ({\n  userPlan,\n  aiTriageCount,\n  totalSpentOnExtras,\n  canCreateCaseThisWeek,\n  onShowExtraCaseModal,\n}) => {\n  const banners = [];\n\n  // AI Triage limit banner\n  if (userPlan === 'free' && aiTriageCount >= 3) {\n    banners.push(\n      <FreemiumLimitBanner\n        key=\"ai-triage-limit\"\n        feature=\"AI Triage\"\n        current={aiTriageCount}\n        limit=\"3\"\n        upgradeText=\"Get unlimited AI health consultations with Premium.\"\n      />\n    );\n  }\n\n  // Spending awareness banner\n  banners.push(\n    <SpendingAwarenessBanner\n      key=\"spending-awareness\"\n      totalSpentOnExtras={totalSpentOnExtras}\n      userPlan={userPlan}\n    />\n  );\n\n  // Usage limit banner\n  banners.push(\n    <UsageLimitBanner\n      key=\"usage-limit\"\n      userPlan={userPlan}\n      canCreateCaseThisWeek={canCreateCaseThisWeek}\n      onShowExtraCaseModal={onShowExtraCaseModal}\n    />\n  );\n\n  return (\n    <div className=\"banners-container\">\n      {banners.filter(Boolean)}\n    </div>\n  );\n};\n\n// PropTypes\nFreemiumLimitBanner.propTypes = {\n  feature: PropTypes.string.isRequired,\n  current: PropTypes.number.isRequired,\n  limit: PropTypes.string.isRequired,\n  upgradeText: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n  className: PropTypes.string,\n};\n\nSpendingAwarenessBanner.propTypes = {\n  totalSpentOnExtras: PropTypes.number.isRequired,\n  userPlan: PropTypes.string.isRequired,\n};\n\nUsageLimitBanner.propTypes = {\n  userPlan: PropTypes.string.isRequired,\n  canCreateCaseThisWeek: PropTypes.bool.isRequired,\n  onShowExtraCaseModal: PropTypes.func.isRequired,\n};\n\nPetOwnerBanners.propTypes = {\n  userPlan: PropTypes.string.isRequired,\n  aiTriageCount: PropTypes.number.isRequired,\n  totalSpentOnExtras: PropTypes.number.isRequired,\n  canCreateCaseThisWeek: PropTypes.bool.isRequired,\n  onShowExtraCaseModal: PropTypes.func.isRequired,\n};\n\nexport default PetOwnerBanners;\nexport { FreemiumLimitBanner, SpendingAwarenessBanner, UsageLimitBanner };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst FloatingActionButton = ({ \n  onClick, \n  to, \n  className, \n  title, \n  children, \n  badge \n}) => {\n  const baseClassName = \"group rounded-full p-3 sm:p-4 shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center relative\";\n  const combinedClassName = `${baseClassName} ${className}`;\n\n  const content = (\n    <>\n      {children}\n      {badge && (\n        <span className=\"absolute -top-1 -right-1 bg-yellow-500 text-white text-xs px-1 rounded-full font-bold\">\n          {badge}\n        </span>\n      )}\n    </>\n  );\n\n  if (to) {\n    return (\n      <Link to={to} className={combinedClassName} title={title}>\n        {content}\n      </Link>\n    );\n  }\n\n  return (\n    <button onClick={onClick} className={combinedClassName} title={title}>\n      {content}\n    </button>\n  );\n};\n\nconst PetOwnerFloatingActions = ({\n  canUseAiTriage,\n  canCreateCaseThisWeek,\n  userPlan,\n  getRemainingFreeCasesThisWeek,\n  onShowExtraCaseModal,\n  showMobileMenu,\n  onToggleMobileMenu,\n}) => {\n  const renderTriageButton = () => {\n    if (canUseAiTriage && canCreateCaseThisWeek) {\n      const remaining = getRemainingFreeCasesThisWeek();\n      const showBadge = userPlan === 'free' && remaining !== 'Unlimited' && remaining <= 1;\n      \n      return (\n        <FloatingActionButton\n          to=\"/luni-triage\"\n          className=\"bg-red-500 hover:bg-red-600 text-white\"\n          title={`Emergency AI Health Check${userPlan === 'free' ? ` (${remaining} free cases left this week)` : ''}`}\n          badge={showBadge ? remaining : null}\n        >\n          <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\n          </svg>\n        </FloatingActionButton>\n      );\n    }\n\n    if (canUseAiTriage && !canCreateCaseThisWeek) {\n      return (\n        <FloatingActionButton\n          onClick={onShowExtraCaseModal}\n          className=\"bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white\"\n          title=\"Buy Extra Case - $2.99\"\n          badge=\"$2.99\"\n        >\n          <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\n          </svg>\n        </FloatingActionButton>\n      );\n    }\n\n    return (\n      <FloatingActionButton\n        to=\"/pricing\"\n        className=\"bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white\"\n        title=\"Upgrade for AI Health Check\"\n      >\n        <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n        </svg>\n      </FloatingActionButton>\n    );\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 sm:bottom-6 sm:right-6 flex flex-col space-y-2 sm:space-y-3 z-50\">\n      {/* Emergency/AI Triage Button */}\n      {renderTriageButton()}\n\n      {/* Main FAB with expandable menu */}\n      <div className=\"relative\">\n        <FloatingActionButton\n          onClick={() => onToggleMobileMenu(!showMobileMenu)}\n          className=\"bg-gray-800 hover:bg-gray-900 text-white lg:hidden\"\n          title=\"Quick Actions\"\n        >\n          <svg \n            className={`w-5 h-5 sm:w-6 sm:h-6 transition-transform duration-200 ${showMobileMenu ? 'rotate-45' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </FloatingActionButton>\n\n        {/* Mobile menu items */}\n        {showMobileMenu && (\n          <div className=\"absolute bottom-16 right-0 flex flex-col space-y-2 lg:hidden\">\n            <FloatingActionButton\n              to=\"/marketplace\"\n              className=\"bg-blue-600 hover:bg-blue-700 text-white\"\n              title=\"Browse Services\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </FloatingActionButton>\n            \n            <FloatingActionButton\n              to=\"/favorites\"\n              className=\"bg-pink-600 hover:bg-pink-700 text-white\"\n              title=\"My Favorites\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n              </svg>\n            </FloatingActionButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFloatingActionButton.propTypes = {\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nPetOwnerFloatingActions.propTypes = {\n  canUseAiTriage: PropTypes.func.isRequired,\n  canCreateCaseThisWeek: PropTypes.func.isRequired,\n  userPlan: PropTypes.string.isRequired,\n  getRemainingFreeCasesThisWeek: PropTypes.func.isRequired,\n  onShowExtraCaseModal: PropTypes.func.isRequired,\n  showMobileMenu: PropTypes.bool.isRequired,\n  onToggleMobileMenu: PropTypes.func.isRequired,\n};\n\nexport default PetOwnerFloatingActions;","import React from 'react';\nimport { HealthIcon } from './MinimalIcons';\n\nconst ProfileHeader = ({ \n  profile, \n  user, \n  profilePhotoUrl, \n  pets = [], \n  healthStats = {}, \n  bookings = [],\n  onPhotoUpload\n}) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden relative\">\n      {/* Cover Photo */}\n      <div className=\"h-28 sm:h-32 lg:h-40 bg-white relative border-b border-gray-100\">\n        <div className=\"absolute bottom-3 sm:bottom-4 left-3 sm:left-4 right-3 sm:right-4\">\n          <div className=\"flex items-end space-x-3 sm:space-x-4\">\n            {/* Profile Photo */}\n            <div className=\"relative\">\n              <div className=\"w-16 h-16 sm:w-20 sm:h-20 lg:w-24 lg:h-24 bg-white rounded-full p-1 shadow-lg border border-gray-200\">\n                <div className=\"w-full h-full bg-gray-100 rounded-full flex items-center justify-center overflow-hidden\">\n                  {profilePhotoUrl ? (\n                    <img src={profilePhotoUrl} alt=\"Profile\" className=\"w-full h-full object-cover rounded-full\" />\n                  ) : (\n                    // Show role-specific avatar based on user metadata or profile role\n                    (() => {\n                      const userRole = user?.user_metadata?.user_type || profile?.role;\n                      \n                      if (userRole === 'pet_owner') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/pet-owner.svg\" \n                            alt=\"Pet Owner\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'breeder') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/breeder.svg\" \n                            alt=\"Breeder\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'nutritionist') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/nutritionist.svg\" \n                            alt=\"Nutritionist\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'holistic_care') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/holistic-care.svg\" \n                            alt=\"Holistic Care\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'pet_business') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/PetBusiness.svg\" \n                            alt=\"Pet Business\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'trainer') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/pet-trainer.svg\" \n                            alt=\"Trainer\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'groomer') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/groomer.svg\" \n                            alt=\"Groomer\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'veterinarian') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/vet.svg\" \n                            alt=\"Veterinarian\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else if (userRole === 'vet_nurse') {\n                        return (\n                          <img \n                            src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/vet-nurse%20(1).svg\" \n                            alt=\"Vet Nurse\" \n                            className=\"w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20\"\n                          />\n                        );\n                      } else {\n                        return <span className=\"text-xl sm:text-2xl lg:text-3xl\">👤</span>;\n                      }\n                    })()\n                  )}\n                  </div>\n                </div>\n                {/* Camera Button - Desktop Only, on Avatar */}\n                {onPhotoUpload && (\n                  <>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={onPhotoUpload}\n                      className=\"hidden\"\n                      id=\"profile-photo-upload-header\"\n                    />\n                    <label\n                      htmlFor=\"profile-photo-upload-header\"\n                      className=\"hidden sm:flex absolute bottom-0 right-0 w-6 h-6 bg-[#5EB47C] rounded-full items-center justify-center text-white text-xs shadow-lg hover:bg-[#4A9A64] transition-colors cursor-pointer border border-white\"\n                    >\n                      <HealthIcon type=\"camera\" className=\"w-3 h-3\" color=\"white\" />\n                    </label>\n                  </>\n                )}\n              </div>\n              \n              {/* Profile Info */}\n              <div className=\"flex-1 text-gray-800 pb-1 sm:pb-2\">\n                <h1 className=\"text-lg sm:text-xl lg:text-2xl font-bold\">\n                  {profile?.full_name?.split(' ')[0] || user?.email?.split('@')[0] || 'Pet Parent'}\n                </h1>\n                <p className=\"text-gray-600 text-xs sm:text-sm\">\n                  Loving parent to {pets.length} amazing pet{pets.length !== 1 ? 's' : ''}\n                </p>\n              </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Profile Stats Bar */}\n      <div className=\"px-4 sm:px-6 py-3 sm:py-4 bg-white border-t\">\n        <div className=\"flex items-center justify-between text-center\">\n          <div className=\"flex-1\">\n            <div className=\"text-base sm:text-lg font-bold text-gray-900\">{pets.length}</div>\n            <div className=\"text-xs text-gray-500\">Pets</div>\n          </div>\n          <div className=\"w-px h-6 sm:h-8 bg-gray-300\"></div>\n          <div className=\"flex-1\">\n            <div className=\"text-base sm:text-lg font-bold text-green-600\">{healthStats.healthPercentage || 0}%</div>\n            <div className=\"text-xs text-gray-500\">Health</div>\n          </div>\n          <div className=\"w-px h-6 sm:h-8 bg-gray-300\"></div>\n          <div className=\"flex-1\">\n            <div className=\"text-base sm:text-lg font-bold text-blue-600\">{bookings.length}</div>\n            <div className=\"text-xs text-gray-500\">Bookings</div>\n          </div>\n          <div className=\"w-px h-6 sm:h-8 bg-gray-300\"></div>\n          <div className=\"flex-1\">\n            <div className=\"text-base sm:text-lg font-bold text-purple-600\">\n              {pets.reduce((total, pet) => total + (pet.health_records?.length || 0), 0)}\n            </div>\n            <div className=\"text-xs text-gray-500\">Records</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileHeader;","import React, { useState } from 'react';\nimport { PetIcon, HealthIcon } from './MinimalIcons';\n\nconst PetsGallery = ({ \n  pets = [], \n  userPlan = 'free',\n  dismissedPetLimitBanner = false,\n  onAddPet,\n  onEditPet,\n  onDeletePet,\n  onDismissPetLimitBanner,\n  FreemiumLimitBanner // Pass the banner component as prop\n}) => {\n  const [filterType, setFilterType] = useState('all');\n\n  // Search and filter functionality\n  const filteredPets = pets.filter(pet => {\n    if (filterType === 'all') return true;\n    if (filterType === 'dogs') return pet.species === 'dog';\n    if (filterType === 'cats') return pet.species === 'cat';\n    return true;\n  });\n\n  const canAddMorePets = () => {\n    if (userPlan === 'premium') return true;\n    return pets.length < 3; // Free tier limited to 3 pets\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <h2 className=\"text-lg font-bold text-gray-900\">My Pets</h2>\n            <span className=\"inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-[#E5F4F1] text-[#5EB47C]\">\n              {pets.length} pet{pets.length !== 1 ? 's' : ''}\n            </span>\n          </div>\n          <button\n            onClick={onAddPet}\n            className=\"inline-flex items-center px-3 py-1.5 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-all duration-200 text-sm font-medium\"\n          >\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n            </svg>\n            Add Pet\n          </button>\n        </div>\n      </div>\n\n      {/* Instagram-Style Pet Gallery Content */}\n      <div className=\"p-6\">\n        {pets.length > 0 && (\n          <div className=\"mb-6\">\n            {/* Quick Filter Tabs */}\n            <div className=\"flex items-center space-x-1 mb-4 overflow-x-auto pb-2\">\n              <button\n                onClick={() => setFilterType('all')}\n                className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n                  filterType === 'all'\n                    ? 'bg-[#5EB47C] text-white shadow-sm'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                All ({pets.length})\n              </button>\n              <button\n                onClick={() => setFilterType('dogs')}\n                className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n                  filterType === 'dogs'\n                    ? 'bg-[#5EB47C] text-white shadow-sm'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                Dogs\n              </button>\n              <button\n                onClick={() => setFilterType('cats')}\n                className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n                  filterType === 'cats'\n                    ? 'bg-[#5EB47C] text-white shadow-sm'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                Cats\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Instagram-Style Grid */}\n        {filteredPets.length > 0 ? (\n          <div className=\"flex overflow-x-auto scrollbar-hide gap-3 sm:grid sm:grid-cols-3 lg:grid-cols-4 sm:gap-3 pb-2\">\n            {filteredPets.map((pet) => (\n              <div key={pet.id} className=\"group relative aspect-square bg-gray-100 rounded-xl overflow-hidden shadow-sm hover:shadow-lg transition-all duration-200 flex-shrink-0 w-40 sm:w-auto\">\n                {/* Pet Image */}\n                <div className=\"w-full h-full bg-gradient-to-br from-[#E5F4F1] to-[#D1F2EB] flex items-center justify-center\">\n                  {pet.photo_url ? (\n                    <img \n                      src={pet.photo_url} \n                      alt={pet.name}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-200\"\n                    />\n                  ) : (\n                    <div className=\"opacity-80\">\n                      <PetIcon species={pet.species} className=\"w-16 h-16 sm:w-20 sm:h-20\" color=\"#6B7280\" />\n                    </div>\n                  )}\n                </div>\n                \n                {/* Overlay with Pet Info */}\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-all duration-200\">\n                  <div className=\"absolute bottom-0 left-0 right-0 p-3 text-white\">\n                    <h3 className=\"font-bold text-sm truncate\">{pet.name}</h3>\n                    <p className=\"text-xs opacity-90 capitalize\">{pet.breed}</p>\n                  </div>\n                </div>\n                \n                {/* Action Buttons */}\n                <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-all duration-200\">\n                  <div className=\"flex space-x-1\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onEditPet(pet);\n                      }}\n                      className=\"w-8 h-8 bg-white/90 rounded-full flex items-center justify-center shadow-lg hover:bg-white transition-colors\"\n                    >\n                      <HealthIcon type=\"edit\" className=\"w-4 h-4\" color=\"#6B7280\" />\n                    </button>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onDeletePet(pet.id);\n                      }}\n                      className=\"w-8 h-8 bg-white/90 rounded-full flex items-center justify-center shadow-lg hover:bg-white transition-colors\"\n                    >\n                      <HealthIcon type=\"delete\" className=\"w-4 h-4\" color=\"#EF4444\" />\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Health Status Indicator */}\n                <div className=\"absolute top-2 left-2\">\n                  <div className={`w-3 h-3 rounded-full ${\n                    pet.health_status === 'excellent' ? 'bg-green-400' :\n                    pet.health_status === 'good' ? 'bg-yellow-400' :\n                    pet.health_status === 'needs_attention' ? 'bg-red-400' :\n                    'bg-gray-400'\n                  } shadow-sm`}></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : pets.length === 0 ? (\n          <div className=\"text-center py-16\">\n            <div className=\"w-20 h-20 mx-auto mb-6 bg-[#E5F4F1] rounded-full flex items-center justify-center\">\n              <PetIcon species=\"pet\" className=\"w-10 h-10\" color=\"#5EB47C\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Your pet family awaits!</h3>\n            <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\n              Create beautiful memories by adding your first furry, feathered, or scaly companion.\n            </p>\n            <button\n              onClick={onAddPet}\n              className=\"inline-flex items-center px-6 py-3 bg-[#5EB47C] text-white rounded-xl hover:bg-[#4A9A64] transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              Add Your First Pet\n            </button>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n              <HealthIcon type=\"search\" className=\"w-8 h-8\" color=\"#6B7280\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No pets found</h3>\n            <p className=\"text-gray-600 mb-4\">Try adjusting your filter criteria.</p>\n            <button\n              onClick={() => setFilterType('all')}\n              className=\"text-[#5EB47C] hover:text-[#4A9A64] font-medium\"\n            >\n              Show all pets\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Pet Limit Banner */}\n      {userPlan === 'free' && pets.length >= 2 && !dismissedPetLimitBanner && FreemiumLimitBanner && (\n        <div className=\"mt-6 px-5\">\n          <FreemiumLimitBanner\n            feature=\"Pet\"\n            current={pets.length}\n            limit=\"2\"\n            upgradeText=\"Upgrade to Premium for unlimited pets and advanced features.\"\n            onClose={onDismissPetLimitBanner}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PetsGallery;","import React from 'react';\n\nconst HealthAlerts = ({ healthAlerts = [] }) => {\n  if (healthAlerts.length === 0) return null;\n\n  return (\n    <div className=\"mb-6\">\n      <div className={`rounded-xl p-4 ${\n        healthAlerts.some(alert => alert.urgent) \n          ? 'bg-red-50 border border-red-200' \n          : 'bg-yellow-50 border border-yellow-200'\n      }`}>\n        <div className=\"flex items-center mb-2\">\n          <svg \n            className={`w-5 h-5 mr-2 ${\n              healthAlerts.some(alert => alert.urgent) \n                ? 'text-red-600' \n                : 'text-yellow-600'\n            }`} \n            fill=\"currentColor\" \n            viewBox=\"0 0 20 20\"\n          >\n            <path \n              fillRule=\"evenodd\" \n              d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" \n              clipRule=\"evenodd\" \n            />\n          </svg>\n          <h3 className={`font-semibold ${\n            healthAlerts.some(alert => alert.urgent) \n              ? 'text-red-800' \n              : 'text-yellow-800'\n          }`}>\n            Health Alerts\n          </h3>\n        </div>\n        <div className=\"space-y-1\">\n          {healthAlerts.map((alert, index) => (\n            <p \n              key={index} \n              className={`text-sm ${\n                healthAlerts.some(alert => alert.urgent) \n                  ? 'text-red-700' \n                  : 'text-yellow-700'\n              }`}\n            >\n              <strong>{alert.petName}:</strong> {alert.message}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HealthAlerts;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UsageStatus = ({\n  userPlan = 'free',\n  totalSpentOnExtras = 0,\n  pets = [],\n  onShowExtraCaseModal,\n  getRemainingFreeCasesThisWeek,\n  canCreateCaseThisWeek,\n  canUseAiTriage,\n  canAddMorePets\n}) => {\n  if (userPlan !== 'free') return null;\n\n  return (\n    <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-200 p-4 sm:p-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4 space-y-3 sm:space-y-0\">\n        <h3 className=\"text-base sm:text-lg font-semibold text-gray-900\">Your Usage This Week</h3>\n        <div className=\"flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-2\">\n          {totalSpentOnExtras > 0 && (\n            <span className=\"text-xs sm:text-sm bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-center\">\n              ${totalSpentOnExtras.toFixed(2)} spent on extras\n            </span>\n          )}\n          <Link\n            to=\"/pricing\"\n            className=\"bg-gradient-to-r from-[#5EB47C] to-green-600 text-white px-3 sm:px-4 py-2 rounded-lg text-xs sm:text-sm font-medium hover:from-[#4A9A64] hover:to-green-700 transition-all shadow-sm hover:shadow-md text-center\"\n          >\n            Upgrade for Unlimited\n          </Link>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3 sm:gap-4\">\n        {/* Weekly Luni Triage */}\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"font-medium text-gray-900\">Weekly Luni Triage</h4>\n              <p className=\"text-sm text-gray-600\">Free AI consultations</p>\n            </div>\n            <div className=\"text-right\">\n              <div className={`text-2xl font-bold ${canCreateCaseThisWeek() ? 'text-green-600' : 'text-red-600'}`}>\n                {getRemainingFreeCasesThisWeek()}/1\n              </div>\n              <p className=\"text-xs text-gray-500\">remaining this week</p>\n            </div>\n          </div>\n          <div className=\"mt-3 w-full bg-gray-200 rounded-full h-2 overflow-hidden\">\n            <div \n              className={`h-2 rounded-full ${canCreateCaseThisWeek() ? 'bg-green-500' : 'bg-red-500'}`}\n              style={{ \n                width: `${Math.min(100, Math.max(0, ((1 - getRemainingFreeCasesThisWeek()) / 1) * 100))}%` \n              }}\n            />\n          </div>\n          {!canCreateCaseThisWeek() && (\n            <button\n              onClick={onShowExtraCaseModal}\n              className=\"mt-2 w-full text-xs bg-[#5EB47C] text-white py-1 rounded hover:bg-[#4A9A64] transition-colors\"\n            >\n              Buy Extra Luni Triage - $2.99\n            </button>\n          )}\n        </div>\n        \n        {/* Monthly AI Triage */}\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"font-medium text-gray-900\">Monthly AI Sessions</h4>\n              <p className=\"text-sm text-gray-600\">This month's usage</p>\n            </div>\n            <div className=\"text-right\">\n              <div className={`text-2xl font-bold ${canUseAiTriage() ? 'text-green-600' : 'text-red-600'}`}>\n                {Math.max(0, 3 - (3 - (canUseAiTriage() ? 3 : 0)))}/3\n              </div>\n              <p className=\"text-xs text-gray-500\">remaining</p>\n            </div>\n          </div>\n          <div className=\"mt-3 w-full bg-gray-200 rounded-full h-2 overflow-hidden\">\n            <div \n              className={`h-2 rounded-full ${canUseAiTriage() ? 'bg-green-500' : 'bg-red-500'}`}\n              style={{ \n                width: `${Math.min(100, Math.max(0, ((3 - (canUseAiTriage() ? 3 : 0)) / 3) * 100))}%` \n              }}\n            />\n          </div>\n        </div>\n        \n        {/* Pet Slots */}\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"font-medium text-gray-900\">Pet Slots</h4>\n              <p className=\"text-sm text-gray-600\">Maximum pets allowed</p>\n            </div>\n            <div className=\"text-right\">\n              <div className={`text-2xl font-bold ${canAddMorePets() ? 'text-green-600' : 'text-amber-600'}`}>\n                {pets.length}/3\n              </div>\n              <p className=\"text-xs text-gray-500\">pets added</p>\n            </div>\n          </div>\n          <div className=\"mt-3 w-full bg-gray-200 rounded-full h-2 overflow-hidden\">\n            <div \n              className={`h-2 rounded-full ${pets.length < 3 ? 'bg-green-500' : 'bg-amber-500'}`}\n              style={{ width: `${Math.min(100, (pets.length / 3) * 100)}%` }}\n            />\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"mt-4 text-center\">\n        <p className=\"text-xs sm:text-sm text-gray-600\">\n          Limits reset weekly for Luni Triage, monthly for AI sessions. Need more? \n          <button \n            onClick={onShowExtraCaseModal}\n            className=\"text-[#5EB47C] hover:text-[#4A9A64] font-medium ml-1\"\n          >\n            Buy extra Luni Triage for $2.99\n          </button> or \n          <Link to=\"/pricing\" className=\"text-[#5EB47C] hover:text-[#4A9A64] font-medium ml-1\">\n            upgrade to Premium →\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default UsageStatus;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HealthIcon, UIIcon } from './MinimalIcons';\n\nconst BookingsQuickActions = ({ \n  bookings = [], \n  onSetActiveTab \n}) => {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6\">\n      {/* Upcoming Bookings */}\n      <div className=\"bg-white rounded-xl p-4 sm:p-6 border border-gray-200 shadow-sm\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Upcoming Bookings</h3>\n          <span className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${\n            bookings.length > 0 \n              ? 'bg-blue-100 text-blue-800' \n              : 'bg-gray-100 text-gray-600'\n          }`}>\n            {bookings.length === 0 ? 'No Bookings' : `${bookings.length} Booking${bookings.length !== 1 ? 's' : ''}`}\n          </span>\n        </div>\n        {bookings.length > 0 ? (\n          <div className=\"space-y-3\">\n            {bookings.slice(0, 3).map((booking, index) => (\n              <div key={index} className=\"p-3 rounded-lg border-l-4 bg-blue-50 border-blue-400\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-start\">\n                    <HealthIcon type=\"calendar\" className=\"w-5 h-5 mr-3 mt-0.5\" color=\"#6B7280\" />\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{booking.service_name}</p>\n                      <p className=\"text-sm text-gray-600\">{booking.provider_name}</p>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {new Date(booking.consultation_date).toLocaleDateString('en-US', {\n                          weekday: 'short',\n                          month: 'short',\n                          day: 'numeric',\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        })}\n                      </p>\n                    </div>\n                  </div>\n                  <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${\n                    booking.status === 'confirmed' ? 'bg-green-100 text-green-800' :\n                    booking.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {booking.status}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"w-12 h-12 mx-auto mb-3 bg-blue-100 rounded-full flex items-center justify-center\">\n              <HealthIcon type=\"calendar\" className=\"w-6 h-6\" color=\"#3B82F6\" />\n            </div>\n            <p className=\"text-gray-600 mb-4\">No upcoming bookings</p>\n            <Link\n              to=\"/marketplace\"\n              className=\"inline-flex items-center px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-colors text-sm font-medium\"\n            >\n              Book a Service\n            </Link>\n          </div>\n        )}\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white rounded-xl p-4 sm:p-6 border border-gray-200 shadow-sm\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n        <div className=\"space-y-3\">\n          <button\n            onClick={() => onSetActiveTab('health')}\n            className=\"w-full flex items-center p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3\">\n              <HealthIcon type=\"health\" className=\"w-5 h-5\" color=\"#3B82F6\" />\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-900\">Health Records</p>\n              <p className=\"text-sm text-gray-500\">View and manage health data</p>\n            </div>\n          </button>\n          <Link\n            to=\"/marketplace\"\n            className=\"w-full flex items-center p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n              <UIIcon type=\"shopping\" className=\"w-5 h-5\" color=\"#8B5CF6\" />\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-900\">Book Services</p>\n              <p className=\"text-sm text-gray-500\">Find vets and pet services</p>\n            </div>\n          </Link>\n          <Link\n            to=\"/triage\"\n            className=\"w-full flex items-center p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center mr-3\">\n              <HealthIcon type=\"vaccination\" className=\"w-5 h-5\" color=\"#10B981\" />\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-900\">AI Health Triage</p>\n              <p className=\"text-sm text-gray-500\">Get instant health advice</p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingsQuickActions;","import React, { useState, useEffect } from 'react';\nimport healthRecordService from '../services/healthRecordService';\nimport { PetIcon, HealthIcon, UIIcon } from './MinimalIcons';\n\n// Multi-pet health records viewer for dashboard\nconst MultiPetHealthRecordsViewer = ({ pets, userPlan, onEditRecord, onDeleteRecord, onRefresh, onAddRecord, refreshKey = 0 }) => {\n  const [allRecords, setAllRecords] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [selectedPet, setSelectedPet] = useState(null);\n  const [deletingId, setDeletingId] = useState(null);\n  const [expandedRecords, setExpandedRecords] = useState(new Set());\n  const [searchQuery, setSearchQuery] = useState('');\n  const [dateFilter, setDateFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('date_desc');\n  const [openDropdown, setOpenDropdown] = useState(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (openDropdown && !event.target.closest('.custom-dropdown')) {\n        setOpenDropdown(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [openDropdown]);\n\n  const CustomDropdown = ({ value, onChange, options, placeholder, dropdownKey }) => (\n    <div className=\"custom-dropdown relative\">\n      <button\n        type=\"button\"\n        onClick={() => setOpenDropdown(openDropdown === dropdownKey ? null : dropdownKey)}\n        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent bg-white text-left flex items-center justify-between hover:bg-gray-50\"\n      >\n        <span className=\"truncate\">\n          {options.find(opt => opt.value === value)?.label || placeholder}\n        </span>\n        <svg \n          className={`w-4 h-4 text-gray-400 transition-transform ${openDropdown === dropdownKey ? 'rotate-180' : ''}`} \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      {openDropdown === dropdownKey && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\">\n          {options.map((option) => (\n            <button\n              key={option.value}\n              type=\"button\"\n              onClick={() => {\n                onChange(option.value);\n                setOpenDropdown(null);\n              }}\n              className={`w-full px-3 py-2 text-left text-sm hover:bg-gray-50 first:rounded-t-lg last:rounded-b-lg ${\n                value === option.value ? 'bg-[#E5F4F1] text-[#5EB47C]' : 'text-gray-700'\n              }`}\n            >\n              {option.label}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n  const toggleRecordExpansion = (recordId) => {\n    setExpandedRecords(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(recordId)) {\n        newSet.delete(recordId);\n      } else {\n        newSet.add(recordId);\n      }\n      return newSet;\n    });\n  };\n\n  useEffect(() => {\n    if (pets && pets.length > 0) {\n      loadAllHealthRecords();\n    } else {\n      setLoading(false);\n    }\n  }, [pets, refreshKey]);\n\n  const loadAllHealthRecords = async () => {\n    setLoading(true);\n    try {\n      const recordsMap = {};\n      \n      // Load records for each pet\n      await Promise.all(pets.map(async (pet) => {\n        try {\n          const result = await healthRecordService.getHealthRecords(pet.id);\n          recordsMap[pet.id] = {\n            pet: pet,\n            records: result.success ? result.data : [],\n            error: result.success ? null : result.error\n          };\n        } catch (error) {\n          console.error(`Error loading records for ${pet.name}:`, error);\n          recordsMap[pet.id] = {\n            pet: pet,\n            records: [],\n            error: error.message\n          };\n        }\n      }));\n      \n      setAllRecords(recordsMap);\n      \n      // Set \"All Pets\" as default selection\n      setSelectedPet('all');\n      \n    } catch (error) {\n      console.error('Error loading health records:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteRecord = async (recordId) => {\n    if (!window.confirm('Are you sure you want to delete this health record? This action cannot be undone.')) {\n      return;\n    }\n\n    setDeletingId(recordId);\n    try {\n      const result = await healthRecordService.deleteHealthRecord(recordId);\n      if (result.success) {\n        // Refresh the records\n        await loadAllHealthRecords();\n        if (onRefresh) onRefresh();\n        alert('Health record deleted successfully!');\n      } else {\n        alert(`Failed to delete health record: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Error deleting health record:', error);\n      alert(`Error deleting health record: ${error.message}`);\n    } finally {\n      setDeletingId(null);\n    }\n  };\n\n  const handleEditRecord = (record) => {\n    if (onEditRecord) {\n      onEditRecord(record);\n    } else {\n      alert('Edit functionality not implemented yet. Please contact support.');\n    }\n  };\n\n  // const getRecordIcon = (recordType) => {\n  //   const iconComponents = {\n  //     checkup: <HealthIcon type=\"check\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     vaccination: <HealthIcon type=\"vaccination\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     surgery: <UIIcon type=\"surgery\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     emergency: <HealthIcon type=\"emergency\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     dental: <HealthIcon type=\"dental\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     grooming: <UIIcon type=\"scissors\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     lab_work: <HealthIcon type=\"lab\" className=\"w-5 h-5\" color=\"currentColor\" />,\n  //     other: <HealthIcon type=\"records\" className=\"w-5 h-5\" color=\"currentColor\" />\n  //   };\n  //   return iconComponents[recordType] || <HealthIcon type=\"records\" className=\"w-5 h-5\" color=\"currentColor\" />;\n  // };\n\n  // const getRecordColor = (recordType) => {\n  //   const colors = {\n  //     checkup: 'from-blue-50 to-blue-100 border-blue-200',\n  //     vaccination: 'from-green-50 to-green-100 border-green-200',\n  //     surgery: 'from-red-50 to-red-100 border-red-200',\n  //     emergency: 'from-orange-50 to-orange-100 border-orange-200',\n  //     dental: 'from-purple-50 to-purple-100 border-purple-200',\n  //     grooming: 'from-pink-50 to-pink-100 border-pink-200',\n  //     lab_work: 'from-yellow-50 to-yellow-100 border-yellow-200',\n  //     other: 'from-gray-50 to-gray-100 border-gray-200'\n  //   };\n  //   return colors[recordType] || 'from-gray-50 to-gray-100 border-gray-200';\n  // };\n\n  const getRecordBadgeColor = (recordType) => {\n    const colors = {\n      checkup: 'bg-blue-100 text-blue-800',\n      vaccination: 'bg-green-100 text-green-800',\n      surgery: 'bg-red-100 text-red-800',\n      emergency: 'bg-orange-100 text-orange-800',\n      dental: 'bg-purple-100 text-purple-800',\n      grooming: 'bg-pink-100 text-pink-800',\n      lab_work: 'bg-yellow-100 text-yellow-800',\n      other: 'bg-gray-100 text-gray-800'\n    };\n    return colors[recordType] || 'bg-gray-100 text-gray-800';\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // const formatTime = (dateString) => {\n  //   return new Date(dateString).toLocaleTimeString('en-US', {\n  //     hour: '2-digit',\n  //     minute: '2-digit'\n  //   });\n  // };\n\n  if (loading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-10 w-10 border-2 border-[#5EB47C] border-t-transparent mb-4\"></div>\n        <p className=\"text-gray-600 font-medium\">Loading health records...</p>\n        <p className=\"text-sm text-gray-500\">Please wait while we gather your pet's medical history</p>\n      </div>\n    );\n  }\n\n  if (!pets || pets.length === 0) {\n    return (\n      <div className=\"text-center py-16\">\n        <div className=\"w-20 h-20 mx-auto mb-6 bg-[#E5F4F1] rounded-full flex items-center justify-center\">\n          <HealthIcon type=\"health\" className=\"w-10 h-10\" color=\"#5EB47C\" />\n        </div>\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No pets added yet</h3>\n        <p className=\"text-gray-600\">Add your first pet to start tracking health records</p>\n      </div>\n    );\n  }\n\n  const totalRecords = Object.values(allRecords).reduce((sum, item) => sum + item.records.length, 0);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Pet Selection Tabs */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center space-x-1 overflow-x-auto pb-2\">\n          <button\n            onClick={() => setSelectedPet('all')}\n            className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n              selectedPet === 'all'\n                ? 'bg-[#5EB47C] text-white shadow-sm'\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            }`}\n          >\n            All Pets\n          </button>\n          {pets.map((pet) => {\n            // const petRecords = allRecords[pet.id]?.records || [];\n            return (\n              <button\n                key={pet.id}\n                onClick={() => setSelectedPet(pet.id)}\n                className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n                  selectedPet === pet.id\n                    ? 'bg-[#5EB47C] text-white shadow-sm'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                {pet.name}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Search & Filters */}\n      {selectedPet && ((selectedPet === 'all' && totalRecords > 0) || (selectedPet !== 'all' && allRecords[selectedPet] && allRecords[selectedPet].records.length > 0)) && (\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-6\">\n          {/* Search Bar */}\n          <div className=\"flex-1 w-full\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Search health records, procedures, medications...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              />\n            </div>\n          </div>\n\n          {/* Filter Controls */}\n          <div className=\"flex flex-wrap items-center gap-3\">\n            {/* Date Filter */}\n            <CustomDropdown\n              value={dateFilter}\n              onChange={setDateFilter}\n              options={[\n                { value: 'all', label: 'All Time' },\n                { value: 'today', label: 'Today' },\n                { value: 'week', label: 'Past Week' },\n                { value: 'month', label: 'Past Month' },\n                { value: 'year', label: 'Past Year' }\n              ]}\n              placeholder=\"All Time\"\n              dropdownKey=\"date\"\n            />\n\n            {/* Sort By */}\n            <CustomDropdown\n              value={sortBy}\n              onChange={setSortBy}\n              options={[\n                { value: 'date_desc', label: 'Newest First' },\n                { value: 'date_asc', label: 'Oldest First' },\n                { value: 'type', label: 'By Type' },\n                { value: 'cost', label: 'By Cost' }\n              ]}\n              placeholder=\"Newest First\"\n              dropdownKey=\"sort\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Selected Pet's Records */}\n      {selectedPet && (selectedPet === 'all' || allRecords[selectedPet]) && (\n        <div className=\"space-y-4\">\n          {(() => {\n            const currentRecords = selectedPet === 'all' \n              ? Object.values(allRecords).flatMap(item => item.records.map(record => ({...record, petInfo: item.pet})))\n              : allRecords[selectedPet]?.records || [];\n            \n            return currentRecords.length === 0 ? (\n            <div className=\"text-center py-16 bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl border-2 border-dashed border-gray-300\">\n              <div className=\"w-16 h-16 mx-auto mb-6 bg-white rounded-full flex items-center justify-center shadow-sm\">\n                <HealthIcon type=\"records\" className=\"w-8 h-8\" color=\"#6B7280\" />\n              </div>\n              <h4 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                {selectedPet === 'all' ? 'No health records yet' : `No health records yet for ${allRecords[selectedPet].pet.name}`}\n              </h4>\n              <p className=\"text-gray-600 mb-6 max-w-sm mx-auto\">\n                {selectedPet === 'all' \n                  ? 'Start building your pets\\' medical history by adding their first health records.'\n                  : `Start building ${allRecords[selectedPet].pet.name}'s medical history by adding their first health record.`\n                }\n              </p>\n              {selectedPet !== 'all' && (\n                <button \n                  onClick={() => {\n                    if (onAddRecord) {\n                      onAddRecord(allRecords[selectedPet].pet);\n                    }\n                  }}\n                  className=\"inline-flex items-center px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-colors font-medium\"\n                >\n                  <HealthIcon type=\"vaccination\" className=\"w-4 h-4 mr-2\" color=\"white\" />\n                  Add First Record\n                </button>\n              )}\n            </div>\n          ) : (\n            <>\n              {(() => {\n                const filteredRecords = currentRecords\n                  .filter((record) => {\n                    // Search filter\n                    if (searchQuery.trim()) {\n                      const query = searchQuery.toLowerCase();\n                      const matchesSearch = (\n                        record.title?.toLowerCase().includes(query) ||\n                        record.description?.toLowerCase().includes(query) ||\n                        record.record_type?.toLowerCase().includes(query) ||\n                        record.veterinarian_name?.toLowerCase().includes(query) ||\n                        record.clinic_name?.toLowerCase().includes(query) ||\n                        record.notes?.toLowerCase().includes(query) ||\n                        record.medications?.some(med => med.toLowerCase().includes(query))\n                      );\n                      if (!matchesSearch) return false;\n                    }\n\n                    // Date filter\n                    if (dateFilter !== 'all') {\n                      const recordDate = new Date(record.date_performed);\n                      const now = new Date();\n                      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n                      switch (dateFilter) {\n                        case 'today':\n                          if (recordDate < today) return false;\n                          break;\n                        case 'week':\n                          const weekAgo = new Date(today);\n                          weekAgo.setDate(weekAgo.getDate() - 7);\n                          if (recordDate < weekAgo) return false;\n                          break;\n                        case 'month':\n                          const monthAgo = new Date(today);\n                          monthAgo.setMonth(monthAgo.getMonth() - 1);\n                          if (recordDate < monthAgo) return false;\n                          break;\n                        case 'year':\n                          const yearAgo = new Date(today);\n                          yearAgo.setFullYear(yearAgo.getFullYear() - 1);\n                          if (recordDate < yearAgo) return false;\n                          break;\n                        default:\n                          // 'all' case - no filtering needed\n                          break;\n                      }\n                    }\n\n                    return true;\n                  })\n                  .sort((a, b) => {\n                    switch (sortBy) {\n                      case 'date_asc':\n                        return new Date(a.date_performed) - new Date(b.date_performed);\n                      case 'date_desc':\n                        return new Date(b.date_performed) - new Date(a.date_performed);\n                      case 'type':\n                        return a.record_type?.localeCompare(b.record_type) || 0;\n                      case 'cost':\n                        const aCost = parseFloat(a.cost) || 0;\n                        const bCost = parseFloat(b.cost) || 0;\n                        return bCost - aCost;\n                      default:\n                        return new Date(b.date_performed) - new Date(a.date_performed);\n                    }\n                  });\n\n                if (filteredRecords.length === 0 && (searchQuery.trim() || dateFilter !== 'all')) {\n                  return (\n                    <div className=\"text-center py-16 bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl border-2 border-dashed border-gray-300\">\n                      <div className=\"w-16 h-16 mx-auto mb-6 bg-white rounded-full flex items-center justify-center shadow-sm\">\n                        <HealthIcon type=\"search\" className=\"w-8 h-8\" color=\"#6B7280\" />\n                      </div>\n                      <h4 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                        No matching health records found\n                      </h4>\n                      <p className=\"text-gray-600 mb-6 max-w-sm mx-auto\">\n                        Try adjusting your search terms or filters to see more records{selectedPet !== 'all' ? ` for ${allRecords[selectedPet].pet.name}` : ''}.\n                      </p>\n                      <button \n                        onClick={() => {\n                          setSearchQuery('');\n                          setDateFilter('all');\n                        }}\n                        className=\"inline-flex items-center px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-colors font-medium\"\n                      >\n                        Clear Filters\n                      </button>\n                    </div>\n                  );\n                }\n\n                return (\n                  <div className=\"space-y-2\">\n                    {searchQuery.trim() && (\n                      <div className=\"text-sm text-gray-600 mb-4\">\n                        Found {filteredRecords.length} record{filteredRecords.length !== 1 ? 's' : ''} matching \"{searchQuery}\"\n                      </div>\n                    )}\n                    {filteredRecords.map((record) => {\n                  const isExpanded = expandedRecords.has(record.id);\n                  return (\n                    <div key={record.id} className=\"bg-gradient-to-br from-gray-50 to-gray-100 border border-gray-200 rounded-lg shadow-sm transition-all duration-200\">\n                      {/* Compact Row */}\n                      <div\n                        onClick={() => toggleRecordExpansion(record.id)}\n                        className=\"p-3 cursor-pointer hover:shadow-md transition-all duration-200 hover:-translate-y-0.5\"\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          {/* Left: Main Info */}\n                          <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center space-x-2 mb-1\">\n                                <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{record.title}</h3>\n                                <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${getRecordBadgeColor(record.record_type)}`}>\n                                  {record.record_type.replace('_', ' ').toUpperCase()}\n                                </span>\n                              </div>\n                              <div className=\"flex items-center space-x-3 text-xs text-gray-600\">\n                                <span className=\"flex items-center\">\n                                  <HealthIcon type=\"calendar\" className=\"w-3 h-3 mr-1\" color=\"currentColor\" />\n                                  {formatDate(record.date_performed)}\n                                </span>\n                                {selectedPet === 'all' && record.petInfo && (\n                                  <span className=\"flex items-center\">\n                                    <PetIcon species=\"pet\" className=\"w-3 h-3 mr-1\" color=\"currentColor\" />\n                                    {record.petInfo.name}\n                                  </span>\n                                )}\n                                {record.veterinarian_name && (\n                                  <span className=\"flex items-center\">\n                                    <HealthIcon type=\"doctor\" className=\"w-3 h-3 mr-1\" color=\"currentColor\" />\n                                    {record.veterinarian_name}\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Right: Cost & Expand Arrow */}\n                          <div className=\"flex items-center space-x-3 flex-shrink-0\">\n                            {record.cost && (\n                              <div className=\"text-right\">\n                                <div className=\"text-sm font-semibold text-green-700\">${record.cost}</div>\n                              </div>\n                            )}\n                            <div className=\"w-6 h-6 bg-white/60 rounded-full flex items-center justify-center\">\n                              <svg \n                                className={`w-3 h-3 text-gray-600 transition-transform duration-200 ${isExpanded ? 'rotate-90' : ''}`} \n                                fill=\"none\" \n                                stroke=\"currentColor\" \n                                viewBox=\"0 0 24 24\"\n                              >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\n                              </svg>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Expanded Details */}\n                      {isExpanded && (\n                        <div className=\"border-t border-gray-200 p-4 bg-white/50\">\n                          {/* Description */}\n                          <div className=\"mb-4\">\n                            <p className=\"text-sm text-gray-700 leading-relaxed\">{record.description}</p>\n                          </div>\n                          \n                          {/* Additional Details */}\n                          <div className=\"grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 gap-3 mb-4\">\n                            {record.clinic_name && (\n                              <div className=\"flex items-center p-3 bg-white rounded-lg border\">\n                                <div className=\"min-w-0\">\n                                  <div className=\"text-xs text-gray-500 font-medium\">Clinic</div>\n                                  <div className=\"text-sm font-semibold text-gray-900 truncate\">{record.clinic_name}</div>\n                                </div>\n                              </div>\n                            )}\n                            \n                            {record.weight && (\n                              <div className=\"flex items-center p-3 bg-white rounded-lg border\">\n                                <HealthIcon type=\"weight\" className=\"w-5 h-5 mr-2 flex-shrink-0\" color=\"#6B7280\" />\n                                <div>\n                                  <div className=\"text-xs text-gray-500 font-medium\">Weight</div>\n                                  <div className=\"text-sm font-semibold text-gray-900\">{record.weight} lbs</div>\n                                </div>\n                              </div>\n                            )}\n                            \n                            {record.temperature && (\n                              <div className=\"flex items-center p-3 bg-white rounded-lg border\">\n                                <HealthIcon type=\"temperature\" className=\"w-5 h-5 mr-2 flex-shrink-0\" color=\"#6B7280\" />\n                                <div>\n                                  <div className=\"text-xs text-gray-500 font-medium\">Temperature</div>\n                                  <div className=\"text-sm font-semibold text-gray-900\">{record.temperature}°F</div>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n\n                          {/* Documents */}\n                          {record.documents && record.documents.length > 0 && (\n                            <div className=\"mb-4\">\n                              <h5 className=\"text-sm font-semibold text-gray-900 mb-2\">\n                                Documents\n                              </h5>\n                              <div className=\"flex flex-wrap gap-2\">\n                                {record.documents.map((doc, idx) => (\n                                  <a\n                                    key={idx}\n                                    href={doc.url}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"inline-flex items-center max-w-xs px-2 py-1 rounded-full text-xs border border-gray-200 bg-white hover:bg-gray-50 text-gray-700\"\n                                    title={doc.name}\n                                  >\n                                    <span className=\"mr-1\">\n                                      {(doc.type || '').startsWith('image/') ? \n                                        <HealthIcon type=\"image\" className=\"w-4 h-4\" color=\"currentColor\" /> : \n                                        (doc.type === 'application/pdf' ? \n                                          <HealthIcon type=\"document\" className=\"w-4 h-4\" color=\"currentColor\" /> : \n                                          <HealthIcon type=\"attachment\" className=\"w-4 h-4\" color=\"currentColor\" />\n                                        )\n                                      }\n                                    </span>\n                                    <span className=\"truncate\">{doc.name}</span>\n                                  </a>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n\n                          {/* Medications */}\n                          {record.medications && record.medications.length > 0 && (\n                            <div className=\"mb-4\">\n                              <h5 className=\"text-sm font-semibold text-gray-900 mb-2\">\n                                Medications Prescribed\n                              </h5>\n                              <div className=\"flex flex-wrap gap-2\">\n                                {record.medications.map((med, index) => (\n                                  <span key={index} className=\"inline-flex items-center px-3 py-1 bg-white text-gray-700 rounded-full text-sm font-medium border\">\n                                    {med}\n                                  </span>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n\n                          {/* Notes */}\n                          {record.notes && (\n                            <div className=\"mb-4\">\n                              <h5 className=\"text-sm font-semibold text-gray-900 mb-2 flex items-center\">\n                                <UIIcon type=\"write\" className=\"w-4 h-4 mr-2\" color=\"currentColor\" />\n                                Additional Notes\n                              </h5>\n                              <div className=\"p-3 bg-white rounded-lg border\">\n                                <p className=\"text-sm text-gray-700 leading-relaxed\">{record.notes}</p>\n                              </div>\n                            </div>\n                          )}\n\n                          {/* Action Buttons */}\n                          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0 pt-3 border-t border-gray-200\">\n                            <div className=\"text-xs text-gray-500\">\n                              Added {new Date(record.created_at).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'short',\n                                day: 'numeric'\n                              })}\n                            </div>\n                            <div className=\"flex space-x-2\">\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleEditRecord(record);\n                                }}\n                                className=\"flex-1 sm:flex-none inline-flex items-center justify-center px-3 py-1.5 bg-white hover:bg-gray-50 text-gray-700 hover:text-gray-900 rounded-lg transition-all duration-200 text-sm font-medium border hover:shadow-sm\"\n                              >\n                                Edit\n                              </button>\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleDeleteRecord(record.id);\n                                }}\n                                disabled={deletingId === record.id}\n                                className=\"flex-1 sm:flex-none inline-flex items-center justify-center px-3 py-1.5 bg-red-100 hover:bg-red-200 text-red-700 hover:text-red-800 rounded-lg transition-all duration-200 text-sm font-medium disabled:opacity-50\"\n                              >\n                                {deletingId === record.id ? (\n                                  <>\n                                    <div className=\"animate-spin rounded-full h-3 w-3 border border-red-600 border-t-transparent mr-1\"></div>\n                                    <span className=\"hidden sm:inline\">Deleting...</span>\n                                    <span className=\"sm:hidden\">...</span>\n                                  </>\n                                ) : (\n                                  <>\n                                    <span className=\"hidden sm:inline\">Delete</span>\n                                    <span className=\"sm:hidden\">Del</span>\n                                  </>\n                                )}\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    );\n                  })}\n                  </div>\n                );\n              })()}\n            </>\n          );\n        })()}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Single-pet health records viewer (keeping for backward compatibility)\nconst SinglePetHealthRecordsViewer = ({ petId, petName }) => {\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (petId) {\n      loadHealthRecords();\n    } else {\n      setLoading(false);\n    }\n  }, [petId]);\n\n  const loadHealthRecords = async () => {\n    setLoading(true);\n    try {\n      const result = await healthRecordService.getHealthRecords(petId);\n      if (result.success) {\n        setRecords(result.data);\n      }\n    } catch (error) {\n      console.error('Error loading health records:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center py-4\">Loading health records...</div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Health Records for {petName}</h3>\n      {records.length === 0 ? (\n        <p className=\"text-gray-600\">No health records yet.</p>\n      ) : (\n        <div className=\"space-y-2\">\n          {records.map((record) => (\n            <div key={record.id} className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium\">{record.title}</h4>\n              <p className=\"text-sm text-gray-600\">{record.description}</p>\n              <p className=\"text-xs text-gray-500\">\n                {new Date(record.date_performed).toLocaleDateString()}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Main component that decides which viewer to use\nconst HealthRecordsViewer = ({ petId, petName, pets, userPlan, onEditRecord, onDeleteRecord, onRefresh, onAddRecord, refreshKey }) => {\n  // Always call hooks at the top level - no conditional hook calls\n  const [shouldUseSingleViewer] = useState(!pets && petId);\n  \n  // If pets array is provided, use the multi-pet viewer\n  if (pets) {\n    return (\n      <MultiPetHealthRecordsViewer \n        pets={pets} \n        userPlan={userPlan} \n        onEditRecord={onEditRecord}\n        onDeleteRecord={onDeleteRecord}\n        onRefresh={onRefresh}\n        onAddRecord={onAddRecord}\n        refreshKey={refreshKey}\n      />\n    );\n  }\n  \n  // If petId is provided but no pets array, use single-pet viewer\n  if (shouldUseSingleViewer) {\n    return <SinglePetHealthRecordsViewer petId={petId} petName={petName} />;\n  }\n  \n  // Fallback\n  return (\n    <div className=\"text-center py-8\">\n      <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n        <HealthIcon type=\"health\" className=\"w-8 h-8\" color=\"#6B7280\" />\n      </div>\n      <p className=\"text-gray-600\">No pet data provided</p>\n    </div>\n  );\n};\n\nexport default HealthRecordsViewer;","import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport caseHistoryService from '../services/caseHistoryService';\nimport { PetIcon, HealthIcon, UIIcon } from './MinimalIcons';\n\nconst CaseHistoryViewer = ({ pets, userId }) => {\n  const [soapNotes, setSoapNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPet, setSelectedPet] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [severityFilter, setSeverityFilter] = useState('all');\n  const [dateFilter, setDateFilter] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(15);\n  const [selectedSoapNote, setSelectedSoapNote] = useState(null);\n  const [showSoapModal, setShowSoapModal] = useState(false);\n  const [sortBy, setSortBy] = useState('date_desc');\n  const [openDropdown, setOpenDropdown] = useState(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (openDropdown && !event.target.closest('.custom-dropdown')) {\n        setOpenDropdown(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [openDropdown]);\n\n  const CustomDropdown = ({ value, onChange, options, placeholder, dropdownKey }) => (\n    <div className=\"custom-dropdown relative\">\n      <button\n        type=\"button\"\n        onClick={() => setOpenDropdown(openDropdown === dropdownKey ? null : dropdownKey)}\n        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent bg-white text-left flex items-center justify-between hover:bg-gray-50\"\n      >\n        <span className=\"truncate\">\n          {options.find(opt => opt.value === value)?.label || placeholder}\n        </span>\n        <svg \n          className={`w-4 h-4 text-gray-400 transition-transform ${openDropdown === dropdownKey ? 'rotate-180' : ''}`} \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      {openDropdown === dropdownKey && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\">\n          {options.map((option) => (\n            <button\n              key={option.value}\n              type=\"button\"\n              onClick={() => {\n                onChange(option.value);\n                setOpenDropdown(null);\n              }}\n              className={`w-full px-3 py-2 text-left text-sm hover:bg-gray-50 first:rounded-t-lg last:rounded-b-lg ${\n                value === option.value ? 'bg-[#E5F4F1] text-[#5EB47C]' : 'text-gray-700'\n              }`}\n            >\n              {option.label}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n  useEffect(() => {\n    if (userId) {\n      loadSoapNotes();\n    }\n  }, [userId]);\n\n  const loadSoapNotes = async () => {\n    setLoading(true);\n    try {\n      const soapResult = await caseHistoryService.getUserSoapNotes(userId);\n      if (soapResult.success) {\n        setSoapNotes(soapResult.data);\n      }\n    } catch (error) {\n      console.error('Error loading SOAP notes:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSeverityConfig = (severity) => {\n    const configs = {\n      low: { color: 'from-green-50 to-green-100 border-green-200', icon: <HealthIcon type=\"check\" className=\"w-4 h-4\" color=\"#10B981\" />, badge: 'bg-green-100 text-green-800' },\n      moderate: { color: 'from-blue-50 to-blue-100 border-blue-200', icon: <HealthIcon type=\"warning\" className=\"w-4 h-4\" color=\"#3B82F6\" />, badge: 'bg-blue-100 text-blue-800' },\n      high: { color: 'from-orange-50 to-orange-100 border-orange-200', icon: <HealthIcon type=\"warning\" className=\"w-4 h-4\" color=\"#F59E0B\" />, badge: 'bg-orange-100 text-orange-800' },\n      urgent: { color: 'from-red-50 to-red-100 border-red-200', icon: <HealthIcon type=\"emergency\" className=\"w-4 h-4\" color=\"#EF4444\" />, badge: 'bg-red-100 text-red-800' }\n    };\n    return configs[severity] || configs.moderate;\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const formatDateTime = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getDateFilterOptions = () => {\n    const now = new Date();\n    return {\n      all: () => true,\n      today: (date) => new Date(date).toDateString() === now.toDateString(),\n      week: (date) => {\n        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        return new Date(date) >= weekAgo;\n      },\n      month: (date) => {\n        const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n        return new Date(date) >= monthAgo;\n      },\n      year: (date) => {\n        const yearAgo = new Date(now.getTime() - 365 * 24 * 60 * 60 * 1000);\n        return new Date(date) >= yearAgo;\n      }\n    };\n  };\n\n  const filteredAndSortedData = useMemo(() => {\n    let filtered = soapNotes.map(item => ({ \n      ...item, \n      searchText: `${item.title} ${item.subjective} ${item.objective} ${item.assessment} ${item.plan}` \n    }));\n\n    // Pet filter\n    if (selectedPet !== 'all') {\n      filtered = filtered.filter(item => item.pet_id === selectedPet);\n    }\n\n    // Search filter\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(item => \n        item.searchText?.toLowerCase().includes(query) ||\n        item.vet_name?.toLowerCase().includes(query) ||\n        item.clinic_name?.toLowerCase().includes(query)\n      );\n    }\n\n    // Severity filter\n    if (severityFilter !== 'all') {\n      filtered = filtered.filter(item => item.severity === severityFilter);\n    }\n\n    // Date filter\n    const dateFilterFn = getDateFilterOptions()[dateFilter];\n    if (dateFilterFn) {\n      filtered = filtered.filter(item => dateFilterFn(item.created_at));\n    }\n\n    // Sort\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'date_desc':\n          return new Date(b.created_at) - new Date(a.created_at);\n        case 'date_asc':\n          return new Date(a.created_at) - new Date(b.created_at);\n        case 'severity':\n          const severityOrder = { urgent: 4, high: 3, moderate: 2, low: 1 };\n          return (severityOrder[b.severity] || 2) - (severityOrder[a.severity] || 2);\n        case 'pet':\n          const petA = pets.find(p => p.id === a.pet_id)?.name || '';\n          const petB = pets.find(p => p.id === b.pet_id)?.name || '';\n          return petA.localeCompare(petB);\n        default:\n          return new Date(b.created_at) - new Date(a.created_at);\n      }\n    });\n\n    return filtered;\n  }, [soapNotes, selectedPet, searchQuery, severityFilter, dateFilter, sortBy, pets]);\n\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    return filteredAndSortedData.slice(startIndex, startIndex + itemsPerPage);\n  }, [filteredAndSortedData, currentPage, itemsPerPage]);\n\n  const totalPages = Math.ceil(filteredAndSortedData.length / itemsPerPage);\n\n  const openSoapModal = (soapNote) => {\n    setSelectedSoapNote(soapNote);\n    setShowSoapModal(true);\n  };\n\n  const closeSoapModal = () => {\n    setSelectedSoapNote(null);\n    setShowSoapModal(false);\n  };\n\n  // const getSOAPPreview = (note) => {\n  //   // Get first available section as preview\n  //   const sections = ['subjective', 'objective', 'assessment', 'plan'];\n  //   for (const section of sections) {\n  //     if (note[section]) {\n  //       const text = note[section];\n  //       return text.length > 120 ? text.substring(0, 120) + '...' : text;\n  //     }\n  //   }\n  //   return 'No content available';\n  // };\n\n  const renderSOAPModal = () => {\n    if (!selectedSoapNote || !showSoapModal) return null;\n\n    const note = selectedSoapNote;\n    const pet = pets.find(p => p.id === note.pet_id);\n    const severityConfig = getSeverityConfig(note.severity);\n\n    const sections = [\n      { key: 'subjective', title: 'SUBJECTIVE', icon: <UIIcon type=\"write\" className=\"w-4 h-4\" color=\"currentColor\" />, color: 'blue' },\n      { key: 'objective', title: 'OBJECTIVE', icon: <HealthIcon type=\"search\" className=\"w-4 h-4\" color=\"currentColor\" />, color: 'green' },\n      { key: 'assessment', title: 'ASSESSMENT', icon: <HealthIcon type=\"target\" className=\"w-4 h-4\" color=\"currentColor\" />, color: 'orange' },\n      { key: 'plan', title: 'PLAN', icon: <HealthIcon type=\"records\" className=\"w-4 h-4\" color=\"currentColor\" />, color: 'purple' }\n    ];\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n          {/* Modal Header */}\n          <div className={`px-6 py-4 bg-gradient-to-r ${severityConfig.color} border-b border-gray-200`}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center shadow-sm\">\n                  <HealthIcon type=\"health\" className=\"w-6 h-6\" color=\"#6B7280\" />\n                </div>\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-900\">{note.title}</h2>\n                  <div className=\"flex items-center space-x-3 mt-1\">\n                    {pet && (\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-white/80 text-gray-700\">\n                        <span className=\"mr-1\">\n                          <PetIcon species={pet.species} className=\"w-3 h-3\" color=\"currentColor\" />\n                        </span>\n                        {pet.name}\n                      </span>\n                    )}\n                    <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold ${severityConfig.badge}`}>\n                      SOAP NOTE\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={closeSoapModal}\n                className=\"w-10 h-10 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center transition-colors\"\n              >\n                <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          {/* Modal Content */}\n          <div className=\"p-6\">\n            {/* Meta Information */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n              <div className=\"flex items-center p-3 bg-gray-50 rounded-lg\">\n                <HealthIcon type=\"calendar\" className=\"w-5 h-5 mr-3 flex-shrink-0\" color=\"#6B7280\" />\n                <div>\n                  <div className=\"text-xs text-gray-500 font-medium\">Date</div>\n                  <div className=\"text-sm font-semibold text-gray-900\">{formatDateTime(note.created_at)}</div>\n                </div>\n              </div>\n              \n              {note.vet_name && (\n                <div className=\"flex items-center p-3 bg-gray-50 rounded-lg\">\n                  <HealthIcon type=\"doctor\" className=\"w-5 h-5 mr-3 flex-shrink-0\" color=\"#6B7280\" />\n                  <div>\n                    <div className=\"text-xs text-gray-500 font-medium\">Veterinarian</div>\n                    <div className=\"text-sm font-semibold text-gray-900\">{note.vet_name}</div>\n                  </div>\n                </div>\n              )}\n              \n              {note.clinic_name && (\n                <div className=\"flex items-center p-3 bg-gray-50 rounded-lg\">\n                  <HealthIcon type=\"health\" className=\"w-5 h-5 mr-3 flex-shrink-0\" color=\"#6B7280\" />\n                  <div>\n                    <div className=\"text-xs text-gray-500 font-medium\">Clinic</div>\n                    <div className=\"text-sm font-semibold text-gray-900\">{note.clinic_name}</div>\n                  </div>\n                </div>\n              )}\n\n              {note.cost && (\n                <div className=\"flex items-center p-3 bg-green-50 rounded-lg\">\n                  <UIIcon type=\"money\" className=\"w-5 h-5 mr-3 flex-shrink-0\" color=\"#10B981\" />\n                  <div>\n                    <div className=\"text-xs text-green-600 font-medium\">Total Cost</div>\n                    <div className=\"text-lg font-bold text-green-700\">${note.cost}</div>\n                  </div>\n                </div>\n              )}\n\n              {note.source && (\n                <div className=\"flex items-center p-3 bg-blue-50 rounded-lg\">\n                  <span className=\"mr-3 flex-shrink-0\">\n                    {note.source === 'luni_triage' ? \n                      <HealthIcon type=\"vaccination\" className=\"w-5 h-5\" color=\"#3B82F6\" /> : \n                      <UIIcon type=\"write\" className=\"w-5 h-5\" color=\"#3B82F6\" />\n                    }\n                  </span>\n                  <div>\n                    <div className=\"text-xs text-blue-600 font-medium\">Source</div>\n                    <div className=\"text-sm font-semibold text-blue-700\">\n                      {note.source === 'luni_triage' ? 'Luni Triage' : 'Manual Entry'}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* SOAP Sections */}\n            <div className=\"space-y-6\">\n              {sections.map(section => {\n                if (!note[section.key]) return null;\n                \n                return (\n                  <div key={section.key} className=\"bg-gray-50 rounded-xl p-6 border border-gray-200\">\n                    <div className=\"flex items-center mb-4\">\n                      <span className=\"text-2xl mr-3\">{section.icon}</span>\n                      <h3 className={`text-lg font-bold text-${section.color}-800 uppercase tracking-wide`}>\n                        {section.title}\n                      </h3>\n                    </div>\n                    <div className=\"prose prose-sm max-w-none text-gray-700 leading-relaxed whitespace-pre-wrap\">\n                      {note[section.key]}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Follow-up Information */}\n            {note.follow_up_date && (\n              <div className=\"mt-6 p-4 bg-orange-50 border-l-4 border-orange-400 rounded-r-lg\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-orange-500 text-lg\">⏰</span>\n                  <span className=\"font-medium text-orange-800\">Follow-up Scheduled:</span>\n                  <span className=\"text-orange-700 font-semibold\">{formatDateTime(note.follow_up_date)}</span>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-16\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-2 border-[#5EB47C] border-t-transparent mb-4\"></div>\n        <p className=\"text-gray-600 font-medium\">Loading SOAP notes...</p>\n        <p className=\"text-sm text-gray-500\">Gathering your pet's medical records</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Modern Stats */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">        \n        {/* Stats Grid */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4\">\n            <div className=\"text-center p-3 sm:p-4 bg-green-50 rounded-xl border border-green-100\">\n              <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3\">\n                <HealthIcon type=\"health\" className=\"w-6 h-6\" color=\"#10B981\" />\n              </div>\n              <div className=\"text-xl sm:text-2xl font-bold text-green-600 mb-1\">{soapNotes.length}</div>\n              <div className=\"text-xs text-green-700 font-medium\">Total SOAP Notes</div>\n            </div>\n            \n            <div className=\"text-center p-3 sm:p-4 bg-blue-50 rounded-xl border border-blue-100\">\n              <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3\">\n                <HealthIcon type=\"vaccination\" className=\"w-6 h-6\" color=\"#3B82F6\" />\n              </div>\n              <div className=\"text-xl sm:text-2xl font-bold text-blue-600 mb-1\">\n                {soapNotes.filter(note => note.source === 'luni_triage').length}\n              </div>\n              <div className=\"text-xs text-blue-700 font-medium\">Luni Triage</div>\n            </div>\n            \n            <div className=\"text-center p-3 sm:p-4 bg-red-50 rounded-xl border border-red-100\">\n              <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3\">\n                <HealthIcon type=\"emergency\" className=\"w-6 h-6\" color=\"#EF4444\" />\n              </div>\n              <div className=\"text-xl sm:text-2xl font-bold text-red-600 mb-1\">\n                {soapNotes.filter(note => note.severity === 'urgent' || note.severity === 'high').length}\n              </div>\n              <div className=\"text-xs text-red-700 font-medium\">Urgent Cases</div>\n            </div>\n            \n            <div className=\"text-center p-3 sm:p-4 bg-purple-50 rounded-xl border border-purple-100\">\n              <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3\">\n                <PetIcon species=\"pet\" className=\"w-6 h-6\" color=\"#8B5CF6\" />\n              </div>\n              <div className=\"text-xl sm:text-2xl font-bold text-purple-600 mb-1\">{pets.length}</div>\n              <div className=\"text-xs text-purple-700 font-medium\">Pets Tracked</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* SOAP Records Container - Updated Layout */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-lg font-bold text-gray-900\">SOAP Records</h2>\n            <p className=\"text-gray-600 text-sm mb-4\">Medical records from Luni Triage assessments</p>\n          </div>\n        </div>\n        \n        {/* Full-width divider line */}\n        <div className=\"-mx-6 border-t border-gray-200 mb-6\"></div>\n        \n        {/* Pet Selection Pills */}\n        <div className=\"flex items-center space-x-1 overflow-x-auto pb-2 mb-6\">\n          <button\n            onClick={() => {\n              setSelectedPet('all');\n              setCurrentPage(1);\n            }}\n            className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n              selectedPet === 'all'\n                ? 'bg-[#5EB47C] text-white shadow-sm'\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            }`}\n          >\n            All Pets\n          </button>\n          {pets.map(pet => (\n            <button\n              key={pet.id}\n              onClick={() => {\n                setSelectedPet(pet.id);\n                setCurrentPage(1);\n              }}\n              className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-all ${\n                selectedPet === pet.id\n                  ? 'bg-[#5EB47C] text-white shadow-sm'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              {pet.name}\n            </button>\n          ))}\n        </div>\n\n        {/* Search & Filters */}\n        <div>\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n            {/* Search Bar */}\n            <div className=\"flex-1 w-full\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search SOAP notes, symptoms, treatments...\"\n                  value={searchQuery}\n                  onChange={(e) => {\n                    setSearchQuery(e.target.value);\n                    setCurrentPage(1);\n                  }}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            {/* Filter Controls */}\n            <div className=\"flex flex-wrap items-center gap-3\">\n\n              {/* Severity Filter */}\n              <CustomDropdown\n                value={severityFilter}\n                onChange={(value) => {\n                  setSeverityFilter(value);\n                  setCurrentPage(1);\n                }}\n                options={[\n                  { value: 'all', label: 'All Severities' },\n                  { value: 'urgent', label: 'Urgent', icon: <HealthIcon type=\"emergency\" className=\"w-4 h-4\" color=\"currentColor\" /> },\n                  { value: 'high', label: 'High', icon: <HealthIcon type=\"warning\" className=\"w-4 h-4\" color=\"currentColor\" /> },\n                  { value: 'moderate', label: 'Moderate', icon: <HealthIcon type=\"warning\" className=\"w-4 h-4\" color=\"currentColor\" /> },\n                  { value: 'low', label: 'Low', icon: <HealthIcon type=\"check\" className=\"w-4 h-4\" color=\"currentColor\" /> }\n                ]}\n                placeholder=\"All Severities\"\n                dropdownKey=\"severity\"\n              />\n\n              {/* Date Filter */}\n              <CustomDropdown\n                value={dateFilter}\n                onChange={(value) => {\n                  setDateFilter(value);\n                  setCurrentPage(1);\n                }}\n                options={[\n                  { value: 'all', label: 'All Time' },\n                  { value: 'today', label: 'Today' },\n                  { value: 'week', label: 'Past Week' },\n                  { value: 'month', label: 'Past Month' },\n                  { value: 'year', label: 'Past Year' }\n                ]}\n                placeholder=\"All Time\"\n                dropdownKey=\"date\"\n              />\n\n              {/* Sort By */}\n              <CustomDropdown\n                value={sortBy}\n                onChange={setSortBy}\n                options={[\n                  { value: 'date_desc', label: 'Newest First' },\n                  { value: 'date_asc', label: 'Oldest First' },\n                  { value: 'severity', label: 'By Severity', icon: <HealthIcon type=\"emergency\" className=\"w-4 h-4\" color=\"currentColor\" /> },\n                  { value: 'pet', label: 'By Pet', icon: <PetIcon species=\"pet\" className=\"w-4 h-4\" color=\"currentColor\" /> }\n                ]}\n                placeholder=\"Newest First\"\n                dropdownKey=\"sort\"\n              />\n            </div>\n          </div>\n\n          {/* Results Summary */}\n          {filteredAndSortedData.length > 0 && (\n            <div className=\"mt-4 flex items-center justify-between text-sm text-gray-600\">\n              <div>\n                {searchQuery && `Found ${filteredAndSortedData.length} SOAP note${filteredAndSortedData.length !== 1 ? 's' : ''} matching \"${searchQuery}\"`}\n              </div>\n              <div>\n                Page {currentPage} of {totalPages}\n              </div>\n            </div>\n          )}\n\n          {/* SOAP Notes List - Now underneath search */}\n          <div className=\"mt-6\">\n            {filteredAndSortedData.length === 0 ? (\n              <div className=\"text-center py-16\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {searchQuery ? 'No matching SOAP notes found' : 'No notes yet'}\n                </h3>\n                <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\n                  {searchQuery \n                    ? 'Try adjusting your search terms or filters to find what you\\'re looking for.'\n                    : 'Start using Luni Triage to conduct pet health assessments and generate SOAP notes.'\n                  }\n                </p>\n                {!searchQuery && (\n                  <Link\n                    to=\"/luni-triage\"\n                    className=\"inline-flex items-center px-6 py-3 bg-[#5EB47C] text-white rounded-xl hover:bg-[#4A9A64] transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n                  >\n                    Start Triage Assessment\n                  </Link>\n                )}\n              </div>\n            ) : (\n              <>\n                {/* SOAP Notes List - Compact Design */}\n                <div className=\"space-y-2\">\n                  {paginatedData.map((note) => {\n                    const severityConfig = getSeverityConfig(note.severity);\n                    const pet = pets.find(p => p.id === note.pet_id);\n                    \n                    return (\n                      <div\n                        key={note.id}\n                        onClick={() => openSoapModal(note)}\n                        className=\"bg-gradient-to-br from-gray-50 to-gray-100 border border-gray-200 rounded-lg p-3 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:-translate-y-0.5\"\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          {/* Left: Main Info */}\n                          <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center space-x-2 mb-1\">\n                                <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{note.title}</h3>\n                                <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${severityConfig.badge}`}>\n                                  {note.severity.toUpperCase()}\n                                </span>\n                              </div>\n                              <div className=\"flex items-center space-x-3 text-xs text-gray-600\">\n                                <span className=\"flex items-center\">\n                                  <HealthIcon type=\"calendar\" className=\"w-3 h-3 mr-1\" color=\"currentColor\" />\n                                  {formatDate(note.created_at)}\n                                </span>\n                                {pet && (\n                                  <span className=\"flex items-center\">\n                                    <PetIcon species={pet.species} className=\"w-3 h-3 mr-1\" color=\"currentColor\" />\n                                    {pet.name}\n                                  </span>\n                                )}\n                                {note.source === 'luni_triage' && (\n                                  <span className=\"text-blue-600 flex items-center\">\n                                    <HealthIcon type=\"vaccination\" className=\"w-3 h-3 mr-1\" color=\"currentColor\" />\n                                    Luni Triage\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Right: Cost & Arrow */}\n                          <div className=\"flex items-center space-x-3 flex-shrink-0\">\n                            {note.cost && (\n                              <div className=\"text-right\">\n                                <div className=\"text-sm font-semibold text-green-700\">${note.cost}</div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Pagination */}\n                {totalPages > 1 && (\n                  <div className=\"mt-8 flex items-center justify-between\">\n                    <div className=\"text-sm text-gray-600\">\n                      Showing {((currentPage - 1) * itemsPerPage) + 1} to {Math.min(currentPage * itemsPerPage, filteredAndSortedData.length)} of {filteredAndSortedData.length} SOAP notes\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                        disabled={currentPage === 1}\n                        className=\"px-3 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        Previous\n                      </button>\n                      \n                      <div className=\"flex items-center space-x-1\">\n                        {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                          let pageNum;\n                          if (totalPages <= 5) {\n                            pageNum = i + 1;\n                          } else if (currentPage <= 3) {\n                            pageNum = i + 1;\n                          } else if (currentPage >= totalPages - 2) {\n                            pageNum = totalPages - 4 + i;\n                          } else {\n                            pageNum = currentPage - 2 + i;\n                          }\n                          \n                          return (\n                            <button\n                              key={pageNum}\n                              onClick={() => setCurrentPage(pageNum)}\n                              className={`px-3 py-2 rounded-lg text-sm font-medium ${\n                                currentPage === pageNum\n                                  ? 'bg-[#5EB47C] text-white'\n                                  : 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50'\n                              }`}\n                            >\n                              {pageNum}\n                            </button>\n                          );\n                        })}\n                      </div>\n                      \n                      <button\n                        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                        disabled={currentPage === totalPages}\n                        className=\"px-3 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* SOAP Note Modal */}\n      {renderSOAPModal()}\n    </div>\n  );\n};\n\nexport default CaseHistoryViewer;","import React, { useState, useRef } from 'react';\nimport healthRecordService from '../services/healthRecordService';\nimport { HealthIcon, UIIcon } from './MinimalIcons';\n\nconst AddHealthRecordForm = ({ petId, petName, onClose, onSuccess }) => {\n  const [formData, setFormData] = useState({\n    record_type: 'checkup',\n    title: '',\n    description: '',\n    vet_name: '',\n    clinic_name: '',\n    date_performed: new Date().toISOString().split('T')[0],\n    next_due_date: '',\n    cost: '',\n    notes: ''\n  });\n  \n  const [documents, setDocuments] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef(null);\n\n  const recordTypes = [\n    { value: 'checkup', label: 'Regular Checkup', icon: <HealthIcon type=\"check\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'vaccination', label: 'Vaccination', icon: <HealthIcon type=\"vaccination\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'surgery', label: 'Surgery', icon: <UIIcon type=\"surgery\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'emergency', label: 'Emergency Visit', icon: <HealthIcon type=\"emergency\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'dental', label: 'Dental Care', icon: <UIIcon type=\"dental\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'grooming', label: 'Grooming', icon: <UIIcon type=\"scissors\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'lab_work', label: 'Lab Work', icon: <UIIcon type=\"lab\" className=\"w-5 h-5\" color=\"currentColor\" /> },\n    { value: 'other', label: 'Other', icon: <HealthIcon type=\"records\" className=\"w-5 h-5\" color=\"currentColor\" /> }\n  ];\n\n  // Dynamic field configurations based on record type\n  const getFieldConfig = (recordType) => {\n    const configs = {\n      grooming: {\n        professionalLabel: 'Groomer Name',\n        professionalPlaceholder: 'e.g., Sarah Smith',\n        businessLabel: 'Salon/Shop Name',\n        businessPlaceholder: 'e.g., Pampered Paws Grooming',\n        titlePlaceholder: 'e.g., Full Grooming Service, Nail Trim',\n        descriptionPlaceholder: 'Describe the grooming services performed...',\n        nextDueDateLabel: 'Next Grooming Due',\n        showNextDueDate: true\n      },\n      checkup: {\n        professionalLabel: 'Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Clinic/Hospital Name',\n        businessPlaceholder: 'e.g., Pet Care Clinic',\n        titlePlaceholder: 'e.g., Annual Checkup, Wellness Exam',\n        descriptionPlaceholder: 'Describe the examination findings and recommendations...',\n        nextDueDateLabel: 'Next Checkup Due',\n        showNextDueDate: true\n      },\n      vaccination: {\n        professionalLabel: 'Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Clinic/Hospital Name',\n        businessPlaceholder: 'e.g., Pet Care Clinic',\n        titlePlaceholder: 'e.g., Rabies Vaccination, DHPP Booster',\n        descriptionPlaceholder: 'Specify vaccine type, batch number, and any reactions...',\n        nextDueDateLabel: 'Next Vaccination Due',\n        showNextDueDate: true\n      },\n      surgery: {\n        professionalLabel: 'Surgeon/Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Johnson',\n        businessLabel: 'Hospital/Clinic Name',\n        businessPlaceholder: 'e.g., Animal Surgery Center',\n        titlePlaceholder: 'e.g., Spay Surgery, Tumor Removal',\n        descriptionPlaceholder: 'Describe the surgical procedure and post-op care...',\n        nextDueDateLabel: 'Follow-up Appointment',\n        showNextDueDate: true\n      },\n      emergency: {\n        professionalLabel: 'Attending Veterinarian',\n        professionalPlaceholder: 'e.g., Dr. Emergency',\n        businessLabel: 'Emergency Clinic Name',\n        businessPlaceholder: 'e.g., 24/7 Animal Emergency',\n        titlePlaceholder: 'e.g., Emergency Visit - Injury, Poisoning',\n        descriptionPlaceholder: 'Describe the emergency situation and treatment...',\n        nextDueDateLabel: 'Follow-up Required',\n        showNextDueDate: true\n      },\n      dental: {\n        professionalLabel: 'Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Clinic/Hospital Name',\n        businessPlaceholder: 'e.g., Pet Dental Care',\n        titlePlaceholder: 'e.g., Dental Cleaning, Tooth Extraction',\n        descriptionPlaceholder: 'Describe the dental procedure and findings...',\n        nextDueDateLabel: 'Next Dental Care Due',\n        showNextDueDate: true\n      },\n      lab_work: {\n        professionalLabel: 'Veterinarian/Technician Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Lab/Clinic Name',\n        businessPlaceholder: 'e.g., Pet Diagnostics Lab',\n        titlePlaceholder: 'e.g., Blood Work, Urinalysis, X-Ray',\n        descriptionPlaceholder: 'Describe the tests performed and results...',\n        nextDueDateLabel: 'Next Lab Work Due',\n        showNextDueDate: false\n      },\n      other: {\n        professionalLabel: 'Professional Name',\n        professionalPlaceholder: 'e.g., Professional Name',\n        businessLabel: 'Business/Facility Name',\n        businessPlaceholder: 'e.g., Business Name',\n        titlePlaceholder: 'e.g., Treatment or Service Name',\n        descriptionPlaceholder: 'Describe the service or treatment...',\n        nextDueDateLabel: 'Next Appointment/Service',\n        showNextDueDate: false\n      }\n    };\n\n    return configs[recordType] || configs.other;\n  };\n\n  const currentConfig = getFieldConfig(formData.record_type);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError('');\n  };\n\n  const handleFileUpload = async (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n\n    setUploading(true);\n    setError('');\n\n    try {\n      const uploadPromises = files.map(async (file) => {\n        // Validate file type\n        const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\n        if (!allowedTypes.includes(file.type)) {\n          throw new Error(`File ${file.name} is not a supported type. Please upload PDF, JPEG, or PNG files.`);\n        }\n\n        // Validate file size (max 10MB)\n        if (file.size > 10 * 1024 * 1024) {\n          throw new Error(`File ${file.name} is too large. Maximum size is 10MB.`);\n        }\n\n        const result = await healthRecordService.uploadVetReport(petId, file, formData.record_type);\n        if (!result.success) {\n          throw new Error(`Failed to upload ${file.name}: ${result.error}`);\n        }\n\n        return {\n          name: file.name,\n          url: result.publicUrl,\n          filePath: result.filePath,\n          type: file.type,\n          size: file.size\n        };\n      });\n\n      const uploadedFiles = await Promise.all(uploadPromises);\n      setDocuments(prev => [...prev, ...uploadedFiles]);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setError(error.message);\n    } finally {\n      setUploading(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  const removeDocument = async (index) => {\n    const document = documents[index];\n    \n    try {\n      // Delete from storage\n      const result = await healthRecordService.deleteVetReport(document.filePath);\n      if (!result.success) {\n        console.warn('Failed to delete file from storage:', result.error);\n      }\n    } catch (error) {\n      console.warn('Error deleting file:', error);\n    }\n\n    // Remove from local state\n    setDocuments(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      // Validate required fields\n      if (!formData.title.trim()) {\n        throw new Error('Title is required');\n      }\n      if (!formData.date_performed) {\n        throw new Error('Date performed is required');\n      }\n\n      // Prepare health record data\n      const recordData = {\n        ...formData,\n        documents: documents.map(doc => ({\n          name: doc.name,\n          url: doc.url,\n          type: doc.type,\n          size: doc.size\n        }))\n      };\n\n      const result = await healthRecordService.addHealthRecord(petId, recordData);\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to add health record');\n      }\n\n      onSuccess(result.data);\n      onClose();\n    } catch (error) {\n      console.error('Error adding health record:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getFileIcon = (type) => {\n    if (type.startsWith('image/')) return <HealthIcon type=\"image\" className=\"w-4 h-4\" color=\"currentColor\" />;\n    if (type === 'application/pdf') return <HealthIcon type=\"document\" className=\"w-4 h-4\" color=\"currentColor\" />;\n    return <HealthIcon type=\"attachment\" className=\"w-4 h-4\" color=\"currentColor\" />;\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"sticky top-0 bg-white border-b border-gray-200 px-6 py-4 rounded-t-xl\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900 font-montserrat\">Add Health Record</h2>\n              <p className=\"text-sm text-gray-600 mt-1\">Add a new health record for {petName}</p>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\"\n              disabled={loading}\n            >\n              <svg className=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n              <div className=\"flex\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          )}\n\n          {/* Record Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Record Type *</label>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n              {recordTypes.map(type => (\n                <button\n                  key={type.value}\n                  type=\"button\"\n                  onClick={() => handleInputChange({ target: { name: 'record_type', value: type.value } })}\n                  className={`p-3 rounded-lg border-2 transition-all text-center ${\n                    formData.record_type === type.value\n                      ? 'border-[#5EB47C] bg-[#E5F4F1] text-[#5EB47C]'\n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  <div className=\"mb-1 flex justify-center\">{type.icon}</div>\n                  <div className=\"text-xs font-medium\">{type.label}</div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Basic Information */}\n          <div className=\"space-y-4\">\n            {/* Title and Date - Always in a row */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Title *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  value={formData.title}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  placeholder={currentConfig.titlePlaceholder}\n                  required\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"date_performed\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Date Performed *\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"date_performed\"\n                  name=\"date_performed\"\n                  value={formData.date_performed}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Professional and Business Info - Always in a row */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"vet_name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {currentConfig.professionalLabel}\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"vet_name\"\n                  name=\"vet_name\"\n                  value={formData.vet_name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  placeholder={currentConfig.professionalPlaceholder}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"clinic_name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {currentConfig.businessLabel}\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"clinic_name\"\n                  name=\"clinic_name\"\n                  value={formData.clinic_name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  placeholder={currentConfig.businessPlaceholder}\n                />\n              </div>\n            </div>\n\n            {/* Next Due Date and Cost - Conditional layout */}\n            <div className={`grid grid-cols-1 ${currentConfig.showNextDueDate ? 'md:grid-cols-2' : 'md:grid-cols-1'} gap-4`}>\n              {currentConfig.showNextDueDate && (\n                <div>\n                  <label htmlFor=\"next_due_date\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    {currentConfig.nextDueDateLabel}\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"next_due_date\"\n                    name=\"next_due_date\"\n                    value={formData.next_due_date}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  />\n                </div>\n              )}\n\n              <div>\n                <label htmlFor=\"cost\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Cost ($)\n                </label>\n                <input\n                  type=\"number\"\n                  id=\"cost\"\n                  name=\"cost\"\n                  value={formData.cost}\n                  onChange={handleInputChange}\n                  step=\"0.01\"\n                  min=\"0\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  placeholder=\"0.00\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleInputChange}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              placeholder={currentConfig.descriptionPlaceholder}\n            />\n          </div>\n\n          {/* Document Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Vet Reports & Documents\n            </label>\n            \n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6\">\n              <div className=\"text-center\">\n                <svg className=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                  <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                </svg>\n                <div className=\"mt-4\">\n                  <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n                    <span className=\"mt-2 block text-sm font-medium text-gray-900\">\n                      Upload vet reports, lab results, or images\n                    </span>\n                    <span className=\"mt-1 block text-sm text-gray-500\">\n                      PDF, JPEG, PNG up to 10MB each\n                    </span>\n                  </label>\n                  <input\n                    ref={fileInputRef}\n                    id=\"file-upload\"\n                    name=\"file-upload\"\n                    type=\"file\"\n                    multiple\n                    accept=\".pdf,.jpg,.jpeg,.png\"\n                    onChange={handleFileUpload}\n                    className=\"sr-only\"\n                    disabled={uploading}\n                  />\n                </div>\n                <div className=\"mt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => fileInputRef.current?.click()}\n                    disabled={uploading}\n                    className=\"bg-[#5EB47C] text-white px-4 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors disabled:opacity-50\"\n                  >\n                    {uploading ? 'Uploading...' : 'Choose Files'}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Uploaded Documents */}\n            {documents.length > 0 && (\n              <div className=\"mt-4 space-y-2\">\n                <h4 className=\"text-sm font-medium text-gray-700\">Uploaded Documents:</h4>\n                {documents.map((doc, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-lg mr-2\">{getFileIcon(doc.type)}</span>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">{doc.name}</p>\n                        <p className=\"text-xs text-gray-500\">{formatFileSize(doc.size)}</p>\n                      </div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      onClick={() => removeDocument(index)}\n                      className=\"text-red-600 hover:text-red-800 transition-colors\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg>\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Notes */}\n          <div>\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Additional Notes\n            </label>\n            <textarea\n              id=\"notes\"\n              name=\"notes\"\n              value={formData.notes}\n              onChange={handleInputChange}\n              rows={2}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              placeholder=\"Any additional notes or observations...\"\n            />\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex items-center justify-end space-x-3 pt-4 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              disabled={loading || uploading}\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors font-medium disabled:opacity-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading || uploading || !formData.title.trim() || !formData.date_performed}\n              className=\"px-6 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n            >\n              {loading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Adding Record...\n                </>\n              ) : (\n                'Add Health Record'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddHealthRecordForm;","import React, { useState, useRef } from 'react';\nimport healthRecordService from '../services/healthRecordService';\nimport { HealthIcon, UIIcon } from './MinimalIcons';\n\nconst EditHealthRecordForm = ({ record, onClose, onSuccess }) => {\n  const [formData, setFormData] = useState({\n    record_type: record?.record_type || 'checkup',\n    title: record?.title || '',\n    description: record?.description || '',\n    vet_name: record?.vet_name || '',\n    clinic_name: record?.clinic_name || '',\n    date_performed: record?.date_performed ? record.date_performed.split('T')[0] : new Date().toISOString().split('T')[0],\n    next_due_date: record?.next_due_date ? record.next_due_date.split('T')[0] : '',\n    cost: record?.cost || '',\n    notes: record?.notes || ''\n  });\n  \n  const [documents, setDocuments] = useState(record?.documents || []);\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef(null);\n\n  const recordTypes = [\n    { value: 'checkup', label: 'Regular Checkup', icon: <HealthIcon type=\"check\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '⚕️' },\n    { value: 'vaccination', label: 'Vaccination', icon: <HealthIcon type=\"vaccination\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '💉' },\n    { value: 'surgery', label: 'Surgery', icon: <UIIcon type=\"surgery\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '🏥' },\n    { value: 'emergency', label: 'Emergency Visit', icon: <HealthIcon type=\"emergency\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '🚨' },\n    { value: 'dental', label: 'Dental Care', icon: <HealthIcon type=\"dental\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '🦷' },\n    { value: 'grooming', label: 'Grooming', icon: <UIIcon type=\"scissors\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '✂️' },\n    { value: 'lab_work', label: 'Lab Work', icon: <HealthIcon type=\"lab\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '🔬' },\n    { value: 'other', label: 'Other', icon: <HealthIcon type=\"records\" className=\"w-5 h-5\" color=\"currentColor\" />, textIcon: '📋' }\n  ];\n\n  // Dynamic field configurations based on record type\n  const getFieldConfig = (recordType) => {\n    const configs = {\n      grooming: {\n        professionalLabel: 'Groomer Name',\n        professionalPlaceholder: 'e.g., Sarah Smith',\n        businessLabel: 'Salon/Shop Name',\n        businessPlaceholder: 'e.g., Pampered Paws Grooming',\n        titlePlaceholder: 'e.g., Full Grooming Service, Nail Trim',\n        descriptionPlaceholder: 'Describe the grooming services performed...',\n        nextDueDateLabel: 'Next Grooming Due',\n        showNextDueDate: true\n      },\n      checkup: {\n        professionalLabel: 'Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Clinic/Hospital Name',\n        businessPlaceholder: 'e.g., Pet Care Clinic',\n        titlePlaceholder: 'e.g., Annual Checkup, Wellness Exam',\n        descriptionPlaceholder: 'Describe the examination findings and recommendations...',\n        nextDueDateLabel: 'Next Checkup Due',\n        showNextDueDate: true\n      },\n      vaccination: {\n        professionalLabel: 'Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Clinic/Hospital Name',\n        businessPlaceholder: 'e.g., Pet Care Clinic',\n        titlePlaceholder: 'e.g., Rabies Vaccination, DHPP Booster',\n        descriptionPlaceholder: 'Specify vaccine type, batch number, and any reactions...',\n        nextDueDateLabel: 'Next Vaccination Due',\n        showNextDueDate: true\n      },\n      surgery: {\n        professionalLabel: 'Surgeon/Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Johnson',\n        businessLabel: 'Hospital/Clinic Name',\n        businessPlaceholder: 'e.g., Animal Surgery Center',\n        titlePlaceholder: 'e.g., Spay Surgery, Tumor Removal',\n        descriptionPlaceholder: 'Describe the surgical procedure and post-op care...',\n        nextDueDateLabel: 'Follow-up Appointment',\n        showNextDueDate: true\n      },\n      emergency: {\n        professionalLabel: 'Attending Veterinarian',\n        professionalPlaceholder: 'e.g., Dr. Emergency',\n        businessLabel: 'Emergency Clinic Name',\n        businessPlaceholder: 'e.g., 24/7 Animal Emergency',\n        titlePlaceholder: 'e.g., Emergency Visit - Injury, Poisoning',\n        descriptionPlaceholder: 'Describe the emergency situation and treatment...',\n        nextDueDateLabel: 'Follow-up Required',\n        showNextDueDate: true\n      },\n      dental: {\n        professionalLabel: 'Veterinarian Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Clinic/Hospital Name',\n        businessPlaceholder: 'e.g., Pet Dental Care',\n        titlePlaceholder: 'e.g., Dental Cleaning, Tooth Extraction',\n        descriptionPlaceholder: 'Describe the dental procedure and findings...',\n        nextDueDateLabel: 'Next Dental Care Due',\n        showNextDueDate: true\n      },\n      lab_work: {\n        professionalLabel: 'Veterinarian/Technician Name',\n        professionalPlaceholder: 'e.g., Dr. Smith',\n        businessLabel: 'Lab/Clinic Name',\n        businessPlaceholder: 'e.g., Pet Diagnostics Lab',\n        titlePlaceholder: 'e.g., Blood Work, Urinalysis, X-Ray',\n        descriptionPlaceholder: 'Describe the tests performed and results...',\n        nextDueDateLabel: 'Next Lab Work Due',\n        showNextDueDate: false\n      },\n      other: {\n        professionalLabel: 'Professional Name',\n        professionalPlaceholder: 'e.g., Professional Name',\n        businessLabel: 'Business/Facility Name',\n        businessPlaceholder: 'e.g., Business Name',\n        titlePlaceholder: 'e.g., Treatment or Service Name',\n        descriptionPlaceholder: 'Describe the service or treatment...',\n        nextDueDateLabel: 'Next Appointment/Service',\n        showNextDueDate: false\n      }\n    };\n\n    return configs[recordType] || configs.other;\n  };\n\n  const currentConfig = getFieldConfig(formData.record_type);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError('');\n  };\n\n  const handleFileUpload = async (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n\n    setUploading(true);\n    setError('');\n\n    try {\n      const uploadPromises = files.map(async (file) => {\n        // Validate file type\n        const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\n        if (!allowedTypes.includes(file.type)) {\n          throw new Error(`Invalid file type: ${file.type}. Please upload PDF, JPG, or PNG files only.`);\n        }\n\n        // Validate file size (max 10MB)\n        if (file.size > 10 * 1024 * 1024) {\n          throw new Error(`File ${file.name} is too large. Maximum size is 10MB.`);\n        }\n\n        const result = await healthRecordService.uploadVetReport(record.pet_id, file, 'health_record');\n        if (!result.success) {\n          throw new Error(`Failed to upload ${file.name}: ${result.error}`);\n        }\n        return result.data;\n      });\n\n      const uploadedDocs = await Promise.all(uploadPromises);\n      setDocuments(prev => [...prev, ...uploadedDocs]);\n      \n      // Clear file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      setError(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const removeDocument = (index) => {\n    setDocuments(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validation\n    if (!formData.title.trim()) {\n      setError('Title is required');\n      return;\n    }\n    \n    if (!formData.description.trim()) {\n      setError('Description is required');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const recordData = {\n        ...formData,\n        documents: documents,\n        updated_at: new Date().toISOString()\n      };\n\n      const result = await healthRecordService.updateHealthRecord(record.id, recordData);\n      \n      if (result.success) {\n        alert('Health record updated successfully!');\n        if (onSuccess) {\n          onSuccess(result.data);\n        }\n        onClose();\n      } else {\n        setError(`Failed to update health record: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Error updating health record:', error);\n      setError(`Error updating health record: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (window.confirm('Are you sure you want to cancel? Any unsaved changes will be lost.')) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Edit Health Record</h2>\n            <button\n              onClick={handleCancel}\n              className=\"text-gray-400 hover:text-gray-600 text-2xl\"\n            >\n              ×\n            </button>\n          </div>\n\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n              <p className=\"text-red-600 text-sm\">{error}</p>\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {/* Record Type */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Record Type\n              </label>\n              <select\n                name=\"record_type\"\n                value={formData.record_type}\n                onChange={handleInputChange}\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                required\n              >\n                {recordTypes.map(type => (\n                  <option key={type.value} value={type.value}>\n                    {type.textIcon} {type.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Title */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Title *\n              </label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={formData.title}\n                onChange={handleInputChange}\n                placeholder={currentConfig.titlePlaceholder}\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                required\n              />\n            </div>\n\n            {/* Description */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Description *\n              </label>\n              <textarea\n                name=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n                rows={3}\n                placeholder={currentConfig.descriptionPlaceholder}\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                required\n              />\n            </div>\n\n            {/* Vet and Clinic Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {currentConfig.professionalLabel}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"vet_name\"\n                  value={formData.vet_name}\n                  onChange={handleInputChange}\n                  placeholder={currentConfig.professionalPlaceholder}\n                  className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {currentConfig.businessLabel}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"clinic_name\"\n                  value={formData.clinic_name}\n                  onChange={handleInputChange}\n                  placeholder={currentConfig.businessPlaceholder}\n                  className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            {/* Dates */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Date Performed *\n                </label>\n                <input\n                  type=\"date\"\n                  name=\"date_performed\"\n                  value={formData.date_performed}\n                  onChange={handleInputChange}\n                  className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  required\n                />\n              </div>\n              \n              {currentConfig.showNextDueDate && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    {currentConfig.nextDueDateLabel}\n                  </label>\n                  <input\n                    type=\"date\"\n                    name=\"next_due_date\"\n                    value={formData.next_due_date}\n                    onChange={handleInputChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                  />\n                </div>\n              )}\n            </div>\n\n            {/* Cost */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Cost ($)\n              </label>\n              <input\n                type=\"number\"\n                name=\"cost\"\n                value={formData.cost}\n                onChange={handleInputChange}\n                step=\"0.01\"\n                min=\"0\"\n                placeholder=\"0.00\"\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              />\n            </div>\n\n            {/* Notes */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Additional Notes\n              </label>\n              <textarea\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows={3}\n                placeholder=\"Any additional notes or observations...\"\n                className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              />\n            </div>\n\n            {/* Document Upload */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Documents\n              </label>\n              <div className=\"border-2 border-dashed border-gray-300 rounded-md p-4\">\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  multiple\n                  accept=\".pdf,.jpg,.jpeg,.png\"\n                  onChange={handleFileUpload}\n                  className=\"hidden\"\n                />\n                <div className=\"text-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => fileInputRef.current?.click()}\n                    disabled={uploading}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-[#5EB47C] bg-green-50 hover:bg-green-100 disabled:opacity-50\"\n                  >\n                    <HealthIcon type=\"attachment\" className=\"w-4 h-4 mr-2\" color=\"currentColor\" />\n                    {uploading ? 'Uploading...' : 'Add Documents'}\n                  </button>\n                  <p className=\"mt-2 text-xs text-gray-500\">\n                    PDF, JPG, PNG files up to 10MB each\n                  </p>\n                </div>\n              </div>\n\n              {/* Show existing documents */}\n              {documents.length > 0 && (\n                <div className=\"mt-3\">\n                  <p className=\"text-sm font-medium text-gray-700 mb-2\">Uploaded Documents:</p>\n                  <div className=\"space-y-2\">\n                    {documents.map((doc, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                        <div className=\"flex items-center\">\n                          <span className=\"text-sm flex items-center\">\n                            <HealthIcon type=\"document\" className=\"w-4 h-4 mr-1\" color=\"currentColor\" />\n                            {doc.name}\n                          </span>\n                          {doc.url && (\n                            <a\n                              href={doc.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"ml-2 text-xs text-blue-600 hover:text-blue-800\"\n                            >\n                              View\n                            </a>\n                          )}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() => removeDocument(index)}\n                          className=\"text-red-600 hover:text-red-800 text-sm\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Submit Buttons */}\n            <div className=\"flex justify-end space-x-3 pt-6 border-t\">\n              <button\n                type=\"button\"\n                onClick={handleCancel}\n                className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300\"\n                disabled={loading}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={loading || uploading}\n                className=\"px-6 py-2 bg-[#5EB47C] text-white rounded-md hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Updating...' : 'Update Health Record'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditHealthRecordForm;","import React, { useState, useRef } from 'react';\nimport petService from '../services/petService';\n\nconst AddPetForm = ({ onClose, onSuccess, userId, editingPet = null }) => {\n  const [formData, setFormData] = useState({\n    name: editingPet?.name || '',\n    species: editingPet?.species || '',\n    breed: editingPet?.breed || '',\n    gender: editingPet?.gender || '',\n    birth_date: editingPet?.birth_date || '',\n    weight: editingPet?.weight || '',\n    microchip_number: editingPet?.microchip_number || '',\n    special_needs: editingPet?.special_needs || '',\n    allergies: editingPet?.allergies || '',\n    insurance_info: editingPet?.insurance_info || {}\n  });\n  const [photoFile, setPhotoFile] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(editingPet?.photo_url || null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef(null);\n\n  const speciesOptions = [\n    { value: 'dog', label: 'Dog 🐕' },\n    { value: 'cat', label: 'Cat 🐱' },\n    { value: 'bird', label: 'Bird 🐦' },\n    { value: 'rabbit', label: 'Rabbit 🐰' },\n    { value: 'hamster', label: 'Hamster 🐹' },\n    { value: 'fish', label: 'Fish 🐠' },\n    { value: 'reptile', label: 'Reptile 🦎' },\n    { value: 'other', label: 'Other 🐾' }\n  ];\n\n  const genderOptions = [\n    { value: 'male', label: 'Male' },\n    { value: 'female', label: 'Female' },\n    { value: 'unknown', label: 'Unknown' }\n  ];\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError(''); // Clear error when user starts typing\n  };\n\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Validate file type\n      if (!file.type.startsWith('image/')) {\n        setError('Please select a valid image file');\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        setError('Image size must be less than 5MB');\n        return;\n      }\n\n      setPhotoFile(file);\n      \n      // Create preview\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setPhotoPreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      // Validate required fields\n      if (!formData.name.trim()) {\n        throw new Error('Pet name is required');\n      }\n      if (!formData.species) {\n        throw new Error('Please select a species');\n      }\n\n      // Add or update the pet\n      const petResult = editingPet \n        ? await petService.updatePet(editingPet.id, formData)\n        : await petService.addPet(userId, formData);\n      \n      if (!petResult.success) {\n        throw new Error(petResult.error || `Failed to ${editingPet ? 'update' : 'add'} pet`);\n      }\n\n      let createdOrUpdatedPet = petResult.data;\n\n      // Upload photo if provided\n      if (photoFile && createdOrUpdatedPet.id) {\n        console.log('Attempting to upload photo:', {\n          fileName: photoFile.name,\n          fileSize: photoFile.size,\n          fileType: photoFile.type,\n          petId: createdOrUpdatedPet.id\n        });\n        \n        const photoResult = await petService.uploadPetPhoto(createdOrUpdatedPet.id, photoFile);\n        if (!photoResult.success) {\n          console.error('Photo upload failed:', photoResult.error);\n          setError(`Pet added but photo upload failed: ${photoResult.error}`);\n          // Don't return here, still show success for pet creation\n        } else {\n          console.log('Photo uploaded successfully:', photoResult);\n          // Ensure caller gets the updated photo_url immediately\n          createdOrUpdatedPet = { ...createdOrUpdatedPet, photo_url: photoResult.photoUrl };\n        }\n      }\n\n      // Success!\n      onSuccess(createdOrUpdatedPet);\n      onClose();\n    } catch (error) {\n      console.error('Error adding pet:', error);\n      setError(error.message || 'Failed to add pet. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSpeciesEmoji = (species) => {\n    const option = speciesOptions.find(opt => opt.value === species);\n    return option ? option.label.split(' ')[1] : '🐾';\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"sticky top-0 bg-white border-b border-gray-200 px-6 py-4 rounded-t-xl\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900 font-montserrat\">\n                {editingPet ? 'Edit Pet' : 'Add New Pet'}\n              </h2>\n              <p className=\"text-sm text-gray-600 mt-1\">\n                {editingPet ? 'Update your pet\\'s information' : 'Add your furry, feathered, or scaled family member'}\n              </p>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\"\n              disabled={loading}\n            >\n              <svg className=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n              <div className=\"flex\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          )}\n\n          {/* Photo Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Pet Photo</label>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <div className=\"w-24 h-24 bg-gray-100 rounded-xl border-2 border-dashed border-gray-300 flex items-center justify-center overflow-hidden\">\n                  {photoPreview ? (\n                    <img src={photoPreview} alt=\"Pet preview\" className=\"w-full h-full object-cover\" />\n                  ) : (\n                    <div className=\"text-center\">\n                      <span className=\"text-2xl\">{formData.species ? getSpeciesEmoji(formData.species) : '📷'}</span>\n                    </div>\n                  )}\n                </div>\n                {photoPreview && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setPhotoFile(null);\n                      setPhotoPreview(null);\n                      fileInputRef.current.value = '';\n                    }}\n                    className=\"absolute -top-2 -right-2 w-6 h-6 bg-red-500 text-white rounded-full flex items-center justify-center text-xs hover:bg-red-600 transition-colors\"\n                  >\n                    ×\n                  </button>\n                )}\n              </div>\n              <div className=\"flex-1\">\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handlePhotoChange}\n                  className=\"hidden\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => fileInputRef.current?.click()}\n                  className=\"bg-[#5EB47C] text-white px-4 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors text-sm font-medium\"\n                >\n                  Choose Photo\n                </button>\n                <p className=\"text-xs text-gray-500 mt-1\">Optional. Max 5MB. JPG, PNG, or GIF.</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Basic Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Pet Name *\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"e.g., Buddy, Luna, Charlie\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"species\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Species *\n              </label>\n              <select\n                id=\"species\"\n                name=\"species\"\n                value={formData.species}\n                onChange={handleInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                required\n              >\n                <option value=\"\">Select species</option>\n                {speciesOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"breed\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Breed\n              </label>\n              <input\n                type=\"text\"\n                id=\"breed\"\n                name=\"breed\"\n                value={formData.breed}\n                onChange={handleInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"e.g., Golden Retriever, Persian\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"gender\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Gender\n              </label>\n              <select\n                id=\"gender\"\n                name=\"gender\"\n                value={formData.gender}\n                onChange={handleInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              >\n                <option value=\"\">Select gender</option>\n                {genderOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"birth_date\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Birth Date\n              </label>\n              <input\n                type=\"date\"\n                id=\"birth_date\"\n                name=\"birth_date\"\n                value={formData.birth_date}\n                onChange={handleInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"weight\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Weight (kg)\n              </label>\n              <input\n                type=\"number\"\n                id=\"weight\"\n                name=\"weight\"\n                value={formData.weight}\n                onChange={handleInputChange}\n                step=\"0.1\"\n                min=\"0\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"e.g., 25.5\"\n              />\n            </div>\n          </div>\n\n          {/* Additional Information */}\n          <div>\n            <label htmlFor=\"microchip_number\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Microchip Number\n            </label>\n            <input\n              type=\"text\"\n              id=\"microchip_number\"\n              name=\"microchip_number\"\n              value={formData.microchip_number}\n              onChange={handleInputChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              placeholder=\"15-digit microchip number\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"allergies\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Allergies\n            </label>\n            <textarea\n              id=\"allergies\"\n              name=\"allergies\"\n              value={formData.allergies}\n              onChange={handleInputChange}\n              rows={2}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              placeholder=\"List any known allergies (food, environmental, medications)\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"special_needs\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Special Needs\n            </label>\n            <textarea\n              id=\"special_needs\"\n              name=\"special_needs\"\n              value={formData.special_needs}\n              onChange={handleInputChange}\n              rows={2}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              placeholder=\"Any special care requirements, medical conditions, or behavioral notes\"\n            />\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex items-center justify-end space-x-3 pt-4 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              disabled={loading}\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors font-medium disabled:opacity-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading || !formData.name.trim() || !formData.species}\n              className=\"px-6 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n            >\n              {loading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  {editingPet ? 'Updating Pet...' : 'Adding Pet...'}\n                </>\n              ) : (\n                editingPet ? 'Update Pet' : 'Add Pet'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPetForm;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport * as Sentry from '@sentry/react';\n\n// Role-based access control\nimport { ensurePetOwnerAccess, USER_ROLES } from '../utils/roleUtils';\n\n// Modular Dashboard Components\nimport PetOwnerLayout from './dashboard/PetOwnerLayout';\nimport PetOwnerTabs from './dashboard/PetOwnerTabs';\nimport PetOwnerStats from './dashboard/PetOwnerStats';\nimport PetOwnerBanners from './dashboard/PetOwnerBanners';\nimport PetOwnerFloatingActions from './dashboard/PetOwnerFloatingActions';\n\n// Existing Components (reused)\nimport ProfileHeader from './ProfileHeader';\nimport PetsGallery from './PetsGallery';\nimport HealthAlerts from './HealthAlerts';\nimport UsageStatus from './UsageStatus';\nimport BookingsQuickActions from './BookingsQuickActions';\nimport HealthRecordsViewer from './HealthRecordsViewer';\nimport CaseHistoryViewer from './CaseHistoryViewer';\nimport FavoriteButton from './FavoriteButton';\n\n// Form Components\nimport AddHealthRecordForm from './AddHealthRecordForm';\nimport EditHealthRecordForm from './EditHealthRecordForm';\nimport AddPetForm from './AddPetForm';\n\n// Services\nimport favoritesService from '../services/favoritesService';\nimport petService from '../services/petService';\nimport healthRecordService from '../services/healthRecordService';\n\n// Constants and Utils\nimport { STORAGE_BUCKETS } from '../lib/constants';\nimport { PetIcon, HealthIcon, UIIcon } from './MinimalIcons';\nimport { createRealtimeSubscription } from '../lib/supabase-utils.js';\n\nconst PetOwnerDashboard = () => {\n  const navigate = useNavigate();\n  \n  // Core State\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n  \n  // Pet and Health Data\n  const [pets, setPets] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [healthAlerts, setHealthAlerts] = useState([]);\n  const [healthRecordsData, setHealthRecordsData] = useState({});\n  const [petHealthStats, setPetHealthStats] = useState({});\n  \n  // User Plan and Usage\n  const [userPlan, setUserPlan] = useState('free');\n  const [aiTriageCount, setAiTriageCount] = useState(0);\n  const [weeklyCaseCount, setWeeklyCaseCount] = useState(0);\n  const [lastCaseDate, setLastCaseDate] = useState(null);\n  const [extraCasesPurchased, setExtraCasesPurchased] = useState(0);\n  const [totalSpentOnExtras, setTotalSpentOnExtras] = useState(0);\n  \n  // UI State\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [showExtraCaseModal, setShowExtraCaseModal] = useState(false);\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\n  \n  // Form States\n  const [showHealthRecordForm, setShowHealthRecordForm] = useState(false);\n  const [showEditHealthRecordForm, setShowEditHealthRecordForm] = useState(false);\n  const [showAddPetForm, setShowAddPetForm] = useState(false);\n  const [showPetSelectionModal, setShowPetSelectionModal] = useState(false);\n  const [selectedPetForHealth, setSelectedPetForHealth] = useState(null);\n  const [selectedHealthRecordForEdit, setSelectedHealthRecordForEdit] = useState(null);\n  const [editingPet, setEditingPet] = useState(null);\n  const [recordsRefreshKey, setRecordsRefreshKey] = useState(0);\n  \n  // Favorites State\n  const [dashboardFavorites, setDashboardFavorites] = useState([]);\n  const [filteredDashboardFavorites, setFilteredDashboardFavorites] = useState([]);\n  const [favoritesLoading, setFavoritesLoading] = useState(false);\n  const [favoritesFilterType, setFavoritesFilterType] = useState('all');\n  const [favoritesSearchTerm, setFavoritesSearchTerm] = useState('');\n\n  // Load user data and initialize dashboard\n  const loadUserData = useCallback(async () => {\n    try {\n      const { data: { user }, error: userError } = await supabase.auth.getUser();\n      if (userError || !user) {\n        navigate('/signin');\n        return;\n      }\n      setUser(user);\n\n      // Load or create profile with proper role validation\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n      let currentProfile = profileData;\n\n      if (profileError && profileError.code === 'PGRST116') {\n        // Create profile if it doesn't exist - ensure pet_owner role\n        const correctRole = ensurePetOwnerAccess.getRoleForEmail(user.email);\n        \n        const { data: newProfile } = await supabase\n          .from('profiles')\n          .insert([{\n            id: user.id,\n            email: user.email,\n            role: correctRole,\n            full_name: user.user_metadata?.full_name || user.email.split('@')[0],\n            is_active: true,\n          }])\n          .select()\n          .single();\n        \n        if (newProfile) {\n          currentProfile = newProfile;\n        }\n      } else if (!profileError) {\n        // Validate existing profile access\n        const accessValidation = ensurePetOwnerAccess.validateDashboardAccess(profileData);\n        \n        if (!accessValidation.hasAccess) {\n          console.warn('User does not have dashboard access:', accessValidation.message);\n          // Optionally redirect to appropriate dashboard or show access denied\n        }\n\n        // Special handling for Anna Wilson to ensure she has pet_owner role\n        if (user.email === 'anna-wilson@gmail.com' && profileData.role !== USER_ROLES.PET_OWNER) {\n          console.log('Updating Anna Wilson to pet_owner role');\n          const { data: updatedProfile } = await supabase\n            .from('profiles')\n            .update({ \n              role: USER_ROLES.PET_OWNER,\n              updated_at: new Date().toISOString()\n            })\n            .eq('id', user.id)\n            .select()\n            .single();\n          \n          if (updatedProfile) {\n            currentProfile = updatedProfile;\n          }\n        }\n      }\n\n      setProfile(currentProfile);\n\n      // Set usage data\n      setUserPlan(currentProfile?.subscription_plan || 'free');\n      setAiTriageCount(currentProfile?.ai_triage_count || 0);\n      setWeeklyCaseCount(currentProfile?.weekly_case_count || 0);\n      setLastCaseDate(currentProfile?.last_case_date);\n      setExtraCasesPurchased(currentProfile?.extra_cases_purchased || 0);\n      setTotalSpentOnExtras(currentProfile?.total_spent_on_extras || 0);\n\n      // Load bookings\n      const { data: bookingsData } = await supabase\n        .from('consultation_bookings')\n        .select('*, provider_listings(title, provider_name, service_type)')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n        .limit(5);\n      setBookings(bookingsData || []);\n\n      // Load pets and health data\n      await loadPetsData(user.id);\n\n    } catch (error) {\n      Sentry.captureException(error);\n      console.error('Error loading user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n\n  // Load pets and associated health data\n  const loadPetsData = async (userId) => {\n    try {\n      const petsResult = await petService.getUserPets(userId);\n      if (petsResult.success) {\n        setPets(petsResult.data);\n        \n        // Load health data for all pets\n        const alerts = [];\n        const healthRecords = {};\n        const healthStats = {};\n\n        const healthPromises = petsResult.data.map(async (pet) => {\n          const [recordsResult, statsResult] = await Promise.all([\n            healthRecordService.getHealthRecords(pet.id),\n            healthRecordService.getHealthStats(pet.id)\n          ]);\n\n          healthRecords[pet.id] = recordsResult.success ? (recordsResult.data || []) : [];\n          \n          if (statsResult.success) {\n            healthStats[pet.id] = statsResult.data;\n            \n            // Generate alerts\n            if (statsResult.data.overdueVaccinations > 0) {\n              alerts.push({\n                petId: pet.id,\n                petName: pet.name,\n                type: 'vaccination',\n                message: `${statsResult.data.overdueVaccinations} overdue vaccination${statsResult.data.overdueVaccinations > 1 ? 's' : ''}`,\n                urgent: true\n              });\n            }\n          }\n        });\n\n        await Promise.all(healthPromises);\n        \n        setHealthAlerts(alerts);\n        setHealthRecordsData(healthRecords);\n        setPetHealthStats(healthStats);\n      }\n    } catch (error) {\n      console.error('Error loading pets data:', error);\n    }\n  };\n\n  // Utility functions for usage limits\n  const getWeekStart = (date = new Date()) => {\n    const d = new Date(date);\n    const day = d.getDay();\n    const diff = d.getDate() - day + (day === 0 ? -6 : 1);\n    return new Date(d.setDate(diff));\n  };\n\n  const canAddMorePets = () => userPlan === 'premium' || pets.length < 3;\n  const canUseAiTriage = () => userPlan === 'premium' || aiTriageCount < 3;\n  \n  const canCreateCaseThisWeek = () => {\n    if (userPlan === 'premium') return true;\n    const currentWeekStart = getWeekStart().toDateString();\n    const lastCaseWeekStart = lastCaseDate ? getWeekStart(new Date(lastCaseDate)).toDateString() : null;\n    return lastCaseWeekStart !== currentWeekStart || weeklyCaseCount < 1;\n  };\n\n  const getRemainingFreeCasesThisWeek = () => {\n    if (userPlan === 'premium') return 'Unlimited';\n    const currentWeekStart = getWeekStart().toDateString();\n    const lastCaseWeekStart = lastCaseDate ? getWeekStart(new Date(lastCaseDate)).toDateString() : null;\n    return lastCaseWeekStart !== currentWeekStart ? 1 : Math.max(0, 1 - weeklyCaseCount);\n  };\n\n  // Health statistics calculation\n  const getHealthStats = () => {\n    const totalPets = pets.length;\n    const totalHealthRecords = Object.values(healthRecordsData).reduce((sum, records) => sum + records.length, 0);\n    const healthyPets = pets.length - healthAlerts.filter(alert => alert.urgent).length;\n    const overdueVaccinations = healthAlerts.filter(alert => alert.type === 'vaccination').length;\n    \n    const petsUpToDate = pets.filter(pet => {\n      const petRecords = healthRecordsData[pet.id] || [];\n      const vaccinationRecords = petRecords.filter(record => record.record_type === 'vaccination');\n      if (vaccinationRecords.length === 0) return false;\n      \n      const oneYearAgo = new Date();\n      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);\n      \n      return vaccinationRecords.some(record => \n        new Date(record.date_performed) > oneYearAgo\n      );\n    }).length;\n    \n    return {\n      totalPets,\n      totalHealthRecords,\n      healthyPets,\n      petsUpToDate,\n      overdueVaccinations,\n      healthPercentage: totalPets > 0 ? Math.round((healthyPets / totalPets) * 100) : 100\n    };\n  };\n\n  // Event handlers\n  const handleAddPet = () => {\n    if (!canAddMorePets()) {\n      alert('You have reached the 3-pet limit on your current plan. Please upgrade to add more pets.');\n      return;\n    }\n    setEditingPet(null);\n    setShowAddPetForm(true);\n  };\n\n  const handlePetFormSuccess = (newPet) => {\n    if (editingPet) {\n      setPets(prevPets => prevPets.map(pet => pet.id === editingPet.id ? newPet : pet));\n    } else {\n      setPets(prevPets => [newPet, ...prevPets]);\n    }\n    setShowAddPetForm(false);\n    setEditingPet(null);\n  };\n\n  const handleAddHealthRecord = (pet) => {\n    setSelectedPetForHealth(pet);\n    setShowHealthRecordForm(true);\n  };\n\n  const handleHealthRecordSuccess = async () => {\n    await loadPetsData(user.id);\n    setShowHealthRecordForm(false);\n    setSelectedPetForHealth(null);\n    setRecordsRefreshKey(prev => prev + 1);\n  };\n\n  // Effects\n  useEffect(() => {\n    loadUserData();\n  }, [loadUserData]);\n\n  useEffect(() => {\n    if (user && activeTab === 'favorites') {\n      loadFavorites();\n    }\n  }, [user, activeTab]);\n\n  // Realtime subscription\n  useEffect(() => {\n    let channel;\n    const setupRealtime = async () => {\n      if (!user) return;\n      channel = createRealtimeSubscription('profiles', (payload) => {\n        if (!payload?.new) return;\n        const updated = payload.new;\n        if (typeof updated.ai_triage_count !== 'undefined') {\n          setAiTriageCount(updated.ai_triage_count || 0);\n        }\n        if (typeof updated.weekly_case_count !== 'undefined') {\n          setWeeklyCaseCount(updated.weekly_case_count || 0);\n        }\n        if (typeof updated.last_case_date !== 'undefined') {\n          setLastCaseDate(updated.last_case_date || null);\n        }\n      }, { filter: `id=eq.${user.id}` });\n    };\n    setupRealtime();\n    return () => {\n      if (channel) {\n        channel.cleanup ? channel.cleanup() : supabase.removeChannel(channel);\n      }\n    };\n  }, [user]);\n\n  const loadFavorites = async () => {\n    if (!user) return;\n    try {\n      setFavoritesLoading(true);\n      const result = await favoritesService.getUserFavoritesWithDetails(user.id);\n      if (result.success) {\n        setDashboardFavorites(result.data);\n      }\n    } catch (error) {\n      console.error('Error loading favorites:', error);\n    } finally {\n      setFavoritesLoading(false);\n    }\n  };\n\n  // Debug logging for Anna Wilson\n  useEffect(() => {\n    if (user && user.email === 'anna-wilson@gmail.com') {\n      console.log('🎯 Anna Wilson Dashboard Access:', {\n        email: user.email,\n        role: profile?.role,\n        hasAccess: profile?.role === USER_ROLES.PET_OWNER,\n        dashboardRoute: '/pet-owner-dashboard'\n      });\n    }\n  }, [user, profile]);\n  \n  return (\n    <PetOwnerLayout loading={loading}>\n      {/* Banners */}\n      <PetOwnerBanners\n        userPlan={userPlan}\n        aiTriageCount={aiTriageCount}\n        totalSpentOnExtras={totalSpentOnExtras}\n        canCreateCaseThisWeek={canCreateCaseThisWeek()}\n        onShowExtraCaseModal={() => setShowExtraCaseModal(true)}\n      />\n\n      {/* Health Alerts */}\n      <HealthAlerts healthAlerts={healthAlerts} />\n\n      {/* Navigation Tabs */}\n      <PetOwnerTabs \n        activeTab={activeTab} \n        onTabChange={setActiveTab}\n      />\n\n      {/* Tab Content */}\n      {activeTab === 'overview' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          <ProfileHeader\n            profile={profile}\n            user={user}\n            profilePhotoUrl={profile?.avatar_url}\n            pets={pets}\n            healthStats={getHealthStats()}\n            bookings={bookings}\n            onPhotoUpload={async (e) => {\n              // Handle photo upload logic here\n            }}\n          />\n\n          <PetsGallery\n            pets={pets}\n            userPlan={userPlan}\n            dismissedPetLimitBanner={false}\n            onAddPet={handleAddPet}\n            onEditPet={(pet) => {\n              setEditingPet(pet);\n              setShowAddPetForm(true);\n            }}\n            onDeletePet={async (petId) => {\n              const confirmed = window.confirm('Delete this pet? This removes all data and files. This cannot be undone.');\n              if (confirmed) {\n                const result = await petService.deletePetCascade(petId);\n                if (result.success) {\n                  setPets(prevPets => prevPets.filter(pet => pet.id !== petId));\n                }\n              }\n            }}\n            onDismissPetLimitBanner={() => {}}\n            FreemiumLimitBanner={() => null}\n          />\n\n          <BookingsQuickActions \n            bookings={bookings} \n            onSetActiveTab={setActiveTab}\n          />\n\n          <UsageStatus\n            userPlan={userPlan}\n            totalSpentOnExtras={totalSpentOnExtras}\n            pets={pets}\n            onShowExtraCaseModal={() => setShowExtraCaseModal(true)}\n            getRemainingFreeCasesThisWeek={getRemainingFreeCasesThisWeek}\n            canCreateCaseThisWeek={canCreateCaseThisWeek}\n            canUseAiTriage={canUseAiTriage}\n            canAddMorePets={canAddMorePets}\n          />\n        </div>\n      )}\n\n      {activeTab === 'health' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          {pets.length === 0 ? (\n            <div className=\"text-center py-16 bg-white rounded-xl border-2 border-dashed border-gray-300\">\n              <div className=\"w-20 h-20 mx-auto mb-6 bg-[#E5F4F1] rounded-full flex items-center justify-center\">\n                <HealthIcon type=\"health\" className=\"w-10 h-10\" color=\"#5EB47C\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Start Your Pet's Health Journey</h3>\n              <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\n                Add your pets first to start tracking their health records, vaccinations, medications, and more.\n              </p>\n              <button\n                onClick={() => setActiveTab('overview')}\n                className=\"inline-flex items-center px-6 py-3 bg-[#5EB47C] text-white rounded-xl hover:bg-[#4A9A64] transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n              >\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                </svg>\n                Add Your First Pet\n              </button>\n            </div>\n          ) : (\n            <>\n              <PetOwnerStats \n                totalPets={pets.length}\n                totalHealthRecords={getHealthStats().totalHealthRecords}\n                petsUpToDate={getHealthStats().petsUpToDate}\n                healthPercentage={getHealthStats().healthPercentage}\n                healthAlerts={healthAlerts.length}\n                onHealthRecordsClick={() => {\n                  document.getElementById('health-records-section')?.scrollIntoView({ behavior: 'smooth' });\n                }}\n                onAlertsClick={() => {\n                  // Scroll to alerts or handle alert click\n                }}\n              />\n\n              <HealthRecordsViewer \n                pets={pets} \n                userPlan={userPlan}\n                onEditRecord={(record) => {\n                  setSelectedHealthRecordForEdit(record);\n                  setShowEditHealthRecordForm(true);\n                }}\n                onAddRecord={handleAddHealthRecord}\n                onRefresh={() => loadPetsData(user.id)}\n                refreshKey={recordsRefreshKey}\n              />\n            </>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'cases' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          <CaseHistoryViewer pets={pets} userId={user?.id} />\n        </div>\n      )}\n\n      {activeTab === 'favorites' && (\n        <div className=\"space-y-4 sm:space-y-6\">\n          {/* Favorites content would go here */}\n          <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n            <h3 className=\"text-lg font-bold text-gray-900 mb-4\">My Favorites</h3>\n            <p className=\"text-gray-600\">Your favorite services and products will appear here.</p>\n          </div>\n        </div>\n      )}\n\n      {/* Floating Action Buttons */}\n      <PetOwnerFloatingActions\n        canUseAiTriage={canUseAiTriage}\n        canCreateCaseThisWeek={canCreateCaseThisWeek}\n        userPlan={userPlan}\n        getRemainingFreeCasesThisWeek={getRemainingFreeCasesThisWeek}\n        onShowExtraCaseModal={() => setShowExtraCaseModal(true)}\n        showMobileMenu={showMobileMenu}\n        onToggleMobileMenu={setShowMobileMenu}\n      />\n\n      {/* Modals */}\n      {showHealthRecordForm && selectedPetForHealth && (\n        <AddHealthRecordForm\n          petId={selectedPetForHealth.id}\n          petName={selectedPetForHealth.name}\n          onClose={() => {\n            setShowHealthRecordForm(false);\n            setSelectedPetForHealth(null);\n          }}\n          onSuccess={handleHealthRecordSuccess}\n        />\n      )}\n\n      {showEditHealthRecordForm && selectedHealthRecordForEdit && (\n        <EditHealthRecordForm\n          record={selectedHealthRecordForEdit}\n          onClose={() => {\n            setShowEditHealthRecordForm(false);\n            setSelectedHealthRecordForEdit(null);\n          }}\n          onSuccess={() => {\n            loadPetsData(user.id);\n            setShowEditHealthRecordForm(false);\n            setSelectedHealthRecordForEdit(null);\n          }}\n        />\n      )}\n\n      {showAddPetForm && user && (\n        <AddPetForm\n          onClose={() => {\n            setShowAddPetForm(false);\n            setEditingPet(null);\n          }}\n          onSuccess={handlePetFormSuccess}\n          userId={user.id}\n          editingPet={editingPet}\n        />\n      )}\n    </PetOwnerLayout>\n  );\n};\n\nexport default PetOwnerDashboard;","// Role-based utility functions\nimport { supabase } from '../lib/supabase';\n\n// User roles constants\nexport const USER_ROLES = {\n  PET_OWNER: 'pet_owner',\n  VETERINARIAN: 'veterinarian',\n  VET_NURSE: 'vet_nurse',\n  GROOMER: 'groomer',\n  TRAINER: 'trainer',\n  BREEDER: 'breeder',\n  NUTRITIONIST: 'nutritionist',\n  PET_BUSINESS: 'pet_business',\n  HOLISTIC_CARE: 'holistic_care',\n  ADMIN: 'admin',\n  SUPPORT: 'support'\n};\n\n// Get dashboard route based on user role\nexport const getDashboardRoute = (role) => {\n  const roleRoutes = {\n    [USER_ROLES.PET_OWNER]: '/pet-owner-dashboard',\n    [USER_ROLES.VETERINARIAN]: '/veterinarian-portal',\n    [USER_ROLES.VET_NURSE]: '/vet-nurse-dashboard',\n    [USER_ROLES.GROOMER]: '/groomer-dashboard',\n    [USER_ROLES.TRAINER]: '/trainer-dashboard',\n    [USER_ROLES.BREEDER]: '/breeder-dashboard',\n    [USER_ROLES.NUTRITIONIST]: '/nutritionist-dashboard',\n    [USER_ROLES.PET_BUSINESS]: '/pet-business-dashboard',\n    [USER_ROLES.HOLISTIC_CARE]: '/holistic-care-dashboard',\n    [USER_ROLES.ADMIN]: '/admin',\n    [USER_ROLES.SUPPORT]: '/support-dashboard'\n  };\n\n  return roleRoutes[role] || '/pet-owner-dashboard'; // Default to pet owner dashboard\n};\n\n// Ensure pet owner access\nexport const ensurePetOwnerAccess = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    \n    if (error || !user) {\n      return {\n        success: false,\n        error: 'Not authenticated',\n        shouldRedirect: true,\n        redirectTo: '/signin'\n      };\n    }\n\n    // Get user role from metadata\n    const userRole = user.user_metadata?.role || user.app_metadata?.role || USER_ROLES.PET_OWNER;\n\n    // Allow access to pet owners and admins\n    if (userRole === USER_ROLES.PET_OWNER || userRole === USER_ROLES.ADMIN) {\n      return {\n        success: true,\n        user,\n        role: userRole\n      };\n    }\n\n    // User has a different role - redirect to their dashboard\n    return {\n      success: false,\n      error: 'Access denied - wrong role',\n      shouldRedirect: true,\n      redirectTo: getDashboardRoute(userRole),\n      role: userRole\n    };\n  } catch (error) {\n    console.error('Error checking pet owner access:', error);\n    return {\n      success: false,\n      error: error.message || 'Failed to verify access',\n      shouldRedirect: true,\n      redirectTo: '/signin'\n    };\n  }\n};\n\n// Check if user has specific role\nexport const hasRole = async (requiredRole) => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    \n    if (error || !user) {\n      return false;\n    }\n\n    const userRole = user.user_metadata?.role || user.app_metadata?.role;\n    \n    // Admin has access to everything\n    if (userRole === USER_ROLES.ADMIN) {\n      return true;\n    }\n\n    return userRole === requiredRole;\n  } catch (error) {\n    console.error('Error checking role:', error);\n    return false;\n  }\n};\n\n// Get user role\nexport const getUserRole = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    \n    if (error || !user) {\n      return null;\n    }\n\n    return user.user_metadata?.role || user.app_metadata?.role || USER_ROLES.PET_OWNER;\n  } catch (error) {\n    console.error('Error getting user role:', error);\n    return null;\n  }\n};\n\n// Check if user is admin\nexport const isAdmin = async () => {\n  return await hasRole(USER_ROLES.ADMIN);\n};\n\n// Check if user is provider (any type of service provider)\nexport const isProvider = async () => {\n  const providerRoles = [\n    USER_ROLES.VETERINARIAN,\n    USER_ROLES.VET_NURSE,\n    USER_ROLES.GROOMER,\n    USER_ROLES.TRAINER,\n    USER_ROLES.BREEDER,\n    USER_ROLES.NUTRITIONIST,\n    USER_ROLES.PET_BUSINESS,\n    USER_ROLES.HOLISTIC_CARE\n  ];\n\n  try {\n    const userRole = await getUserRole();\n    return providerRoles.includes(userRole);\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default {\n  USER_ROLES,\n  getDashboardRoute,\n  ensurePetOwnerAccess,\n  hasRole,\n  getUserRole,\n  isAdmin,\n  isProvider\n};\n","// Application constants\n\n// Supabase storage bucket names\nexport const STORAGE_BUCKETS = {\n  PET_IMAGES: 'pet-images',\n  PROVIDER_IMAGES: 'provider-images',\n  PRODUCT_IMAGES: 'product-images',\n  HEALTH_RECORDS: 'health-records',\n  DOCUMENTS: 'documents',\n  AVATARS: 'avatars',\n  PROFILE_IMAGES: 'profile-images'\n};\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  TRIAGE: '/api/triage',\n  CONSULTATION: '/api/consultation',\n  PAYMENT: '/api/payment',\n  NOTIFICATIONS: '/api/notifications'\n};\n\n// User roles\nexport const USER_ROLES = {\n  PET_OWNER: 'pet_owner',\n  VETERINARIAN: 'veterinarian',\n  VET_NURSE: 'vet_nurse',\n  GROOMER: 'groomer',\n  TRAINER: 'trainer',\n  BREEDER: 'breeder',\n  NUTRITIONIST: 'nutritionist',\n  PET_BUSINESS: 'pet_business',\n  HOLISTIC_CARE: 'holistic_care',\n  ADMIN: 'admin',\n  SUPPORT: 'support'\n};\n\n// Listing types\nexport const LISTING_TYPES = {\n  SERVICE: 'service',\n  PRODUCT: 'product',\n  PROVIDER: 'provider'\n};\n\n// Case status\nexport const CASE_STATUS = {\n  PENDING: 'pending',\n  IN_PROGRESS: 'in_progress',\n  COMPLETED: 'completed',\n  CANCELLED: 'cancelled'\n};\n\n// Urgency levels\nexport const URGENCY_LEVELS = {\n  EMERGENCY: 'emergency',\n  URGENT: 'urgent',\n  ROUTINE: 'routine',\n  NON_URGENT: 'non_urgent'\n};\n\n// Pagination\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 20,\n  MAX_PAGE_SIZE: 100\n};\n\n// File upload limits\nexport const FILE_LIMITS = {\n  MAX_IMAGE_SIZE: 5 * 1024 * 1024, // 5MB\n  MAX_DOCUMENT_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_IMAGE_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],\n  ALLOWED_DOCUMENT_TYPES: ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png']\n};\n\n// Time constants\nexport const TIME_CONSTANTS = {\n  SESSION_TIMEOUT: 30 * 60 * 1000, // 30 minutes\n  REFRESH_INTERVAL: 5 * 60 * 1000, // 5 minutes\n  DEBOUNCE_DELAY: 300, // milliseconds\n  TOAST_DURATION: 3000 // milliseconds\n};\n\nexport default {\n  STORAGE_BUCKETS,\n  API_ENDPOINTS,\n  USER_ROLES,\n  LISTING_TYPES,\n  CASE_STATUS,\n  URGENCY_LEVELS,\n  PAGINATION,\n  FILE_LIMITS,\n  TIME_CONSTANTS\n};\n"],"names":["getPetCaseHistory","petId","data","error","supabase","from","select","eq","order","ascending","success","handleSupabaseError","getUserCaseHistory","userId","getCase","caseId","single","createCase","caseData","insert","updateCase","updates","update","_ref","children","alerts","loading","className","_jsx","_jsxs","length","map","alert","index","TabButton","id","label","isActive","onClick","icon","_ref2","activeTab","onTabChange","tabs","tabsToRender","tab","StatCard","title","value","color","description","totalPets","totalHealthRecords","petsUpToDate","healthPercentage","healthAlerts","onHealthRecordsClick","onAlertsClick","HealthIcon","type","FreemiumLimitBanner","feature","current","limit","upgradeText","onClose","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","toLowerCase","Link","to","SpendingAwarenessBanner","totalSpentOnExtras","userPlan","UIIcon","toFixed","UsageLimitBanner","_ref3","canCreateCaseThisWeek","onShowExtraCaseModal","_ref4","aiTriageCount","banners","push","filter","Boolean","FloatingActionButton","badge","combinedClassName","content","_Fragment","canUseAiTriage","getRemainingFreeCasesThisWeek","showMobileMenu","onToggleMobileMenu","renderTriageButton","remaining","showBadge","_profile$full_name","_user$email","profile","user","profilePhotoUrl","pets","healthStats","bookings","onPhotoUpload","src","alt","_user$user_metadata","userRole","user_metadata","user_type","role","accept","onChange","htmlFor","full_name","split","email","reduce","total","pet","_pet$health_records","health_records","dismissedPetLimitBanner","onAddPet","onEditPet","onDeletePet","onDismissPetLimitBanner","filterType","setFilterType","useState","filteredPets","species","photo_url","name","PetIcon","breed","e","stopPropagation","health_status","some","urgent","fillRule","clipRule","petName","message","canAddMorePets","style","width","Math","min","max","onSetActiveTab","slice","booking","service_name","provider_name","Date","consultation_date","toLocaleDateString","weekday","month","day","hour","minute","status","MultiPetHealthRecordsViewer","onEditRecord","onDeleteRecord","onRefresh","onAddRecord","refreshKey","allRecords","setAllRecords","setLoading","selectedPet","setSelectedPet","deletingId","setDeletingId","expandedRecords","setExpandedRecords","Set","searchQuery","setSearchQuery","dateFilter","setDateFilter","sortBy","setSortBy","openDropdown","setOpenDropdown","useEffect","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","CustomDropdown","_options$find","options","placeholder","dropdownKey","find","opt","option","loadAllHealthRecords","async","recordsMap","Promise","all","result","healthRecordService","getHealthRecords","records","console","totalRecords","Object","values","sum","item","_allRecords$selectedP","currentRecords","flatMap","record","petInfo","filteredRecords","trim","_record$title","_record$description","_record$record_type","_record$veterinarian_","_record$clinic_name","_record$notes","_record$medications","query","includes","record_type","veterinarian_name","clinic_name","notes","medications","med","recordDate","date_performed","now","today","getFullYear","getMonth","getDate","weekAgo","setDate","monthAgo","setMonth","yearAgo","setFullYear","sort","a","b","_a$record_type","localeCompare","aCost","parseFloat","cost","isExpanded","has","toggleRecordExpansion","recordId","prev","newSet","delete","add","recordType","checkup","vaccination","surgery","emergency","dental","grooming","lab_work","other","replace","toUpperCase","dateString","year","weight","temperature","documents","doc","idx","href","url","rel","startsWith","created_at","handleEditRecord","window","confirm","deleteHealthRecord","handleDeleteRecord","disabled","SinglePetHealthRecordsViewer","setRecords","loadHealthRecords","shouldUseSingleViewer","soapNotes","setSoapNotes","severityFilter","setSeverityFilter","currentPage","setCurrentPage","itemsPerPage","selectedSoapNote","setSelectedSoapNote","showSoapModal","setShowSoapModal","loadSoapNotes","soapResult","caseHistoryService","getUserSoapNotes","getSeverityConfig","severity","configs","low","moderate","high","formatDateTime","filteredAndSortedData","useMemo","filtered","searchText","subjective","objective","assessment","plan","pet_id","_item$searchText","_item$vet_name","_item$clinic_name","vet_name","dateFilterFn","getDateFilterOptions","date","toDateString","week","getTime","_pets$find","_pets$find2","severityOrder","petA","p","petB","paginatedData","startIndex","totalPages","ceil","closeSoapModal","note","source","severityConfig","Array","_","i","pageNum","renderSOAPModal","sections","key","section","follow_up_date","onSuccess","formData","setFormData","toISOString","next_due_date","setDocuments","uploading","setUploading","setError","fileInputRef","useRef","recordTypes","currentConfig","professionalLabel","professionalPlaceholder","businessLabel","businessPlaceholder","titlePlaceholder","descriptionPlaceholder","nextDueDateLabel","showNextDueDate","getFieldConfig","handleInputChange","formatFileSize","bytes","floor","log","pow","onSubmit","preventDefault","Error","recordData","size","addHealthRecord","required","step","rows","ref","multiple","files","uploadPromises","file","uploadVetReport","publicUrl","filePath","uploadedFiles","_fileInputRef$current","click","deleteVetReport","warn","removeDocument","textIcon","handleCancel","updated_at","updateHealthRecord","uploadedDocs","editingPet","gender","birth_date","microchip_number","special_needs","allergies","insurance_info","photoFile","setPhotoFile","photoPreview","setPhotoPreview","speciesOptions","petResult","petService","updatePet","addPet","createdOrUpdatedPet","fileName","fileSize","fileType","photoResult","uploadPetPhoto","photoUrl","getSpeciesEmoji","reader","FileReader","onload","readAsDataURL","PetOwnerDashboard","navigate","useNavigate","setUser","setProfile","setActiveTab","setPets","setBookings","setHealthAlerts","healthRecordsData","setHealthRecordsData","petHealthStats","setPetHealthStats","setUserPlan","setAiTriageCount","weeklyCaseCount","setWeeklyCaseCount","lastCaseDate","setLastCaseDate","extraCasesPurchased","setExtraCasesPurchased","setTotalSpentOnExtras","setShowMobileMenu","showExtraCaseModal","setShowExtraCaseModal","uploadingPhoto","setUploadingPhoto","showHealthRecordForm","setShowHealthRecordForm","showEditHealthRecordForm","setShowEditHealthRecordForm","showAddPetForm","setShowAddPetForm","showPetSelectionModal","setShowPetSelectionModal","selectedPetForHealth","setSelectedPetForHealth","selectedHealthRecordForEdit","setSelectedHealthRecordForEdit","setEditingPet","recordsRefreshKey","setRecordsRefreshKey","dashboardFavorites","setDashboardFavorites","filteredDashboardFavorites","setFilteredDashboardFavorites","favoritesLoading","setFavoritesLoading","favoritesFilterType","setFavoritesFilterType","favoritesSearchTerm","setFavoritesSearchTerm","loadUserData","useCallback","_currentProfile","_currentProfile2","_currentProfile3","_currentProfile4","_currentProfile5","_currentProfile6","userError","auth","getUser","profileData","profileError","currentProfile","code","correctRole","ensurePetOwnerAccess","getRoleForEmail","newProfile","is_active","accessValidation","validateDashboardAccess","hasAccess","USER_ROLES","PET_OWNER","updatedProfile","subscription_plan","ai_triage_count","weekly_case_count","last_case_date","extra_cases_purchased","total_spent_on_extras","bookingsData","loadPetsData","Sentry","petsResult","getUserPets","healthRecords","healthPromises","recordsResult","statsResult","getHealthStats","overdueVaccinations","getWeekStart","arguments","undefined","getDay","diff","currentWeekStart","healthyPets","vaccinationRecords","oneYearAgo","round","loadFavorites","channel","createRealtimeSubscription","payload","new","updated","setupRealtime","cleanup","removeChannel","favoritesService","getUserFavoritesWithDetails","dashboardRoute","PetOwnerLayout","PetOwnerBanners","HealthAlerts","PetOwnerTabs","ProfileHeader","avatar_url","PetsGallery","handleAddPet","deletePetCascade","prevPets","BookingsQuickActions","UsageStatus","PetOwnerStats","_document$getElementB","getElementById","scrollIntoView","behavior","HealthRecordsViewer","CaseHistoryViewer","PetOwnerFloatingActions","AddHealthRecordForm","EditHealthRecordForm","AddPetForm","newPet","VETERINARIAN","VET_NURSE","GROOMER","TRAINER","BREEDER","NUTRITIONIST","PET_BUSINESS","HOLISTIC_CARE","ADMIN","SUPPORT","getDashboardRoute","_user$app_metadata","shouldRedirect","redirectTo","app_metadata","STORAGE_BUCKETS","PET_IMAGES","PROVIDER_IMAGES","PRODUCT_IMAGES","HEALTH_RECORDS","DOCUMENTS","AVATARS","PROFILE_IMAGES"],"sourceRoot":""}