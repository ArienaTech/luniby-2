{"version":3,"file":"static/js/388.d83c1789.chunk.js","mappings":"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","sources":["services/productService.js","components/PetBusinessDashboard.js"],"sourcesContent":["// Product/service management service\nimport { supabase } from '../lib/supabase';\nimport { handleSupabaseError } from '../lib/supabase-utils';\n\nexport const productService = {\n  // Get all products/services\n  async getProducts(filters = {}) {\n    try {\n      let query = supabase\n        .from('products')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (filters.category) {\n        query = query.eq('category', filters.category);\n      }\n\n      if (filters.providerId) {\n        query = query.eq('provider_id', filters.providerId);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: [] };\n      }\n\n      return { success: true, data: data || [] };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: [] };\n    }\n  },\n\n  // Get a single product\n  async getProduct(productId) {\n    try {\n      const { data, error } = await supabase\n        .from('products')\n        .select('*')\n        .eq('id', productId)\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  },\n\n  // Create a new product\n  async createProduct(productData) {\n    try {\n      const { data, error } = await supabase\n        .from('products')\n        .insert([productData])\n        .select()\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  },\n\n  // Update a product\n  async updateProduct(productId, updates) {\n    try {\n      const { data, error } = await supabase\n        .from('products')\n        .update(updates)\n        .eq('id', productId)\n        .select()\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  },\n\n  // Delete a product\n  async deleteProduct(productId) {\n    try {\n      const { error } = await supabase\n        .from('products')\n        .delete()\n        .eq('id', productId);\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error) };\n      }\n\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error) };\n    }\n  }\n};\n\nexport default productService;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport { productService } from '../services/productService.js';\n\n// Pet Business components matching other professional dashboards but focused on products\nconst BusinessOverview = ({ user, profile }) => {\n  const [stats, setStats] = useState({\n    monthlyRevenue: 0,\n    activeCustomers: 0,\n    productsInStock: 0,\n    ordersThisMonth: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadBusinessStats();\n  }, [user]);\n\n  const loadBusinessStats = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const { data, error } = await productService.getBusinessStats(user.id);\n      \n      if (error) {\n        console.error('Error loading business stats:', error);\n        // Use default values if error\n        setStats({\n          monthlyRevenue: 0,\n          activeCustomers: 0,\n          productsInStock: 0,\n          ordersThisMonth: 0\n        });\n      } else {\n        setStats({\n          monthlyRevenue: Math.round(data.totalStockValue * 0.1), // Estimate 10% of inventory value as monthly revenue\n          activeCustomers: Math.floor(data.totalProducts * 2.5), // Estimate customers based on product count\n          productsInStock: data.totalProducts,\n          ordersThisMonth: Math.floor(data.totalProducts * 0.3) // Estimate orders\n        });\n      }\n    } catch (error) {\n      console.error('Error in loadBusinessStats:', error);\n      setStats({\n        monthlyRevenue: 0,\n        activeCustomers: 0,\n        productsInStock: 0,\n        ordersThisMonth: 0\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C] mx-auto\"></div>\n        <p className=\"mt-4 text-gray-600\">Loading dashboard...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Welcome Header */}\n      <div className=\"bg-white p-6 rounded-lg border\">\n        <h1 className=\"text-2xl font-bold mb-2 text-gray-900\">\n          Welcome back, {profile?.full_name?.split(' ')[0] || user?.email?.split('@')[0] || 'Business Owner'}\n        </h1>\n        <p className=\"text-gray-600\">\n          You have {stats.ordersThisMonth} orders this month and {stats.productsInStock} products in your catalog.\n        </p>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-4 sm:p-6\">\n        <div className=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 gap-3 sm:gap-4\">\n          <div className=\"bg-blue-50 p-3 sm:p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-blue-600 text-xs sm:text-sm font-medium\">Monthly Revenue</p>\n                <p className=\"text-xl sm:text-2xl font-bold text-blue-900\">${stats.monthlyRevenue.toLocaleString()}</p>\n              </div>\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-blue-600\">\n                <span className=\"text-lg sm:text-xl\">💰</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-green-50 p-3 sm:p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-green-600 text-xs sm:text-sm font-medium\">Active Customers</p>\n                <p className=\"text-xl sm:text-2xl font-bold text-green-900\">{stats.activeCustomers}</p>\n              </div>\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-green-600\">\n                <span className=\"text-lg sm:text-xl\">👥</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-purple-50 p-3 sm:p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-purple-600 text-xs sm:text-sm font-medium\">Products in Stock</p>\n                <p className=\"text-xl sm:text-2xl font-bold text-purple-900\">{stats.productsInStock}</p>\n              </div>\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-purple-600\">\n                <span className=\"text-lg sm:text-xl\">📦</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-orange-50 p-3 sm:p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-orange-600 text-xs sm:text-sm font-medium\">Orders This Month</p>\n                <p className=\"text-xl sm:text-2xl font-bold text-orange-900\">{stats.ordersThisMonth}</p>\n              </div>\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-orange-600\">\n                <span className=\"text-lg sm:text-xl\">📊</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Recent Orders & Top Products */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Recent Orders */}\n        <RecentOrdersWidget user={user} />\n\n        {/* Top Products */}\n        <TopProductsWidget user={user} />\n      </div>\n    </div>\n  );\n};\n\nconst RecentOrdersWidget = ({ user }) => {\n  const [recentOrders, setRecentOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadRecentOrders();\n  }, [user]);\n\n  const loadRecentOrders = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // For now, we'll show empty state since orders table isn't implemented yet\n      // In the future, this would fetch from an orders table\n      setRecentOrders([]);\n    } catch (error) {\n      console.error('Error loading recent orders:', error);\n      setRecentOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Recent Orders</h3>\n      </div>\n      <div className=\"p-6\">\n        {loading ? (\n          <div className=\"text-center py-4\">\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-[#5EB47C] mx-auto\"></div>\n            <p className=\"mt-2 text-sm text-gray-600\">Loading...</p>\n          </div>\n        ) : recentOrders.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-gray-400 text-4xl mb-4\">📦</div>\n            <h4 className=\"text-lg font-medium text-gray-900 mb-2\">No orders yet</h4>\n            <p className=\"text-gray-600 text-sm\">\n              Orders will appear here once customers start purchasing your products\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {recentOrders.map((order) => (\n              <div key={order.id} className=\"flex items-center space-x-4 p-4 bg-gray-50 rounded-lg\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <span className=\"text-blue-600 font-semibold text-sm\">#</span>\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"font-medium text-gray-900\">Order #{order.id} - {order.customer_name}</p>\n                  <p className=\"text-sm text-gray-600\">{order.items} • ${order.total}</p>\n                  <span className={`inline-block px-2 py-1 text-xs rounded-full mt-1 ${\n                    order.status === 'shipped' ? 'bg-green-100 text-green-800' :\n                    order.status === 'processing' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-blue-100 text-blue-800'\n                  }`}>\n                    {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TopProductsWidget = ({ user }) => {\n  const [topProducts, setTopProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadTopProducts();\n  }, [user]);\n\n  const loadTopProducts = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const { data, error } = await productService.getProducts(user.id);\n      \n      if (error) {\n        console.error('Error loading top products:', error);\n        setTopProducts([]);\n      } else {\n        // Sort by stock quantity descending to show most stocked items as \"top selling\"\n        const sortedProducts = data\n          .sort((a, b) => b.stock_quantity - a.stock_quantity)\n          .slice(0, 3);\n        setTopProducts(sortedProducts);\n      }\n    } catch (error) {\n      console.error('Error in loadTopProducts:', error);\n      setTopProducts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getProductEmoji = (category) => {\n    switch (category) {\n      case 'Food': return '🥫';\n      case 'Toys': return '🧸';\n      case 'Accessories': return '🛏️';\n      case 'Health': return '💊';\n      case 'Grooming': return '🧴';\n      default: return '📦';\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Your Products</h3>\n      </div>\n      <div className=\"p-6\">\n        {loading ? (\n          <div className=\"text-center py-4\">\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-[#5EB47C] mx-auto\"></div>\n            <p className=\"mt-2 text-sm text-gray-600\">Loading...</p>\n          </div>\n        ) : topProducts.length === 0 ? (\n          <div className=\"text-center py-4\">\n            <div className=\"text-gray-400 text-2xl mb-2\">📦</div>\n            <p className=\"text-sm text-gray-600\">No products yet</p>\n            <p className=\"text-xs text-gray-500\">Add products to your catalog to see them here</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {topProducts.map((product) => (\n              <div key={product.id} className=\"flex items-start space-x-3\">\n                <span className=\"text-green-500 text-lg\">{getProductEmoji(product.category)}</span>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">{product.name}</p>\n                  <p className=\"text-xs text-gray-500\">{product.stock_quantity} units in stock • ${product.price}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProductCatalog = ({ user, profile }) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deletingProduct, setDeletingProduct] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('All');\n  const [showProductDetail, setShowProductDetail] = useState(false);\n  const [detailProduct, setDetailProduct] = useState(null);\n  const [error, setError] = useState(null);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    category: 'Food',\n    price: '',\n    stock_quantity: '',\n    description: '',\n    image: '📦',\n    images: []\n  });\n\n  // Load products from Supabase\n  React.useEffect(() => {\n    loadProducts();\n  }, [user]);\n\n  const loadProducts = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data, error: fetchError } = await productService.getProducts(user.id);\n      \n      if (fetchError) {\n        console.error('Error loading products:', fetchError);\n        setError('Failed to load products. Please try again.');\n        setProducts([]);\n      } else {\n        // Transform data to match component expectations\n        const transformedProducts = data.map(product => ({\n          ...product,\n          stock: product.stock_quantity, // Map stock_quantity to stock for compatibility\n          status: product.stock_quantity > 10 ? 'in_stock' : 'low_stock',\n          image: getProductEmoji(product.category)\n        }));\n        setProducts(transformedProducts);\n      }\n    } catch (error) {\n      console.error('Error in loadProducts:', error);\n      setError('Failed to load products. Please try again.');\n      setProducts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddProduct = async (e) => {\n    e.preventDefault();\n    \n    // Validate required fields\n    if (!newProduct.name || !newProduct.price || !newProduct.stock_quantity) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      const productData = {\n        ...newProduct,\n        provider_id: user?.id,\n        price: parseFloat(newProduct.price),\n        stock_quantity: parseInt(newProduct.stock_quantity),\n        images: newProduct.images || []\n      };\n      \n      const { data, error } = await productService.createProduct(productData);\n      \n      if (error) {\n        console.error('Error creating product:', error);\n        alert('Failed to create product. Please try again.');\n        return;\n      }\n      \n      // Reload products to get the updated list\n      await loadProducts();\n      \n      // Reset form and close modal\n      setNewProduct({ \n        name: '', \n        category: 'Food', \n        price: '', \n        stock_quantity: '', \n        description: '', \n        image: '📦', \n        images: [] \n      });\n      setShowAddModal(false);\n      \n      console.log('New product added:', data);\n    } catch (error) {\n      console.error('Error in handleAddProduct:', error);\n      alert('Failed to create product. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditProduct = (product) => {\n    setEditingProduct({\n      ...product,\n      images: product.images || []\n    });\n    setShowEditModal(true);\n  };\n\n  const handleUpdateProduct = async (e) => {\n    e.preventDefault();\n    \n    if (!editingProduct.name || !editingProduct.price || !editingProduct.stock_quantity) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      const updates = {\n        name: editingProduct.name,\n        category: editingProduct.category,\n        price: parseFloat(editingProduct.price),\n        stock_quantity: parseInt(editingProduct.stock_quantity),\n        description: editingProduct.description,\n        images: editingProduct.images || []\n      };\n      \n      const { data, error } = await productService.updateProduct(editingProduct.id, updates);\n      \n      if (error) {\n        console.error('Error updating product:', error);\n        alert('Failed to update product. Please try again.');\n        return;\n      }\n      \n      // Reload products to get the updated list\n      await loadProducts();\n      \n      setShowEditModal(false);\n      setEditingProduct(null);\n      \n      console.log('Product updated:', data);\n    } catch (error) {\n      console.error('Error in handleUpdateProduct:', error);\n      alert('Failed to update product. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteProduct = (product) => {\n    setDeletingProduct(product);\n    setShowDeleteModal(true);\n  };\n\n  const confirmDeleteProduct = async () => {\n    if (!deletingProduct?.id) return;\n    \n    try {\n      setLoading(true);\n      \n      const { data, error } = await productService.deleteProduct(deletingProduct.id);\n      \n      if (error) {\n        console.error('Error deleting product:', error);\n        alert('Failed to delete product. Please try again.');\n        return;\n      }\n      \n      // Reload products to get the updated list\n      await loadProducts();\n      \n      setShowDeleteModal(false);\n      setDeletingProduct(null);\n      \n      console.log('Product deleted:', data);\n    } catch (error) {\n      console.error('Error in confirmDeleteProduct:', error);\n      alert('Failed to delete product. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getProductEmoji = (category) => {\n    switch (category) {\n      case 'Food': return '🥫';\n      case 'Toys': return '🧸';\n      case 'Accessories': return '🛏️';\n      case 'Health': return '💊';\n      case 'Grooming': return '🧴';\n      default: return '📦';\n    }\n  };\n\n  const handleImageUpload = (e, isEditing = false) => {\n    const files = Array.from(e.target.files);\n    const currentImages = isEditing ? editingProduct.images : newProduct.images;\n    \n    if (currentImages.length + files.length > 4) {\n      alert('You can only upload up to 4 images per product');\n      return;\n    }\n\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          const imageData = {\n            id: Date.now() + Math.random(),\n            file: file,\n            preview: event.target.result,\n            name: file.name\n          };\n          \n          if (isEditing) {\n            setEditingProduct(prev => ({\n              ...prev,\n              images: [...prev.images, imageData]\n            }));\n          } else {\n            setNewProduct(prev => ({\n              ...prev,\n              images: [...prev.images, imageData]\n            }));\n          }\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  const removeImage = (imageId, isEditing = false) => {\n    if (isEditing) {\n      setEditingProduct(prev => ({\n        ...prev,\n        images: prev.images.filter(img => img.id !== imageId)\n      }));\n    } else {\n      setNewProduct(prev => ({\n        ...prev,\n        images: prev.images.filter(img => img.id !== imageId)\n      }));\n    }\n  };\n\n  const handleProductClick = (product) => {\n    setDetailProduct(product);\n    setShowProductDetail(true);\n  };\n\n  // Filter products based on search and category\n  const filteredProducts = products.filter(product => {\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         product.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = filterCategory === 'All' || product.category === filterCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center space-y-4 sm:space-y-0\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Product Catalog</h1>\n          <p className=\"text-gray-600\">Manage your product inventory and listings</p>\n        </div>\n        <button \n          onClick={() => setShowAddModal(true)}\n          className=\"w-full sm:w-auto px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9B63] transition-colors\"\n        >\n          Add New Product\n        </button>\n      </div>\n\n      {/* Search and Filter */}\n      <div className=\"bg-white rounded-lg border p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          <div className=\"flex-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n            />\n          </div>\n          <div>\n            <select\n              value={filterCategory}\n              onChange={(e) => setFilterCategory(e.target.value)}\n              className=\"w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n            >\n              <option value=\"All\">All Categories</option>\n              <option value=\"Food\">Food & Treats</option>\n              <option value=\"Toys\">Toys & Games</option>\n              <option value=\"Accessories\">Accessories</option>\n              <option value=\"Health\">Health & Supplements</option>\n              <option value=\"Grooming\">Grooming Supplies</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"mt-2 text-sm text-gray-500\">\n          Showing {filteredProducts.length} of {products.length} products\n        </div>\n      </div>\n\n      {/* Add Product Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Add New Product</h2>\n            <form onSubmit={handleAddProduct} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Product Name *</label>\n                <input\n                  type=\"text\"\n                  required\n                  value={newProduct.name}\n                  onChange={(e) => setNewProduct({...newProduct, name: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                  placeholder=\"e.g., Premium Dog Food\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category *</label>\n                <select\n                  value={newProduct.category}\n                  onChange={(e) => setNewProduct({...newProduct, category: e.target.value, image: getProductEmoji(e.target.value)})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                >\n                  <option value=\"Food\">Food & Treats</option>\n                  <option value=\"Toys\">Toys & Games</option>\n                  <option value=\"Accessories\">Accessories</option>\n                  <option value=\"Health\">Health & Supplements</option>\n                  <option value=\"Grooming\">Grooming Supplies</option>\n                </select>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Price *</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    required\n                    value={newProduct.price}\n                    onChange={(e) => setNewProduct({...newProduct, price: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                    placeholder=\"29.99\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Stock Quantity *</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    required\n                    value={newProduct.stock_quantity}\n                    onChange={(e) => setNewProduct({...newProduct, stock_quantity: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                    placeholder=\"50\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n                <textarea\n                  value={newProduct.description}\n                  onChange={(e) => setNewProduct({...newProduct, description: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                  placeholder=\"Product description...\"\n                  rows=\"3\"\n                />\n              </div>\n\n              {/* Image Upload Section */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Product Images (up to 4)\n                </label>\n                \n                {/* Image Upload Area */}\n                {newProduct.images.length < 4 && (\n                  <div className=\"mb-4\">\n                    <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\">\n                      <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                        <svg className=\"w-8 h-8 mb-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                        </svg>\n                        <p className=\"mb-2 text-sm text-gray-500\">\n                          <span className=\"font-semibold\">Click to upload</span> or drag and drop\n                        </p>\n                        <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB ({4 - newProduct.images.length} remaining)</p>\n                      </div>\n                      <input \n                        type=\"file\" \n                        className=\"hidden\" \n                        multiple \n                        accept=\"image/*\"\n                        onChange={(e) => handleImageUpload(e, false)}\n                      />\n                    </label>\n                  </div>\n                )}\n\n                {/* Image Previews */}\n                {newProduct.images.length > 0 && (\n                  <div className=\"grid grid-cols-2 gap-2 mb-4\">\n                    {newProduct.images.map((image) => (\n                      <div key={image.id} className=\"relative group\">\n                        <img\n                          src={image.preview}\n                          alt={image.name}\n                          className=\"w-full h-24 object-cover rounded-lg border\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={() => removeImage(image.id, false)}\n                          className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600 opacity-0 group-hover:opacity-100 transition-opacity\"\n                        >\n                          ×\n                        </button>\n                        <div className=\"absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 rounded\">\n                          {image.name.length > 10 ? image.name.substring(0, 10) + '...' : image.name}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"flex space-x-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddModal(false)}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9B63] transition-colors\"\n                >\n                  Add Product\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Product Modal */}\n      {showEditModal && editingProduct && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Edit Product</h2>\n            <form onSubmit={handleUpdateProduct} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Product Name *</label>\n                <input\n                  type=\"text\"\n                  required\n                  value={editingProduct.name}\n                  onChange={(e) => setEditingProduct({...editingProduct, name: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category *</label>\n                <select\n                  value={editingProduct.category}\n                  onChange={(e) => setEditingProduct({...editingProduct, category: e.target.value, image: getProductEmoji(e.target.value)})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                >\n                  <option value=\"Food\">Food & Treats</option>\n                  <option value=\"Toys\">Toys & Games</option>\n                  <option value=\"Accessories\">Accessories</option>\n                  <option value=\"Health\">Health & Supplements</option>\n                  <option value=\"Grooming\">Grooming Supplies</option>\n                </select>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Price *</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    required\n                    value={editingProduct.price}\n                    onChange={(e) => setEditingProduct({...editingProduct, price: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Stock Quantity *</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    required\n                    value={editingProduct.stock_quantity}\n                    onChange={(e) => setEditingProduct({...editingProduct, stock_quantity: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n                <textarea\n                  value={editingProduct.description}\n                  onChange={(e) => setEditingProduct({...editingProduct, description: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                  rows=\"3\"\n                />\n              </div>\n\n              {/* Image Upload Section for Edit */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Product Images (up to 4)\n                </label>\n                \n                {/* Image Upload Area */}\n                {editingProduct.images && editingProduct.images.length < 4 && (\n                  <div className=\"mb-4\">\n                    <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\">\n                      <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                        <svg className=\"w-8 h-8 mb-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                        </svg>\n                        <p className=\"mb-2 text-sm text-gray-500\">\n                          <span className=\"font-semibold\">Click to upload</span> or drag and drop\n                        </p>\n                        <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB ({4 - (editingProduct.images?.length || 0)} remaining)</p>\n                      </div>\n                      <input \n                        type=\"file\" \n                        className=\"hidden\" \n                        multiple \n                        accept=\"image/*\"\n                        onChange={(e) => handleImageUpload(e, true)}\n                      />\n                    </label>\n                  </div>\n                )}\n\n                {/* Image Previews for Edit */}\n                {editingProduct.images && editingProduct.images.length > 0 && (\n                  <div className=\"grid grid-cols-2 gap-2 mb-4\">\n                    {editingProduct.images.map((image) => (\n                      <div key={image.id} className=\"relative group\">\n                        <img\n                          src={image.preview}\n                          alt={image.name}\n                          className=\"w-full h-24 object-cover rounded-lg border\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={() => removeImage(image.id, true)}\n                          className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600 opacity-0 group-hover:opacity-100 transition-opacity\"\n                        >\n                          ×\n                        </button>\n                        <div className=\"absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 rounded\">\n                          {image.name.length > 10 ? image.name.substring(0, 10) + '...' : image.name}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"flex space-x-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => {setShowEditModal(false); setEditingProduct(null);}}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9B63] transition-colors\"\n                >\n                  Update Product\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && deletingProduct && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-sm\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Delete Product</h2>\n            <p className=\"text-gray-600 mb-6\">\n              Are you sure you want to delete \"{deletingProduct.name}\"? This action cannot be undone.\n            </p>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => {setShowDeleteModal(false); setDeletingProduct(null);}}\n                className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={confirmDeleteProduct}\n                className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Product Detail Modal */}\n      {showProductDetail && detailProduct && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-bold text-gray-900\">{detailProduct.name}</h2>\n              <button\n                onClick={() => setShowProductDetail(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            {/* Product Images */}\n            {detailProduct.images && detailProduct.images.length > 0 ? (\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Product Images</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {detailProduct.images.map((image, index) => (\n                    <div key={image.id} className=\"relative\">\n                      <img\n                        src={image.preview}\n                        alt={`${detailProduct.name} - View ${index + 1}`}\n                        className=\"w-full h-32 object-cover rounded-lg border\"\n                      />\n                      <div className=\"absolute top-2 left-2 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded\">\n                        {index + 1} of {detailProduct.images.length}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"mb-6 text-center py-8 bg-gray-50 rounded-lg\">\n                <div className=\"text-4xl mb-2\">{detailProduct.image}</div>\n                <p className=\"text-gray-500\">No images uploaded</p>\n              </div>\n            )}\n            \n            {/* Product Details */}\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium text-gray-700\">Category</label>\n                  <p className=\"text-gray-900\">{detailProduct.category}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-700\">Price</label>\n                  <p className=\"text-xl font-bold text-green-600\">${detailProduct.price}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-700\">Stock</label>\n                  <p className={`font-medium ${\n                    detailProduct.status === 'in_stock' ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {detailProduct.stock} units\n                  </p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-700\">Status</label>\n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    detailProduct.status === 'in_stock' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                  }`}>\n                    {detailProduct.status === 'in_stock' ? 'In Stock' : 'Low Stock'}\n                  </span>\n                </div>\n              </div>\n              \n              {detailProduct.description && (\n                <div>\n                  <label className=\"text-sm font-medium text-gray-700\">Description</label>\n                  <p className=\"text-gray-900 mt-1\">{detailProduct.description}</p>\n                </div>\n              )}\n            </div>\n            \n            {/* Action Buttons */}\n            <div className=\"flex space-x-3 mt-6 pt-4 border-t border-gray-200\">\n              <button\n                onClick={() => {\n                  setShowProductDetail(false);\n                  handleEditProduct(detailProduct);\n                }}\n                className=\"flex-1 px-4 py-2 bg-blue-50 text-blue-600 rounded-lg hover:bg-blue-100 transition-colors\"\n              >\n                Edit Product\n              </button>\n              <button\n                onClick={() => {\n                  setShowProductDetail(false);\n                  handleDeleteProduct(detailProduct);\n                }}\n                className=\"flex-1 px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition-colors\"\n              >\n                Delete Product\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n          <div className=\"flex items-center\">\n            <div className=\"text-red-400 mr-3\">⚠️</div>\n            <div>\n              <p className=\"text-red-800 font-medium\">Error loading products</p>\n              <p className=\"text-red-600 text-sm\">{error}</p>\n            </div>\n            <button\n              onClick={loadProducts}\n              className=\"ml-auto px-3 py-1 bg-red-100 text-red-800 text-sm rounded hover:bg-red-200 transition-colors\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"text-center py-12 bg-gray-50 rounded-lg\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading products...</p>\n        </div>\n      ) : filteredProducts.length === 0 ? (\n        <div className=\"text-center py-12 bg-gray-50 rounded-lg\">\n          <div className=\"text-gray-400 text-6xl mb-4\">📦</div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n            {searchTerm || filterCategory !== 'All' ? 'No products found' : 'No products yet'}\n          </h3>\n          <p className=\"text-gray-600 mb-4\">\n            {searchTerm || filterCategory !== 'All' \n              ? 'Try adjusting your search or filter criteria'\n              : 'Start building your product catalog by adding your first product'\n            }\n          </p>\n          {!searchTerm && filterCategory === 'All' && (\n            <button \n              onClick={() => setShowAddModal(true)}\n              className=\"px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9B63] transition-colors\"\n            >\n              Add Your First Product\n            </button>\n          )}\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {filteredProducts.map((product) => (\n            <div key={product.id} className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\">\n              <div className=\"flex items-start space-x-4 mb-4\">\n                <div className=\"flex-shrink-0 cursor-pointer\" onClick={() => handleProductClick(product)}>\n                  {product.images && product.images.length > 0 ? (\n                    <div className=\"relative\">\n                      <img\n                        src={product.images[0].preview}\n                        alt={product.name}\n                        className=\"w-16 h-16 object-cover rounded-lg border hover:opacity-80 transition-opacity\"\n                      />\n                      {product.images.length > 1 && (\n                        <div className=\"absolute -bottom-1 -right-1 bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                          +{product.images.length - 1}\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center text-2xl hover:bg-gray-200 transition-colors\">\n                      {product.image}\n                    </div>\n                  )}\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">{product.name}</h3>\n                  <p className=\"text-sm text-gray-600 mb-2\">{product.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-lg font-bold text-green-600\">${product.price}</p>\n                      <p className=\"text-xs text-gray-500\">{product.category}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className={`text-sm font-medium ${\n                        product.status === 'in_stock' ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {product.stock} in stock\n                      </p>\n                      <span className={`px-2 py-1 text-xs rounded-full ${\n                        product.status === 'in_stock' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {product.status === 'in_stock' ? 'In Stock' : 'Low Stock'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Product Actions */}\n              <div className=\"flex space-x-2 pt-2 border-t border-gray-100\">\n                <button\n                  onClick={() => handleEditProduct(product)}\n                  className=\"flex-1 px-3 py-2 text-sm bg-blue-50 text-blue-600 rounded-md hover:bg-blue-100 transition-colors\"\n                >\n                  Edit\n                </button>\n                <button\n                  onClick={() => handleDeleteProduct(product)}\n                  className=\"flex-1 px-3 py-2 text-sm bg-red-50 text-red-600 rounded-md hover:bg-red-100 transition-colors\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst OrderManagement = ({ user, profile }) => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadOrders();\n  }, [user]);\n\n  const loadOrders = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // For now, we'll show empty state since orders table isn't implemented yet\n      // In the future, this would fetch from an orders table\n      setOrders([]);\n    } catch (error) {\n      console.error('Error loading orders:', error);\n      setOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const pendingOrders = orders.filter(order => order.status === 'pending' || order.status === 'processing');\n  const shippedOrders = orders.filter(order => order.status === 'shipped' || order.status === 'delivered' || order.status === 'in_transit');\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Order Management</h1>\n        <p className=\"text-gray-600\">Track and manage customer orders</p>\n      </div>\n\n      {loading ? (\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading orders...</p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Pending Orders */}\n          <div className=\"bg-white rounded-lg shadow-sm border\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Pending Orders</h3>\n            </div>\n            <div className=\"p-6\">\n              {pendingOrders.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-400 text-4xl mb-4\">⏳</div>\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-2\">No pending orders</h4>\n                  <p className=\"text-gray-600 text-sm\">\n                    New orders will appear here when customers make purchases\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {pendingOrders.map((order) => (\n                    <div key={order.id} className=\"flex items-center space-x-4 p-4 bg-yellow-50 rounded-lg\">\n                      <div className=\"w-10 h-10 bg-yellow-100 rounded-full flex items-center justify-center\">\n                        <span className=\"text-yellow-600 font-semibold text-sm\">#</span>\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium text-gray-900\">Order #{order.id} - {order.customer_name}</p>\n                        <p className=\"text-sm text-gray-600\">{order.items} • ${order.total}</p>\n                        <span className={`inline-block px-2 py-1 text-xs rounded-full mt-1 ${\n                          order.status === 'processing' ? 'bg-yellow-100 text-yellow-800' : 'bg-blue-100 text-blue-800'\n                        }`}>\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Recent Shipments */}\n          <div className=\"bg-white rounded-lg shadow-sm border\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Recent Shipments</h3>\n            </div>\n            <div className=\"p-6\">\n              {shippedOrders.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-400 text-4xl mb-4\">📦</div>\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-2\">No shipments yet</h4>\n                  <p className=\"text-gray-600 text-sm\">\n                    Completed orders will appear here once they're shipped\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {shippedOrders.map((order) => (\n                    <div key={order.id} className=\"flex items-center space-x-4 p-4 bg-green-50 rounded-lg\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                        <span className=\"text-green-600 font-semibold text-sm\">✓</span>\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium text-gray-900\">Order #{order.id} - {order.customer_name}</p>\n                        <p className=\"text-sm text-gray-600\">{order.items} • ${order.total}</p>\n                        <span className={`inline-block px-2 py-1 text-xs rounded-full mt-1 ${\n                          order.status === 'delivered' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'\n                        }`}>\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst InventoryManagement = ({ user, profile }) => {\n  const [lowStockProducts, setLowStockProducts] = useState([]);\n  const [categoryStats, setCategoryStats] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadInventoryData();\n  }, [user]);\n\n  const loadInventoryData = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const { data, error } = await productService.getProducts(user.id);\n      \n      if (error) {\n        console.error('Error loading inventory data:', error);\n        setLowStockProducts([]);\n        setCategoryStats([]);\n      } else {\n        // Filter low stock products (less than 10 units)\n        const lowStock = data.filter(product => product.stock_quantity < 10);\n        setLowStockProducts(lowStock);\n\n        // Calculate category statistics\n        const categoryMap = {};\n        data.forEach(product => {\n          if (categoryMap[product.category]) {\n            categoryMap[product.category]++;\n          } else {\n            categoryMap[product.category] = 1;\n          }\n        });\n\n        const stats = Object.entries(categoryMap).map(([category, count]) => ({\n          category,\n          count,\n          emoji: getProductEmoji(category)\n        }));\n        setCategoryStats(stats);\n      }\n    } catch (error) {\n      console.error('Error in loadInventoryData:', error);\n      setLowStockProducts([]);\n      setCategoryStats([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getProductEmoji = (category) => {\n    switch (category) {\n      case 'Food': return '🥫';\n      case 'Toys': return '🧸';\n      case 'Accessories': return '🛏️';\n      case 'Health': return '💊';\n      case 'Grooming': return '🧴';\n      default: return '📦';\n    }\n  };\n\n  const getStockLevel = (quantity) => {\n    if (quantity === 0) return { level: 'Out of Stock', color: 'red', bgColor: 'bg-red-50' };\n    if (quantity < 5) return { level: 'Critical', color: 'red', bgColor: 'bg-red-50' };\n    if (quantity < 10) return { level: 'Low', color: 'yellow', bgColor: 'bg-yellow-50' };\n    return { level: 'Good', color: 'green', bgColor: 'bg-green-50' };\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Inventory Management</h1>\n        <p className=\"text-gray-600\">Monitor stock levels and manage inventory</p>\n      </div>\n\n      {loading ? (\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading inventory data...</p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Low Stock Alerts */}\n          <div className=\"bg-white rounded-lg shadow-sm border\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Low Stock Alerts</h3>\n            </div>\n            <div className=\"p-6\">\n              {lowStockProducts.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-400 text-4xl mb-4\">✅</div>\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-2\">All products well stocked</h4>\n                  <p className=\"text-gray-600 text-sm\">\n                    Products with low stock (less than 10 units) will appear here\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {lowStockProducts.map((product) => {\n                    const stockInfo = getStockLevel(product.stock_quantity);\n                    return (\n                      <div key={product.id} className={`flex items-center space-x-4 p-4 ${stockInfo.bgColor} rounded-lg`}>\n                        <div className={`w-10 h-10 bg-${stockInfo.color}-100 rounded-full flex items-center justify-center`}>\n                          <span className={`text-${stockInfo.color}-600 font-semibold text-sm`}>\n                            {stockInfo.color === 'red' ? '!' : '⚠'}\n                          </span>\n                        </div>\n                        <div className=\"flex-1\">\n                          <p className=\"font-medium text-gray-900\">{product.name}</p>\n                          <p className=\"text-sm text-gray-600\">\n                            {product.stock_quantity === 0 ? 'Out of stock' : `Only ${product.stock_quantity} units remaining`}\n                          </p>\n                          <span className={`inline-block px-2 py-1 bg-${stockInfo.color}-100 text-${stockInfo.color}-800 text-xs rounded-full mt-1`}>\n                            {stockInfo.level}\n                          </span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Product Categories */}\n          <div className=\"bg-white rounded-lg shadow-sm border\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Product Categories</h3>\n            </div>\n            <div className=\"p-6\">\n              {categoryStats.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-400 text-4xl mb-4\">📦</div>\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-2\">No products yet</h4>\n                  <p className=\"text-gray-600 text-sm\">\n                    Add products to see category breakdown\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {categoryStats.map((stat) => (\n                    <div key={stat.category} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex items-center space-x-3\">\n                        <span className=\"text-lg\">{stat.emoji}</span>\n                        <span className=\"font-medium text-gray-900\">{stat.category}</span>\n                      </div>\n                      <span className=\"text-sm font-semibold text-gray-600\">\n                        {stat.count} product{stat.count !== 1 ? 's' : ''}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BusinessMessages = ({ user, profile }) => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Customer Messages</h1>\n        <p className=\"text-gray-600\">Communicate with your customers about orders and products</p>\n      </div>\n\n      <div className=\"text-center py-12 bg-gray-50 rounded-lg\">\n        <div className=\"text-gray-400 text-6xl mb-4\">💬</div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Customer Messaging Coming Soon</h3>\n        <p className=\"text-gray-600\">\n          Chat directly with customers about their orders, answer product questions, and provide customer support.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst BusinessAnalytics = ({ user, profile }) => {\n  const [analyticsData, setAnalyticsData] = useState({\n    totalOrders: 0,\n    totalRevenue: 0,\n    avgOrderValue: 0,\n    customerRetention: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [user]);\n\n  const loadAnalyticsData = async () => {\n    if (!user?.id) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // For now, we'll calculate basic analytics from product data\n      // In the future, this would include real order and customer data\n      const { data: products, error } = await productService.getProducts(user.id);\n      \n      if (error) {\n        console.error('Error loading analytics data:', error);\n        setAnalyticsData({\n          totalOrders: 0,\n          totalRevenue: 0,\n          avgOrderValue: 0,\n          customerRetention: 0\n        });\n      } else {\n        // Calculate basic metrics from products\n        const totalProducts = products.length;\n        const totalStockValue = products.reduce((sum, product) => \n          sum + (product.price * product.stock_quantity), 0\n        );\n        \n        setAnalyticsData({\n          totalOrders: 0, // Will be populated when order system is implemented\n          totalRevenue: 0, // Will be populated when order system is implemented  \n          avgOrderValue: 0, // Will be populated when order system is implemented\n          customerRetention: 0 // Will be populated when customer tracking is implemented\n        });\n      }\n    } catch (error) {\n      console.error('Error in loadAnalyticsData:', error);\n      setAnalyticsData({\n        totalOrders: 0,\n        totalRevenue: 0,\n        avgOrderValue: 0,\n        customerRetention: 0\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Business Analytics</h1>\n        <p className=\"text-gray-600\">View your business performance and sales insights</p>\n      </div>\n\n      {loading ? (\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading analytics...</p>\n        </div>\n      ) : (\n        <>\n          {/* Analytics Overview */}\n          <div className=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 gap-3 sm:gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-4 sm:p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs sm:text-sm font-medium text-gray-600\">Total Orders</p>\n              <p className=\"text-xl sm:text-2xl font-bold text-gray-900\">{analyticsData.totalOrders}</p>\n            </div>\n            <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-blue-600\">\n              <span className=\"text-lg sm:text-xl\">📊</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-4 sm:p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs sm:text-sm font-medium text-gray-600\">Total Revenue</p>\n              <p className=\"text-xl sm:text-2xl font-bold text-gray-900\">${analyticsData.totalRevenue.toLocaleString()}</p>\n            </div>\n            <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-green-600\">\n              <span className=\"text-lg sm:text-xl\">💰</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-4 sm:p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs sm:text-sm font-medium text-gray-600\">Avg. Order Value</p>\n              <p className=\"text-xl sm:text-2xl font-bold text-gray-900\">${analyticsData.avgOrderValue}</p>\n            </div>\n            <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-purple-600\">\n              <span className=\"text-lg sm:text-xl\">🛒</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-4 sm:p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs sm:text-sm font-medium text-gray-600\">Customer Retention</p>\n              <p className=\"text-xl sm:text-2xl font-bold text-gray-900\">{analyticsData.customerRetention}%</p>\n            </div>\n            <div className=\"w-6 h-6 sm:w-8 sm:h-8 text-yellow-600\">\n              <span className=\"text-lg sm:text-xl\">⭐</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n          {/* Sales Charts */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sales Performance</h3>\n            <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n              <div className=\"text-gray-400 text-4xl mb-4\">📊</div>\n              <h4 className=\"text-lg font-medium text-gray-900 mb-2\">Analytics Coming Soon</h4>\n              <p className=\"text-gray-600 text-sm\">\n                Detailed analytics will be available once you start receiving orders and tracking customer interactions\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst BusinessProfile = ({ user, profile, onProfileUpdate }) => {\n  const [businessInfo, setBusinessInfo] = useState({\n    businessName: '',\n    yearsInBusiness: '',\n    businessType: 'Pet Supply Store',\n    location: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadBusinessProfile();\n  }, [user, profile]);\n\n  const loadBusinessProfile = async () => {\n    try {\n      setLoading(true);\n      \n      // Start with profile data - use personal location as business location\n      let locationData = '';\n      let businessName = '';\n      let businessType = 'Pet Supply Store';\n      let yearsInBusiness = '';\n      \n      if (profile) {\n        console.log('📋 Profile data received:', profile);\n        // Use the personal location from signup as the business location\n        locationData = profile.location || '';\n        \n        // Parse business name and years from organization field\n        if (profile.organization) {\n          if (profile.organization.includes('|years:')) {\n            const parts = profile.organization.split('|years:');\n            businessName = parts[0];\n            yearsInBusiness = parts[1];\n          } else {\n            businessName = profile.organization;\n          }\n        } else {\n          businessName = profile.full_name || '';\n        }\n        \n        businessType = 'Pet Supply Store'; // Default for pet business\n        console.log('📋 Extracted from profile - businessName:', businessName, 'location:', locationData, 'years:', yearsInBusiness);\n      } else {\n        console.log('⚠️ No profile data received');\n      }\n\n      // If no location in profile, try to get it from auth user metadata\n      if (user?.id && !locationData) {\n        try {\n          const { data: userData, error: userError } = await supabase.auth.getUser();\n          if (!userError && userData?.user?.user_metadata) {\n            const metadata = userData.user.user_metadata;\n            // Reconstruct location from signup data\n            const locationParts = [\n              metadata.address,\n              metadata.city,\n              metadata.country\n            ].filter(Boolean);\n            \n            if (locationParts.length > 0) {\n              locationData = locationParts.join(', ');\n            }\n            \n            // Also get business name from metadata if not in profile\n            if (!businessName && metadata.business_name) {\n              businessName = metadata.business_name;\n            }\n          }\n        } catch (error) {\n          console.log('Could not retrieve user metadata:', error);\n        }\n      }\n\n      // Skip providers table query for now due to 406 errors\n      // We have all the data we need from the profile and auth metadata\n\n      const finalBusinessInfo = {\n        businessName: businessName,\n        yearsInBusiness: yearsInBusiness || '', // Now extracted from profile\n        businessType: businessType,\n        location: locationData\n      };\n\n      console.log('📋 Setting business info:', finalBusinessInfo);\n      setBusinessInfo(finalBusinessInfo);\n    } catch (error) {\n      console.error('Error loading business profile:', error);\n      // Fallback to basic profile data\n      if (profile) {\n        setBusinessInfo({\n          businessName: profile.organization || profile.full_name || '',\n          yearsInBusiness: '',\n          businessType: 'Pet Supply Store',\n          location: profile.location || ''\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      setLoading(true);\n      \n      if (!user?.id) {\n        alert('Error: User not found');\n        return;\n      }\n\n      console.log('💾 Saving business profile:', businessInfo);\n      console.log('👤 User ID:', user.id);\n\n      // First, check if profile exists\n      const { data: existingProfile, error: checkError } = await supabase\n        .from('profiles')\n        .select('id, email, organization, location')\n        .eq('id', user.id)\n        .single();\n\n      if (checkError) {\n        console.error('❌ Error checking existing profile:', checkError);\n        if (checkError.code === 'PGRST116') {\n          // Profile doesn't exist, create it\n          console.log('📝 Profile does not exist, creating new profile...');\n          \n          // Create organization data with years if provided\n          let organizationData = businessInfo.businessName;\n          if (businessInfo.yearsInBusiness) {\n            organizationData = `${businessInfo.businessName}|years:${businessInfo.yearsInBusiness}`;\n          }\n          \n          const { data: newProfile, error: insertError } = await supabase\n            .from('profiles')\n            .insert({\n              id: user.id,\n              email: user.email,\n              full_name: user.user_metadata?.full_name || '',\n              phone: user.user_metadata?.phone || '',\n              organization: organizationData,\n              location: businessInfo.location,\n              role: 'pet_business',\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            })\n            .select();\n\n          if (insertError) {\n            console.error('❌ Error creating profile:', insertError);\n            alert(`Error creating profile: ${insertError.message}. Please try again.`);\n            return;\n          }\n          console.log('✅ Profile created successfully:', newProfile);\n        } else {\n          alert(`Error checking profile: ${checkError.message}. Please try again.`);\n          return;\n        }\n      } else {\n        // Profile exists, update it\n        console.log('📝 Profile exists, updating with data:', {\n          organization: businessInfo.businessName,\n          location: businessInfo.location\n        });\n\n        // Store business info including years in business\n        // We'll append years in business to the organization field in a structured way\n        let organizationData = businessInfo.businessName;\n        if (businessInfo.yearsInBusiness) {\n          organizationData = `${businessInfo.businessName}|years:${businessInfo.yearsInBusiness}`;\n        }\n\n        const updateData = {\n          organization: organizationData, // Store business name and years together\n          location: businessInfo.location,\n          updated_at: new Date().toISOString()\n        };\n\n        console.log('📝 Storing organization data:', organizationData);\n\n        const { data: updateResult, error: profileError } = await supabase\n          .from('profiles')\n          .update(updateData)\n          .eq('id', user.id)\n          .select();\n\n        if (profileError) {\n          console.error('❌ Error updating profile:', profileError);\n          alert(`Error saving profile: ${profileError.message}. Please try again.`);\n          return;\n        }\n\n        console.log('✅ Profile updated successfully:', updateResult);\n      }\n\n      // Skip providers table update due to 406 errors\n      console.log('📝 Skipping providers table update - using profiles table only');\n\n      // Show success message\n      alert('✅ Business profile saved successfully!');\n      console.log('🎉 Business profile saved:', businessInfo);\n      \n      // Reload the profile data from the main component to reflect changes everywhere\n      console.log('🔄 Refreshing profile data in main component...');\n      if (onProfileUpdate) {\n        await onProfileUpdate();\n      }\n      // Also reload local data\n      await loadBusinessProfile();\n      console.log('✅ Profile data refreshed');\n    } catch (error) {\n      console.error('❌ Error saving business profile:', error);\n      alert(`Error saving profile: ${error.message || 'Unknown error'}. Please try again.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Business Profile</h1>\n          <p className=\"text-gray-600\">Manage your business information and store details</p>\n        </div>\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading business profile...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Business Profile</h1>\n        <p className=\"text-gray-600\">Manage your business information and store details</p>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"space-y-6\">\n          {/* Business Info */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Business Information</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Business Name</label>\n                <input \n                  type=\"text\" \n                  value={businessInfo.businessName}\n                  onChange={(e) => setBusinessInfo({...businessInfo, businessName: e.target.value})}\n                  placeholder=\"Enter your business name\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Years in Business</label>\n                <input \n                  type=\"number\" \n                  value={businessInfo.yearsInBusiness}\n                  onChange={(e) => setBusinessInfo({...businessInfo, yearsInBusiness: e.target.value})}\n                  placeholder=\"0\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Business Type</label>\n                <select \n                  value={businessInfo.businessType}\n                  onChange={(e) => setBusinessInfo({...businessInfo, businessType: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                >\n                  <option value=\"Pet Supply Store\">Pet Supply Store</option>\n                  <option value=\"Pet Food Retailer\">Pet Food Retailer</option>\n                  <option value=\"Pet Accessories Shop\">Pet Accessories Shop</option>\n                  <option value=\"Online Pet Store\">Online Pet Store</option>\n                  <option value=\"Pet Boutique\">Pet Boutique</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Business Location</label>\n                <input \n                  type=\"text\" \n                  value={businessInfo.location}\n                  onChange={(e) => setBusinessInfo({...businessInfo, location: e.target.value})}\n                  placeholder=\"City, Country\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#5EB47C]\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  This is populated from your personal location provided during signup\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Business Status */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Store Status</h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n                <span className=\"text-sm font-medium text-gray-900\">Dashboard Access</span>\n                <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">Active</span>\n              </div>\n              <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n                <span className=\"text-sm font-medium text-gray-900\">Product Management</span>\n                <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">Enabled</span>\n              </div>\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <span className=\"text-sm font-medium text-gray-900\">Order Management</span>\n                <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full\">Coming Soon</span>\n              </div>\n            </div>\n          </div>\n\n          <button \n            onClick={handleSave}\n            disabled={loading}\n            className={`w-full sm:w-auto px-6 py-2 text-white rounded-lg transition-colors ${\n              loading \n                ? 'bg-gray-400 cursor-not-allowed' \n                : 'bg-[#5EB47C] hover:bg-[#4A9B63]'\n            }`}\n          >\n            {loading ? (\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                <span>Saving...</span>\n              </div>\n            ) : (\n              'Save Changes'\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PetBusinessDashboard = () => {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeSection, setActiveSection] = useState('overview');\n  const navigate = useNavigate();\n\n  // Pet Business navigation focused on products and sales\n  const businessNavigation = [\n    { \n      id: 'overview', \n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    { \n      id: 'products', \n      name: 'Products',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n        </svg>\n      )\n    },\n    { \n      id: 'orders', \n      name: 'Orders',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n        </svg>\n      )\n    },\n    { \n      id: 'inventory', \n      name: 'Inventory',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n        </svg>\n      )\n    },\n    { \n      id: 'messages', \n      name: 'Messages',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n        </svg>\n      )\n    },\n    { \n      id: 'analytics', \n      name: 'Analytics',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n        </svg>\n      )\n    },\n    { \n      id: 'profile', \n      name: 'Profile',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n        </svg>\n      )\n    }\n  ];\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  const fetchUserData = async () => {\n    try {\n      // Get current user\n      const { data: { user: currentUser }, error: userError } = await supabase.auth.getUser();\n      \n      if (userError) {\n        console.error('Error getting user:', userError);\n        setError('Error loading user data');\n        setLoading(false);\n        return;\n      }\n\n      if (!currentUser) {\n        console.log('No user found, redirecting to sign in');\n        navigate('/signin');\n        return;\n      }\n\n      setUser(currentUser);\n\n      // Get user profile\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', currentUser.id)\n        .single();\n\n      if (profileError) {\n        console.error('Error getting profile:', profileError);\n        console.log('PetBusinessDashboard - No profile found, using basic user data');\n      } else {\n        setProfile(profileData);\n        console.log('✅ PetBusinessDashboard - Profile loaded successfully');\n      }\n\n      setLoading(false);\n\n    } catch (error) {\n      console.error('Error in fetchUserData:', error);\n      setError('Error loading dashboard data');\n      setLoading(false);\n    }\n  };\n\n  // Render active section content\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'overview':\n        return <BusinessOverview user={user} profile={profile} />;\n      case 'products':\n        return <ProductCatalog user={user} profile={profile} />;\n      case 'orders':\n        return <OrderManagement user={user} profile={profile} />;\n      case 'inventory':\n        return <InventoryManagement user={user} profile={profile} />;\n      case 'messages':\n        return <BusinessMessages user={user} profile={profile} />;\n      case 'analytics':\n        return <BusinessAnalytics user={user} profile={profile} />;\n      case 'profile':\n        return <BusinessProfile user={user} profile={profile} onProfileUpdate={fetchUserData} />;\n      default:\n        return <BusinessOverview user={user} profile={profile} />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#5EB47C] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading your business dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-500 mb-4\">⚠️</div>\n          <p className=\"text-red-600 font-montserrat\">{error}</p>\n          <button \n            onClick={() => window.location.reload()} \n            className=\"mt-4 px-4 py-2 bg-[#5EB47C] text-white rounded hover:bg-[#4A9B63]\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Get display name from profile or user data\n  const displayName = profile?.full_name || \n                     (user?.user_metadata?.full_name) ||\n                     (user?.email?.split('@')[0]) ||\n                     'Business Owner';\n  \n  const firstName = displayName.split(' ')[0] || 'Owner';\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"flex flex-col lg:flex-row\">\n        {/* Mobile Header */}\n        <div className=\"lg:hidden bg-white border-b border-gray-200 px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3 min-w-0 flex-1\">\n              <img \n                src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/PetBusiness.svg\" \n                alt=\"Pet Business\" \n                className=\"w-8 h-8 flex-shrink-0\"\n              />\n              <div className=\"min-w-0 flex-1\">\n                <h4 className=\"text-md font-medium text-gray-900 truncate\">Welcome back, {firstName}</h4>\n                <p className=\"text-sm text-gray-600 truncate\">Pet Business Owner</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        <div className=\"lg:hidden bg-white border-b border-gray-200 px-2 py-2\">\n          <div className=\"flex overflow-x-auto space-x-1 pb-2\">\n            {businessNavigation.map((item) => (\n              <button\n                key={item.id}\n                onClick={() => setActiveSection(item.id)}\n                className={`flex-shrink-0 flex items-center px-3 py-2 text-xs font-medium rounded-md transition-colors whitespace-nowrap ${\n                  activeSection === item.id\n                    ? 'bg-green-100 text-[#5EB47C]'\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                }`}\n              >\n                <span className=\"mr-2\">{item.icon}</span>\n                {item.name}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Desktop Sidebar */}\n        <div className=\"hidden lg:block w-64 bg-white shadow-sm border-r border-gray-200 min-h-screen\">\n          <div className=\"p-6\">\n            <div className=\"mb-6\">\n              <div className=\"flex items-center space-x-3 mb-3\">\n                <img \n                  src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/PetBusiness.svg\" \n                  alt=\"Pet Business\" \n                  className=\"w-10 h-10\"\n                />\n                <div className=\"min-w-0 flex-1\">\n                  <h1 className=\"text-lg font-semibold text-gray-900 truncate\">Pet Business</h1>\n                  <p className=\"text-sm text-gray-600 truncate\">{displayName}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Navigation */}\n            <nav className=\"space-y-2\">\n              {businessNavigation.map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveSection(item.id)}\n                  className={`w-full flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors ${\n                    activeSection === item.id\n                      ? 'bg-green-100 text-[#5EB47C]'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  <span className=\"mr-3\">{item.icon}</span>\n                  {item.name}\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 p-3 sm:p-4 lg:p-6\">\n          {renderActiveSection()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PetBusinessDashboard;"],"names":["productService","getProducts","filters","arguments","length","undefined","query","supabase","from","select","order","ascending","category","eq","providerId","data","error","success","handleSupabaseError","getProduct","productId","single","createProduct","productData","insert","updateProduct","updates","update","deleteProduct","delete","BusinessOverview","_ref","_profile$full_name","_user$email","user","profile","stats","setStats","useState","monthlyRevenue","activeCustomers","productsInStock","ordersThisMonth","loading","setLoading","useEffect","loadBusinessStats","async","id","getBusinessStats","console","Math","round","totalStockValue","floor","totalProducts","_jsxs","className","children","_jsx","full_name","split","email","toLocaleString","RecentOrdersWidget","TopProductsWidget","_ref2","recentOrders","setRecentOrders","loadRecentOrders","map","customer_name","items","total","status","charAt","toUpperCase","slice","_ref3","topProducts","setTopProducts","loadTopProducts","sortedProducts","sort","a","b","stock_quantity","getProductEmoji","product","name","price","ProductCatalog","_ref4","_editingProduct$image","products","setProducts","showAddModal","setShowAddModal","showEditModal","setShowEditModal","editingProduct","setEditingProduct","showDeleteModal","setShowDeleteModal","deletingProduct","setDeletingProduct","searchTerm","setSearchTerm","filterCategory","setFilterCategory","showProductDetail","setShowProductDetail","detailProduct","setDetailProduct","setError","newProduct","setNewProduct","description","image","images","React","loadProducts","fetchError","transformedProducts","stock","handleEditProduct","handleDeleteProduct","handleImageUpload","e","isEditing","files","Array","target","alert","forEach","file","type","startsWith","reader","FileReader","onload","event","imageData","Date","now","random","preview","result","prev","readAsDataURL","removeImage","imageId","filter","img","filteredProducts","matchesSearch","toLowerCase","includes","matchesCategory","onClick","placeholder","value","onChange","onSubmit","preventDefault","provider_id","parseFloat","parseInt","log","required","step","min","rows","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","multiple","accept","src","alt","substring","index","handleProductClick","OrderManagement","_ref5","orders","setOrders","loadOrders","pendingOrders","shippedOrders","InventoryManagement","_ref6","lowStockProducts","setLowStockProducts","categoryStats","setCategoryStats","loadInventoryData","lowStock","categoryMap","Object","entries","_ref7","count","emoji","stockInfo","quantity","level","color","bgColor","stat","BusinessMessages","_ref8","BusinessAnalytics","_ref9","analyticsData","setAnalyticsData","totalOrders","totalRevenue","avgOrderValue","customerRetention","loadAnalyticsData","reduce","sum","_Fragment","BusinessProfile","_ref0","onProfileUpdate","businessInfo","setBusinessInfo","businessName","yearsInBusiness","businessType","location","loadBusinessProfile","locationData","organization","parts","_userData$user","userData","userError","auth","getUser","user_metadata","metadata","locationParts","address","city","country","Boolean","join","business_name","finalBusinessInfo","existingProfile","checkError","code","message","_user$user_metadata","_user$user_metadata2","organizationData","newProfile","insertError","phone","role","created_at","toISOString","updated_at","updateData","updateResult","profileError","disabled","PetBusinessDashboard","_user$user_metadata3","_user$email2","setUser","setProfile","activeSection","setActiveSection","navigate","useNavigate","businessNavigation","icon","fetchUserData","currentUser","profileData","window","reload","displayName","firstName","item","renderActiveSection"],"sourceRoot":""}