{"version":3,"file":"static/js/vendors.6eadb821.js","mappings":"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","sources":["../node_modules/@sentry/core/src/debug-build.ts","../node_modules/@sentry/core/src/utils/worldwide.ts","../node_modules/@sentry/core/src/utils/version.ts","../node_modules/@sentry/core/src/carrier.ts","../node_modules/@sentry/core/src/utils/debug-logger.ts","../node_modules/@sentry/core/src/utils/stacktrace.ts","../node_modules/@sentry/core/src/instrument/handlers.ts","../node_modules/@sentry/core/src/instrument/globalError.ts","../node_modules/@sentry/core/src/instrument/globalUnhandledRejection.ts","../node_modules/@sentry/core/src/utils/is.ts","../node_modules/@sentry/core/src/utils/browser.ts","../node_modules/@sentry/core/src/utils/string.ts","../node_modules/@sentry/core/src/utils/object.ts","../node_modules/@sentry/core/src/utils/misc.ts","../node_modules/@sentry/core/src/utils/time.ts","../node_modules/@sentry/core/src/session.ts","../node_modules/@sentry/core/src/utils/merge.ts","../node_modules/@sentry/core/src/utils/propagationContext.ts","../node_modules/@sentry/core/src/utils/spanOnScope.ts","../node_modules/@sentry/core/src/scope.ts","../node_modules/@sentry/core/src/asyncContext/stackStrategy.ts","../node_modules/@sentry/core/src/defaultScopes.ts","../node_modules/@sentry/core/src/asyncContext/index.ts","../node_modules/@sentry/core/src/currentScopes.ts","../node_modules/@sentry/core/src/semanticAttributes.ts","../node_modules/@sentry/core/src/tracing/utils.ts","../node_modules/@sentry/core/src/utils/baggage.ts","../node_modules/@sentry/core/src/utils/dsn.ts","../node_modules/@sentry/core/src/utils/parseSampleRate.ts","../node_modules/@sentry/core/src/utils/spanUtils.ts","../node_modules/@sentry/core/src/tracing/spanstatus.ts","../node_modules/@sentry/core/src/utils/hasSpansEnabled.ts","../node_modules/@sentry/core/src/constants.ts","../node_modules/@sentry/core/src/tracing/dynamicSamplingContext.ts","../node_modules/@sentry/core/src/tracing/sentryNonRecordingSpan.ts","../node_modules/@sentry/core/src/utils/normalize.ts","../node_modules/@sentry/core/src/utils/envelope.ts","../node_modules/@sentry/core/src/envelope.ts","../node_modules/@sentry/core/src/tracing/measurement.ts","../node_modules/@sentry/core/src/tracing/sentrySpan.ts","../node_modules/@sentry/core/src/tracing/logSpans.ts","../node_modules/@sentry/core/src/tracing/trace.ts","../node_modules/@sentry/core/src/tracing/sampling.ts","../node_modules/@sentry/core/src/tracing/idleSpan.ts","../node_modules/@sentry/core/src/utils/syncpromise.ts","../node_modules/@sentry/core/src/eventProcessors.ts","../node_modules/@sentry/core/src/utils/applyScopeDataToEvent.ts","../node_modules/@sentry/core/src/utils/debug-ids.ts","../node_modules/@sentry/core/src/utils/prepareEvent.ts","../node_modules/@sentry/core/src/exports.ts","../node_modules/@sentry/core/src/api.ts","../node_modules/@sentry/core/src/integration.ts","../node_modules/@sentry/core/src/utils/eventUtils.ts","../node_modules/@sentry/core/src/client.ts","../node_modules/@sentry/core/src/utils/transactionEvent.ts","../node_modules/@sentry/core/src/utils/clientreport.ts","../node_modules/@sentry/core/src/logs/exports.ts","../node_modules/@sentry/core/src/logs/envelope.ts","../node_modules/@sentry/core/src/sdk.ts","../node_modules/@sentry/core/src/utils/promisebuffer.ts","../node_modules/@sentry/core/src/utils/ratelimit.ts","../node_modules/@sentry/core/src/transports/base.ts","../node_modules/@sentry/core/src/utils/ipAddress.ts","../node_modules/@sentry/core/src/utils/sdkMetadata.ts","../node_modules/@sentry/core/src/breadcrumbs.ts","../node_modules/@sentry/core/src/integrations/functiontostring.ts","../node_modules/@sentry/core/src/integrations/eventFilters.ts","../node_modules/@sentry/core/src/utils/aggregate-errors.ts","../node_modules/@sentry/core/src/metadata.ts","../node_modules/@sentry/core/src/instrument/console.ts","../node_modules/@sentry/core/src/utils/severity.ts","../node_modules/@sentry/core/src/integrations/dedupe.ts","../node_modules/@sentry/core/src/utils/url.ts","../node_modules/@sentry/core/src/integrations/mcp-server/attributes.ts","../node_modules/@sentry/core/src/integrations/mcp-server/sessionManagement.ts","../node_modules/@sentry/core/src/integrations/mcp-server/piiFiltering.ts","../node_modules/@sentry/core/src/integrations/mcp-server/correlation.ts","../node_modules/@sentry/core/src/integrations/mcp-server/index.ts","../node_modules/@sentry/core/src/utils/breadcrumb-log-level.ts","../node_modules/@sentry/core/src/utils/error.ts","../node_modules/@sentry/core/src/utils/supports.ts","../node_modules/@sentry/core/src/instrument/fetch.ts","../node_modules/@sentry/core/src/utils/node.ts","../node_modules/@sentry/core/src/utils/env.ts","../node_modules/@sentry/core/src/utils/isBrowser.ts","../node_modules/@sentry-internal/feedback/src/constants/index.ts","../node_modules/@sentry-internal/feedback/src/core/sendFeedback.ts","../node_modules/@sentry/core/src/feedback.ts","../node_modules/@sentry-internal/feedback/src/util/debug-build.ts","../node_modules/@sentry-internal/feedback/src/util/mergeOptions.ts","../node_modules/@sentry-internal/feedback/src/util/setAttributesNS.ts","../node_modules/@sentry-internal/feedback/src/core/components/Actor.ts","../node_modules/@sentry-internal/feedback/src/core/components/FeedbackIcon.ts","../node_modules/@sentry-internal/feedback/src/core/components/Actor.css.ts","../node_modules/@sentry-internal/feedback/src/core/createMainStyles.ts","../node_modules/@sentry-internal/feedback/src/core/integration.ts","../node_modules/@sentry-internal/feedback/src/util/isScreenshotSupported.ts","../node_modules/node_modules/preact/dist/preact.mjs","../node_modules/node_modules/preact/hooks/dist/hooks.mjs","../node_modules/@sentry-internal/feedback/src/modal/components/SentryLogo.ts","../node_modules/@sentry-internal/feedback/src/modal/components/DialogHeader.tsx","../node_modules/@sentry-internal/feedback/src/modal/components/Form.tsx","../node_modules/@sentry-internal/feedback/src/util/validate.ts","../node_modules/@sentry-internal/feedback/src/modal/components/SuccessIcon.ts","../node_modules/@sentry-internal/feedback/src/modal/components/Dialog.tsx","../node_modules/@sentry-internal/feedback/src/modal/integration.tsx","../node_modules/@sentry-internal/feedback/src/modal/components/Dialog.css.ts","../node_modules/@sentry-internal/feedback/src/screenshot/components/ScreenshotInput.css.ts","../node_modules/@sentry-internal/feedback/src/screenshot/components/useTakeScreenshot.tsx","../node_modules/@sentry-internal/feedback/src/screenshot/components/ScreenshotEditor.tsx","../node_modules/@sentry-internal/feedback/src/screenshot/components/Toolbar.tsx","../node_modules/@sentry-internal/feedback/src/screenshot/components/IconClose.tsx","../node_modules/@sentry-internal/feedback/src/screenshot/integration.ts","../node_modules/@sentry/browser/src/helpers.ts","../node_modules/@sentry/browser/src/utils/lazyLoadIntegration.ts","../node_modules/@sentry/browser/src/feedbackAsync.ts","../node_modules/@sentry/browser/src/feedbackSync.ts","../node_modules/@sentry/browser/src/eventbuilder.ts","../node_modules/@sentry/browser/src/client.ts","../node_modules/@sentry-internal/browser-utils/src/debug-build.ts","../node_modules/@sentry-internal/browser-utils/src/types.ts","../node_modules/@sentry-internal/browser-utils/src/metrics/web-vitals/lib/initUnique.ts","../node_modules/@sentry-internal/browser-utils/src/instrument/dom.ts","../node_modules/@sentry-internal/browser-utils/src/instrument/history.ts","../node_modules/@sentry-internal/browser-utils/src/getNativeImplementation.ts","../node_modules/@sentry-internal/browser-utils/src/instrument/xhr.ts","../node_modules/@sentry-internal/browser-utils/src/metrics/inp.ts","../node_modules/@sentry/browser/src/transports/fetch.ts","../node_modules/@sentry/browser/src/stack-parsers.ts","../node_modules/@sentry/browser/src/debug-build.ts","../node_modules/@sentry/browser/src/integrations/breadcrumbs.ts","../node_modules/@sentry/browser/src/integrations/browserapierrors.ts","../node_modules/@sentry/browser/src/integrations/browsersession.ts","../node_modules/@sentry/browser/src/integrations/globalhandlers.ts","../node_modules/@sentry/browser/src/integrations/httpcontext.ts","../node_modules/@sentry/browser/src/integrations/linkederrors.ts","../node_modules/@sentry/browser/src/utils/detectBrowserExtension.ts","../node_modules/@sentry/browser/src/report-dialog.ts","../node_modules/@sentry/browser/src/integrations/reportingobserver.ts","../node_modules/node_modules/@sentry-internal/rrweb/dist/rrweb.js","../node_modules/@sentry-internal/replay/src/coreHandlers/handleClick.ts","../node_modules/@sentry-internal/replay/src/coreHandlers/util/getAttributesToRecord.ts","../node_modules/@sentry-internal/replay/src/debug-build.ts","../node_modules/@sentry-internal/replay/src/util/logger.ts","../node_modules/@sentry-internal/replay/src/eventBuffer/error.ts","../node_modules/@sentry-internal/replay/src/util/getRecordingSamplingOptions.ts","../node_modules/@sentry-internal/replay/src/util/sendReplayRequest.ts","../node_modules/@sentry/browser/src/tracing/request.ts","../node_modules/@sentry/browser/src/profiling/utils.ts","../node_modules/@sentry/react/src/sdk.ts","../node_modules/@sentry/browser/src/sdk.ts","../node_modules/@sentry/react/src/error.ts","../node_modules/@sentry/react/src/profiler.tsx","../node_modules/@sentry/react/src/constants.ts","../node_modules/@sentry/react/src/debug-build.ts","../node_modules/@sentry/react/src/errorboundary.tsx","../node_modules/@sentry/react/src/reactrouterv6-compat-utils.tsx","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/uuid/dist/esm-browser/max.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/index.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js"],"sourcesContent":["declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the `debug` singleton, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Carrier } from '../carrier';\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport type InternalGlobal = {\n  navigator?: { userAgent?: string; maxTouchPoints?: number };\n  console: Console;\n  PerformanceObserver?: any;\n  Sentry?: any;\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n  _sentryEsmLoaderHookRegistered?: boolean;\n} & Carrier;\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ = globalThis as unknown as InternalGlobal;\n","// This is a magic string replaced by rollup\ndeclare const __SENTRY_SDK_VERSION__: string;\n\nexport const SDK_VERSION = typeof __SENTRY_SDK_VERSION__ === 'string' ? __SENTRY_SDK_VERSION__ : '0.0.0-unknown.0';\n","import type { AsyncContextStack } from './asyncContext/stackStrategy';\nimport type { AsyncContextStrategy } from './asyncContext/types';\nimport type { Client } from './client';\nimport type { Scope } from './scope';\nimport type { SerializedLog } from './types-hoist/log';\nimport { SDK_VERSION } from './utils/version';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: VersionedCarrier;\n}\n\ntype VersionedCarrier = {\n  version?: string;\n} & Record<Exclude<string, 'version'>, SentryCarrier>;\n\nexport interface SentryCarrier {\n  acs?: AsyncContextStrategy;\n  stack?: AsyncContextStack;\n\n  globalScope?: Scope;\n  defaultIsolationScope?: Scope;\n  defaultCurrentScope?: Scope;\n  loggerSettings?: { enabled: boolean };\n  /**\n   * A map of Sentry clients to their log buffers.\n   * This is used to store logs that are sent to Sentry.\n   */\n  clientToLogBufferMap?: WeakMap<Client, Array<SerializedLog>>;\n\n  /** Overwrites TextEncoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  encodePolyfill?: (input: string) => Uint8Array;\n  /** Overwrites TextDecoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  decodePolyfill?: (input: Uint8Array) => string;\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nexport function getSentryCarrier(carrier: Carrier): SentryCarrier {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<Prop extends keyof SentryCarrier>(\n  name: Prop,\n  creator: () => NonNullable<SentryCarrier[Prop]>,\n  obj = GLOBAL_OBJ,\n): NonNullable<SentryCarrier[Prop]> {\n  const __SENTRY__ = (obj.__SENTRY__ = obj.__SENTRY__ || {});\n  const carrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  // Note: We do not want to set `carrier.version` here, as this may be called before any `init` is called, e.g. for the default scopes\n  return carrier[name] || (carrier[name] = creator());\n}\n","import { getGlobalSingleton } from '../carrier';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ConsoleLevel } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from './worldwide';\n\nexport interface SentryDebugLogger {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n  log(...args: Parameters<typeof console.log>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n}\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: Partial<{\n  log(...args: Parameters<typeof console.log>): void;\n  info(...args: Parameters<typeof console.info>): void;\n  warn(...args: Parameters<typeof console.warn>): void;\n  error(...args: Parameters<typeof console.error>): void;\n  debug(...args: Parameters<typeof console.debug>): void;\n  assert(...args: Parameters<typeof console.assert>): void;\n  trace(...args: Parameters<typeof console.trace>): void;\n}> = {};\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<Record<ConsoleLevel, (...args: unknown[]) => void>> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level];\n    wrappedFuncs[level] = console[level] as (...args: unknown[]) => void;\n    console[level] = originalConsoleMethod as (...args: unknown[]) => void;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as (...args: unknown[]) => void;\n    });\n  }\n}\n\nfunction enable(): void {\n  _getLoggerSettings().enabled = true;\n}\n\nfunction disable(): void {\n  _getLoggerSettings().enabled = false;\n}\n\nfunction isEnabled(): boolean {\n  return _getLoggerSettings().enabled;\n}\n\nfunction log(...args: Parameters<typeof console.log>): void {\n  _maybeLog('log', ...args);\n}\n\nfunction info(...args: Parameters<typeof console.info>): void {\n  _maybeLog('info', ...args);\n}\n\nfunction warn(...args: Parameters<typeof console.warn>): void {\n  _maybeLog('warn', ...args);\n}\n\nfunction error(...args: Parameters<typeof console.error>): void {\n  _maybeLog('error', ...args);\n}\n\nfunction _maybeLog(level: ConsoleLevel, ...args: Parameters<(typeof console)[typeof level]>): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  if (isEnabled()) {\n    consoleSandbox(() => {\n      GLOBAL_OBJ.console[level](`${PREFIX}[${level}]:`, ...args);\n    });\n  }\n}\n\nfunction _getLoggerSettings(): { enabled: boolean } {\n  if (!DEBUG_BUILD) {\n    return { enabled: false };\n  }\n\n  return getGlobalSingleton('loggerSettings', () => ({ enabled: false }));\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n */\nexport const debug = {\n  /** Enable logging. */\n  enable,\n  /** Disable logging. */\n  disable,\n  /** Check if logging is enabled. */\n  isEnabled,\n  /** Log a message. */\n  log,\n  /** Log a warning. */\n  warn,\n  /** Log an error. */\n  error,\n} satisfies SentryDebugLogger;\n","import type { Event } from '../types-hoist/event';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport type { StackLineParser, StackParser } from '../types-hoist/stacktrace';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nexport const UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirstLines: number = 0, framesToPop: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      let line = lines[i] as string;\n      // Truncate lines over 1kb because many of the regular expressions use\n      // backtracking which results in run time that increases exponentially\n      // with input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        line = line.slice(0, 1024);\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the scope itself, making it:\n    //\n    //   Sentry.captureException()\n    //   scope.captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr: StackFrame[]): StackFrame {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nexport function getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames: StackFrame[] = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { debug } from '../utils/debug-logger';\nimport { getFunctionName } from '../utils/stacktrace';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'fetch-body-resolved'\n  | 'history'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && debug.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        debug.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","import type { HandlerDataUnhandledRejection } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e: unknown): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Primitive } from '../types-hoist/misc';\nimport type { ParameterizedString } from '../types-hoist/parameterize';\nimport type { PolymorphicEvent } from '../types-hoist/polymorphics';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat?.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n\n/**\n * Checks whether the given parameter is a Standard Web API Request instance.\n *\n * Returns false if Request is not available in the current runtime.\n */\nexport function isRequest(request: unknown): request is Request {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n","import { isString } from './is';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n\n  if (!elem?.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs = keyAttrs?.length\n    ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n    : null;\n\n  if (keyAttrPairs?.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch {\n    return '';\n  }\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from '../vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: unknown[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { htmlTreeAsString } from './browser';\nimport { debug } from './debug-logger';\nimport { isElement, isError, isEvent, isInstanceOf, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * If the method on the passed object is not a function, the wrapper will not be applied.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  // explicitly casting to unknown because we don't know the type of the method initially at all\n  const original = source[name] as unknown;\n\n  if (typeof original !== 'function') {\n    return;\n  }\n\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch {\n    DEBUG_BUILD && debug.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function getOriginalFunction<T extends Function>(func: WrappedFunction<T>): T | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n *\n * @deprecated This function is no longer used by the SDK and will be removed in a future major version.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  // Early return for primitive values\n  if (inputValue === null || typeof inputValue !== 'object') {\n    return inputValue;\n  }\n\n  // Check memo map first for all object types\n  const memoVal = memoizationMap.get(inputValue);\n  if (memoVal !== undefined) {\n    return memoVal as T;\n  }\n\n  // handle arrays\n  if (Array.isArray(inputValue)) {\n    const returnValue: unknown[] = [];\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach(value => {\n      returnValue.push(_dropUndefinedKeys(value, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  if (isPojo(inputValue)) {\n    const returnValue: { [key: string]: unknown } = {};\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    const keys = Object.keys(inputValue);\n\n    keys.forEach(key => {\n      const val = inputValue[key];\n      if (val !== undefined) {\n        returnValue[key] = _dropUndefinedKeys(val, memoizationMap);\n      }\n    });\n\n    return returnValue as T;\n  }\n\n  // For other object types, return as is\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  // Plain objects have Object as constructor or no constructor\n  const constructor = (input as object).constructor;\n  return constructor === Object || constructor === undefined;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","import type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { Mechanism } from '../types-hoist/mechanism';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\nfunction getCrypto(): CryptoInternal | undefined {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  return gbl.crypto || gbl.msCrypto;\n}\n\n/**\n * UUID4 generator\n * @param crypto Object that provides the crypto API.\n * @returns string Generated UUID4.\n */\nexport function uuid4(crypto = getCrypto()): string {\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto?.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto?.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0]!;\n      };\n    }\n  } catch {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception?.values?.[0];\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...currentMechanism?.data, ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\nfunction _parseInt(input: string | undefined): number {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex]!, frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception: unknown): boolean | void {\n  try {\n    return (exception as { __sentry_captured__?: boolean }).__sentry_captured__;\n  } catch {} // eslint-disable-line no-empty\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  // Some browser and environments don't have a performance or timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  if (!performance?.now || !performance.timeOrigin) {\n    return dateTimestampInSeconds;\n  }\n\n  const timeOrigin = performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\nlet _cachedTimestampInSeconds: (() => number) | undefined;\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport function timestampInSeconds(): number {\n  // We store this in a closure so that we don't have to create a new function every time this is called.\n  const func = _cachedTimestampInSeconds ?? (_cachedTimestampInSeconds = createUnixTimestampInSecondsFunc());\n  return func();\n}\n\n/**\n * Cached result of getBrowserTimeOrigin.\n */\nlet cachedTimeOrigin: [number | undefined, string] | undefined;\n\n/**\n * Gets the time origin and the mode used to determine it.\n */\nfunction getBrowserTimeOrigin(): [number | undefined, string] {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance?.now) {\n    return [undefined, 'none'];\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing?.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      return [performance.timeOrigin, 'timeOrigin'];\n    } else {\n      return [navigationStart, 'navigationStart'];\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  return [dateNow, 'dateNow'];\n}\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport function browserPerformanceTimeOrigin(): number | undefined {\n  if (!cachedTimeOrigin) {\n    cachedTimeOrigin = getBrowserTimeOrigin();\n  }\n\n  return cachedTimeOrigin[0];\n}\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from './types-hoist/session';\nimport { uuid4 } from './utils/misc';\nimport { timestampInSeconds } from './utils/time';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see Client.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return {\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  };\n}\n","/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nexport function merge<T>(initialObj: T, mergeObj: T, levels = 2): T {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n","import { uuid4 } from './misc';\n\n/**\n * Generate a random, valid trace ID.\n */\nexport function generateTraceId(): string {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nexport function generateSpanId(): string {\n  return uuid4().substring(16);\n}\n","import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\ntype ScopeWithMaybeSpan = Scope & {\n  [SCOPE_SPAN_FIELD]?: Span;\n};\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _setSpanForScope(scope: Scope, span: Span | undefined): void {\n  if (span) {\n    addNonEnumerableProperty(scope as ScopeWithMaybeSpan, SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope as ScopeWithMaybeSpan)[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _getSpanForScope(scope: ScopeWithMaybeSpan): Span | undefined {\n  return scope[SCOPE_SPAN_FIELD];\n}\n","/* eslint-disable max-lines */\nimport type { Client } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport { updateSession } from './session';\nimport type { Attachment } from './types-hoist/attachment';\nimport type { Breadcrumb } from './types-hoist/breadcrumb';\nimport type { Context, Contexts } from './types-hoist/context';\nimport type { DynamicSamplingContext } from './types-hoist/envelope';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { RequestEventData } from './types-hoist/request';\nimport type { Session } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span } from './types-hoist/span';\nimport type { PropagationContext } from './types-hoist/tracing';\nimport type { User } from './types-hoist/user';\nimport { debug } from './utils/debug-logger';\nimport { isPlainObject } from './utils/is';\nimport { merge } from './utils/merge';\nimport { uuid4 } from './utils/misc';\nimport { generateTraceId } from './utils/propagationContext';\nimport { _getSpanForScope, _setSpanForScope } from './utils/spanOnScope';\nimport { truncate } from './utils/string';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * A context to be used for capturing an event.\n * This can either be a Scope, or a partial ScopeContext,\n * or a callback that receives the current scope and returns a new scope to use.\n */\nexport type CaptureContext = Scope | Partial<ScopeContext> | ((scope: Scope) => Scope);\n\n/**\n * Data that can be converted to a Scope.\n */\nexport interface ScopeContext {\n  user: User;\n  level: SeverityLevel;\n  extra: Extras;\n  contexts: Contexts;\n  tags: { [key: string]: Primitive };\n  fingerprint: string[];\n  propagationContext: PropagationContext;\n}\n\nexport interface SdkProcessingMetadata {\n  [key: string]: unknown;\n  requestSession?: {\n    status: 'ok' | 'errored' | 'crashed';\n  };\n  normalizedRequest?: RequestEventData;\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>;\n  capturedSpanScope?: Scope;\n  capturedSpanIsolationScope?: Scope;\n  spanCountBeforeProcessing?: number;\n  ipAddress?: string;\n}\n\n/**\n * Normalized data of the Scope, ready to be used.\n */\nexport interface ScopeData {\n  eventProcessors: EventProcessor[];\n  breadcrumbs: Breadcrumb[];\n  user: User;\n  tags: { [key: string]: Primitive };\n  extra: Extras;\n  contexts: Contexts;\n  attachments: Attachment[];\n  propagationContext: PropagationContext;\n  sdkProcessingMetadata: SdkProcessingMetadata;\n  fingerprint: string[];\n  level?: SeverityLevel;\n  transactionName?: string;\n  span?: Span;\n}\n\n/**\n * Holds additional event information.\n */\nexport class Scope {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called during event processing. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: SdkProcessingMetadata;\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: SeverityLevel;\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n  protected _transactionName?: string;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  /** Contains the last event id of a captured event.  */\n  protected _lastEventId?: string;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  /**\n   * Clone all data from this scope into a new scope.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * Update the client assigned to this scope.\n   * Note that not every scope will have a client assigned - isolation scopes & the global scope will generally not have a client,\n   * as well as manually created scopes.\n   */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Set the ID of the last captured error event.\n   * This is generally only captured on the isolation scope.\n   */\n  public setLastEventId(lastEventId: string | undefined): void {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this._client as C | undefined;\n  }\n\n  /**\n   * Get the ID of the last captured error event.\n   * This is generally only available on the isolation scope.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * Add an event processor that will be called before an event is sent.\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * Set the user for this scope.\n   * Set to `null` to unset the user.\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the user from this scope.\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * Set an object that will be merged into existing tags on the scope,\n   * and will be sent as tags data with the event.\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single tag that will be sent as tags data with the event.\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set an object that will be merged into existing extra on the scope,\n   * and will be sent as extra data with the event.\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single key:value extra entry that will be sent as extra data with the event.\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the fingerprint on the scope to send with the events.\n   * @param {string[]} fingerprint Fingerprint to group events in Sentry.\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the level on the scope for future events.\n   */\n  public setLevel(level: SeverityLevel): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets context data with the given name.\n   * Data passed as context will be normalized. You can also pass `null` to unset the context.\n   * Note that context data will not be merged - calling `setContext` will overwrite an existing context with the same key.\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set the session for the scope.\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the session from the scope.\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * Updates the scope with provided data. Can work in three variations:\n   * - plain object containing updatable attributes\n   * - Scope instance that'll extract the attributes from\n   * - callback function that'll receive the current scope as an argument and allow for modifications\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const scopeInstance =\n      scopeToMerge instanceof Scope\n        ? scopeToMerge.getScopeData()\n        : isPlainObject(scopeToMerge)\n          ? (captureContext as ScopeContext)\n          : undefined;\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    return this;\n  }\n\n  /**\n   * Clears the current scope and resets its properties.\n   * Note: The client will not be cleared.\n   */\n  public clear(): this {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Adds a breadcrumb to the scope.\n   * By default, the last 100 breadcrumbs are kept.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb: Breadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n      // Breadcrumb messages can theoretically be infinitely large and they're held in memory so we truncate them not to leak (too much) memory\n      message: breadcrumb.message ? truncate(breadcrumb.message, 2048) : breadcrumb.message,\n    };\n\n    this._breadcrumbs.push(mergedBreadcrumb);\n    if (this._breadcrumbs.length > maxCrumbs) {\n      this._breadcrumbs = this._breadcrumbs.slice(-maxCrumbs);\n      this._client?.recordDroppedEvent('buffer_overflow', 'log_item');\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * Get the last breadcrumb of the scope.\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * Clear all breadcrumbs from the scope.\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Add an attachment to the scope.\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * Clear all attachments from the scope.\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Get the data of this scope, which should be applied to an event during processing.\n   */\n  public getScopeData(): ScopeData {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry.\n   */\n  public setSDKProcessingMetadata(newData: SdkProcessingMetadata): this {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * Add propagation context to the scope, used for distributed tracing\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * Get propagation context from the scope, used for distributed tracing\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @returns {string} The id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @returns {string} The id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a Sentry event for this scope.\n   *\n   * @returns {string} The id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      DEBUG_BUILD && debug.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n","import type { Client } from '../client';\nimport { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes';\nimport { Scope } from '../scope';\nimport { isThenable } from '../utils/is';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport type { AsyncContextStrategy } from './types';\n\ninterface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * This is an object that holds a stack of scopes.\n */\nexport class AsyncContextStack {\n  private readonly _stack: [Layer, ...Layer[]];\n  private _isolationScope: Scope;\n\n  public constructor(scope?: Scope, isolationScope?: Scope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    const scope = this._pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n  public getScope(): Scope {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1] as Layer;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n  private _pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n  private _popScope(): boolean {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack(): AsyncContextStack {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope<T>(callback: (scope: Scope) => T): T {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope<T>(scope: Scope, callback: (scope: Scope) => T): T {\n  const stack = getAsyncContextStack() as AsyncContextStack;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nexport function getStackAsyncContextStrategy(): AsyncContextStrategy {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: <T>(_isolationScope: Scope, callback: (isolationScope: Scope) => T) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n","import { getGlobalSingleton } from './carrier';\nimport { Scope } from './scope';\n\n/** Get the default current scope. */\nexport function getDefaultCurrentScope(): Scope {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nexport function getDefaultIsolationScope(): Scope {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n","import type { Carrier } from './../carrier';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport { getStackAsyncContextStrategy } from './stackStrategy';\nimport type { AsyncContextStrategy } from './types';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n","import { getAsyncContextStrategy } from './asyncContext';\nimport { getGlobalSingleton, getMainCarrier } from './carrier';\nimport type { Client } from './client';\nimport { Scope } from './scope';\nimport type { TraceContext } from './types-hoist/context';\nimport { generateSpanId } from './utils/propagationContext';\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nexport function getIsolationScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): Scope {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: Scope | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: Scope | undefined, callback: (scope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T;\n/**\n * Set the provided isolation scope as active in the given callback. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * If you pass in `undefined` as a scope, it will fork a new isolation scope, the same as if no scope is passed.\n */\nexport function withIsolationScope<T>(isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T): T;\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nexport function withIsolationScope<T>(\n  ...rest:\n    | [callback: (isolationScope: Scope) => T]\n    | [isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  return getCurrentScope().getClient<C>();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nexport function getTraceContextFromScope(scope: Scope): TraceContext {\n  const propagationContext = scope.getPropagationContext();\n\n  const { traceId, parentSpanId, propagationSpanId } = propagationContext;\n\n  const traceContext: TraceContext = {\n    trace_id: traceId,\n    span_id: propagationSpanId || generateSpanId(),\n  };\n\n  if (parentSpanId) {\n    traceContext.parent_span_id = parentSpanId;\n  }\n\n  return traceContext;\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Attributes that holds the sample rate that was locally applied to a span.\n * If this attribute is not defined, it means that the span inherited a sampling decision.\n *\n * NOTE: Is only defined on root spans.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Attribute holding the sample rate of the previous trace.\n * This is used to sample consistently across subsequent traces in the browser SDK.\n *\n * Note: Only defined on root spans, if opted into consistent sampling\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE = 'sentry.previous_trace_sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nexport const SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nexport const SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nexport const SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\n/**\n * A span link attribute to mark the link as a special span link.\n *\n * Known values:\n * - `previous_trace`: The span links to the frontend root span of the previous trace.\n * - `next_trace`: The span links to the frontend root span of the next trace. (Not set by the SDK)\n *\n * Other values may be set as appropriate.\n * @see https://develop.sentry.dev/sdk/telemetry/traces/span-links/#link-types\n */\nexport const SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE = 'sentry.link.type';\n","import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nexport function setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport { debug } from './debug-logger';\nimport { isString } from './is';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nexport function parseBaggageHeader(\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Record<string, string> | undefined {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry =>\n      baggageEntry.split('=').map(keyOrValue => {\n        try {\n          return decodeURIComponent(keyOrValue.trim());\n        } catch {\n          // We ignore errors here, e.g. if the value cannot be URL decoded.\n          // This will then be skipped in the next step\n          return;\n        }\n      }),\n    )\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nexport function objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","import type { Client } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { DsnComponents, DsnLike, DsnProtocol } from '../types-hoist/dsn';\nimport { consoleSandbox, debug } from './debug-logger';\n\n/** Regular expression used to extract org ID from a DSN host. */\nconst ORG_ID_REGEX = /^o(\\d+)\\./;\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      debug.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    debug.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    debug.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    debug.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Extract the org ID from a DSN host.\n *\n * @param host The host from a DSN\n * @returns The org ID if found, undefined otherwise\n */\nexport function extractOrgIdFromDsnHost(host: string): string | undefined {\n  const match = host.match(ORG_ID_REGEX);\n\n  return match?.[1];\n}\n\n/**\n *  Returns the organization ID of the client.\n *\n *  The organization ID is extracted from the DSN. If the client options include a `orgId`, this will always take precedence.\n */\nexport function extractOrgIdFromClient(client: Client): string | undefined {\n  const options = client.getOptions();\n\n  const { host } = client.getDsn() || {};\n\n  let org_id: string | undefined;\n\n  if (options.orgId) {\n    org_id = String(options.orgId);\n  } else if (host) {\n    org_id = extractOrgIdFromDsnHost(host);\n  }\n\n  return org_id;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    return undefined;\n  }\n\n  return rate;\n}\n","import { getAsyncContextStrategy } from '../asyncContext';\nimport { getMainCarrier } from '../carrier';\nimport { getCurrentScope } from '../currentScopes';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { SentrySpan } from '../tracing/sentrySpan';\nimport { SPAN_STATUS_OK, SPAN_STATUS_UNSET } from '../tracing/spanstatus';\nimport { getCapturedScopesOnSpan } from '../tracing/utils';\nimport type { TraceContext } from '../types-hoist/context';\nimport type { SpanLink, SpanLinkJSON } from '../types-hoist/link';\nimport type { Span, SpanAttributes, SpanJSON, SpanOrigin, SpanTimeInput } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { generateSpanId } from '../utils/propagationContext';\nimport { timestampInSeconds } from '../utils/time';\nimport { generateSentryTraceHeader } from '../utils/tracing';\nimport { consoleSandbox } from './debug-logger';\nimport { _getSpanForScope } from './spanOnScope';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nexport function spanToTransactionTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin, links } = spanToJSON(span);\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n    links,\n  };\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const scope = getCapturedScopesOnSpan(span).scope;\n\n  const span_id = isRemote ? scope?.getPropagationContext().propagationSpanId || generateSpanId() : spanId;\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n  };\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n *  Converts the span links array to a flattened version to be sent within an envelope.\n *\n *  If the links array is empty, it returns `undefined` so the empty value can be dropped before it's sent.\n */\nexport function convertSpanLinksForEnvelope(links?: SpanLink[]): SpanLinkJSON[] | undefined {\n  if (links && links.length > 0) {\n    return links.map(({ context: { spanId, traceId, traceFlags, ...restContext }, attributes }) => ({\n      span_id: spanId,\n      trace_id: traceId,\n      sampled: traceFlags === TRACE_FLAG_SAMPLED,\n      attributes,\n      ...restContext,\n    }));\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nexport function spanToJSON(span: Span): SpanJSON {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n  // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n  if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n    const { attributes, startTime, name, endTime, status, links } = span;\n\n    // In preparation for the next major of OpenTelemetry, we want to support\n    // looking up the parent span id according to the new API\n    // In OTel v1, the parent span id is accessed as `parentSpanId`\n    // In OTel v2, the parent span id is accessed as `spanId` on the `parentSpanContext`\n    const parentSpanId =\n      'parentSpanId' in span\n        ? span.parentSpanId\n        : 'parentSpanContext' in span\n          ? (span.parentSpanContext as { spanId?: string } | undefined)?.spanId\n          : undefined;\n\n    return {\n      span_id,\n      trace_id,\n      data: attributes,\n      description: name,\n      parent_span_id: parentSpanId,\n      start_timestamp: spanTimeInputToSeconds(startTime),\n      // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n      timestamp: spanTimeInputToSeconds(endTime) || undefined,\n      status: getStatusMessage(status),\n      op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      links: convertSpanLinksForEnvelope(links),\n    };\n  }\n\n  // Finally, at least we have `spanContext()`....\n  // This should not actually happen in reality, but we need to handle it for type safety.\n  return {\n    span_id,\n    trace_id,\n    start_timestamp: 0,\n    data: {},\n  };\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span: Span): span is OpenTelemetrySdkTraceBaseSpan {\n  const castSpan = span as Partial<OpenTelemetrySdkTraceBaseSpan>;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\nexport interface OpenTelemetrySdkTraceBaseSpan extends Span {\n  attributes: SpanAttributes;\n  startTime: SpanTimeInput;\n  name: string;\n  status: SpanStatus;\n  endTime: SpanTimeInput;\n  parentSpanId?: string;\n  links?: SpanLink[];\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span: Span): span is SentrySpan {\n  return typeof (span as SentrySpan).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nexport function getStatusMessage(status: SpanStatus | undefined): string | undefined {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\ntype SpanWithPotentialChildren = Span & {\n  [CHILD_SPANS_FIELD]?: Set<Span>;\n  [ROOT_SPAN_FIELD]?: Span;\n};\n\n/**\n * Adds an opaque child span reference to a span.\n */\nexport function addChildSpanToSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan as SpanWithPotentialChildren, ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nexport function removeChildSpanFromSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nexport function getSpanDescendants(span: SpanWithPotentialChildren): Span[] {\n  const resultSet = new Set<Span>();\n\n  function addSpanChildren(span: SpanWithPotentialChildren): void {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nexport function getRootSpan(span: SpanWithPotentialChildren): Span {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n */\nexport function showSpanDropWarning(): void {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Returning null from `beforeSendSpan` is disallowed. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nexport function updateSpanName(span: Span, name: string): void {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n","import type { Span } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\n\nexport const SPAN_STATUS_UNSET = 0;\nexport const SPAN_STATUS_OK = 1;\nexport const SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatus {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","import { getClient } from '../currentScopes';\nimport type { Options } from '../types-hoist/options';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if span recording is currently enabled.\n *\n * Spans are recorded when at least one of `tracesSampleRate` and `tracesSampler`\n * is defined in the SDK config. This function does not make any assumption about\n * sampling decisions, it only checks if the SDK is configured to record spans.\n *\n * Important: This function only determines if span recording is enabled. Trace\n * continuation and propagation is separately controlled and not covered by this function.\n * If this function returns `false`, traces can still be propagated (which is what\n * we refer to by \"Tracing without Performance\")\n * @see https://develop.sentry.dev/sdk/telemetry/traces/tracing-without-performance/\n *\n * @param maybeOptions An SDK options object to be passed to this function.\n * If this option is not provided, the function will use the current client's options.\n */\nexport function hasSpansEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const options = maybeOptions || getClient()?.getOptions();\n  return (\n    !!options &&\n    // Note: This check is `!= null`, meaning \"nullish\". `0` is not \"nullish\", `undefined` and `null` are. (This comment was brought to you by 15 minutes of questioning life)\n    (options.tracesSampleRate != null || !!options.tracesSampler)\n  );\n}\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient } from '../currentScopes';\nimport type { Scope } from '../scope';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { Span } from '../types-hoist/span';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils/baggage';\nimport { extractOrgIdFromClient } from '../utils/dsn';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { getRootSpan, spanIsSampled, spanToJSON } from '../utils/spanUtils';\nimport { getCapturedScopesOnSpan } from './utils';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\ntype SpanWithMaybeDsc = Span & {\n  [FROZEN_DSC_FIELD]?: Partial<DynamicSamplingContext> | undefined;\n};\n\n/**\n * Freeze the given DSC on the given span.\n */\nexport function freezeDscOnSpan(span: Span, dsc: Partial<DynamicSamplingContext>): void {\n  const spanWithMaybeDsc = span as SpanWithMaybeDsc;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(trace_id: string, client: Client): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n\n  // Instead of conditionally adding non-undefined values, we add them and then remove them if needed\n  // otherwise, the order of baggage entries changes, which \"breaks\" a bunch of tests etc.\n  const dsc: DynamicSamplingContext = {\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n    org_id: extractOrgIdFromClient(client),\n  };\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nexport function getDynamicSamplingContextFromScope(client: Client, scope: Scope): Partial<DynamicSamplingContext> {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n  const rootSpanJson = spanToJSON(rootSpan);\n  const rootSpanAttributes = rootSpanJson.data;\n  const traceState = rootSpan.spanContext().traceState;\n\n  // The span sample rate that was locally applied to the root span should also always be applied to the DSC, even if the DSC is frozen.\n  // This is so that the downstream traces/services can use parentSampleRate in their `tracesSampler` to make consistent sampling decisions across the entire trace.\n  const rootSpanSampleRate =\n    traceState?.get('sentry.sample_rate') ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE];\n\n  function applyLocalSampleRateToDsc(dsc: Partial<DynamicSamplingContext>): Partial<DynamicSamplingContext> {\n    if (typeof rootSpanSampleRate === 'number' || typeof rootSpanSampleRate === 'string') {\n      dsc.sample_rate = `${rootSpanSampleRate}`;\n    }\n    return dsc;\n  }\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan as SpanWithMaybeDsc)[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return applyLocalSampleRateToDsc(frozenDsc);\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceStateDsc = traceState?.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return applyLocalSampleRateToDsc(dscOnTraceState);\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = rootSpanJson.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasSpansEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasSpansEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n    dsc.sample_rand =\n      // In OTEL we store the sample rand on the trace state because we cannot access scopes for NonRecordingSpans\n      // The Sentry OTEL SpanSampler takes care of writing the sample rand on the root span\n      traceState?.get('sentry.sample_rand') ??\n      // On all other platforms we can actually get the scopes from a root span (we use this as a fallback)\n      getCapturedScopesOnSpan(rootSpan).scope?.getPropagationContext().sampleRand.toString();\n  }\n\n  applyLocalSampleRateToDsc(dsc);\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nexport function spanToBaggageHeader(span: Span): string | undefined {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n","import type {\n  SentrySpanArguments,\n  Span,\n  SpanAttributes,\n  SpanAttributeValue,\n  SpanContextData,\n  SpanTimeInput,\n} from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\nimport { generateSpanId, generateTraceId } from '../utils/propagationContext';\nimport { TRACE_FLAG_NONE } from '../utils/spanUtils';\n\n/**\n * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n */\nexport class SentryNonRecordingSpan implements Span {\n  private _traceId: string;\n  private _spanId: string;\n\n  public constructor(spanContext: SentrySpanArguments = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n  }\n\n  /** @inheritdoc */\n  public spanContext(): SpanContextData {\n    return {\n      spanId: this._spanId,\n      traceId: this._traceId,\n      traceFlags: TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n  public end(_timestamp?: SpanTimeInput): void {}\n\n  /** @inheritdoc */\n  public setAttribute(_key: string, _value: SpanAttributeValue | undefined): this {\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttributes(_values: SpanAttributes): this {\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  /** @inheritdoc */\n  public updateName(_name: string): this {\n    return this;\n  }\n\n  /** @inheritdoc */\n  public isRecording(): boolean {\n    return false;\n  }\n\n  /** @inheritdoc */\n  public addEvent(\n    _name: string,\n    _attributesOrStartTime?: SpanAttributes | SpanTimeInput,\n    _startTime?: SpanTimeInput,\n  ): this {\n    return this;\n  }\n\n  /** @inheritDoc */\n  public addLink(_link: unknown): this {\n    return this;\n  }\n\n  /** @inheritDoc */\n  public addLinks(_links: unknown[]): this {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n  public recordException(_exception: unknown, _time?: number | undefined): void {\n    // noop\n  }\n}\n","import type { Primitive } from '../types-hoist/misc';\nimport { isSyntheticEvent, isVueViewModel } from './is';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor?: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\ntype MemoFunc = [\n  // memoize\n  (obj: object) => boolean,\n  // unmemoize\n  (obj: object) => void,\n];\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype?.constructor ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder(): MemoFunc {\n  const inner = new WeakSet<object>();\n  function memoize(obj: object): boolean {\n    if (inner.has(obj)) {\n      return true;\n    }\n    inner.add(obj);\n    return false;\n  }\n\n  function unmemoize(obj: object): void {\n    inner.delete(obj);\n  }\n  return [memoize, unmemoize];\n}\n","import { getSentryCarrier } from '../carrier';\nimport type { Attachment } from '../types-hoist/attachment';\nimport type { DataCategory } from '../types-hoist/datacategory';\nimport type { DsnComponents } from '../types-hoist/dsn';\nimport type {\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  Envelope,\n  EnvelopeItemType,\n  EventEnvelopeHeaders,\n  SpanItem,\n} from '../types-hoist/envelope';\nimport type { Event } from '../types-hoist/event';\nimport type { SdkInfo } from '../types-hoist/sdkinfo';\nimport type { SdkMetadata } from '../types-hoist/sdkmetadata';\nimport type { SpanJSON } from '../types-hoist/span';\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input: string): Uint8Array {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.encodePolyfill ? carrier.encodePolyfill(input) : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input: Uint8Array): string {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.decodePolyfill ? carrier.decodePolyfill(input) : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(env: string | Uint8Array): Envelope {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nexport function createSpanEnvelopeItem(spanJson: Partial<SpanJSON>): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(attachment: Attachment): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    {\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    },\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  raw_security: 'security',\n  log: 'log_item',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent?.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata?.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dynamicSamplingContext,\n    }),\n  };\n}\n","import type { Client } from './client';\nimport { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext';\nimport type { SentrySpan } from './tracing/sentrySpan';\nimport type { LegacyCSPReport } from './types-hoist/csp';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type {\n  DynamicSamplingContext,\n  EventEnvelope,\n  EventItem,\n  RawSecurityEnvelope,\n  RawSecurityItem,\n  SessionEnvelope,\n  SessionItem,\n  SpanEnvelope,\n  SpanItem,\n} from './types-hoist/envelope';\nimport type { Event } from './types-hoist/event';\nimport type { SdkInfo } from './types-hoist/sdkinfo';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport type { Session, SessionAggregates } from './types-hoist/session';\nimport { dsnToString } from './utils/dsn';\nimport {\n  createEnvelope,\n  createEventEnvelopeHeaders,\n  createSpanEnvelopeItem,\n  getSdkMetadataForEnvelopeHeader,\n} from './utils/envelope';\nimport { uuid4 } from './utils/misc';\nimport { showSpanDropWarning, spanToJSON } from './utils/spanUtils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): SessionEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem: SessionItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nexport function createEventEnvelope(\n  event: Event,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata?.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem: EventItem = [{ type: eventType }, event];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nexport function createSpanEnvelope(spans: [SentrySpan, ...SentrySpan[]], client?: Client): SpanEnvelope {\n  function dscHasRequiredProps(dsc: Partial<DynamicSamplingContext>): dsc is DynamicSamplingContext {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client?.getDsn();\n  const tunnel = client?.getOptions().tunnel;\n\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client?.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span: SentrySpan) => {\n        const spanJson = spanToJSON(span);\n        const processedSpan = beforeSendSpan(spanJson);\n\n        if (!processedSpan) {\n          showSpanDropWarning();\n          return spanJson;\n        }\n\n        return processedSpan;\n      }\n    : spanToJSON;\n\n  const items: SpanItem[] = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\n/**\n * Create an Envelope from a CSP report.\n */\nexport function createRawSecurityEnvelope(\n  report: LegacyCSPReport,\n  dsn: DsnComponents,\n  tunnel?: string,\n  release?: string,\n  environment?: string,\n): RawSecurityEnvelope {\n  const envelopeHeaders = {\n    event_id: uuid4(),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const eventItem: RawSecurityItem = [\n    { type: 'raw_security', sentry_release: release, sentry_environment: environment },\n    report,\n  ];\n\n  return createEnvelope<RawSecurityEnvelope>(envelopeHeaders, [eventItem]);\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE,\n} from '../semanticAttributes';\nimport type { Measurements, MeasurementUnit } from '../types-hoist/measurement';\nimport type { TimedEvent } from '../types-hoist/timedEvent';\nimport { debug } from '../utils/debug-logger';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils';\n\n/**\n * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n * as the 4th parameter.\n */\nexport function setMeasurement(name: string, value: number, unit: MeasurementUnit, activeSpan = getActiveSpan()): void {\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n  if (rootSpan) {\n    DEBUG_BUILD && debug.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n    rootSpan.addEvent(name, {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit as string,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nexport function timedEventsToMeasurements(events: TimedEvent[]): Measurements | undefined {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements: Measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] as MeasurementUnit | undefined;\n    const value = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] as number | undefined;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n","import { getClient, getCurrentScope } from '../currentScopes';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { createSpanEnvelope } from '../envelope';\nimport {\n  SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME,\n  SEMANTIC_ATTRIBUTE_PROFILE_ID,\n  SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { SpanEnvelope } from '../types-hoist/envelope';\nimport type { TransactionEvent } from '../types-hoist/event';\nimport type { SpanLink } from '../types-hoist/link';\nimport type {\n  SentrySpanArguments,\n  Span,\n  SpanAttributes,\n  SpanAttributeValue,\n  SpanContextData,\n  SpanJSON,\n  SpanOrigin,\n  SpanTimeInput,\n} from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\nimport type { TimedEvent } from '../types-hoist/timedEvent';\nimport type { TransactionSource } from '../types-hoist/transaction';\nimport { debug } from '../utils/debug-logger';\nimport { generateSpanId, generateTraceId } from '../utils/propagationContext';\nimport {\n  convertSpanLinksForEnvelope,\n  getRootSpan,\n  getSpanDescendants,\n  getStatusMessage,\n  spanTimeInputToSeconds,\n  spanToJSON,\n  spanToTransactionTraceContext,\n  TRACE_FLAG_NONE,\n  TRACE_FLAG_SAMPLED,\n} from '../utils/spanUtils';\nimport { timestampInSeconds } from '../utils/time';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { logSpanEnd } from './logSpans';\nimport { timedEventsToMeasurements } from './measurement';\nimport { getCapturedScopesOnSpan } from './utils';\n\nconst MAX_SPAN_COUNT = 1000;\n\n/**\n * Span contains all data about a span\n */\nexport class SentrySpan implements Span {\n  protected _traceId: string;\n  protected _spanId: string;\n  protected _parentSpanId?: string | undefined;\n  protected _sampled: boolean | undefined;\n  protected _name?: string | undefined;\n  protected _attributes: SpanAttributes;\n  protected _links?: SpanLink[];\n  /** Epoch timestamp in seconds when the span started. */\n  protected _startTime: number;\n  /** Epoch timestamp in seconds when the span ended. */\n  protected _endTime?: number | undefined;\n  /** Internal keeper of the status */\n  protected _status?: SpanStatus;\n  /** The timed events added to this span. */\n  protected _events: TimedEvent[];\n\n  /** if true, treat span as a standalone span (not part of a transaction) */\n  private _isStandaloneSpan?: boolean;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startSpan()`\n   * or other span methods.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext: SentrySpanArguments = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    this._links = spanContext.links;\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    this._name = spanContext.name;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n\n    this._events = [];\n\n    this._isStandaloneSpan = spanContext.isStandalone;\n\n    // If the span is already ended, ensure we finalize the span immediately\n    if (this._endTime) {\n      this._onSpanEnded();\n    }\n  }\n\n  /** @inheritDoc */\n  public addLink(link: SpanLink): this {\n    if (this._links) {\n      this._links.push(link);\n    } else {\n      this._links = [link];\n    }\n    return this;\n  }\n\n  /** @inheritDoc */\n  public addLinks(links: SpanLink[]): this {\n    if (this._links) {\n      this._links.push(...links);\n    } else {\n      this._links = links;\n    }\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n  public recordException(_exception: unknown, _time?: number | undefined): void {\n    // noop\n  }\n\n  /** @inheritdoc */\n  public spanContext(): SpanContextData {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n  public setAttribute(key: string, value: SpanAttributeValue | undefined): this {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttributes(attributes: SpanAttributes): this {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for browser tracing where we want to adjust the start time afterwards.\n   * USE THIS WITH CAUTION!\n   *\n   * @hidden\n   * @internal\n   */\n  public updateStartTime(timeInput: SpanTimeInput): void {\n    this._startTime = spanTimeInputToSeconds(timeInput);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatus): this {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateName(name: string): this {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'custom');\n    return this;\n  }\n\n  /** @inheritdoc */\n  public end(endTimestamp?: SpanTimeInput): void {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n    logSpanEnd(this);\n\n    this._onSpanEnded();\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n  public getSpanJSON(): SpanJSON {\n    return {\n      data: this._attributes,\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: getStatusMessage(this._status),\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n      exclusive_time: this._attributes[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] as number | undefined,\n      measurements: timedEventsToMeasurements(this._events),\n      is_segment: (this._isStandaloneSpan && getRootSpan(this) === this) || undefined,\n      segment_id: this._isStandaloneSpan ? getRootSpan(this).spanContext().spanId : undefined,\n      links: convertSpanLinksForEnvelope(this._links),\n    };\n  }\n\n  /** @inheritdoc */\n  public isRecording(): boolean {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  public addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | SpanTimeInput,\n    startTime?: SpanTimeInput,\n  ): this {\n    DEBUG_BUILD && debug.log('[Tracing] Adding an event to span:', name);\n\n    const time = isSpanTimeInput(attributesOrStartTime) ? attributesOrStartTime : startTime || timestampInSeconds();\n    const attributes = isSpanTimeInput(attributesOrStartTime) ? {} : attributesOrStartTime || {};\n\n    const event: TimedEvent = {\n      name,\n      time: spanTimeInputToSeconds(time),\n      attributes,\n    };\n\n    this._events.push(event);\n\n    return this;\n  }\n\n  /**\n   * This method should generally not be used,\n   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.\n   * USE THIS WITH CAUTION!\n   * @internal\n   * @hidden\n   * @experimental\n   */\n  public isStandaloneSpan(): boolean {\n    return !!this._isStandaloneSpan;\n  }\n\n  /** Emit `spanEnd` when the span is ended. */\n  private _onSpanEnded(): void {\n    const client = getClient();\n    if (client) {\n      client.emit('spanEnd', this);\n    }\n\n    // A segment span is basically the root span of a local span tree.\n    // So for now, this is either what we previously refer to as the root span,\n    // or a standalone span.\n    const isSegmentSpan = this._isStandaloneSpan || this === getRootSpan(this);\n\n    if (!isSegmentSpan) {\n      return;\n    }\n\n    // if this is a standalone span, we send it immediately\n    if (this._isStandaloneSpan) {\n      if (this._sampled) {\n        sendSpanEnvelope(createSpanEnvelope([this], client));\n      } else {\n        DEBUG_BUILD &&\n          debug.log('[Tracing] Discarding standalone span because its trace was not chosen to be sampled.');\n        if (client) {\n          client.recordDroppedEvent('sample_rate', 'span');\n        }\n      }\n      return;\n    }\n\n    const transactionEvent = this._convertSpanToTransaction();\n    if (transactionEvent) {\n      const scope = getCapturedScopesOnSpan(this).scope || getCurrentScope();\n      scope.captureEvent(transactionEvent);\n    }\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n  private _convertSpanToTransaction(): TransactionEvent | undefined {\n    // We can only convert finished spans\n    if (!isFullFinishedSpan(spanToJSON(this))) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && debug.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    const normalizedRequest = capturedSpanScope?.getScopeData().sdkProcessingMetadata?.normalizedRequest;\n\n    if (this._sampled !== true) {\n      return undefined;\n    }\n\n    // The transaction span itself as well as any potential standalone spans should be filtered out\n    const finishedSpans = getSpanDescendants(this).filter(span => span !== this && !isStandaloneSpan(span));\n\n    const spans = finishedSpans.map(span => spanToJSON(span)).filter(isFullFinishedSpan);\n\n    const source = this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] as TransactionSource | undefined;\n\n    // remove internal root span attributes we don't need to send.\n    /* eslint-disable @typescript-eslint/no-dynamic-delete */\n    delete this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    spans.forEach(span => {\n      delete span.data[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    });\n    // eslint-enabled-next-line @typescript-eslint/no-dynamic-delete\n\n    const transaction: TransactionEvent = {\n      contexts: {\n        trace: spanToTransactionTraceContext(this),\n      },\n      spans:\n        // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here\n        // we do not use spans anymore after this point\n        spans.length > MAX_SPAN_COUNT\n          ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n          : spans,\n      start_timestamp: this._startTime,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n      },\n      request: normalizedRequest,\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const measurements = timedEventsToMeasurements(this._events);\n    const hasMeasurements = measurements && Object.keys(measurements).length;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        debug.log(\n          '[Measurements] Adding measurements to transaction event',\n          JSON.stringify(measurements, undefined, 2),\n        );\n      transaction.measurements = measurements;\n    }\n\n    return transaction;\n  }\n}\n\nfunction isSpanTimeInput(value: undefined | SpanAttributes | SpanTimeInput): value is SpanTimeInput {\n  return (value && typeof value === 'number') || value instanceof Date || Array.isArray(value);\n}\n\n// We want to filter out any incomplete SpanJSON objects\nfunction isFullFinishedSpan(input: Partial<SpanJSON>): input is SpanJSON {\n  return !!input.start_timestamp && !!input.timestamp && !!input.span_id && !!input.trace_id;\n}\n\n/** `SentrySpan`s can be sent as a standalone span rather than belonging to a transaction */\nfunction isStandaloneSpan(span: Span): boolean {\n  return span instanceof SentrySpan && span.isStandaloneSpan();\n}\n\n/**\n * Sends a `SpanEnvelope`.\n *\n * Note: If the envelope's spans are dropped, e.g. via `beforeSendSpan`,\n * the envelope will not be sent either.\n */\nfunction sendSpanEnvelope(envelope: SpanEnvelope): void {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const spanItems = envelope[1];\n  if (!spanItems || spanItems.length === 0) {\n    client.recordDroppedEvent('before_send', 'span');\n    return;\n  }\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { Span } from '../types-hoist/span';\nimport { debug } from '../utils/debug-logger';\nimport { getRootSpan, spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Print a log message for a started span.\n */\nexport function logSpanStart(span: Span): void {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >', parent_span_id: parentSpanId } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n\n  const sampled = spanIsSampled(span);\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const header = `[Tracing] Starting ${sampled ? 'sampled' : 'unsampled'} ${isRootSpan ? 'root ' : ''}span`;\n\n  const infoParts: string[] = [`op: ${op}`, `name: ${description}`, `ID: ${spanId}`];\n\n  if (parentSpanId) {\n    infoParts.push(`parent ID: ${parentSpanId}`);\n  }\n\n  if (!isRootSpan) {\n    const { op, description } = spanToJSON(rootSpan);\n    infoParts.push(`root ID: ${rootSpan.spanContext().spanId}`);\n    if (op) {\n      infoParts.push(`root op: ${op}`);\n    }\n    if (description) {\n      infoParts.push(`root description: ${description}`);\n    }\n  }\n\n  debug.log(`${header}\n  ${infoParts.join('\\n  ')}`);\n}\n\n/**\n * Print a log message for an ended span.\n */\nexport function logSpanEnd(span: Span): void {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >' } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const msg = `[Tracing] Finishing \"${op}\" ${isRootSpan ? 'root ' : ''}span \"${description}\" with ID ${spanId}`;\n  debug.log(msg);\n}\n","/* eslint-disable max-lines */\n\nimport { getAsyncContextStrategy } from '../asyncContext';\nimport type { AsyncContextStrategy } from '../asyncContext/types';\nimport { getMainCarrier } from '../carrier';\nimport { getClient, getCurrentScope, getIsolationScope, withScope } from '../currentScopes';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Scope } from '../scope';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { ClientOptions } from '../types-hoist/options';\nimport type { SentrySpanArguments, Span, SpanTimeInput } from '../types-hoist/span';\nimport type { StartSpanOptions } from '../types-hoist/startSpanOptions';\nimport { baggageHeaderToDynamicSamplingContext } from '../utils/baggage';\nimport { debug } from '../utils/debug-logger';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { parseSampleRate } from '../utils/parseSampleRate';\nimport { generateTraceId } from '../utils/propagationContext';\nimport { _getSpanForScope, _setSpanForScope } from '../utils/spanOnScope';\nimport { addChildSpanToSpan, getRootSpan, spanIsSampled, spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\nimport { propagationContextFromHeaders, shouldContinueTrace } from '../utils/tracing';\nimport { freezeDscOnSpan, getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { logSpanStart } from './logSpans';\nimport { sampleSpan } from './sampling';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan';\nimport { SentrySpan } from './sentrySpan';\nimport { SPAN_STATUS_ERROR } from './spanstatus';\nimport { setCapturedScopesOnSpan } from './utils';\n\nconst SUPPRESS_TRACING_KEY = '__SENTRY_SUPPRESS_TRACING__';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nexport function startSpan<T>(options: StartSpanOptions, callback: (span: Span) => T): T {\n  const acs = getAcs();\n  if (acs.startSpan) {\n    return acs.startSpan(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan, scope: customScope } = options;\n\n  // We still need to fork a potentially passed scope, as we set the active span on it\n  // and we need to ensure that it is cleaned up properly once the span ends.\n  const customForkedScope = customScope?.clone();\n\n  return withScope(customForkedScope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper<T>(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope, customParentSpan);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n        () => {\n          activeSpan.end();\n        },\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. Use `span.end()` to end the span.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nexport function startSpanManual<T>(options: StartSpanOptions, callback: (span: Span, finish: () => void) => T): T {\n  const acs = getAcs();\n  if (acs.startSpanManual) {\n    return acs.startSpanManual(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan, scope: customScope } = options;\n\n  const customForkedScope = customScope?.clone();\n\n  return withScope(customForkedScope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper<T>(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope, customParentSpan);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        // We pass the `finish` function to the callback, so the user can finish the span manually\n        // this is mainly here for historic purposes because previously, we instructed users to call\n        // `finish` instead of `span.end()` to also clean up the scope. Nowadays, calling `span.end()`\n        // or `finish` has the same effect and we simply leave it here to avoid breaking user code.\n        () => callback(activeSpan, () => activeSpan.end()),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nexport function startInactiveSpan(options: StartSpanOptions): Span {\n  const acs = getAcs();\n  if (acs.startInactiveSpan) {\n    return acs.startInactiveSpan(options);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  // If `options.scope` is defined, we use this as as a wrapper,\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = options.scope\n    ? (callback: () => Span) => withScope(options.scope, callback)\n    : customParentSpan !== undefined\n      ? (callback: () => Span) => withActiveSpan(customParentSpan, callback)\n      : (callback: () => Span) => callback();\n\n  return wrapper(() => {\n    const scope = getCurrentScope();\n    const parentSpan = getParentSpan(scope, customParentSpan);\n\n    const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n\n    if (shouldSkipSpan) {\n      return new SentryNonRecordingSpan();\n    }\n\n    return createChildOrRootSpan({\n      parentSpan,\n      spanArguments,\n      forceTransaction,\n      scope,\n    });\n  });\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n */\nexport const continueTrace = <V>(\n  options: {\n    sentryTrace: Parameters<typeof propagationContextFromHeaders>[0];\n    baggage: Parameters<typeof propagationContextFromHeaders>[1];\n  },\n  callback: () => V,\n): V => {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.continueTrace) {\n    return acs.continueTrace(options, callback);\n  }\n\n  const { sentryTrace, baggage } = options;\n\n  const client = getClient();\n  const incomingDsc = baggageHeaderToDynamicSamplingContext(baggage);\n  if (client && !shouldContinueTrace(client, incomingDsc?.org_id)) {\n    return startNewTrace(callback);\n  }\n\n  return withScope(scope => {\n    const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n    scope.setPropagationContext(propagationContext);\n    return callback();\n  });\n};\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will not be attached to a parent span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span | null, callback: (scope: Scope) => T): T {\n  const acs = getAcs();\n  if (acs.withActiveSpan) {\n    return acs.withActiveSpan(span, callback);\n  }\n\n  return withScope(scope => {\n    _setSpanForScope(scope, span || undefined);\n    return callback(scope);\n  });\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nexport function suppressTracing<T>(callback: () => T): T {\n  const acs = getAcs();\n\n  if (acs.suppressTracing) {\n    return acs.suppressTracing(callback);\n  }\n\n  return withScope(scope => {\n    // Note: We do not wait for the callback to finish before we reset the metadata\n    // the reason for this is that otherwise, in the browser this can lead to very weird behavior\n    // as there is only a single top scope, if the callback takes longer to finish,\n    // other, unrelated spans may also be suppressed, which we do not want\n    // so instead, we only suppress tracing synchronoysly in the browser\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: true });\n    const res = callback();\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: undefined });\n    return res;\n  });\n}\n\n/**\n * Starts a new trace for the duration of the provided callback. Spans started within the\n * callback will be part of the new trace instead of a potentially previously started trace.\n *\n * Important: Only use this function if you want to override the default trace lifetime and\n * propagation mechanism of the SDK for the duration and scope of the provided callback.\n * The newly created trace will also be the root of a new distributed trace, for example if\n * you make http requests within the callback.\n * This function might be useful if the operation you want to instrument should not be part\n * of a potentially ongoing trace.\n *\n * Default behavior:\n * - Server-side: A new trace is started for each incoming request.\n * - Browser: A new trace is started for each page our route. Navigating to a new route\n *            or page will automatically create a new trace.\n */\nexport function startNewTrace<T>(callback: () => T): T {\n  return withScope(scope => {\n    scope.setPropagationContext({\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    });\n    DEBUG_BUILD && debug.log(`Starting a new trace with id ${scope.getPropagationContext().traceId}`);\n    return withActiveSpan(null, callback);\n  });\n}\n\nfunction createChildOrRootSpan({\n  parentSpan,\n  spanArguments,\n  forceTransaction,\n  scope,\n}: {\n  parentSpan: SentrySpan | undefined;\n  spanArguments: SentrySpanArguments;\n  forceTransaction?: boolean;\n  scope: Scope;\n}): Span {\n  if (!hasSpansEnabled()) {\n    const span = new SentryNonRecordingSpan();\n\n    // If this is a root span, we ensure to freeze a DSC\n    // So we can have at least partial data here\n    if (forceTransaction || !parentSpan) {\n      const dsc = {\n        sampled: 'false',\n        sample_rate: '0',\n        transaction: spanArguments.name,\n        ...getDynamicSamplingContextFromSpan(span),\n      } satisfies Partial<DynamicSamplingContext>;\n      freezeDscOnSpan(span, dsc);\n    }\n\n    return span;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span: Span;\n  if (parentSpan && !forceTransaction) {\n    span = _startChildSpan(parentSpan, scope, spanArguments);\n    addChildSpanToSpan(parentSpan, span);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const parentSampled = spanIsSampled(parentSpan);\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    freezeDscOnSpan(span, dsc);\n  } else {\n    const {\n      traceId,\n      dsc,\n      parentSpanId,\n      sampled: parentSampled,\n    } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    if (dsc) {\n      freezeDscOnSpan(span, dsc);\n    }\n  }\n\n  logSpanStart(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to SentrySpanArguments.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n */\nfunction parseSentrySpanArguments(options: StartSpanOptions): SentrySpanArguments {\n  const exp = options.experimental || {};\n  const initialCtx: SentrySpanArguments = {\n    isStandalone: exp.standalone,\n    ...options,\n  };\n\n  if (options.startTime) {\n    const ctx: SentrySpanArguments & { startTime?: SpanTimeInput } = { ...initialCtx };\n    ctx.startTimestamp = spanTimeInputToSeconds(options.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return initialCtx;\n}\n\nfunction getAcs(): AsyncContextStrategy {\n  const carrier = getMainCarrier();\n  return getAsyncContextStrategy(carrier);\n}\n\nfunction _startRootSpan(spanArguments: SentrySpanArguments, scope: Scope, parentSampled?: boolean): SentrySpan {\n  const client = getClient();\n  const options: Partial<ClientOptions> = client?.getOptions() || {};\n\n  const { name = '' } = spanArguments;\n\n  const mutableSpanSamplingData = { spanAttributes: { ...spanArguments.attributes }, spanName: name, parentSampled };\n\n  // we don't care about the decision for the moment; this is just a placeholder\n  client?.emit('beforeSampling', mutableSpanSamplingData, { decision: false });\n\n  // If hook consumers override the parentSampled flag, we will use that value instead of the actual one\n  const finalParentSampled = mutableSpanSamplingData.parentSampled ?? parentSampled;\n  const finalAttributes = mutableSpanSamplingData.spanAttributes;\n\n  const currentPropagationContext = scope.getPropagationContext();\n  const [sampled, sampleRate, localSampleRateWasApplied] = scope.getScopeData().sdkProcessingMetadata[\n    SUPPRESS_TRACING_KEY\n  ]\n    ? [false]\n    : sampleSpan(\n        options,\n        {\n          name,\n          parentSampled: finalParentSampled,\n          attributes: finalAttributes,\n          parentSampleRate: parseSampleRate(currentPropagationContext.dsc?.sample_rate),\n        },\n        currentPropagationContext.sampleRand,\n      );\n\n  const rootSpan = new SentrySpan({\n    ...spanArguments,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n      [SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE]:\n        sampleRate !== undefined && localSampleRateWasApplied ? sampleRate : undefined,\n      ...finalAttributes,\n    },\n    sampled,\n  });\n\n  if (!sampled && client) {\n    DEBUG_BUILD && debug.log('[Tracing] Discarding root span because its trace was not chosen to be sampled.');\n    client.recordDroppedEvent('sample_rate', 'transaction');\n  }\n\n  if (client) {\n    client.emit('spanStart', rootSpan);\n  }\n\n  return rootSpan;\n}\n\n/**\n * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n * This inherits the sampling decision from the parent span.\n */\nfunction _startChildSpan(parentSpan: Span, scope: Scope, spanArguments: SentrySpanArguments): Span {\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY] ? false : spanIsSampled(parentSpan);\n\n  const childSpan = sampled\n    ? new SentrySpan({\n        ...spanArguments,\n        parentSpanId: spanId,\n        traceId,\n        sampled,\n      })\n    : new SentryNonRecordingSpan({ traceId });\n\n  addChildSpanToSpan(parentSpan, childSpan);\n\n  const client = getClient();\n  if (client) {\n    client.emit('spanStart', childSpan);\n    // If it has an endTimestamp, it's already ended\n    if (spanArguments.endTimestamp) {\n      client.emit('spanEnd', childSpan);\n    }\n  }\n\n  return childSpan;\n}\n\nfunction getParentSpan(scope: Scope, customParentSpan: Span | null | undefined): SentrySpan | undefined {\n  // always use the passed in span directly\n  if (customParentSpan) {\n    return customParentSpan as SentrySpan;\n  }\n\n  // This is different from `undefined` as it means the user explicitly wants no parent span\n  if (customParentSpan === null) {\n    return undefined;\n  }\n\n  const span = _getSpanForScope(scope) as SentrySpan | undefined;\n\n  if (!span) {\n    return undefined;\n  }\n\n  const client = getClient();\n  const options: Partial<ClientOptions> = client ? client.getOptions() : {};\n  if (options.parentSpanIsAlwaysRootSpan) {\n    return getRootSpan(span) as SentrySpan;\n  }\n\n  return span;\n}\n\nfunction getActiveSpanWrapper<T>(parentSpan: Span | undefined | null): (callback: () => T) => T {\n  return parentSpan !== undefined\n    ? (callback: () => T) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback: () => T) => callback();\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { Options } from '../types-hoist/options';\nimport type { SamplingContext } from '../types-hoist/samplingcontext';\nimport { debug } from '../utils/debug-logger';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { parseSampleRate } from '../utils/parseSampleRate';\n\n/**\n * Makes a sampling decision for the given options.\n *\n * Called every time a root span is created. Only root spans which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n */\nexport function sampleSpan(\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler'>,\n  samplingContext: SamplingContext,\n  sampleRand: number,\n): [sampled: boolean, sampleRate?: number, localSampleRateWasApplied?: boolean] {\n  // nothing to do if span recording is not enabled\n  if (!hasSpansEnabled(options)) {\n    return [false];\n  }\n\n  let localSampleRateWasApplied = undefined;\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      ...samplingContext,\n      inheritOrSampleWith: fallbackSampleRate => {\n        // If we have an incoming parent sample rate, we'll just use that one.\n        // The sampling decision will be inherited because of the sample_rand that was generated when the trace reached the incoming boundaries of the SDK.\n        if (typeof samplingContext.parentSampleRate === 'number') {\n          return samplingContext.parentSampleRate;\n        }\n\n        // Fallback if parent sample rate is not on the incoming trace (e.g. if there is no baggage)\n        // This is to provide backwards compatibility if there are incoming traces from older SDKs that don't send a parent sample rate or a sample rand. In these cases we just want to force either a sampling decision on the downstream traces via the sample rate.\n        if (typeof samplingContext.parentSampled === 'boolean') {\n          return Number(samplingContext.parentSampled);\n        }\n\n        return fallbackSampleRate;\n      },\n    });\n    localSampleRateWasApplied = true;\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    localSampleRateWasApplied = true;\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get.\n  // (The only valid values are booleans or numbers between 0 and 1.)\n  const parsedSampleRate = parseSampleRate(sampleRate);\n\n  if (parsedSampleRate === undefined) {\n    DEBUG_BUILD &&\n      debug.warn(\n        `[Tracing] Discarding root span because of invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return [false];\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!parsedSampleRate) {\n    DEBUG_BUILD &&\n      debug.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    return [false, parsedSampleRate, localSampleRateWasApplied];\n  }\n\n  // We always compare the sample rand for the current execution context against the chosen sample rate.\n  // Read more: https://develop.sentry.dev/sdk/telemetry/traces/#propagated-random-value\n  const shouldSample = sampleRand < parsedSampleRate;\n\n  // if we're not going to keep it, we're done\n  if (!shouldSample) {\n    DEBUG_BUILD &&\n      debug.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n  }\n\n  return [shouldSample, parsedSampleRate, localSampleRateWasApplied];\n}\n","import { getClient, getCurrentScope } from '../currentScopes';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '../semanticAttributes';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { Span } from '../types-hoist/span';\nimport type { StartSpanOptions } from '../types-hoist/startSpanOptions';\nimport { debug } from '../utils/debug-logger';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { _setSpanForScope } from '../utils/spanOnScope';\nimport {\n  getActiveSpan,\n  getSpanDescendants,\n  removeChildSpanFromSpan,\n  spanTimeInputToSeconds,\n  spanToJSON,\n} from '../utils/spanUtils';\nimport { timestampInSeconds } from '../utils/time';\nimport { freezeDscOnSpan, getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan';\nimport { SentrySpan } from './sentrySpan';\nimport { SPAN_STATUS_ERROR } from './spanstatus';\nimport { startInactiveSpan } from './trace';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1_000,\n  finalTimeout: 30_000,\n  childSpanTimeout: 15_000,\n};\n\nconst FINISH_REASON_HEARTBEAT_FAILED = 'heartbeatFailed';\nconst FINISH_REASON_IDLE_TIMEOUT = 'idleTimeout';\nconst FINISH_REASON_FINAL_TIMEOUT = 'finalTimeout';\nconst FINISH_REASON_EXTERNAL_FINISH = 'externalFinish';\nconst FINISH_REASON_CANCELLED = 'cancelled';\n\n// unused\nconst FINISH_REASON_DOCUMENT_HIDDEN = 'documentHidden';\n\n// unused in this file, but used in BrowserTracing\nconst FINISH_REASON_INTERRUPTED = 'interactionInterrupted';\n\ntype IdleSpanFinishReason =\n  | typeof FINISH_REASON_CANCELLED\n  | typeof FINISH_REASON_DOCUMENT_HIDDEN\n  | typeof FINISH_REASON_EXTERNAL_FINISH\n  | typeof FINISH_REASON_FINAL_TIMEOUT\n  | typeof FINISH_REASON_HEARTBEAT_FAILED\n  | typeof FINISH_REASON_IDLE_TIMEOUT\n  | typeof FINISH_REASON_INTERRUPTED;\n\ninterface IdleSpanOptions {\n  /**\n   * The time that has to pass without any span being created.\n   * If this time is exceeded, the idle span will finish.\n   */\n  idleTimeout: number;\n  /**\n   * The max. time an idle span may run.\n   * If this time is exceeded, the idle span will finish no matter what.\n   */\n  finalTimeout: number;\n  /**\n   * The max. time a child span may run.\n   * If the time since the last span was started exceeds this time, the idle span will finish.\n   */\n  childSpanTimeout?: number;\n  /**\n   * When set to `true`, will disable the idle timeout and child timeout\n   * until the `idleSpanEnableAutoFinish` hook is emitted for the idle span.\n   * The final timeout mechanism will not be affected by this option,\n   * meaning the idle span will definitely be finished when the final timeout is\n   * reached, no matter what this option is configured to.\n   *\n   * Defaults to `false`.\n   */\n  disableAutoFinish?: boolean;\n  /** Allows to configure a hook that is called when the idle span is ended, before it is processed. */\n  beforeSpanEnd?: (span: Span) => void;\n}\n\n/**\n * An idle span is a span that automatically finishes. It does this by tracking child spans as activities.\n * An idle span is always the active span.\n */\nexport function startIdleSpan(startSpanOptions: StartSpanOptions, options: Partial<IdleSpanOptions> = {}): Span {\n  // Activities store a list of active spans\n  const activities = new Map<string, boolean>();\n\n  // We should not use heartbeat if we finished a span\n  let _finished = false;\n\n  // Timer that tracks idleTimeout\n  let _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  // Timer that tracks maxSpanTime for child spans\n  let _childSpanTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  // The reason why the span was finished\n  let _finishReason: IdleSpanFinishReason = FINISH_REASON_EXTERNAL_FINISH;\n\n  let _autoFinishAllowed: boolean = !options.disableAutoFinish;\n\n  const _cleanupHooks: (() => void)[] = [];\n\n  const {\n    idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    finalTimeout = TRACING_DEFAULTS.finalTimeout,\n    childSpanTimeout = TRACING_DEFAULTS.childSpanTimeout,\n    beforeSpanEnd,\n  } = options;\n\n  const client = getClient();\n\n  if (!client || !hasSpansEnabled()) {\n    const span = new SentryNonRecordingSpan();\n\n    const dsc = {\n      sample_rate: '0',\n      sampled: 'false',\n      ...getDynamicSamplingContextFromSpan(span),\n    } satisfies Partial<DynamicSamplingContext>;\n    freezeDscOnSpan(span, dsc);\n\n    return span;\n  }\n\n  const scope = getCurrentScope();\n  const previousActiveSpan = getActiveSpan();\n  const span = _startIdleSpan(startSpanOptions);\n\n  // We patch span.end to ensure we can run some things before the span is ended\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  span.end = new Proxy(span.end, {\n    apply(target, thisArg, args: Parameters<Span['end']>) {\n      if (beforeSpanEnd) {\n        beforeSpanEnd(span);\n      }\n\n      // If the span is non-recording, nothing more to do here...\n      // This is the case if tracing is enabled but this specific span was not sampled\n      if (thisArg instanceof SentryNonRecordingSpan) {\n        return;\n      }\n\n      // Just ensuring that this keeps working, even if we ever have more arguments here\n      const [definedEndTimestamp, ...rest] = args;\n      const timestamp = definedEndTimestamp || timestampInSeconds();\n      const spanEndTimestamp = spanTimeInputToSeconds(timestamp);\n\n      // Ensure we end with the last span timestamp, if possible\n      const spans = getSpanDescendants(span).filter(child => child !== span);\n\n      // If we have no spans, we just end, nothing else to do here\n      if (!spans.length) {\n        onIdleSpanEnded(spanEndTimestamp);\n        return Reflect.apply(target, thisArg, [spanEndTimestamp, ...rest]);\n      }\n\n      const childEndTimestamps = spans\n        .map(span => spanToJSON(span).timestamp)\n        .filter(timestamp => !!timestamp) as number[];\n      const latestSpanEndTimestamp = childEndTimestamps.length ? Math.max(...childEndTimestamps) : undefined;\n\n      // In reality this should always exist here, but type-wise it may be undefined...\n      const spanStartTimestamp = spanToJSON(span).start_timestamp;\n\n      // The final endTimestamp should:\n      // * Never be before the span start timestamp\n      // * Be the latestSpanEndTimestamp, if there is one, and it is smaller than the passed span end timestamp\n      // * Otherwise be the passed end timestamp\n      // Final timestamp can never be after finalTimeout\n      const endTimestamp = Math.min(\n        spanStartTimestamp ? spanStartTimestamp + finalTimeout / 1000 : Infinity,\n        Math.max(spanStartTimestamp || -Infinity, Math.min(spanEndTimestamp, latestSpanEndTimestamp || Infinity)),\n      );\n\n      onIdleSpanEnded(endTimestamp);\n      return Reflect.apply(target, thisArg, [endTimestamp, ...rest]);\n    },\n  });\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   */\n  function _cancelIdleTimeout(): void {\n    if (_idleTimeoutID) {\n      clearTimeout(_idleTimeoutID);\n      _idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Cancels the existing child span timeout, if there is one.\n   */\n  function _cancelChildSpanTimeout(): void {\n    if (_childSpanTimeoutID) {\n      clearTimeout(_childSpanTimeoutID);\n      _childSpanTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  function _restartIdleTimeout(endTimestamp?: number): void {\n    _cancelIdleTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && activities.size === 0 && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_IDLE_TIMEOUT;\n        span.end(endTimestamp);\n      }\n    }, idleTimeout);\n  }\n\n  /**\n   * Restarts child span timeout, if there is none running it will start one.\n   */\n  function _restartChildSpanTimeout(endTimestamp?: number): void {\n    _cancelChildSpanTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_HEARTBEAT_FAILED;\n        span.end(endTimestamp);\n      }\n    }, childSpanTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  function _pushActivity(spanId: string): void {\n    _cancelIdleTimeout();\n    activities.set(spanId, true);\n\n    const endTimestamp = timestampInSeconds();\n    // We need to add the timeout here to have the real endtimestamp of the idle span\n    // Remember timestampInSeconds is in seconds, timeout is in ms\n    _restartChildSpanTimeout(endTimestamp + childSpanTimeout / 1000);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  function _popActivity(spanId: string): void {\n    if (activities.has(spanId)) {\n      activities.delete(spanId);\n    }\n\n    if (activities.size === 0) {\n      const endTimestamp = timestampInSeconds();\n      // We need to add the timeout here to have the real endtimestamp of the idle span\n      // Remember timestampInSeconds is in seconds, timeout is in ms\n      _restartIdleTimeout(endTimestamp + idleTimeout / 1000);\n      _cancelChildSpanTimeout();\n    }\n  }\n\n  function onIdleSpanEnded(endTimestamp: number): void {\n    _finished = true;\n    activities.clear();\n\n    _cleanupHooks.forEach(cleanup => cleanup());\n\n    _setSpanForScope(scope, previousActiveSpan);\n\n    const spanJSON = spanToJSON(span);\n\n    const { start_timestamp: startTimestamp } = spanJSON;\n    // This should never happen, but to make TS happy...\n    if (!startTimestamp) {\n      return;\n    }\n\n    const attributes = spanJSON.data;\n    if (!attributes[SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON]) {\n      span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, _finishReason);\n    }\n\n    debug.log(`[Tracing] Idle span \"${spanJSON.op}\" finished`);\n\n    const childSpans = getSpanDescendants(span).filter(child => child !== span);\n\n    let discardedSpans = 0;\n    childSpans.forEach(childSpan => {\n      // We cancel all pending spans with status \"cancelled\" to indicate the idle span was finished early\n      if (childSpan.isRecording()) {\n        childSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'cancelled' });\n        childSpan.end(endTimestamp);\n        DEBUG_BUILD &&\n          debug.log('[Tracing] Cancelling span since span ended early', JSON.stringify(childSpan, undefined, 2));\n      }\n\n      const childSpanJSON = spanToJSON(childSpan);\n      const { timestamp: childEndTimestamp = 0, start_timestamp: childStartTimestamp = 0 } = childSpanJSON;\n\n      const spanStartedBeforeIdleSpanEnd = childStartTimestamp <= endTimestamp;\n\n      // Add a delta with idle timeout so that we prevent false positives\n      const timeoutWithMarginOfError = (finalTimeout + idleTimeout) / 1000;\n      const spanEndedBeforeFinalTimeout = childEndTimestamp - childStartTimestamp <= timeoutWithMarginOfError;\n\n      if (DEBUG_BUILD) {\n        const stringifiedSpan = JSON.stringify(childSpan, undefined, 2);\n        if (!spanStartedBeforeIdleSpanEnd) {\n          debug.log('[Tracing] Discarding span since it happened after idle span was finished', stringifiedSpan);\n        } else if (!spanEndedBeforeFinalTimeout) {\n          debug.log('[Tracing] Discarding span since it finished after idle span final timeout', stringifiedSpan);\n        }\n      }\n\n      if (!spanEndedBeforeFinalTimeout || !spanStartedBeforeIdleSpanEnd) {\n        removeChildSpanFromSpan(span, childSpan);\n        discardedSpans++;\n      }\n    });\n\n    if (discardedSpans > 0) {\n      span.setAttribute('sentry.idle_span_discarded_spans', discardedSpans);\n    }\n  }\n\n  _cleanupHooks.push(\n    client.on('spanStart', startedSpan => {\n      // If we already finished the idle span,\n      // or if this is the idle span itself being started,\n      // or if the started span has already been closed,\n      // we don't care about it for activity\n      if (\n        _finished ||\n        startedSpan === span ||\n        !!spanToJSON(startedSpan).timestamp ||\n        (startedSpan instanceof SentrySpan && startedSpan.isStandaloneSpan())\n      ) {\n        return;\n      }\n\n      const allSpans = getSpanDescendants(span);\n\n      // If the span that was just started is a child of the idle span, we should track it\n      if (allSpans.includes(startedSpan)) {\n        _pushActivity(startedSpan.spanContext().spanId);\n      }\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('spanEnd', endedSpan => {\n      if (_finished) {\n        return;\n      }\n\n      _popActivity(endedSpan.spanContext().spanId);\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('idleSpanEnableAutoFinish', spanToAllowAutoFinish => {\n      if (spanToAllowAutoFinish === span) {\n        _autoFinishAllowed = true;\n        _restartIdleTimeout();\n\n        if (activities.size) {\n          _restartChildSpanTimeout();\n        }\n      }\n    }),\n  );\n\n  // We only start the initial idle timeout if we are not delaying the auto finish\n  if (!options.disableAutoFinish) {\n    _restartIdleTimeout();\n  }\n\n  setTimeout(() => {\n    if (!_finished) {\n      span.setStatus({ code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' });\n      _finishReason = FINISH_REASON_FINAL_TIMEOUT;\n      span.end();\n    }\n  }, finalTimeout);\n\n  return span;\n}\n\nfunction _startIdleSpan(options: StartSpanOptions): Span {\n  const span = startInactiveSpan(options);\n\n  _setSpanForScope(getCurrentScope(), span);\n\n  DEBUG_BUILD && debug.log('[Tracing] Started span is an idle span');\n\n  return span;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst STATE_PENDING = 0;\nconst STATE_RESOLVED = 1;\nconst STATE_REJECTED = 2;\n\ntype State = typeof STATE_PENDING | typeof STATE_RESOLVED | typeof STATE_REJECTED;\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\ntype Executor<T> = (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void;\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nexport class SyncPromise<T> implements PromiseLike<T> {\n  private _state: State;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(executor: Executor<T>) {\n    this._state = STATE_PENDING;\n    this._handlers = [];\n\n    this._runExecutor(executor);\n  }\n\n  /** @inheritdoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** @inheritdoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** @inheritdoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** Excute the resolve/reject handlers. */\n  private _executeHandlers(): void {\n    if (this._state === STATE_PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === STATE_RESOLVED) {\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === STATE_REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  }\n\n  /** Run the executor for the SyncPromise. */\n  private _runExecutor(executor: Executor<T>): void {\n    const setResult = (state: State, value?: T | PromiseLike<T> | any): void => {\n      if (this._state !== STATE_PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        void (value as PromiseLike<T>).then(resolve, reject);\n        return;\n      }\n\n      this._state = state;\n      this._value = value;\n\n      this._executeHandlers();\n    };\n\n    const resolve = (value: unknown): void => {\n      setResult(STATE_RESOLVED, value);\n    };\n\n    const reject = (reason: unknown): void => {\n      setResult(STATE_REJECTED, reason);\n    };\n\n    try {\n      executor(resolve, reject);\n    } catch (e) {\n      reject(e);\n    }\n  }\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport { debug } from './utils/debug-logger';\nimport { isThenable } from './utils/is';\nimport { SyncPromise } from './utils/syncpromise';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && debug.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import type { ScopeData } from '../scope';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport type { Breadcrumb } from '../types-hoist/breadcrumb';\nimport type { Event } from '../types-hoist/event';\nimport type { Span } from '../types-hoist/span';\nimport { merge } from './merge';\nimport { getRootSpan, spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  if (Object.keys(extra).length) {\n    event.extra = { ...extra, ...event.extra };\n  }\n\n  if (Object.keys(tags).length) {\n    event.tags = { ...tags, ...event.tags };\n  }\n\n  if (Object.keys(user).length) {\n    event.user = { ...user, ...event.user };\n  }\n\n  if (Object.keys(contexts).length) {\n    event.contexts = { ...contexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (!event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","import type { DebugImage } from '../types-hoist/debugMeta';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { GLOBAL_OBJ } from './worldwide';\n\ntype StackString = string;\ntype CachedResult = [string, string];\n\nlet parsedStackResults: Record<StackString, CachedResult> | undefined;\nlet lastKeysCount: number | undefined;\nlet cachedFilenameDebugIds: Record<string, string> | undefined;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nexport function getFilenameToDebugIdMap(stackParser: StackParser): Record<string, string> {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce<Record<string, string>>((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame?.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nexport function getDebugImagesForResources(\n  stackParser: StackParser,\n  resource_paths: ReadonlyArray<string>,\n): DebugImage[] {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n","import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalScope } from '../currentScopes';\nimport { notifyEventProcessors } from '../eventProcessors';\nimport type { CaptureContext, ScopeContext } from '../scope';\nimport { Scope } from '../scope';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { ClientOptions } from '../types-hoist/options';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { getFilenameToDebugIdMap } from './debug-ids';\nimport { addExceptionMechanism, uuid4 } from './misc';\nimport { normalize } from './normalize';\nimport { truncate } from './string';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nexport function applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  const request = event.request;\n  if (request?.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.filename) {\n        frame.debug_id = filenameDebugIdMap[frame.filename];\n      }\n    });\n  });\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.debug_id) {\n        if (frame.abs_path) {\n          filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n        } else if (frame.filename) {\n          filenameDebugIdMap[frame.filename] = frame.debug_id;\n        }\n        delete frame.debug_id;\n      }\n    });\n  });\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts?.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts?.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(hint: CaptureContext | EventHint): hint is Scope | ((scope: Scope) => Scope) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import { getClient, getCurrentScope, getIsolationScope, withIsolationScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { CaptureContext } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { CheckIn, FinishedCheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { Session, SessionContext } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { User } from './types-hoist/user';\nimport { debug } from './utils/debug-logger';\nimport { isThenable } from './utils/is';\nimport { uuid4 } from './utils/misc';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { timestampInSeconds } from './utils/time';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(exception: unknown, hint?: ExclusiveEventHintOrCaptureContext): string {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | SeverityLevel): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nexport function setContext(name: string, context: { [key: string]: unknown } | null): void {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nexport function lastEventId(): string | undefined {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && debug.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param callback Callback to be monitored\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      return maybePromiseResult.then(\n        r => {\n          finishCheckIn('ok');\n          return r;\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      ) as T;\n    }\n    finishCheckIn('ok');\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && debug.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nexport function isEnabled(): boolean {\n  const client = getClient();\n  return client?.getOptions().enabled !== false && !!client?.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession?.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const client = getClient();\n  const session = isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { ReportDialogOptions } from './report-dialog';\nimport type { DsnComponents, DsnLike } from './types-hoist/dsn';\nimport type { SdkInfo } from './types-hoist/sdkinfo';\nimport { dsnToString, makeDsn } from './utils/dsn';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  const params: Record<string, string> = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(dsn: DsnComponents, tunnel?: string, sdkInfo?: SdkInfo): string {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(dsnLike: DsnLike, dialogOptions: ReportDialogOptions): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { Client } from './client';\nimport { getClient } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { Integration, IntegrationFn } from './types-hoist/integration';\nimport type { Options } from './types-hoist/options';\nimport { debug } from './utils/debug-logger';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\ntype IntegrationWithDefaultInstance = Integration & { isDefaultInstance?: true };\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach((currentInstance: IntegrationWithDefaultInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance: IntegrationWithDefaultInstance | undefined = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration: IntegrationWithDefaultInstance) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  return filterDuplicates(integrations);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach((integration: Integration | undefined) => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration?.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && debug.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && debug.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && debug.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => Integration {\n  return fn;\n}\n","import type { Event } from '../types-hoist/event';\n\n/**\n * Get a list of possible event messages from a Sentry event.\n */\nexport function getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    const lastException = event.exception.values[event.exception.values.length - 1];\n    if (lastException?.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  } catch {\n    // ignore errors here\n  }\n\n  return possibleMessages;\n}\n","/* eslint-disable max-lines */\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { getCurrentScope, getIsolationScope, getTraceContextFromScope, withScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations, setupIntegration, setupIntegrations } from './integration';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport {\n  getDynamicSamplingContextFromScope,\n  getDynamicSamplingContextFromSpan,\n} from './tracing/dynamicSamplingContext';\nimport type { Breadcrumb, BreadcrumbHint, FetchBreadcrumbHint, XhrBreadcrumbHint } from './types-hoist/breadcrumb';\nimport type { CheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { EventDropReason, Outcome } from './types-hoist/clientreport';\nimport type { TraceContext } from './types-hoist/context';\nimport type { DataCategory } from './types-hoist/datacategory';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type { DynamicSamplingContext, Envelope } from './types-hoist/envelope';\nimport type { ErrorEvent, Event, EventHint, TransactionEvent } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { FeedbackEvent } from './types-hoist/feedback';\nimport type { Integration } from './types-hoist/integration';\nimport type { Log } from './types-hoist/log';\nimport type { ClientOptions } from './types-hoist/options';\nimport type { ParameterizedString } from './types-hoist/parameterize';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport type { Session, SessionAggregates } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span, SpanAttributes, SpanContextData, SpanJSON } from './types-hoist/span';\nimport type { StartSpanOptions } from './types-hoist/startSpanOptions';\nimport type { Transport, TransportMakeRequestResponse } from './types-hoist/transport';\nimport { createClientReportEnvelope } from './utils/clientreport';\nimport { debug } from './utils/debug-logger';\nimport { dsnToString, makeDsn } from './utils/dsn';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils/envelope';\nimport { getPossibleEventMessages } from './utils/eventUtils';\nimport { isParameterizedString, isPlainObject, isPrimitive, isThenable } from './utils/is';\nimport { merge } from './utils/merge';\nimport { checkOrSetAlreadyCaught, uuid4 } from './utils/misc';\nimport { parseSampleRate } from './utils/parseSampleRate';\nimport { prepareEvent } from './utils/prepareEvent';\nimport { getActiveSpan, showSpanDropWarning, spanToTraceContext } from './utils/spanUtils';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './utils/syncpromise';\nimport { convertSpanJsonToTransactionEvent, convertTransactionEventToSpanJson } from './utils/transactionEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\nconst MISSING_RELEASE_FOR_SESSION_ERROR = 'Discarded session because of missing or non-string release';\n\nconst INTERNAL_ERROR_SYMBOL = Symbol.for('SentryInternalError');\nconst DO_NOT_SEND_EVENT_SYMBOL = Symbol.for('SentryDoNotSendEventError');\n\ninterface InternalError {\n  message: string;\n  [INTERNAL_ERROR_SYMBOL]: true;\n}\n\ninterface DoNotSendEventError {\n  message: string;\n  [DO_NOT_SEND_EVENT_SYMBOL]: true;\n}\n\nfunction _makeInternalError(message: string): InternalError {\n  return {\n    message,\n    [INTERNAL_ERROR_SYMBOL]: true,\n  };\n}\n\nfunction _makeDoNotSendEventError(message: string): DoNotSendEventError {\n  return {\n    message,\n    [DO_NOT_SEND_EVENT_SYMBOL]: true,\n  };\n}\n\nfunction _isInternalError(error: unknown): error is InternalError {\n  return !!error && typeof error === 'object' && INTERNAL_ERROR_SYMBOL in error;\n}\n\nfunction _isDoNotSendEventError(error: unknown): error is DoNotSendEventError {\n  return !!error && typeof error === 'object' && DO_NOT_SEND_EVENT_SYMBOL in error;\n}\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link Client._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends Client<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class Client<O extends ClientOptions = ClientOptions> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && debug.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * Captures an exception event and sends it to Sentry.\n   *\n   * Unlike `captureException` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureException(exception: unknown, hint?: EventHint, scope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && debug.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a message event and sends it to Sentry.\n   *\n   * Unlike `captureMessage` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    level?: SeverityLevel,\n    hint?: EventHint,\n    currentScope?: Scope,\n  ): string {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a manually created event and sends it to Sentry.\n   *\n   * Unlike `captureEvent` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureEvent(event: Event, hint?: EventHint, currentScope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint?.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && debug.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    this._process(\n      this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope, capturedSpanIsolationScope),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a session.\n   */\n  public captureSession(session: Session): void {\n    this.sendSession(session);\n    // After sending, we set init false to indicate it's not the first occurrence\n    updateSession(session, { init: false });\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry. This method is not available on all clients.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   * @param scope An optional scope containing event metadata.\n   * @returns A string representing the id of the check in.\n   */\n  public captureCheckIn?(checkIn: CheckIn, monitorConfig?: MonitorConfig, scope?: Scope): string;\n\n  /**\n   * Get the current Dsn.\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * Get the current options.\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * Get the SDK metadata.\n   * @see SdkMetadata\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * Returns the transport that is used by the client.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the client should wait for events to be flushed. Omitting this parameter will\n   *   cause the client to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * Flush the event queue and set the client to `enabled = false`. See {@link Client.flush}.\n   *\n   * @param {number} timeout Maximum time in ms the client should wait before shutting down. Omitting this parameter will cause\n   *   the client to wait until all events are sent before disabling itself.\n   * @returns {Promise<boolean>} A promise which resolves to `true` if the flush completes successfully before the timeout, or `false` if\n   * it doesn't.\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /**\n   * Get all installed event processors.\n   */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /**\n   * Adds an event processor that applies to any event processed by this client.\n   */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Initialize this client.\n   * Call this after the client was set on a scope.\n   */\n  public init(): void {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns {Integration|undefined} The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Add an integration to the client.\n   * This can be used to e.g. lazy load integrations.\n   * In most cases, this should not be necessary,\n   * and you're better off just passing the integrations via `integrations: []` at initialization time.\n   * However, if you find the need to conditionally load & add an integration, you can use `addIntegration` to do so.\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * Send a fully prepared event to Sentry.\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * Send a session or session aggregrates to Sentry.\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    // Backfill release and environment on session\n    const { release: clientReleaseOption, environment: clientEnvironmentOption = DEFAULT_ENVIRONMENT } = this._options;\n    if ('aggregates' in session) {\n      const sessionAttrs = session.attrs || {};\n      if (!sessionAttrs.release && !clientReleaseOption) {\n        DEBUG_BUILD && debug.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      sessionAttrs.release = sessionAttrs.release || clientReleaseOption;\n      sessionAttrs.environment = sessionAttrs.environment || clientEnvironmentOption;\n      session.attrs = sessionAttrs;\n    } else {\n      if (!session.release && !clientReleaseOption) {\n        DEBUG_BUILD && debug.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      session.release = session.release || clientReleaseOption;\n      session.environment = session.environment || clientEnvironmentOption;\n    }\n\n    this.emit('beforeSendSession', session);\n\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * Record on the client that an event got dropped (ie, an event that will not be sent to Sentry).\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, count: number = 1): void {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && debug.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /* eslint-disable @typescript-eslint/unified-signatures */\n  /**\n   * Register a callback for whenever a span is started.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'spanStart', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback before span sampling runs. Receives a `samplingDecision` object argument with a `decision`\n   * property that can be used to make a sampling decision that will be enforced, before any span sampling runs.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeSampling',\n    callback: (\n      samplingData: {\n        spanAttributes: SpanAttributes;\n        spanName: string;\n        parentSampled?: boolean;\n        parentSampleRate?: number;\n        parentContext?: SpanContextData;\n      },\n      samplingDecision: { decision: boolean },\n    ) => void,\n  ): void;\n\n  /**\n   * Register a callback for after a span is ended.\n   * NOTE: The span cannot be mutated anymore in this callback.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'spanEnd', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback for when an idle span is allowed to auto-finish.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'idleSpanEnableAutoFinish', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback for transaction start and finish.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): () => void;\n\n  /**\n   * Register a callback that runs when stack frame metadata should be applied to an event.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'applyFrameMetadata', callback: (event: Event) => void): () => void;\n\n  /**\n   * Register a callback for before sending an event.\n   * This is called right before an event is sent and should not be used to mutate the event.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for before sending a session or session aggregrates..\n   * Receives the session/aggregate as second argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeSendSession', callback: (session: Session | SessionAggregates) => void): () => void;\n\n  /**\n   * Register a callback for preprocessing an event,\n   * before it is passed to (global) event processors.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for postprocessing an event,\n   * after it was passed to (global) event processors, before it is being sent.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'postprocessEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for when an event has been sent.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse) => void,\n  ): () => void;\n\n  /**\n   * Register a callback before a breadcrumb is added.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): () => void;\n\n  /**\n   * Register a callback when a DSC (Dynamic Sampling Context) is created.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext, rootSpan?: Span) => void): () => void;\n\n  /**\n   * Register a callback when a Feedback event has been prepared.\n   * This should be used to mutate the event. The options argument can hint\n   * about what kind of mutation it expects.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * Register a callback when the feedback widget is opened in a user's browser\n   */\n  public on(hook: 'openFeedbackWidget', callback: () => void): () => void;\n\n  /**\n   * A hook for the browser tracing integrations to trigger a span start for a page load.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'startPageLoadSpan',\n    callback: (\n      options: StartSpanOptions,\n      traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n    ) => void,\n  ): () => void;\n\n  /**\n   * A hook for the browser tracing integrations to trigger after the pageload span was started.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'afterStartPageLoadSpan', callback: (span: Span) => void): () => void;\n\n  /**\n   * A hook for triggering right before a navigation span is started.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeStartNavigationSpan',\n    callback: (options: StartSpanOptions, navigationOptions?: { isRedirect?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * A hook for browser tracing integrations to trigger a span for a navigation.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'startNavigationSpan',\n    callback: (options: StartSpanOptions, navigationOptions?: { isRedirect?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * A hook for GraphQL client integration to enhance a span with request data.\n   * @returns A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeOutgoingRequestSpan',\n    callback: (span: Span, hint: XhrBreadcrumbHint | FetchBreadcrumbHint) => void,\n  ): () => void;\n\n  /**\n   * A hook for GraphQL client integration to enhance a breadcrumb with request data.\n   * @returns A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeOutgoingRequestBreadcrumb',\n    callback: (breadcrumb: Breadcrumb, hint: XhrBreadcrumbHint | FetchBreadcrumbHint) => void,\n  ): () => void;\n\n  /**\n   * A hook that is called when the client is flushing\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'flush', callback: () => void): () => void;\n\n  /**\n   * A hook that is called when the client is closing\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'close', callback: () => void): () => void;\n\n  /**\n   * A hook that is called before a log is captured. This hooks runs before `beforeSendLog` is fired.\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeCaptureLog', callback: (log: Log) => void): () => void;\n\n  /**\n   * A hook that is called after a log is captured\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'afterCaptureLog', callback: (log: Log) => void): () => void;\n\n  /**\n   * A hook that is called when the client is flushing logs\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'flushLogs', callback: () => void): () => void;\n\n  /**\n   * Register a hook on this client.\n   */\n  public on(hook: string, callback: unknown): () => void {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** Fire a hook whenever a span starts. */\n  public emit(hook: 'spanStart', span: Span): void;\n\n  /** A hook that is called every time before a span is sampled. */\n  public emit(\n    hook: 'beforeSampling',\n    samplingData: {\n      spanAttributes: SpanAttributes;\n      spanName: string;\n      parentSampled?: boolean;\n      parentSampleRate?: number;\n      parentContext?: SpanContextData;\n    },\n    samplingDecision: { decision: boolean },\n  ): void;\n\n  /** Fire a hook whenever a span ends. */\n  public emit(hook: 'spanEnd', span: Span): void;\n\n  /**\n   * Fire a hook indicating that an idle span is allowed to auto finish.\n   */\n  public emit(hook: 'idleSpanEnableAutoFinish', span: Span): void;\n\n  /*\n   * Fire a hook event for envelope creation and sending. Expects to be given an envelope as the\n   * second argument.\n   */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /*\n   * Fire a hook indicating that stack frame metadata should be applied to the event passed to the hook.\n   */\n  public emit(hook: 'applyFrameMetadata', event: Event): void;\n\n  /**\n   * Fire a hook event before sending an event.\n   * This is called right before an event is sent and should not be used to mutate the event.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /**\n   * Fire a hook event before sending a session/aggregates.\n   * Expects to be given the prepared session/aggregates as second argument.\n   */\n  public emit(hook: 'beforeSendSession', session: Session | SessionAggregates): void;\n\n  /**\n   * Fire a hook event to process events before they are passed to (global) event processors.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /**\n   * Fire a hook event to process a user on an event before it is sent to Sentry, after all other processors have run.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'postprocessEvent', event: Event, hint?: EventHint): void;\n\n  /*\n   * Fire a hook event after sending an event. Expects to be given an Event as the\n   * second argument.\n   */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse): void;\n\n  /**\n   * Fire a hook for when a breadcrumb is added. Expects the breadcrumb as second argument.\n   */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /**\n   * Fire a hook for when a DSC (Dynamic Sampling Context) is created. Expects the DSC as second argument.\n   */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext, rootSpan?: Span): void;\n\n  /**\n   * Fire a hook event for after preparing a feedback event. Events to be given\n   * a feedback event as the second argument, and an optional options object as\n   * third argument.\n   */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay?: boolean }): void;\n\n  /**\n   * Fire a hook event for when the feedback widget is opened in a user's browser\n   */\n  public emit(hook: 'openFeedbackWidget'): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger a span start for a page load.\n   */\n  public emit(\n    hook: 'startPageLoadSpan',\n    options: StartSpanOptions,\n    traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n  ): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger aafter the pageload span was started.\n   */\n  public emit(hook: 'afterStartPageLoadSpan', span: Span): void;\n\n  /**\n   * Emit a hook event for triggering right before a navigation span is started.\n   */\n  public emit(\n    hook: 'beforeStartNavigationSpan',\n    options: StartSpanOptions,\n    navigationOptions?: { isRedirect?: boolean },\n  ): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger a span for a navigation.\n   */\n  public emit(\n    hook: 'startNavigationSpan',\n    options: StartSpanOptions,\n    navigationOptions?: { isRedirect?: boolean },\n  ): void;\n\n  /**\n   * Emit a hook event for GraphQL client integration to enhance a span with request data.\n   */\n  public emit(hook: 'beforeOutgoingRequestSpan', span: Span, hint: XhrBreadcrumbHint | FetchBreadcrumbHint): void;\n\n  /**\n   * Emit a hook event for GraphQL client integration to enhance a breadcrumb with request data.\n   */\n  public emit(\n    hook: 'beforeOutgoingRequestBreadcrumb',\n    breadcrumb: Breadcrumb,\n    hint: XhrBreadcrumbHint | FetchBreadcrumbHint,\n  ): void;\n\n  /**\n   * Emit a hook event for client flush\n   */\n  public emit(hook: 'flush'): void;\n\n  /**\n   * Emit a hook event for client close\n   */\n  public emit(hook: 'close'): void;\n\n  /**\n   * Emit a hook event for client before capturing a log. This hooks runs before `beforeSendLog` is fired.\n   */\n  public emit(hook: 'beforeCaptureLog', log: Log): void;\n\n  /**\n   * Emit a hook event for client after capturing a log.\n   */\n  public emit(hook: 'afterCaptureLog', log: Log): void;\n\n  /**\n   * Emit a hook event for client flush logs\n   */\n  public emit(hook: 'flushLogs'): void;\n\n  /**\n   * Emit a hook that was previously registered via `on()`.\n   */\n  public emit(hook: string, ...rest: unknown[]): void {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * Send an envelope to Sentry.\n   */\n  public sendEnvelope(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && debug.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && debug.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = event.level === 'fatal';\n    let errored = false;\n    const exceptions = event.exception?.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism?.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations?.length) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      this.emit('postprocessEvent', evt, hint);\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(\n    event: Event,\n    hint: EventHint = {},\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<string | undefined> {\n    if (DEBUG_BUILD && isErrorEvent(event)) {\n      debug.log(`Captured error event \\`${getPossibleEventMessages(event)[0] || '<unknown>'}\\``);\n    }\n\n    return this._processEvent(event, hint, currentScope, isolationScope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          if (_isDoNotSendEventError(reason)) {\n            debug.log(reason.message);\n          } else if (_isInternalError(reason)) {\n            debug.warn(reason.message);\n          } else {\n            debug.warn(reason);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        _makeDoNotSendEventError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    const dataCategory = (eventType === 'replay_event' ? 'replay' : eventType) satisfies DataCategory;\n\n    return this._prepareEvent(event, hint, currentScope, isolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory);\n          throw _makeDoNotSendEventError('An event processor returned `null`, will not send event.');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw _makeDoNotSendEventError(`${beforeSendLabel} returned \\`null\\`, will not send event.`);\n        }\n\n        const session = currentScope.getSession() || isolationScope.getSession();\n        if (isError && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore = processedEvent.sdkProcessingMetadata?.spanCountBeforeProcessing || 0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (_isDoNotSendEventError(reason) || _isInternalError(reason)) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw _makeInternalError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  protected _flushOutcomes(): void {\n    DEBUG_BUILD && debug.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && debug.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && debug.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && debug.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n   */\n  public abstract eventFromException(_exception: unknown, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * Creates an {@link Event} from primitive inputs to `captureMessage`.\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    _level?: SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw _makeInternalError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw _makeInternalError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw _makeInternalError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client: Client,\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n  let processedEvent = event;\n\n  if (isErrorEvent(processedEvent) && beforeSend) {\n    return beforeSend(processedEvent, hint);\n  }\n\n  if (isTransactionEvent(processedEvent)) {\n    if (beforeSendSpan) {\n      // process root span\n      const processedRootSpanJson = beforeSendSpan(convertTransactionEventToSpanJson(processedEvent));\n      if (!processedRootSpanJson) {\n        showSpanDropWarning();\n      } else {\n        // update event with processed root span values\n        processedEvent = merge(event, convertSpanJsonToTransactionEvent(processedRootSpanJson));\n      }\n\n      // process child spans\n      if (processedEvent.spans) {\n        const processedSpans: SpanJSON[] = [];\n        for (const span of processedEvent.spans) {\n          const processedSpan = beforeSendSpan(span);\n          if (!processedSpan) {\n            showSpanDropWarning();\n            processedSpans.push(span);\n          } else {\n            processedSpans.push(processedSpan);\n          }\n        }\n        processedEvent.spans = processedSpans;\n      }\n    }\n\n    if (beforeSendTransaction) {\n      if (processedEvent.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = processedEvent.spans.length;\n        processedEvent.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(processedEvent as TransactionEvent, hint);\n    }\n  }\n\n  return processedEvent;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** Extract trace information from scope */\nexport function _getTraceInfoFromScope(\n  client: Client,\n  scope: Scope | undefined,\n): [dynamicSamplingContext: Partial<DynamicSamplingContext> | undefined, traceContext: TraceContext | undefined] {\n  if (!scope) {\n    return [undefined, undefined];\n  }\n\n  return withScope(scope, () => {\n    const span = getActiveSpan();\n    const traceContext = span ? spanToTraceContext(span) : getTraceContextFromScope(scope);\n    const dynamicSamplingContext = span\n      ? getDynamicSamplingContextFromSpan(span)\n      : getDynamicSamplingContextFromScope(client, scope);\n    return [dynamicSamplingContext, traceContext];\n  });\n}\n","import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes';\nimport type { TransactionEvent } from '../types-hoist/event';\nimport type { SpanJSON } from '../types-hoist/span';\n\n/**\n * Converts a transaction event to a span JSON object.\n */\nexport function convertTransactionEventToSpanJson(event: TransactionEvent): SpanJSON {\n  const { trace_id, parent_span_id, span_id, status, origin, data, op } = event.contexts?.trace ?? {};\n\n  return {\n    data: data ?? {},\n    description: event.transaction,\n    op,\n    parent_span_id,\n    span_id: span_id ?? '',\n    start_timestamp: event.start_timestamp ?? 0,\n    status,\n    timestamp: event.timestamp,\n    trace_id: trace_id ?? '',\n    origin,\n    profile_id: data?.[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n    exclusive_time: data?.[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] as number | undefined,\n    measurements: event.measurements,\n    is_segment: true,\n  };\n}\n\n/**\n * Converts a span JSON object to a transaction event.\n */\nexport function convertSpanJsonToTransactionEvent(span: SpanJSON): TransactionEvent {\n  return {\n    type: 'transaction',\n    timestamp: span.timestamp,\n    start_timestamp: span.start_timestamp,\n    transaction: span.description,\n    contexts: {\n      trace: {\n        trace_id: span.trace_id,\n        span_id: span.span_id,\n        parent_span_id: span.parent_span_id,\n        op: span.op,\n        status: span.status,\n        origin: span.origin,\n        data: {\n          ...span.data,\n          ...(span.profile_id && { [SEMANTIC_ATTRIBUTE_PROFILE_ID]: span.profile_id }),\n          ...(span.exclusive_time && { [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: span.exclusive_time }),\n        },\n      },\n    },\n    measurements: span.measurements,\n  };\n}\n","import type { ClientReport } from '../types-hoist/clientreport';\nimport type { ClientReportEnvelope, ClientReportItem } from '../types-hoist/envelope';\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import { getGlobalSingleton } from '../carrier';\nimport type { Client } from '../client';\nimport { _getTraceInfoFromScope } from '../client';\nimport { getClient, getCurrentScope, getGlobalScope, getIsolationScope } from '../currentScopes';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Scope, ScopeData } from '../scope';\nimport type { Log, SerializedLog, SerializedLogAttributeValue } from '../types-hoist/log';\nimport { mergeScopeData } from '../utils/applyScopeDataToEvent';\nimport { consoleSandbox, debug } from '../utils/debug-logger';\nimport { isParameterizedString } from '../utils/is';\nimport { _getSpanForScope } from '../utils/spanOnScope';\nimport { timestampInSeconds } from '../utils/time';\nimport { SEVERITY_TEXT_TO_SEVERITY_NUMBER } from './constants';\nimport { createLogEnvelope } from './envelope';\n\nconst MAX_LOG_BUFFER_SIZE = 100;\n\n/**\n * Converts a log attribute to a serialized log attribute.\n *\n * @param key - The key of the log attribute.\n * @param value - The value of the log attribute.\n * @returns The serialized log attribute.\n */\nexport function logAttributeToSerializedLogAttribute(value: unknown): SerializedLogAttributeValue {\n  switch (typeof value) {\n    case 'number':\n      if (Number.isInteger(value)) {\n        return {\n          value,\n          type: 'integer',\n        };\n      }\n      return {\n        value,\n        type: 'double',\n      };\n    case 'boolean':\n      return {\n        value,\n        type: 'boolean',\n      };\n    case 'string':\n      return {\n        value,\n        type: 'string',\n      };\n    default: {\n      let stringValue = '';\n      try {\n        stringValue = JSON.stringify(value) ?? '';\n      } catch {\n        // Do nothing\n      }\n      return {\n        value: stringValue,\n        type: 'string',\n      };\n    }\n  }\n}\n\n/**\n * Sets a log attribute if the value exists and the attribute key is not already present.\n *\n * @param logAttributes - The log attributes object to modify.\n * @param key - The attribute key to set.\n * @param value - The value to set (only sets if truthy and key not present).\n * @param setEvenIfPresent - Whether to set the attribute if it is present. Defaults to true.\n */\nfunction setLogAttribute(\n  logAttributes: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  setEvenIfPresent = true,\n): void {\n  if (value && (!logAttributes[key] || setEvenIfPresent)) {\n    logAttributes[key] = value;\n  }\n}\n\n/**\n * Captures a serialized log event and adds it to the log buffer for the given client.\n *\n * @param client - A client. Uses the current client if not provided.\n * @param serializedLog - The serialized log event to capture.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_captureSerializedLog(client: Client, serializedLog: SerializedLog): void {\n  const bufferMap = _getBufferMap();\n\n  const logBuffer = _INTERNAL_getLogBuffer(client);\n  if (logBuffer === undefined) {\n    bufferMap.set(client, [serializedLog]);\n  } else {\n    bufferMap.set(client, [...logBuffer, serializedLog]);\n    if (logBuffer.length >= MAX_LOG_BUFFER_SIZE) {\n      _INTERNAL_flushLogsBuffer(client, logBuffer);\n    }\n  }\n}\n\n/**\n * Captures a log event and sends it to Sentry.\n *\n * @param log - The log event to capture.\n * @param scope - A scope. Uses the current scope if not provided.\n * @param client - A client. Uses the current client if not provided.\n * @param captureSerializedLog - A function to capture the serialized log.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_captureLog(\n  beforeLog: Log,\n  client: Client | undefined = getClient(),\n  currentScope = getCurrentScope(),\n  captureSerializedLog: (client: Client, log: SerializedLog) => void = _INTERNAL_captureSerializedLog,\n): void {\n  if (!client) {\n    DEBUG_BUILD && debug.warn('No client available to capture log.');\n    return;\n  }\n\n  const { release, environment, enableLogs = false, beforeSendLog } = client.getOptions();\n  if (!enableLogs) {\n    DEBUG_BUILD && debug.warn('logging option not enabled, log will not be captured.');\n    return;\n  }\n\n  const [, traceContext] = _getTraceInfoFromScope(client, currentScope);\n\n  const processedLogAttributes = {\n    ...beforeLog.attributes,\n  };\n\n  const {\n    user: { id, email, username },\n  } = getMergedScopeData(currentScope);\n  setLogAttribute(processedLogAttributes, 'user.id', id, false);\n  setLogAttribute(processedLogAttributes, 'user.email', email, false);\n  setLogAttribute(processedLogAttributes, 'user.name', username, false);\n\n  setLogAttribute(processedLogAttributes, 'sentry.release', release);\n  setLogAttribute(processedLogAttributes, 'sentry.environment', environment);\n\n  const { name, version } = client.getSdkMetadata()?.sdk ?? {};\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.name', name);\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.version', version);\n\n  const beforeLogMessage = beforeLog.message;\n  if (isParameterizedString(beforeLogMessage)) {\n    const { __sentry_template_string__, __sentry_template_values__ = [] } = beforeLogMessage;\n    processedLogAttributes['sentry.message.template'] = __sentry_template_string__;\n    __sentry_template_values__.forEach((param, index) => {\n      processedLogAttributes[`sentry.message.parameter.${index}`] = param;\n    });\n  }\n\n  const span = _getSpanForScope(currentScope);\n  // Add the parent span ID to the log attributes for trace context\n  setLogAttribute(processedLogAttributes, 'sentry.trace.parent_span_id', span?.spanContext().spanId);\n\n  const processedLog = { ...beforeLog, attributes: processedLogAttributes };\n\n  client.emit('beforeCaptureLog', processedLog);\n\n  // We need to wrap this in `consoleSandbox` to avoid recursive calls to `beforeSendLog`\n  const log = beforeSendLog ? consoleSandbox(() => beforeSendLog(processedLog)) : processedLog;\n  if (!log) {\n    client.recordDroppedEvent('before_send', 'log_item', 1);\n    DEBUG_BUILD && debug.warn('beforeSendLog returned null, log will not be captured.');\n    return;\n  }\n\n  const { level, message, attributes = {}, severityNumber } = log;\n\n  const serializedLog: SerializedLog = {\n    timestamp: timestampInSeconds(),\n    level,\n    body: message,\n    trace_id: traceContext?.trace_id,\n    severity_number: severityNumber ?? SEVERITY_TEXT_TO_SEVERITY_NUMBER[level],\n    attributes: Object.keys(attributes).reduce(\n      (acc, key) => {\n        acc[key] = logAttributeToSerializedLogAttribute(attributes[key]);\n        return acc;\n      },\n      {} as Record<string, SerializedLogAttributeValue>,\n    ),\n  };\n\n  captureSerializedLog(client, serializedLog);\n\n  client.emit('afterCaptureLog', log);\n}\n\n/**\n * Flushes the logs buffer to Sentry.\n *\n * @param client - A client.\n * @param maybeLogBuffer - A log buffer. Uses the log buffer for the given client if not provided.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_flushLogsBuffer(client: Client, maybeLogBuffer?: Array<SerializedLog>): void {\n  const logBuffer = maybeLogBuffer ?? _INTERNAL_getLogBuffer(client) ?? [];\n  if (logBuffer.length === 0) {\n    return;\n  }\n\n  const clientOptions = client.getOptions();\n  const envelope = createLogEnvelope(logBuffer, clientOptions._metadata, clientOptions.tunnel, client.getDsn());\n\n  // Clear the log buffer after envelopes have been constructed.\n  _getBufferMap().set(client, []);\n\n  client.emit('flushLogs');\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\n/**\n * Returns the log buffer for a given client.\n *\n * Exported for testing purposes.\n *\n * @param client - The client to get the log buffer for.\n * @returns The log buffer for the given client.\n */\nexport function _INTERNAL_getLogBuffer(client: Client): Array<SerializedLog> | undefined {\n  return _getBufferMap().get(client);\n}\n\n/**\n * Get the scope data for the current scope after merging with the\n * global scope and isolation scope.\n *\n * @param currentScope - The current scope.\n * @returns The scope data.\n */\nfunction getMergedScopeData(currentScope: Scope): ScopeData {\n  const scopeData = getGlobalScope().getScopeData();\n  mergeScopeData(scopeData, getIsolationScope().getScopeData());\n  mergeScopeData(scopeData, currentScope.getScopeData());\n  return scopeData;\n}\n\nfunction _getBufferMap(): WeakMap<Client, Array<SerializedLog>> {\n  // The reference to the Client <> LogBuffer map is stored on the carrier to ensure it's always the same\n  return getGlobalSingleton('clientToLogBufferMap', () => new WeakMap<Client, Array<SerializedLog>>());\n}\n","import type { DsnComponents } from '../types-hoist/dsn';\nimport type { LogContainerItem, LogEnvelope } from '../types-hoist/envelope';\nimport type { SerializedLog } from '../types-hoist/log';\nimport type { SdkMetadata } from '../types-hoist/sdkmetadata';\nimport { dsnToString } from '../utils/dsn';\nimport { createEnvelope } from '../utils/envelope';\n\n/**\n * Creates a log container envelope item for a list of logs.\n *\n * @param items - The logs to include in the envelope.\n * @returns The created log container envelope item.\n */\nexport function createLogContainerEnvelopeItem(items: Array<SerializedLog>): LogContainerItem {\n  return [\n    {\n      type: 'log',\n      item_count: items.length,\n      content_type: 'application/vnd.sentry.items.log+json',\n    },\n    {\n      items,\n    },\n  ];\n}\n\n/**\n * Creates an envelope for a list of logs.\n *\n * Logs from multiple traces can be included in the same envelope.\n *\n * @param logs - The logs to include in the envelope.\n * @param metadata - The metadata to include in the envelope.\n * @param tunnel - The tunnel to include in the envelope.\n * @param dsn - The DSN to include in the envelope.\n * @returns The created envelope.\n */\nexport function createLogEnvelope(\n  logs: Array<SerializedLog>,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n  dsn?: DsnComponents,\n): LogEnvelope {\n  const headers: LogEnvelope[0] = {};\n\n  if (metadata?.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  return createEnvelope<LogEnvelope>(headers, [createLogContainerEnvelopeItem(logs)]);\n}\n","import type { Client } from './client';\nimport { getCurrentScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ClientOptions } from './types-hoist/options';\nimport { consoleSandbox, debug } from './utils/debug-logger';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): Client {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      debug.enable();\n    } else {\n      // use `console.warn` rather than `debug.warn` since by non-debug bundles have all `debug.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nexport function setCurrentClient(client: Client): void {\n  getCurrentScope().setClient(client);\n}\n","import { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\nexport const SENTRY_BUFFER_FULL_ERROR = Symbol.for('SentryBufferFullError');\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T | void> {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(SENTRY_BUFFER_FULL_ERROR);\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import type { DataCategory } from '../types-hoist/datacategory';\nimport type { TransportMakeRequestResponse } from '../types-hoist/transport';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers?.['x-sentry-rate-limits'];\n  const retryAfterHeader = headers?.['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) as [string, ...string[]];\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { EventDropReason } from '../types-hoist/clientreport';\nimport type { Envelope, EnvelopeItem } from '../types-hoist/envelope';\nimport type {\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '../types-hoist/transport';\nimport { debug } from '../utils/debug-logger';\nimport {\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  serializeEnvelope,\n} from '../utils/envelope';\nimport { type PromiseBuffer, makePromiseBuffer, SENTRY_BUFFER_FULL_ERROR } from '../utils/promisebuffer';\nimport { type RateLimits, isRateLimited, updateRateLimits } from '../utils/ratelimit';\nimport { resolvedSyncPromise } from '../utils/syncpromise';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as (typeof envelope)[1]);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    const requestTask = (): PromiseLike<TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && debug.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          DEBUG_BUILD && debug.error('Encountered error running transport request:', error);\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error === SENTRY_BUFFER_FULL_ERROR) {\n          DEBUG_BUILD && debug.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n","import type { Session, SessionAggregates } from '../types-hoist/session';\nimport type { User } from '../types-hoist/user';\n\n// By default, we want to infer the IP address, unless this is explicitly set to `null`\n// We do this after all other processing is done\n// If `ip_address` is explicitly set to `null` or a value, we leave it as is\n\n/**\n * @internal\n */\nexport function addAutoIpAddressToUser(objWithMaybeUser: { user?: User | null }): void {\n  if (objWithMaybeUser.user?.ip_address === undefined) {\n    objWithMaybeUser.user = {\n      ...objWithMaybeUser.user,\n      ip_address: '{{auto}}',\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function addAutoIpAddressToSession(session: Session | SessionAggregates): void {\n  if ('aggregates' in session) {\n    if (session.attrs?.['ip_address'] === undefined) {\n      session.attrs = {\n        ...session.attrs,\n        ip_address: '{{auto}}',\n      };\n    }\n  } else {\n    if (session.ipAddress === undefined) {\n      session.ipAddress = '{{auto}}';\n    }\n  }\n}\n","import type { Options } from '../types-hoist/options';\nimport { SDK_VERSION } from '../utils/version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import { getClient, getIsolationScope } from './currentScopes';\nimport type { Breadcrumb, BreadcrumbHint } from './types-hoist/breadcrumb';\nimport { consoleSandbox } from './utils/debug-logger';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n","import type { Client } from '../client';\nimport { getClient } from '../currentScopes';\nimport { defineIntegration } from '../integration';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { getOriginalFunction } from '../utils/object';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function (this: WrappedFunction, ...args: unknown[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n","import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { debug } from '../utils/debug-logger';\nimport { getPossibleEventMessages } from '../utils/eventUtils';\nimport { getEventDescription } from '../utils/misc';\nimport { stringMatchesSomePattern } from '../utils/string';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  /^Can't find variable: gmo$/, // Error from Google Search App https://issuetracker.google.com/issues/396043331\n  /^undefined is not an object \\(evaluating 'a\\.[A-Z]'\\)$/, // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n  /^Java exception was raised during method invocation$/, // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)\n];\n\n/** Options for the EventFilters integration */\nexport interface EventFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'EventFilters';\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n */\nexport const eventFiltersIntegration = defineIntegration((options: Partial<EventFiltersOptions> = {}) => {\n  let mergedOptions: Partial<EventFiltersOptions> | undefined;\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const clientOptions = client.getOptions();\n      mergedOptions = _mergeOptions(options, clientOptions);\n    },\n    processEvent(event, _hint, client) {\n      if (!mergedOptions) {\n        const clientOptions = client.getOptions();\n        mergedOptions = _mergeOptions(options, clientOptions);\n      }\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n});\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n *\n * @deprecated this integration was renamed and will be removed in a future major version.\n * Use `eventFiltersIntegration` instead.\n */\nexport const inboundFiltersIntegration = defineIntegration(((options: Partial<EventFiltersOptions> = {}) => {\n  return {\n    ...eventFiltersIntegration(options),\n    name: 'InboundFilters',\n  };\n}) satisfies IntegrationFn);\n\nfunction _mergeOptions(\n  internalOptions: Partial<EventFiltersOptions> = {},\n  clientOptions: Partial<EventFiltersOptions> = {},\n): Partial<EventFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<EventFiltersOptions>): boolean {\n  if (!event.type) {\n    // Filter errors\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n    if (_isUselessError(event)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n            event,\n          )}`,\n        );\n      return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n  } else if (event.type === 'transaction') {\n    // Filter transactions\n\n    if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors?.length) {\n    return false;\n  }\n\n  return getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (!ignoreTransactions?.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  if (!denyUrls?.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  if (!allowUrls?.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    // If there are linked exceptions or exception aggregates we only want to match against the top frame of the \"root\" (the main exception)\n    // The root always comes last in linked exceptions\n    const rootException = [...(event.exception?.values ?? [])]\n      .reverse()\n      .find(value => value.mechanism?.parent_id === undefined && value.stacktrace?.frames?.length);\n    const frames = rootException?.stacktrace?.frames;\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch {\n    DEBUG_BUILD && debug.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event: Event): boolean {\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception?.values?.length) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n","import type { ExtendedError } from '../types-hoist/error';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { isInstanceOf } from './is';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception?.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      hint.originalException as ExtendedError,\n      key,\n      event.exception.values,\n      originalException,\n      0,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n","import type { Event } from './types-hoist/event';\nimport type { StackParser } from './types-hoist/stacktrace';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/** Keys are source filename/url, values are metadata objects. */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst filenameMetadataMap = new Map<string, any>();\n/** Set of stack strings that have already been parsed. */\nconst parsedStacks = new Set<string>();\n\nfunction ensureMetadataStacksAreParsed(parser: StackParser): void {\n  if (!GLOBAL_OBJ._sentryModuleMetadata) {\n    return;\n  }\n\n  for (const stack of Object.keys(GLOBAL_OBJ._sentryModuleMetadata)) {\n    const metadata = GLOBAL_OBJ._sentryModuleMetadata[stack];\n\n    if (parsedStacks.has(stack)) {\n      continue;\n    }\n\n    // Ensure this stack doesn't get parsed again\n    parsedStacks.add(stack);\n\n    const frames = parser(stack);\n\n    // Go through the frames starting from the top of the stack and find the first one with a filename\n    for (const frame of frames.reverse()) {\n      if (frame.filename) {\n        // Save the metadata for this filename\n        filenameMetadataMap.set(frame.filename, metadata);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Retrieve metadata for a specific JavaScript file URL.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getMetadataForUrl(parser: StackParser, filename: string): any | undefined {\n  ensureMetadataStacksAreParsed(parser);\n  return filenameMetadataMap.get(filename);\n}\n\n/**\n * Adds metadata to stack frames.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\nexport function addMetadataToStackFrames(parser: StackParser, event: Event): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        if (!frame.filename || frame.module_metadata) {\n          continue;\n        }\n\n        const metadata = getMetadataForUrl(parser, frame.filename);\n\n        if (metadata) {\n          frame.module_metadata = metadata;\n        }\n      }\n    });\n  } catch {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Strips metadata from stack frames.\n */\nexport function stripMetadataFromStackFrames(event: Event): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        delete frame.module_metadata;\n      }\n    });\n  } catch {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '../types-hoist/instrument';\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../utils/debug-logger';\nimport { fill } from '../utils/object';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log?.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","import type { SeverityLevel } from '../types-hoist/severity';\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) as SeverityLevel;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { debug } from '../utils/debug-logger';\nimport { getFramesFromEvent } from '../utils/stacktrace';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && debug.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Deduplication filter.\n */\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nexport function _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i]!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i]!;\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception?.values?.[0];\n}\n","import {\n  SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  SEMANTIC_ATTRIBUTE_URL_FULL,\n} from '../semanticAttributes';\nimport type { SpanAttributes } from '../types-hoist/span';\n\ntype PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\ninterface URLwithCanParse extends URL {\n  canParse: (url: string, base?: string | URL | undefined) => boolean;\n}\n\n// A subset of the URL object that is valid for relative URLs\n// The URL object cannot handle relative URLs, so we need to handle them separately\ntype RelativeURL = {\n  isRelative: true;\n  pathname: URL['pathname'];\n  search: URL['search'];\n  hash: URL['hash'];\n};\n\ntype URLObject = RelativeURL | URL;\n\n// Curious about `thismessage:/`? See: https://www.rfc-editor.org/rfc/rfc2557.html\n//  > When the methods above do not yield an absolute URI, a base URL\n//  > of \"thismessage:/\" MUST be employed. This base URL has been\n//  > defined for the sole purpose of resolving relative references\n//  > within a multipart/related structure when no other base URI is\n//  > specified.\n//\n// We need to provide a base URL to `parseStringToURLObject` because the fetch API gives us a\n// relative URL sometimes.\n//\n// This is the only case where we need to provide a base URL to `parseStringToURLObject`\n// because the relative URL is not valid on its own.\nconst DEFAULT_BASE_URL = 'thismessage:/';\n\n/**\n * Checks if the URL object is relative\n *\n * @param url - The URL object to check\n * @returns True if the URL object is relative, false otherwise\n */\nexport function isURLObjectRelative(url: URLObject): url is RelativeURL {\n  return 'isRelative' in url;\n}\n\n/**\n * Parses string to a URL object\n *\n * @param url - The URL to parse\n * @returns The parsed URL object or undefined if the URL is invalid\n */\nexport function parseStringToURLObject(url: string, urlBase?: string | URL | undefined): URLObject | undefined {\n  const isRelative = url.indexOf('://') <= 0 && url.indexOf('//') !== 0;\n  const base = urlBase ?? (isRelative ? DEFAULT_BASE_URL : undefined);\n  try {\n    // Use `canParse` to short-circuit the URL constructor if it's not a valid URL\n    // This is faster than trying to construct the URL and catching the error\n    // Node 20+, Chrome 120+, Firefox 115+, Safari 17+\n    if ('canParse' in URL && !(URL as unknown as URLwithCanParse).canParse(url, base)) {\n      return undefined;\n    }\n\n    const fullUrlObject = new URL(url, base);\n    if (isRelative) {\n      // Because we used a fake base URL, we need to return a relative URL object.\n      // We cannot return anything about the origin, host, etc. because it will refer to the fake base URL.\n      return {\n        isRelative,\n        pathname: fullUrlObject.pathname,\n        search: fullUrlObject.search,\n        hash: fullUrlObject.hash,\n      };\n    }\n    return fullUrlObject;\n  } catch {\n    // empty body\n  }\n\n  return undefined;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlStringFromUrlObject(url: URLObject): string {\n  if (isURLObjectRelative(url)) {\n    return url.pathname;\n  }\n\n  const newUrl = new URL(url);\n  newUrl.search = '';\n  newUrl.hash = '';\n  if (['80', '443'].includes(newUrl.port)) {\n    newUrl.port = '';\n  }\n  if (newUrl.password) {\n    newUrl.password = '%filtered%';\n  }\n  if (newUrl.username) {\n    newUrl.username = '%filtered%';\n  }\n\n  return newUrl.toString();\n}\n\ntype PartialRequest = {\n  method?: string;\n};\n\nfunction getHttpSpanNameFromUrlObject(\n  urlObject: URLObject | undefined,\n  kind: 'server' | 'client',\n  request?: PartialRequest,\n  routeName?: string,\n): string {\n  const method = request?.method?.toUpperCase() ?? 'GET';\n  const route = routeName\n    ? routeName\n    : urlObject\n      ? kind === 'client'\n        ? getSanitizedUrlStringFromUrlObject(urlObject)\n        : urlObject.pathname\n      : '/';\n\n  return `${method} ${route}`;\n}\n\n/**\n * Takes a parsed URL object and returns a set of attributes for the span\n * that represents the HTTP request for that url. This is used for both server\n * and client http spans.\n *\n * Follows https://opentelemetry.io/docs/specs/semconv/http/.\n *\n * @param urlObject - see {@link parseStringToURLObject}\n * @param kind - The type of HTTP operation (server or client)\n * @param spanOrigin - The origin of the span\n * @param request - The request object, see {@link PartialRequest}\n * @param routeName - The name of the route, must be low cardinality\n * @returns The span name and attributes for the HTTP operation\n */\nexport function getHttpSpanDetailsFromUrlObject(\n  urlObject: URLObject | undefined,\n  kind: 'server' | 'client',\n  spanOrigin: string,\n  request?: PartialRequest,\n  routeName?: string,\n): [name: string, attributes: SpanAttributes] {\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n  };\n\n  if (routeName) {\n    // This is based on https://opentelemetry.io/docs/specs/semconv/http/http-spans/#name\n    attributes[kind === 'server' ? 'http.route' : 'url.template'] = routeName;\n    attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n  }\n\n  if (request?.method) {\n    attributes[SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD] = request.method.toUpperCase();\n  }\n\n  if (urlObject) {\n    if (urlObject.search) {\n      attributes['url.query'] = urlObject.search;\n    }\n    if (urlObject.hash) {\n      attributes['url.fragment'] = urlObject.hash;\n    }\n    if (urlObject.pathname) {\n      attributes['url.path'] = urlObject.pathname;\n      if (urlObject.pathname === '/') {\n        attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n      }\n    }\n\n    if (!isURLObjectRelative(urlObject)) {\n      attributes[SEMANTIC_ATTRIBUTE_URL_FULL] = urlObject.href;\n      if (urlObject.port) {\n        attributes['url.port'] = urlObject.port;\n      }\n      if (urlObject.protocol) {\n        attributes['url.scheme'] = urlObject.protocol;\n      }\n      if (urlObject.hostname) {\n        attributes[kind === 'server' ? 'server.address' : 'url.domain'] = urlObject.hostname;\n      }\n    }\n  }\n\n  return [getHttpSpanNameFromUrlObject(urlObject, kind, request, routeName), attributes];\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  return (urlPath.split(/[?#]/, 1) as [string, ...string[]])[0];\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    host\n      // Always filter out authority\n      ?.replace(/^.*@/, '[filtered]:[filtered]@')\n      // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n      // TODO: Use new URL global if it exists\n      .replace(/(:80)$/, '')\n      .replace(/(:443)$/, '') || '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/**\n * Essential MCP attribute constants for Sentry instrumentation\n *\n * Based on OpenTelemetry MCP semantic conventions\n * @see https://github.com/open-telemetry/semantic-conventions/blob/3097fb0af5b9492b0e3f55dc5f6c21a3dc2be8df/docs/gen-ai/mcp.md\n */\n\n// =============================================================================\n// CORE MCP ATTRIBUTES\n// =============================================================================\n\n/** The name of the request or notification method */\nexport const MCP_METHOD_NAME_ATTRIBUTE = 'mcp.method.name';\n\n/** JSON-RPC request identifier for the request. Unique within the MCP session. */\nexport const MCP_REQUEST_ID_ATTRIBUTE = 'mcp.request.id';\n\n/** Identifies the MCP session */\nexport const MCP_SESSION_ID_ATTRIBUTE = 'mcp.session.id';\n\n/** Transport method used for MCP communication */\nexport const MCP_TRANSPORT_ATTRIBUTE = 'mcp.transport';\n\n// =============================================================================\n// CLIENT ATTRIBUTES\n// =============================================================================\n\n/** Name of the MCP client application */\nexport const MCP_CLIENT_NAME_ATTRIBUTE = 'mcp.client.name';\n\n/** Display title of the MCP client application */\nexport const MCP_CLIENT_TITLE_ATTRIBUTE = 'mcp.client.title';\n\n/** Version of the MCP client application */\nexport const MCP_CLIENT_VERSION_ATTRIBUTE = 'mcp.client.version';\n\n// =============================================================================\n// SERVER ATTRIBUTES\n// =============================================================================\n\n/** Name of the MCP server application */\nexport const MCP_SERVER_NAME_ATTRIBUTE = 'mcp.server.name';\n\n/** Display title of the MCP server application */\nexport const MCP_SERVER_TITLE_ATTRIBUTE = 'mcp.server.title';\n\n/** Version of the MCP server application */\nexport const MCP_SERVER_VERSION_ATTRIBUTE = 'mcp.server.version';\n\n/** MCP protocol version used in the session */\nexport const MCP_PROTOCOL_VERSION_ATTRIBUTE = 'mcp.protocol.version';\n\n// =============================================================================\n// METHOD-SPECIFIC ATTRIBUTES\n// =============================================================================\n\n/** Name of the tool being called */\nexport const MCP_TOOL_NAME_ATTRIBUTE = 'mcp.tool.name';\n\n/** The resource URI being accessed */\nexport const MCP_RESOURCE_URI_ATTRIBUTE = 'mcp.resource.uri';\n\n/** Name of the prompt template */\nexport const MCP_PROMPT_NAME_ATTRIBUTE = 'mcp.prompt.name';\n\n// =============================================================================\n// TOOL RESULT ATTRIBUTES\n// =============================================================================\n\n/** Whether a tool execution resulted in an error */\nexport const MCP_TOOL_RESULT_IS_ERROR_ATTRIBUTE = 'mcp.tool.result.is_error';\n\n/** Number of content items in the tool result */\nexport const MCP_TOOL_RESULT_CONTENT_COUNT_ATTRIBUTE = 'mcp.tool.result.content_count';\n\n/** Serialized content of the tool result */\nexport const MCP_TOOL_RESULT_CONTENT_ATTRIBUTE = 'mcp.tool.result.content';\n\n// =============================================================================\n// REQUEST ARGUMENT ATTRIBUTES\n// =============================================================================\n\n/** Prefix for MCP request argument prefix for each argument */\nexport const MCP_REQUEST_ARGUMENT = 'mcp.request.argument';\n\n// =============================================================================\n// LOGGING ATTRIBUTES\n// =============================================================================\n\n/** Log level for MCP logging operations */\nexport const MCP_LOGGING_LEVEL_ATTRIBUTE = 'mcp.logging.level';\n\n/** Logger name for MCP logging operations */\nexport const MCP_LOGGING_LOGGER_ATTRIBUTE = 'mcp.logging.logger';\n\n/** Data type of the logged message */\nexport const MCP_LOGGING_DATA_TYPE_ATTRIBUTE = 'mcp.logging.data_type';\n\n/** Log message content */\nexport const MCP_LOGGING_MESSAGE_ATTRIBUTE = 'mcp.logging.message';\n\n// =============================================================================\n// NETWORK ATTRIBUTES (OpenTelemetry Standard)\n// =============================================================================\n\n/** OSI transport layer protocol */\nexport const NETWORK_TRANSPORT_ATTRIBUTE = 'network.transport';\n\n/** The version of JSON RPC protocol used */\nexport const NETWORK_PROTOCOL_VERSION_ATTRIBUTE = 'network.protocol.version';\n\n/** Client address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name */\nexport const CLIENT_ADDRESS_ATTRIBUTE = 'client.address';\n\n/** Client port number */\nexport const CLIENT_PORT_ATTRIBUTE = 'client.port';\n\n// =============================================================================\n// SENTRY-SPECIFIC MCP ATTRIBUTE VALUES\n// =============================================================================\n\n/** Sentry operation value for MCP server spans */\nexport const MCP_SERVER_OP_VALUE = 'mcp.server';\n\n/**\n * Sentry operation value for client-to-server notifications\n * Following OpenTelemetry MCP semantic conventions\n */\nexport const MCP_NOTIFICATION_CLIENT_TO_SERVER_OP_VALUE = 'mcp.notification.client_to_server';\n\n/**\n * Sentry operation value for server-to-client notifications\n * Following OpenTelemetry MCP semantic conventions\n */\nexport const MCP_NOTIFICATION_SERVER_TO_CLIENT_OP_VALUE = 'mcp.notification.server_to_client';\n\n/** Sentry origin value for MCP function spans */\nexport const MCP_FUNCTION_ORIGIN_VALUE = 'auto.function.mcp_server';\n\n/** Sentry origin value for MCP notification spans */\nexport const MCP_NOTIFICATION_ORIGIN_VALUE = 'auto.mcp.notification';\n\n/** Sentry source value for MCP route spans */\nexport const MCP_ROUTE_SOURCE_VALUE = 'route';\n","/**\n * Session data management for MCP server instrumentation\n */\n\nimport type { MCPTransport, PartyInfo, SessionData } from './types';\n\n/**\n * Transport-scoped session data storage (only for transports with sessionId)\n * @internal Maps transport instances to session-level data\n */\nconst transportToSessionData = new WeakMap<MCPTransport, SessionData>();\n\n/**\n * Stores session data for a transport with sessionId\n * @param transport - MCP transport instance\n * @param sessionData - Session data to store\n */\nexport function storeSessionDataForTransport(transport: MCPTransport, sessionData: SessionData): void {\n  if (transport.sessionId) transportToSessionData.set(transport, sessionData);\n}\n\n/**\n * Updates session data for a transport with sessionId (merges with existing data)\n * @param transport - MCP transport instance\n * @param partialSessionData - Partial session data to merge with existing data\n */\nexport function updateSessionDataForTransport(transport: MCPTransport, partialSessionData: Partial<SessionData>): void {\n  if (transport.sessionId) {\n    const existingData = transportToSessionData.get(transport) || {};\n    transportToSessionData.set(transport, { ...existingData, ...partialSessionData });\n  }\n}\n\n/**\n * Retrieves client information for a transport\n * @param transport - MCP transport instance\n * @returns Client information if available\n */\nexport function getClientInfoForTransport(transport: MCPTransport): PartyInfo | undefined {\n  return transportToSessionData.get(transport)?.clientInfo;\n}\n\n/**\n * Retrieves protocol version for a transport\n * @param transport - MCP transport instance\n * @returns Protocol version if available\n */\nexport function getProtocolVersionForTransport(transport: MCPTransport): string | undefined {\n  return transportToSessionData.get(transport)?.protocolVersion;\n}\n\n/**\n * Retrieves full session data for a transport\n * @param transport - MCP transport instance\n * @returns Complete session data if available\n */\nexport function getSessionDataForTransport(transport: MCPTransport): SessionData | undefined {\n  return transportToSessionData.get(transport);\n}\n\n/**\n * Cleans up session data for a specific transport (when that transport closes)\n * @param transport - MCP transport instance\n */\nexport function cleanupSessionDataForTransport(transport: MCPTransport): void {\n  transportToSessionData.delete(transport);\n}\n","/**\n * PII filtering for MCP server spans\n *\n * Removes sensitive data when sendDefaultPii is false.\n * Uses configurable attribute filtering to protect user privacy.\n */\nimport type { SpanAttributeValue } from '../../types-hoist/span';\nimport {\n  CLIENT_ADDRESS_ATTRIBUTE,\n  CLIENT_PORT_ATTRIBUTE,\n  MCP_LOGGING_MESSAGE_ATTRIBUTE,\n  MCP_REQUEST_ARGUMENT,\n  MCP_RESOURCE_URI_ATTRIBUTE,\n  MCP_TOOL_RESULT_CONTENT_ATTRIBUTE,\n} from './attributes';\n\n/**\n * PII attributes that should be removed when sendDefaultPii is false\n * @internal\n */\nconst PII_ATTRIBUTES = new Set([\n  CLIENT_ADDRESS_ATTRIBUTE,\n  CLIENT_PORT_ATTRIBUTE,\n  MCP_LOGGING_MESSAGE_ATTRIBUTE,\n  MCP_RESOURCE_URI_ATTRIBUTE,\n  MCP_TOOL_RESULT_CONTENT_ATTRIBUTE,\n]);\n\n/**\n * Checks if an attribute key should be considered PII\n * @internal\n */\nfunction isPiiAttribute(key: string): boolean {\n  return PII_ATTRIBUTES.has(key) || key.startsWith(`${MCP_REQUEST_ARGUMENT}.`);\n}\n\n/**\n * Removes PII attributes from span data when sendDefaultPii is false\n * @param spanData - Raw span attributes\n * @param sendDefaultPii - Whether to include PII data\n * @returns Filtered span attributes\n */\nexport function filterMcpPiiFromSpanData(\n  spanData: Record<string, unknown>,\n  sendDefaultPii: boolean,\n): Record<string, SpanAttributeValue> {\n  if (sendDefaultPii) {\n    return spanData as Record<string, SpanAttributeValue>;\n  }\n\n  return Object.entries(spanData).reduce(\n    (acc, [key, value]) => {\n      if (!isPiiAttribute(key)) {\n        acc[key] = value as SpanAttributeValue;\n      }\n      return acc;\n    },\n    {} as Record<string, SpanAttributeValue>,\n  );\n}\n","/**\n * Request-span correlation system for MCP server instrumentation\n *\n * Handles mapping requestId to span data for correlation with handler execution.\n * Uses WeakMap to scope correlation maps per transport instance, preventing\n * request ID collisions between different MCP sessions.\n */\n\nimport { getClient } from '../../currentScopes';\nimport { SPAN_STATUS_ERROR } from '../../tracing';\nimport type { Span } from '../../types-hoist/span';\nimport { extractToolResultAttributes } from './attributeExtraction';\nimport { filterMcpPiiFromSpanData } from './piiFiltering';\nimport type { MCPTransport, RequestId, RequestSpanMapValue } from './types';\n\n/**\n * Transport-scoped correlation system that prevents collisions between different MCP sessions\n * @internal Each transport instance gets its own correlation map, eliminating request ID conflicts\n */\nconst transportToSpanMap = new WeakMap<MCPTransport, Map<RequestId, RequestSpanMapValue>>();\n\n/**\n * Gets or creates the span map for a specific transport instance\n * @internal\n * @param transport - MCP transport instance\n * @returns Span map for the transport\n */\nfunction getOrCreateSpanMap(transport: MCPTransport): Map<RequestId, RequestSpanMapValue> {\n  let spanMap = transportToSpanMap.get(transport);\n  if (!spanMap) {\n    spanMap = new Map();\n    transportToSpanMap.set(transport, spanMap);\n  }\n  return spanMap;\n}\n\n/**\n * Stores span context for later correlation with handler execution\n * @param transport - MCP transport instance\n * @param requestId - Request identifier\n * @param span - Active span to correlate\n * @param method - MCP method name\n */\nexport function storeSpanForRequest(transport: MCPTransport, requestId: RequestId, span: Span, method: string): void {\n  const spanMap = getOrCreateSpanMap(transport);\n  spanMap.set(requestId, {\n    span,\n    method,\n    startTime: Date.now(),\n  });\n}\n\n/**\n * Completes span with tool results and cleans up correlation\n * @param transport - MCP transport instance\n * @param requestId - Request identifier\n * @param result - Tool execution result for attribute extraction\n */\nexport function completeSpanWithResults(transport: MCPTransport, requestId: RequestId, result: unknown): void {\n  const spanMap = getOrCreateSpanMap(transport);\n  const spanData = spanMap.get(requestId);\n  if (spanData) {\n    const { span, method } = spanData;\n\n    if (method === 'tools/call') {\n      const rawToolAttributes = extractToolResultAttributes(result);\n      const client = getClient();\n      const sendDefaultPii = Boolean(client?.getOptions().sendDefaultPii);\n      const toolAttributes = filterMcpPiiFromSpanData(rawToolAttributes, sendDefaultPii);\n\n      span.setAttributes(toolAttributes);\n    }\n\n    span.end();\n    spanMap.delete(requestId);\n  }\n}\n\n/**\n * Cleans up pending spans for a specific transport (when that transport closes)\n * @param transport - MCP transport instance\n * @returns Number of pending spans that were cleaned up\n */\nexport function cleanupPendingSpansForTransport(transport: MCPTransport): number {\n  const spanMap = transportToSpanMap.get(transport);\n  if (!spanMap) return 0;\n\n  const pendingCount = spanMap.size;\n\n  for (const [, spanData] of spanMap) {\n    spanData.span.setStatus({\n      code: SPAN_STATUS_ERROR,\n      message: 'cancelled',\n    });\n    spanData.span.end();\n  }\n\n  spanMap.clear();\n  return pendingCount;\n}\n","import { fill } from '../../utils/object';\nimport { wrapAllMCPHandlers } from './handlers';\nimport { wrapTransportError, wrapTransportOnClose, wrapTransportOnMessage, wrapTransportSend } from './transport';\nimport type { MCPServerInstance, MCPTransport } from './types';\nimport { validateMcpServerInstance } from './validation';\n\n/**\n * Tracks wrapped MCP server instances to prevent double-wrapping\n * @internal\n */\nconst wrappedMcpServerInstances = new WeakSet();\n\n/**\n * Wraps a MCP Server instance from the `@modelcontextprotocol/sdk` package with Sentry instrumentation.\n *\n * Compatible with versions `^1.9.0` of the `@modelcontextprotocol/sdk` package.\n * Automatically instruments transport methods and handler functions for comprehensive monitoring.\n *\n * @example\n * ```typescript\n * import * as Sentry from '@sentry/core';\n * import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\n * import { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\n *\n * const server = Sentry.wrapMcpServerWithSentry(\n *   new McpServer({ name: \"my-server\", version: \"1.0.0\" })\n * );\n *\n * const transport = new StreamableHTTPServerTransport();\n * await server.connect(transport);\n * ```\n *\n * @param mcpServerInstance - MCP server instance to instrument\n * @returns Instrumented server instance (same reference)\n */\nexport function wrapMcpServerWithSentry<S extends object>(mcpServerInstance: S): S {\n  if (wrappedMcpServerInstances.has(mcpServerInstance)) {\n    return mcpServerInstance;\n  }\n\n  if (!validateMcpServerInstance(mcpServerInstance)) {\n    return mcpServerInstance;\n  }\n\n  const serverInstance = mcpServerInstance as MCPServerInstance;\n\n  fill(serverInstance, 'connect', originalConnect => {\n    return async function (this: MCPServerInstance, transport: MCPTransport, ...restArgs: unknown[]) {\n      const result = await (originalConnect as (...args: unknown[]) => Promise<unknown>).call(\n        this,\n        transport,\n        ...restArgs,\n      );\n\n      wrapTransportOnMessage(transport);\n      wrapTransportSend(transport);\n      wrapTransportOnClose(transport);\n      wrapTransportError(transport);\n\n      return result;\n    };\n  });\n\n  wrapAllMCPHandlers(serverInstance);\n\n  wrappedMcpServerInstances.add(mcpServerInstance);\n  return mcpServerInstance as S;\n}\n","import type { SeverityLevel } from '../types-hoist/severity';\n\n/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nexport function getBreadcrumbLogLevelFromHttpStatusCode(statusCode: number | undefined): SeverityLevel | undefined {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n","import type { ConsoleLevel } from '../types-hoist/instrument';\n\n/**\n * An error emitted by Sentry SDKs and related utilities.\n * @deprecated This class is no longer used and will be removed in a future version. Use `Error` instead.\n */\nexport class SentryError extends Error {\n  public logLevel: ConsoleLevel;\n\n  public constructor(\n    public message: string,\n    logLevel: ConsoleLevel = 'warn',\n  ) {\n    super(message);\n\n    this.logLevel = logLevel;\n  }\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { debug } from './debug-logger';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\ndeclare const EdgeRuntime: string | undefined;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  return 'history' in WINDOW && !!WINDOW.history;\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nexport const supportsFetch = _isFetchSupported;\n\nfunction _isFetchSupported(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFunction(func: Function): boolean {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow?.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD && debug.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { HandlerDataFetch } from '../types-hoist/instrument';\nimport type { WebFetchHeaders } from '../types-hoist/webfetchapi';\nimport { isError, isRequest } from '../utils/is';\nimport { addNonEnumerableProperty, fill } from '../utils/object';\nimport { supportsNativeFetch } from '../utils/supports';\nimport { timestampInSeconds } from '../utils/time';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(\n  handler: (data: HandlerDataFetch) => void,\n  skipNativeFetchCheck?: boolean,\n): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n}\n\n/**\n * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n * span can be updated accordingly.\n *\n * Only used internally\n * @hidden\n */\nexport function addFetchEndInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch-body-resolved';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(streamHandler));\n}\n\nfunction instrumentFetch(onFetchResolved?: (response: Response) => void, skipNativeFetchCheck: boolean = false): void {\n  if (skipNativeFetchCheck && !supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      // We capture the error right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualError = new Error();\n\n      const { method, url } = parseFetchArgs(args);\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n        // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n        virtualError,\n        headers: getHeadersFromFetchArgs(args),\n      };\n\n      // if there is no callback, fetch is instrumented directly\n      if (!onFetchResolved) {\n        triggerHandlers('fetch', {\n          ...handlerData,\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        async (response: Response) => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            triggerHandlers('fetch', {\n              ...handlerData,\n              endTimestamp: timestampInSeconds() * 1000,\n              response,\n            });\n          }\n\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          });\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // We enhance the not-so-helpful \"Failed to fetch\" error messages with the host\n          // Possible messages we handle here:\n          // * \"Failed to fetch\" (chromium)\n          // * \"Load failed\" (webkit)\n          // * \"NetworkError when attempting to fetch resource.\" (firefox)\n          if (\n            error instanceof TypeError &&\n            (error.message === 'Failed to fetch' ||\n              error.message === 'Load failed' ||\n              error.message === 'NetworkError when attempting to fetch resource.')\n          ) {\n            try {\n              const url = new URL(handlerData.fetchData.url);\n              error.message = `${error.message} (${url.host})`;\n            } catch {\n              // ignore it if errors happen here\n            }\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nasync function resolveResponse(res: Response | undefined, onFinishedResolving: () => void): Promise<void> {\n  if (res?.body) {\n    const body = res.body;\n    const responseReader = body.getReader();\n\n    // Define a maximum duration after which we just cancel\n    const maxFetchDurationTimeout = setTimeout(\n      () => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      },\n      90 * 1000, // 90s\n    );\n\n    let readingActive = true;\n    while (readingActive) {\n      let chunkTimeout;\n      try {\n        // abort reading if read op takes more than 5s\n        chunkTimeout = setTimeout(() => {\n          body.cancel().then(null, () => {\n            // noop on error\n          });\n        }, 5000);\n\n        // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n        const { done } = await responseReader.read();\n\n        clearTimeout(chunkTimeout);\n\n        if (done) {\n          onFinishedResolving();\n          readingActive = false;\n        }\n      } catch {\n        readingActive = false;\n      } finally {\n        clearTimeout(chunkTimeout);\n      }\n    }\n\n    clearTimeout(maxFetchDurationTimeout);\n\n    responseReader.releaseLock();\n    body.cancel().then(null, () => {\n      // noop on error\n    });\n  }\n}\n\nfunction streamHandler(response: Response): void {\n  // clone response for awaiting stream\n  let clonedResponseForResolving: Response;\n  try {\n    clonedResponseForResolving = response.clone();\n  } catch {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  resolveResponse(clonedResponseForResolving, () => {\n    triggerHandlers('fetch-body-resolved', {\n      endTimestamp: timestampInSeconds() * 1000,\n      response,\n    });\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nfunction getHeadersFromFetchArgs(fetchArgs: unknown[]): WebFetchHeaders | undefined {\n  const [requestArgument, optionsArgument] = fetchArgs;\n\n  try {\n    if (\n      typeof optionsArgument === 'object' &&\n      optionsArgument !== null &&\n      'headers' in optionsArgument &&\n      optionsArgument.headers\n    ) {\n      return new Headers(optionsArgument.headers as any);\n    }\n\n    if (isRequest(requestArgument)) {\n      return new Headers(requestArgument.headers);\n    }\n  } catch {\n    // noop\n  }\n\n  return;\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the `debug` singleton, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @param existingModule module to use for requiring\n * @returns possibly required module\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function loadModule<T>(moduleName: string, existingModule: any = module): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(existingModule, moduleName);\n  } catch {\n    // no-empty\n  }\n\n  if (!mod) {\n    try {\n      const { cwd } = dynamicRequire(existingModule, 'process');\n      mod = dynamicRequire(existingModule, `${cwd()}/node_modules/${moduleName}`) as T;\n    } catch {\n      // no-empty\n    }\n  }\n\n  return mod;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `debug` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader' | 'aws-lambda-layer';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // This comment is used to identify this line in the CDN bundle build step and replace this with \"return 'cdn';\"\n  /* __SENTRY_SDK_SOURCE__ */ return 'npm';\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  const process = (GLOBAL_OBJ as typeof GLOBAL_OBJ & { process?: ElectronProcess }).process;\n  return process?.type === 'renderer';\n}\n","import { GLOBAL_OBJ } from '@sentry/core';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and feedback packages\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\nexport const DOCUMENT = WINDOW.document;\nexport const NAVIGATOR = WINDOW.navigator;\n\nexport const TRIGGER_LABEL = 'Report a Bug';\nexport const CANCEL_BUTTON_LABEL = 'Cancel';\nexport const SUBMIT_BUTTON_LABEL = 'Send Bug Report';\nexport const CONFIRM_BUTTON_LABEL = 'Confirm';\nexport const FORM_TITLE = 'Report a Bug';\nexport const EMAIL_PLACEHOLDER = 'your.email@example.org';\nexport const EMAIL_LABEL = 'Email';\nexport const MESSAGE_PLACEHOLDER = \"What's the bug? What did you expect?\";\nexport const MESSAGE_LABEL = 'Description';\nexport const NAME_PLACEHOLDER = 'Your Name';\nexport const NAME_LABEL = 'Name';\nexport const SUCCESS_MESSAGE_TEXT = 'Thank you for your report!';\nexport const IS_REQUIRED_LABEL = '(required)';\nexport const ADD_SCREENSHOT_LABEL = 'Add a screenshot';\nexport const REMOVE_SCREENSHOT_LABEL = 'Remove screenshot';\n\nexport const FEEDBACK_WIDGET_SOURCE = 'widget';\nexport const FEEDBACK_API_SOURCE = 'api';\n\nexport const SUCCESS_MESSAGE_TIMEOUT = 5000;\n","import type { Event, EventHint, SendFeedback, SendFeedbackParams, TransportMakeRequestResponse } from '@sentry/core';\nimport { captureFeedback, getClient, getCurrentScope, getLocationHref } from '@sentry/core';\nimport { FEEDBACK_API_SOURCE } from '../constants';\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nexport const sendFeedback: SendFeedback = (\n  params: SendFeedbackParams,\n  hint: EventHint & { includeReplay?: boolean } = { includeReplay: true },\n): Promise<string> => {\n  if (!params.message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  // We want to wait for the feedback to be sent (or not)\n  const client = getClient();\n\n  if (!client) {\n    throw new Error('No client setup, cannot send feedback.');\n  }\n\n  if (params.tags && Object.keys(params.tags).length) {\n    getCurrentScope().setTags(params.tags);\n  }\n  const eventId = captureFeedback(\n    {\n      source: FEEDBACK_API_SOURCE,\n      url: getLocationHref(),\n      ...params,\n    },\n    hint,\n  );\n\n  // We want to wait for the feedback to be sent (or not)\n  return new Promise<string>((resolve, reject) => {\n    // After 30s, we want to clear anyhow\n    const timeout = setTimeout(() => reject('Unable to determine if Feedback was correctly sent.'), 30_000);\n\n    const cleanup = client.on('afterSendEvent', (event: Event, response: TransportMakeRequestResponse) => {\n      if (event.event_id !== eventId) {\n        return;\n      }\n\n      clearTimeout(timeout);\n      cleanup();\n\n      // Require valid status codes, otherwise can assume feedback was not sent successfully\n      if (\n        response &&\n        typeof response.statusCode === 'number' &&\n        response.statusCode >= 200 &&\n        response.statusCode < 300\n      ) {\n        return resolve(eventId);\n      }\n\n      if (response && typeof response.statusCode === 'number' && response.statusCode === 0) {\n        return reject(\n          'Unable to send Feedback. This is because of network issues, or because you are using an ad-blocker.',\n        );\n      }\n\n      if (response && typeof response.statusCode === 'number' && response.statusCode === 403) {\n        return reject(\n          'Unable to send Feedback. This could be because this domain is not in your list of allowed domains.',\n        );\n      }\n\n      return reject(\n        'Unable to send Feedback. This could be because of network issues, or because you are using an ad-blocker',\n      );\n    });\n  });\n};\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n","import { getClient, getCurrentScope } from './currentScopes';\nimport type { EventHint } from './types-hoist/event';\nimport type { FeedbackEvent, SendFeedbackParams } from './types-hoist/feedback';\n\n/**\n * Send user feedback to Sentry.\n */\nexport function captureFeedback(\n  params: SendFeedbackParams,\n  hint: EventHint & { includeReplay?: boolean } = {},\n  scope = getCurrentScope(),\n): string {\n  const { message, name, email, url, source, associatedEventId, tags } = params;\n\n  const feedbackEvent: FeedbackEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n        associated_event_id: associatedEventId,\n      },\n    },\n    type: 'feedback',\n    level: 'info',\n    tags,\n  };\n\n  const client = scope?.getClient() || getClient();\n\n  if (client) {\n    client.emit('beforeSendFeedback', feedbackEvent, hint);\n  }\n\n  const eventId = scope.captureEvent(feedbackEvent, hint);\n\n  return eventId;\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type { FeedbackFormData, FeedbackInternalOptions } from '@sentry/core';\nimport type { OptionalFeedbackConfiguration } from '../core/types';\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nexport function mergeOptions(\n  defaultOptions: FeedbackInternalOptions,\n  optionOverrides: OptionalFeedbackConfiguration,\n): FeedbackInternalOptions {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    tags: {\n      ...defaultOptions.tags,\n      ...optionOverrides.tags,\n    },\n    onFormOpen: () => {\n      optionOverrides.onFormOpen?.();\n      defaultOptions.onFormOpen?.();\n    },\n    onFormClose: () => {\n      optionOverrides.onFormClose?.();\n      defaultOptions.onFormClose?.();\n    },\n    onSubmitSuccess: (data: FeedbackFormData, eventId: string) => {\n      optionOverrides.onSubmitSuccess?.(data, eventId);\n      defaultOptions.onSubmitSuccess?.(data, eventId);\n    },\n    onSubmitError: (error: Error) => {\n      optionOverrides.onSubmitError?.(error);\n      defaultOptions.onSubmitError?.(error);\n    },\n    onFormSubmitted: () => {\n      optionOverrides.onFormSubmitted?.();\n      defaultOptions.onFormSubmitted?.();\n    },\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n","/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nexport function setAttributesNS<T extends SVGElement>(el: T, attributes: Record<string, string>): T {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n","import { DOCUMENT, TRIGGER_LABEL } from '../../constants';\nimport { createActorStyles } from './Actor.css';\nimport { FeedbackIcon } from './FeedbackIcon';\n\nexport interface ActorProps {\n  triggerLabel: string;\n  triggerAriaLabel: string;\n  shadow: ShadowRoot;\n  styleNonce?: string;\n}\n\nexport interface ActorComponent {\n  el: HTMLElement;\n\n  appendToDom: () => void;\n\n  removeFromDom: () => void;\n\n  show: () => void;\n\n  hide: () => void;\n}\n\n/**\n * The sentry-provided button to open the feedback modal\n */\nexport function Actor({ triggerLabel, triggerAriaLabel, shadow, styleNonce }: ActorProps): ActorComponent {\n  const el = DOCUMENT.createElement('button');\n  el.type = 'button';\n  el.className = 'widget__actor';\n  el.ariaHidden = 'false';\n  el.ariaLabel = triggerAriaLabel || triggerLabel || TRIGGER_LABEL;\n  el.appendChild(FeedbackIcon());\n  if (triggerLabel) {\n    const label = DOCUMENT.createElement('span');\n    label.appendChild(DOCUMENT.createTextNode(triggerLabel));\n    el.appendChild(label);\n  }\n\n  const style = createActorStyles(styleNonce);\n\n  return {\n    el,\n    appendToDom(): void {\n      shadow.appendChild(style);\n      shadow.appendChild(el);\n    },\n    removeFromDom(): void {\n      el.remove();\n      style.remove();\n    },\n    show(): void {\n      el.ariaHidden = 'false';\n    },\n    hide(): void {\n      el.ariaHidden = 'true';\n    },\n  };\n}\n","import { WINDOW } from '../../constants';\nimport { setAttributesNS } from '../../util/setAttributesNS';\n\nconst SIZE = 20;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Feedback Icon\n */\nexport function FeedbackIcon(): SVGElement {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'var(--actor-color, var(--foreground))',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n","import { DOCUMENT } from '../../constants';\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createActorStyles(styleNonce?: string): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n.widget__actor {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: var(--page-margin);\n  inset: var(--actor-inset);\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  line-height: 1.14em;\n  text-decoration: none;\n\n  background: var(--actor-background, var(--background));\n  border-radius: var(--actor-border-radius, 1.7em/50%);\n  border: var(--actor-border, var(--border));\n  box-shadow: var(--actor-box-shadow, var(--box-shadow));\n  color: var(--actor-color, var(--foreground));\n  fill: var(--actor-color, var(--foreground));\n  cursor: pointer;\n  opacity: 1;\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n.widget__actor[aria-hidden=\"true\"] {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: translate(0, 16px) scale(0.98);\n}\n\n.widget__actor:hover {\n  background: var(--actor-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n\n.widget__actor svg {\n  width: 1.14em;\n  height: 1.14em;\n}\n\n@media (max-width: 600px) {\n  .widget__actor span {\n    display: none;\n  }\n}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n","import type { FeedbackInternalOptions } from '@sentry/core';\nimport { DOCUMENT } from '../constants';\n\nconst PURPLE = 'rgba(88, 74, 192, 1)';\n\ninterface InternalTheme extends NonNullable<FeedbackInternalOptions['themeLight']> {\n  border: string;\n  interactiveFilter: string;\n}\n\nconst DEFAULT_LIGHT: InternalTheme = {\n  foreground: '#2b2233',\n  background: '#ffffff',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#268d75',\n  errorColor: '#df3338',\n  border: '1.5px solid rgba(41, 35, 47, 0.13)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(95%)',\n};\nconst DEFAULT_DARK: InternalTheme = {\n  foreground: '#ebe6ef',\n  background: '#29232f',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#2da98c',\n  errorColor: '#f55459',\n  border: '1.5px solid rgba(235, 230, 239, 0.15)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(150%)',\n};\n\nfunction getThemedCssVariables(theme: InternalTheme): string {\n  return `\n  --foreground: ${theme.foreground};\n  --background: ${theme.background};\n  --accent-foreground: ${theme.accentForeground};\n  --accent-background: ${theme.accentBackground};\n  --success-color: ${theme.successColor};\n  --error-color: ${theme.errorColor};\n  --border: ${theme.border};\n  --box-shadow: ${theme.boxShadow};\n  --outline: ${theme.outline};\n  --interactive-filter: ${theme.interactiveFilter};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createMainStyles({\n  colorScheme,\n  themeDark,\n  themeLight,\n  styleNonce,\n}: FeedbackInternalOptions): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n:host {\n  --font-family: system-ui, 'Helvetica Neue', Arial, sans-serif;\n  --font-size: 14px;\n  --z-index: 100000;\n\n  --page-margin: 16px;\n  --inset: auto 0 0 auto;\n  --actor-inset: var(--inset);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${colorScheme !== 'system' ? 'color-scheme: only light;' : ''}\n\n  ${getThemedCssVariables(\n    colorScheme === 'dark' ? { ...DEFAULT_DARK, ...themeDark } : { ...DEFAULT_LIGHT, ...themeLight },\n  )}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables({ ...DEFAULT_DARK, ...themeDark })}\n  }\n}`\n    : ''\n}\n}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n","import type {\n  FeedbackInternalOptions,\n  FeedbackModalIntegration,\n  FeedbackScreenshotIntegration,\n  Integration,\n  IntegrationFn,\n} from '@sentry/core';\nimport { addIntegration, debug, isBrowser } from '@sentry/core';\nimport {\n  ADD_SCREENSHOT_LABEL,\n  CANCEL_BUTTON_LABEL,\n  CONFIRM_BUTTON_LABEL,\n  DOCUMENT,\n  EMAIL_LABEL,\n  EMAIL_PLACEHOLDER,\n  FORM_TITLE,\n  IS_REQUIRED_LABEL,\n  MESSAGE_LABEL,\n  MESSAGE_PLACEHOLDER,\n  NAME_LABEL,\n  NAME_PLACEHOLDER,\n  REMOVE_SCREENSHOT_LABEL,\n  SUBMIT_BUTTON_LABEL,\n  SUCCESS_MESSAGE_TEXT,\n  TRIGGER_LABEL,\n} from '../constants';\nimport { DEBUG_BUILD } from '../util/debug-build';\nimport { isScreenshotSupported } from '../util/isScreenshotSupported';\nimport { mergeOptions } from '../util/mergeOptions';\nimport type { ActorComponent } from './components/Actor';\nimport { Actor } from './components/Actor';\nimport { createMainStyles } from './createMainStyles';\nimport { sendFeedback } from './sendFeedback';\nimport type { OptionalFeedbackConfiguration, OverrideFeedbackConfiguration } from './types';\n\ntype Unsubscribe = () => void;\n\n/**\n * Allow users to capture user feedback and send it to Sentry.\n */\n\ntype BuilderOptions =\n  | {\n      lazyLoadIntegration?: never;\n      getModalIntegration: () => IntegrationFn;\n      getScreenshotIntegration: () => IntegrationFn;\n    }\n  | {\n      // The type here should be `keyof typeof LazyLoadableIntegrations`, but that'll cause a cicrular\n      // dependency with @sentry/core\n      lazyLoadIntegration: (\n        name: 'feedbackModalIntegration' | 'feedbackScreenshotIntegration',\n        scriptNonce?: string,\n      ) => Promise<IntegrationFn>;\n      getModalIntegration?: never;\n      getScreenshotIntegration?: never;\n    };\n\nexport const buildFeedbackIntegration = ({\n  lazyLoadIntegration,\n  getModalIntegration,\n  getScreenshotIntegration,\n}: BuilderOptions): IntegrationFn<\n  Integration & {\n    attachTo(el: Element | string, optionOverrides?: OverrideFeedbackConfiguration): Unsubscribe;\n    createForm(\n      optionOverrides?: OverrideFeedbackConfiguration,\n    ): Promise<ReturnType<FeedbackModalIntegration['createDialog']>>;\n    createWidget(optionOverrides?: OverrideFeedbackConfiguration): ActorComponent;\n    remove(): void;\n  }\n> => {\n  const feedbackIntegration = (({\n    // FeedbackGeneralConfiguration\n    id = 'sentry-feedback',\n    autoInject = true,\n    showBranding = true,\n    isEmailRequired = false,\n    isNameRequired = false,\n    showEmail = true,\n    showName = true,\n    enableScreenshot = true,\n    useSentryUser = {\n      email: 'email',\n      name: 'username',\n    },\n    tags,\n    styleNonce,\n    scriptNonce,\n\n    // FeedbackThemeConfiguration\n    colorScheme = 'system',\n    themeLight = {},\n    themeDark = {},\n\n    // FeedbackTextConfiguration\n    addScreenshotButtonLabel = ADD_SCREENSHOT_LABEL,\n    cancelButtonLabel = CANCEL_BUTTON_LABEL,\n    confirmButtonLabel = CONFIRM_BUTTON_LABEL,\n    emailLabel = EMAIL_LABEL,\n    emailPlaceholder = EMAIL_PLACEHOLDER,\n    formTitle = FORM_TITLE,\n    isRequiredLabel = IS_REQUIRED_LABEL,\n    messageLabel = MESSAGE_LABEL,\n    messagePlaceholder = MESSAGE_PLACEHOLDER,\n    nameLabel = NAME_LABEL,\n    namePlaceholder = NAME_PLACEHOLDER,\n    removeScreenshotButtonLabel = REMOVE_SCREENSHOT_LABEL,\n    submitButtonLabel = SUBMIT_BUTTON_LABEL,\n    successMessageText = SUCCESS_MESSAGE_TEXT,\n    triggerLabel = TRIGGER_LABEL,\n    triggerAriaLabel = '',\n\n    // FeedbackCallbacks\n    onFormOpen,\n    onFormClose,\n    onSubmitSuccess,\n    onSubmitError,\n    onFormSubmitted,\n  }: OptionalFeedbackConfiguration = {}) => {\n    const _options = {\n      id,\n      autoInject,\n      showBranding,\n      isEmailRequired,\n      isNameRequired,\n      showEmail,\n      showName,\n      enableScreenshot,\n      useSentryUser,\n      tags,\n      styleNonce,\n      scriptNonce,\n\n      colorScheme,\n      themeDark,\n      themeLight,\n\n      triggerLabel,\n      triggerAriaLabel,\n      cancelButtonLabel,\n      submitButtonLabel,\n      confirmButtonLabel,\n      formTitle,\n      emailLabel,\n      emailPlaceholder,\n      messageLabel,\n      messagePlaceholder,\n      nameLabel,\n      namePlaceholder,\n      successMessageText,\n      isRequiredLabel,\n      addScreenshotButtonLabel,\n      removeScreenshotButtonLabel,\n\n      onFormClose,\n      onFormOpen,\n      onSubmitError,\n      onSubmitSuccess,\n      onFormSubmitted,\n    };\n\n    let _shadow: ShadowRoot | null = null;\n    let _subscriptions: Unsubscribe[] = [];\n\n    /**\n     * Get the shadow root where we will append css\n     */\n    const _createShadow = (options: FeedbackInternalOptions): ShadowRoot => {\n      if (!_shadow) {\n        const host = DOCUMENT.createElement('div');\n        host.id = String(options.id);\n        DOCUMENT.body.appendChild(host);\n\n        _shadow = host.attachShadow({ mode: 'open' });\n        _shadow.appendChild(createMainStyles(options));\n      }\n      return _shadow as ShadowRoot;\n    };\n\n    const _loadAndRenderDialog = async (\n      options: FeedbackInternalOptions,\n    ): Promise<ReturnType<FeedbackModalIntegration['createDialog']>> => {\n      const screenshotRequired = options.enableScreenshot && isScreenshotSupported();\n\n      let modalIntegration: FeedbackModalIntegration;\n      let screenshotIntegration: FeedbackScreenshotIntegration | undefined;\n\n      try {\n        const modalIntegrationFn = getModalIntegration\n          ? getModalIntegration()\n          : await lazyLoadIntegration('feedbackModalIntegration', scriptNonce);\n        modalIntegration = modalIntegrationFn() as FeedbackModalIntegration;\n        addIntegration(modalIntegration);\n      } catch {\n        DEBUG_BUILD &&\n          debug.error(\n            '[Feedback] Error when trying to load feedback integrations. Try using `feedbackSyncIntegration` in your `Sentry.init`.',\n          );\n        throw new Error('[Feedback] Missing feedback modal integration!');\n      }\n\n      try {\n        const screenshotIntegrationFn = screenshotRequired\n          ? getScreenshotIntegration\n            ? getScreenshotIntegration()\n            : await lazyLoadIntegration('feedbackScreenshotIntegration', scriptNonce)\n          : undefined;\n\n        if (screenshotIntegrationFn) {\n          screenshotIntegration = screenshotIntegrationFn() as FeedbackScreenshotIntegration;\n          addIntegration(screenshotIntegration);\n        }\n      } catch {\n        DEBUG_BUILD &&\n          debug.error('[Feedback] Missing feedback screenshot integration. Proceeding without screenshots.');\n      }\n\n      const dialog = modalIntegration.createDialog({\n        options: {\n          ...options,\n          onFormClose: () => {\n            dialog?.close();\n            options.onFormClose?.();\n          },\n          onFormSubmitted: () => {\n            dialog?.close();\n            options.onFormSubmitted?.();\n          },\n        },\n        screenshotIntegration,\n        sendFeedback,\n        shadow: _createShadow(options),\n      });\n\n      return dialog;\n    };\n\n    const _attachTo = (el: Element | string, optionOverrides: OverrideFeedbackConfiguration = {}): Unsubscribe => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n\n      const targetEl =\n        typeof el === 'string' ? DOCUMENT.querySelector(el) : typeof el.addEventListener === 'function' ? el : null;\n\n      if (!targetEl) {\n        DEBUG_BUILD && debug.error('[Feedback] Unable to attach to target element');\n        throw new Error('Unable to attach to target element');\n      }\n\n      let dialog: ReturnType<FeedbackModalIntegration['createDialog']> | null = null;\n      const handleClick = async (): Promise<void> => {\n        if (!dialog) {\n          dialog = await _loadAndRenderDialog({\n            ...mergedOptions,\n            onFormSubmitted: () => {\n              dialog?.removeFromDom();\n              mergedOptions.onFormSubmitted?.();\n            },\n          });\n        }\n        dialog.appendToDom();\n        dialog.open();\n      };\n      targetEl.addEventListener('click', handleClick);\n      const unsubscribe = (): void => {\n        _subscriptions = _subscriptions.filter(sub => sub !== unsubscribe);\n        dialog?.removeFromDom();\n        dialog = null;\n        targetEl.removeEventListener('click', handleClick);\n      };\n      _subscriptions.push(unsubscribe);\n      return unsubscribe;\n    };\n\n    const _createActor = (optionOverrides: OverrideFeedbackConfiguration = {}): ActorComponent => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n      const shadow = _createShadow(mergedOptions);\n      const actor = Actor({\n        triggerLabel: mergedOptions.triggerLabel,\n        triggerAriaLabel: mergedOptions.triggerAriaLabel,\n        shadow,\n        styleNonce,\n      });\n      _attachTo(actor.el, {\n        ...mergedOptions,\n        onFormOpen() {\n          actor.hide();\n        },\n        onFormClose() {\n          actor.show();\n        },\n        onFormSubmitted() {\n          actor.show();\n        },\n      });\n      return actor;\n    };\n\n    return {\n      name: 'Feedback',\n      setupOnce() {\n        if (!isBrowser() || !_options.autoInject) {\n          return;\n        }\n\n        if (DOCUMENT.readyState === 'loading') {\n          DOCUMENT.addEventListener('DOMContentLoaded', () => _createActor().appendToDom());\n        } else {\n          _createActor().appendToDom();\n        }\n      },\n\n      /**\n       * Adds click listener to the element to open a feedback dialog\n       *\n       * The returned function can be used to remove the click listener\n       */\n      attachTo: _attachTo,\n\n      /**\n       * Creates a new widget which is composed of a Button which triggers a Dialog.\n       * Accepts partial options to override any options passed to constructor.\n       */\n      createWidget(optionOverrides: OverrideFeedbackConfiguration = {}): ActorComponent {\n        const actor = _createActor(mergeOptions(_options, optionOverrides));\n        actor.appendToDom();\n        return actor;\n      },\n\n      /**\n       * Creates a new Form which you can\n       * Accepts partial options to override any options passed to constructor.\n       */\n      async createForm(\n        optionOverrides: OverrideFeedbackConfiguration = {},\n      ): Promise<ReturnType<FeedbackModalIntegration['createDialog']>> {\n        return _loadAndRenderDialog(mergeOptions(_options, optionOverrides));\n      },\n\n      /**\n       * Removes the Feedback integration (including host, shadow DOM, and all widgets)\n       */\n      remove(): void {\n        if (_shadow) {\n          _shadow.parentElement?.remove();\n          _shadow = null;\n        }\n        // Remove any lingering subscriptions\n        _subscriptions.forEach(sub => sub());\n        _subscriptions = [];\n      },\n    };\n  }) satisfies IntegrationFn;\n\n  return feedbackIntegration;\n};\n","import { NAVIGATOR } from '../constants';\n\n/**\n * Mobile browsers do not support `mediaDevices.getDisplayMedia` even though they have the api implemented\n * Instead they return things like `NotAllowedError` when called.\n *\n * It's simpler for us to browser sniff first, and avoid loading the integration if we can.\n *\n * https://stackoverflow.com/a/58879212\n * https://stackoverflow.com/a/3540295\n *\n * `mediaDevices.getDisplayMedia` is also only supported in secure contexts, and return a `mediaDevices is not supported` error, so we should also avoid loading the integration if we can.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\n */\nexport function isScreenshotSupported(): boolean {\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(NAVIGATOR.userAgent)) {\n    return false;\n  }\n  /**\n   * User agent on iPads show as Macintosh, so we need extra checks\n   *\n   * https://forums.developer.apple.com/forums/thread/119186\n   * https://stackoverflow.com/questions/60482650/how-to-detect-ipad-useragent-on-safari-browser\n   */\n  if (/Macintosh/i.test(NAVIGATOR.userAgent) && NAVIGATOR.maxTouchPoints && NAVIGATOR.maxTouchPoints > 1) {\n    return false;\n  }\n  if (!isSecureContext) {\n    return false;\n  }\n  return true;\n}\n","var n,l,u,t,i,o,r,f,e,c={},s=[],a=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,h=Array.isArray;function v(n,l){for(var u in l)n[u]=l[u];return n}function p(n){var l=n.parentNode;l&&l.removeChild(n)}function y(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return d(l,f,i,o,null)}function d(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function _(){return{current:null}}function g(n){return n.children}function b(n,l){this.props=n,this.context=l}function m(n,l){if(null==l)return n.__?m(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?m(n):null}function w(n,u,t){var i,o=n.__v,r=o.__e,f=n.__P;if(f)return(i=v({},o)).__v=o.__v+1,l.vnode&&l.vnode(i),M(f,i,o,n.__n,void 0!==f.ownerSVGElement,32&o.__u?[r]:null,u,null==r?m(o):r,!!(32&o.__u),t),i.__.__k[i.__i]=i,i.__d=void 0,i.__e!=r&&k(i),i}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function x(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!C.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(C)}function C(){var n,u,t,o=[],r=[];for(i.sort(f);n=i.shift();)n.__d&&(t=i.length,u=w(n,o,r)||u,0===t||i.length>t?(j(o,u,r),r.length=o.length=0,u=void 0,i.sort(f)):u&&l.__c&&l.__c(u,s));u&&j(o,u,r),C.__r=0}function P(n,l,u,t,i,o,r,f,e,a,h){var v,p,y,d,_,g=t&&t.__k||s,b=l.length;for(u.__d=e,S(u,l,g),e=u.__d,v=0;v<b;v++)null!=(y=u.__k[v])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(p=-1===y.__i?c:g[y.__i]||c,y.__i=v,M(n,y,p,i,o,r,f,e,a,h),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&N(p.ref,null,y),h.push(y.ref,y.__c||d,y)),null==_&&null!=d&&(_=d),65536&y.__u||p.__k===y.__k?e=$(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=_}function S(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?d(null,i,null,null,i):h(i)?d(g,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?d(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=I(i,u,r=t+a,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:a=f<r&&f==r-1?f-r:0,f!==t+a&&(i.__u|=65536))):(o=u[t])&&null==o.key&&o.__e&&(o.__e==n.__d&&(n.__d=m(o)),O(o,o,!1),u[t]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=m(o)),O(o,o))}function $(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=$(t[i],l,u));return l}n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling}while(null!=l&&8===l.nodeType);return l}function H(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(h(n)?n.some(function(n){H(n,l)}):l.push(n)),l}function I(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type)return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a.test(l)?u:u+\"px\"}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=Date.now(),n.addEventListener(l,o?L:D,o)):n.removeEventListener(l,o?L:D,o);else{if(i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&\"rowSpan\"!==l&&\"colSpan\"!==l&&\"role\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u))}}function D(n){if(this.l){var u=this.l[n.type+!1];if(n.t){if(n.t<=u.u)return}else n.t=Date.now();return u(l.event?l.event(n):n)}}function L(n){if(this.l)return this.l[n.type+!0](l.event?l.event(n):n)}function M(n,u,t,i,o,r,f,e,c,s){var a,p,y,d,_,m,w,k,x,C,S,$,H,I,T,A=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof A)try{if(k=u.props,x=(a=A.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?w=(p=u.__c=t.__c).__=p.__E:(\"prototype\"in A&&A.prototype.render?u.__c=p=new A(k,C):(u.__c=p=new b(k,C),p.constructor=A,p.render=q),x&&x.sub(p),p.props=k,p.state||(p.state={}),p.context=C,p.__n=i,y=p.__d=!0,p.__h=[],p._sb=[]),null==p.__s&&(p.__s=p.state),null!=A.getDerivedStateFromProps&&(p.__s==p.state&&(p.__s=v({},p.__s)),v(p.__s,A.getDerivedStateFromProps(k,p.__s))),d=p.props,_=p.state,p.__v=u,y)null==A.getDerivedStateFromProps&&null!=p.componentWillMount&&p.componentWillMount(),null!=p.componentDidMount&&p.__h.push(p.componentDidMount);else{if(null==A.getDerivedStateFromProps&&k!==d&&null!=p.componentWillReceiveProps&&p.componentWillReceiveProps(k,C),!p.__e&&(null!=p.shouldComponentUpdate&&!1===p.shouldComponentUpdate(k,p.__s,C)||u.__v===t.__v)){for(u.__v!==t.__v&&(p.props=k,p.state=p.__s,p.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u)}),S=0;S<p._sb.length;S++)p.__h.push(p._sb[S]);p._sb=[],p.__h.length&&f.push(p);break n}null!=p.componentWillUpdate&&p.componentWillUpdate(k,p.__s,C),null!=p.componentDidUpdate&&p.__h.push(function(){p.componentDidUpdate(d,_,m)})}if(p.context=C,p.props=k,p.__P=n,p.__e=!1,$=l.__r,H=0,\"prototype\"in A&&A.prototype.render){for(p.state=p.__s,p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),I=0;I<p._sb.length;I++)p.__h.push(p._sb[I]);p._sb=[]}else do{p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),p.state=p.__s}while(p.__d&&++H<25);p.state=p.__s,null!=p.getChildContext&&(i=v(v({},i),p.getChildContext())),y||null==p.getSnapshotBeforeUpdate||(m=p.getSnapshotBeforeUpdate(d,_)),P(n,h(T=null!=a&&a.type===g&&null==a.key?a.props.children:a)?T:[T],u,t,i,o,r,f,e,c,s),p.base=u.__e,u.__u&=-161,p.__h.length&&f.push(p),w&&(p.__E=p.__=null)}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function j(n,u,t){for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function z(l,u,t,i,o,r,f,e,s){var a,v,y,d,_,g,b,w=t.props,k=u.props,x=u.type;if(\"svg\"===x&&(o=!0),null!=r)for(a=0;a<r.length;a++)if((_=r[a])&&\"setAttribute\"in _==!!x&&(x?_.localName===x:3===_.nodeType)){l=_,r[a]=null;break}if(null==l){if(null===x)return document.createTextNode(k);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",x):document.createElement(x,k.is&&k),r=null,e=!1}if(null===x)w===k||e&&l.data===k||(l.data=k);else{if(r=r&&n.call(l.childNodes),w=t.props||c,!e&&null!=r)for(w={},a=0;a<l.attributes.length;a++)w[(_=l.attributes[a]).name]=_.value;for(a in w)_=w[a],\"children\"==a||(\"dangerouslySetInnerHTML\"==a?y=_:\"key\"===a||a in k||A(l,a,null,_,o));for(a in k)_=k[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?b=_:\"key\"===a||e&&\"function\"!=typeof _||w[a]===_||A(l,a,_,w[a],o);if(v)e||y&&(v.__html===y.__html||v.__html===l.innerHTML)||(l.innerHTML=v.__html),u.__k=[];else if(y&&(l.innerHTML=\"\"),P(l,h(d)?d:[d],u,t,i,o&&\"foreignObject\"!==x,r,f,r?r[0]:t.__k&&m(t,0),e,s),null!=r)for(a=r.length;a--;)null!=r[a]&&p(r[a]);e||(a=\"value\",void 0!==g&&(g!==l[a]||\"progress\"===x&&!g||\"option\"===x&&g!==w[a])&&A(l,a,g,w[a],!1),a=\"checked\",void 0!==b&&b!==l[a]&&A(l,a,b,w[a],!1))}return l}function N(n,u,t){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,t)}}function O(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null,n.__c=void 0}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&O(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||p(n.__e),n.__=n.__e=n.__d=void 0}function q(n,l,u){return this.constructor(n,u)}function B(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],M(t,u=(!o&&i||t).__k=y(g,null,[u]),r||c,c,void 0!==t.ownerSVGElement,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),u.__d=void 0,j(f,u,e)}function E(n,l){B(n,l,E)}function F(l,u,t){var i,o,r,f,e=v({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),d(l.type,e,i||l.key,o||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+e++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,x(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=s.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=v({},this.state),\"function\"==typeof n&&(n=n(v({},u),this.props)),n&&v(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),x(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),x(this))},b.prototype.render=g,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},C.__r=0,e=0;export{b as Component,g as Fragment,F as cloneElement,G as createContext,y as createElement,_ as createRef,y as h,E as hydrate,t as isValidElement,l as options,B as render,H as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n,a=e.__b,v=e.__r,l=e.diffed,m=e.__c,s=e.unmount,d=e.__;function h(n,t){e.__h&&e.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({__V:c}),u.__[n]}function p(n){return o=1,y(D,n)}function y(n,u,i){var o=h(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return!!n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function _(n,u){var i=h(t++,3);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i))}function A(n,u){var i=h(t++,4);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__h.push(i))}function F(n){return o=5,q(function(){return{current:n}},[])}function T(n,t,r){o=6,A(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function q(n,r){var u=h(t++,7);return C(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function x(n,t){return o=8,q(function(){return n},t)}function P(n){var u=r.context[n.__c],i=h(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function V(n,t){e.useDebugValue&&e.useDebugValue(t?t(n):n)}function b(n){var u=h(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function g(){var n=h(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[]}catch(t){n.__H.__h=[],e.__e(t,n.__v)}}e.__b=function(n){r=null,a&&a(n)},e.__=function(n,t){t.__k&&t.__k.__m&&(n.__m=t.__k.__m),d&&d(n,t)},e.__r=function(n){v&&v(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r},e.diffed=function(n){l&&l(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===e.requestAnimationFrame||((i=e.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},e.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return!n.__||B(n)})}catch(r){t.some(function(n){n.__h&&(n.__h=[])}),t=[],e.__e(r,n.__v)}}),m&&m(n,t)},e.unmount=function(n){s&&s(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n)}catch(n){t=n}}),r.__H=void 0,t&&e.__e(t,r.__v))};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r))}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function B(n){var t=r;n.__c=n.__(),r=t}function C(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return\"function\"==typeof t?t(n):t}export{x as useCallback,P as useContext,V as useDebugValue,_ as useEffect,b as useErrorBoundary,g as useId,T as useImperativeHandle,A as useLayoutEffect,q as useMemo,y as useReducer,F as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n","import { DOCUMENT } from '../../constants';\nimport { setAttributesNS } from '../../util/setAttributesNS';\n\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Sentry Logo\n */\nexport function SentryLogo(): SVGElement {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    DOCUMENT.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'inherit',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.appendChild(path);\n\n  return svg;\n}\n","import type { FeedbackInternalOptions } from '@sentry/core';\nimport type { VNode } from 'preact';\nimport { h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { useMemo } from 'preact/hooks';\nimport { SentryLogo } from './SentryLogo';\n\nexport interface Props {\n  options: FeedbackInternalOptions;\n}\n\nexport function DialogHeader({ options }: Props): VNode {\n  const logoHtml = useMemo(() => ({ __html: SentryLogo().outerHTML }), []);\n\n  return (\n    <h2 class=\"dialog__header\">\n      <span class=\"dialog__title\">{options.formTitle}</span>\n      {options.showBranding ? (\n        <a\n          class=\"brand-link\"\n          target=\"_blank\"\n          href=\"https://sentry.io/welcome/\"\n          title=\"Powered by Sentry\"\n          rel=\"noopener noreferrer\"\n          dangerouslySetInnerHTML={logoHtml}\n        />\n      ) : null}\n    </h2>\n  );\n}\n","import type {\n  FeedbackFormData,\n  FeedbackInternalOptions,\n  FeedbackScreenshotIntegration,\n  SendFeedback,\n} from '@sentry/core';\nimport { debug } from '@sentry/core';\nimport type { JSX, VNode } from 'preact';\nimport { h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { useCallback, useState } from 'preact/hooks';\nimport { FEEDBACK_WIDGET_SOURCE } from '../../constants';\nimport { DEBUG_BUILD } from '../../util/debug-build';\nimport { getMissingFields } from '../../util/validate';\n\nexport interface Props extends Pick<FeedbackInternalOptions, 'showEmail' | 'showName'> {\n  options: FeedbackInternalOptions;\n  defaultEmail: string;\n  defaultName: string;\n  onFormClose: () => void;\n  onSubmit: SendFeedback;\n  onSubmitSuccess: (data: FeedbackFormData, eventId: string) => void;\n  onSubmitError: (error: Error) => void;\n  screenshotInput: ReturnType<FeedbackScreenshotIntegration['createInput']> | undefined;\n}\n\nfunction retrieveStringValue(formData: FormData, key: string): string {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\nexport function Form({\n  options,\n  defaultEmail,\n  defaultName,\n\n  onFormClose,\n  onSubmit,\n  onSubmitSuccess,\n  onSubmitError,\n  showEmail,\n  showName,\n  screenshotInput,\n}: Props): VNode {\n  const {\n    tags,\n    addScreenshotButtonLabel,\n    removeScreenshotButtonLabel,\n    cancelButtonLabel,\n    emailLabel,\n    emailPlaceholder,\n    isEmailRequired,\n    isNameRequired,\n    messageLabel,\n    messagePlaceholder,\n    nameLabel,\n    namePlaceholder,\n    submitButtonLabel,\n    isRequiredLabel,\n  } = options;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  // TODO: set a ref on the form, and whenever an input changes call processForm() and setError()\n  const [error, setError] = useState<null | string>(null);\n\n  const [showScreenshotInput, setShowScreenshotInput] = useState(false);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ScreenshotInputComponent: any = screenshotInput?.input;\n\n  const [screenshotError, setScreenshotError] = useState<null | Error>(null);\n  const onScreenshotError = useCallback((error: Error) => {\n    setScreenshotError(error);\n    setShowScreenshotInput(false);\n  }, []);\n\n  const hasAllRequiredFields = useCallback(\n    (data: FeedbackFormData) => {\n      const missingFields = getMissingFields(data, {\n        emailLabel,\n        isEmailRequired,\n        isNameRequired,\n        messageLabel,\n        nameLabel,\n      });\n\n      if (missingFields.length > 0) {\n        setError(`Please enter in the following required fields: ${missingFields.join(', ')}`);\n      } else {\n        setError(null);\n      }\n\n      return missingFields.length === 0;\n    },\n    [emailLabel, isEmailRequired, isNameRequired, messageLabel, nameLabel],\n  );\n\n  const handleSubmit = useCallback(\n    async (e: JSX.TargetedSubmitEvent<HTMLFormElement>) => {\n      setIsSubmitting(true);\n      try {\n        e.preventDefault();\n        if (!(e.target instanceof HTMLFormElement)) {\n          return;\n        }\n        const formData = new FormData(e.target);\n        const attachment = await (screenshotInput && showScreenshotInput ? screenshotInput.value() : undefined);\n\n        const data: FeedbackFormData = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n          attachments: attachment ? [attachment] : undefined,\n        };\n\n        if (!hasAllRequiredFields(data)) {\n          return;\n        }\n\n        try {\n          const eventId = await onSubmit(\n            {\n              name: data.name,\n              email: data.email,\n              message: data.message,\n              source: FEEDBACK_WIDGET_SOURCE,\n              tags,\n            },\n            { attachments: data.attachments },\n          );\n          onSubmitSuccess(data, eventId);\n        } catch (error) {\n          DEBUG_BUILD && debug.error(error);\n          setError(error as string);\n          onSubmitError(error as Error);\n        }\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [screenshotInput && showScreenshotInput, onSubmitSuccess, onSubmitError],\n  );\n\n  return (\n    <form class=\"form\" onSubmit={handleSubmit}>\n      {ScreenshotInputComponent && showScreenshotInput ? (\n        <ScreenshotInputComponent onError={onScreenshotError} />\n      ) : null}\n\n      <fieldset class=\"form__right\" data-sentry-feedback={true} disabled={isSubmitting}>\n        <div class=\"form__top\">\n          {error ? <div class=\"form__error-container\">{error}</div> : null}\n\n          {showName ? (\n            <label for=\"name\" class=\"form__label\">\n              <LabelText label={nameLabel} isRequiredLabel={isRequiredLabel} isRequired={isNameRequired} />\n              <input\n                class=\"form__input\"\n                defaultValue={defaultName}\n                id=\"name\"\n                name=\"name\"\n                placeholder={namePlaceholder}\n                required={isNameRequired}\n                type=\"text\"\n              />\n            </label>\n          ) : (\n            <input aria-hidden value={defaultName} name=\"name\" type=\"hidden\" />\n          )}\n\n          {showEmail ? (\n            <label for=\"email\" class=\"form__label\">\n              <LabelText label={emailLabel} isRequiredLabel={isRequiredLabel} isRequired={isEmailRequired} />\n              <input\n                class=\"form__input\"\n                defaultValue={defaultEmail}\n                id=\"email\"\n                name=\"email\"\n                placeholder={emailPlaceholder}\n                required={isEmailRequired}\n                type=\"email\"\n              ></input>\n            </label>\n          ) : (\n            <input aria-hidden value={defaultEmail} name=\"email\" type=\"hidden\" />\n          )}\n\n          <label for=\"message\" class=\"form__label\">\n            <LabelText label={messageLabel} isRequiredLabel={isRequiredLabel} isRequired />\n            <textarea\n              autoFocus\n              class=\"form__input form__input--textarea\"\n              id=\"message\"\n              name=\"message\"\n              placeholder={messagePlaceholder}\n              required={true}\n              rows={5}\n            />\n          </label>\n\n          {ScreenshotInputComponent ? (\n            <label for=\"screenshot\" class=\"form__label\">\n              <button\n                class=\"btn btn--default\"\n                disabled={isSubmitting}\n                type=\"button\"\n                onClick={() => {\n                  setScreenshotError(null);\n                  setShowScreenshotInput(prev => !prev);\n                }}\n              >\n                {showScreenshotInput ? removeScreenshotButtonLabel : addScreenshotButtonLabel}\n              </button>\n              {screenshotError ? <div class=\"form__error-container\">{screenshotError.message}</div> : null}\n            </label>\n          ) : null}\n        </div>\n        <div class=\"btn-group\">\n          <button class=\"btn btn--primary\" disabled={isSubmitting} type=\"submit\">\n            {submitButtonLabel}\n          </button>\n          <button class=\"btn btn--default\" disabled={isSubmitting} type=\"button\" onClick={onFormClose}>\n            {cancelButtonLabel}\n          </button>\n        </div>\n      </fieldset>\n    </form>\n  );\n}\n\nfunction LabelText({\n  label,\n  isRequired,\n  isRequiredLabel,\n}: {\n  label: string;\n  isRequired: boolean;\n  isRequiredLabel: string;\n}): VNode {\n  return (\n    <span class=\"form__label__text\">\n      {label}\n      {isRequired && <span class=\"form__label__text--required\">{isRequiredLabel}</span>}\n    </span>\n  );\n}\n","import type { FeedbackFormData, FeedbackInternalOptions } from '@sentry/core';\n\nexport type Props = Pick<\n  FeedbackInternalOptions,\n  'emailLabel' | 'isEmailRequired' | 'isNameRequired' | 'messageLabel' | 'nameLabel'\n>;\n\n/**\n * Validate that a given feedback submission has the required fields\n */\nexport function getMissingFields(feedback: FeedbackFormData, props: Props): string[] {\n  const emptyFields = [];\n  if (props.isNameRequired && !feedback.name) {\n    emptyFields.push(props.nameLabel);\n  }\n  if (props.isEmailRequired && !feedback.email) {\n    emptyFields.push(props.emailLabel);\n  }\n  if (!feedback.message) {\n    emptyFields.push(props.messageLabel);\n  }\n\n  return emptyFields;\n}\n","import { WINDOW } from '../../constants';\nimport { setAttributesNS } from '../../util/setAttributesNS';\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Success Icon (checkmark)\n */\nexport function SuccessIcon(): SVGElement {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'inherit',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n","import type { FeedbackFormData, FeedbackInternalOptions } from '@sentry/core';\nimport type { VNode } from 'preact';\nimport { Fragment, h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { useCallback, useMemo, useState } from 'preact/hooks';\nimport { SUCCESS_MESSAGE_TIMEOUT } from '../../constants';\nimport type { Props as HeaderProps } from './DialogHeader';\nimport { DialogHeader } from './DialogHeader';\nimport type { Props as FormProps } from './Form';\nimport { Form } from './Form';\nimport { SuccessIcon } from './SuccessIcon';\n\ninterface Props extends HeaderProps, FormProps {\n  onFormSubmitted: () => void;\n  open: boolean;\n  options: FeedbackInternalOptions;\n}\n\nexport function Dialog({ open, onFormSubmitted, ...props }: Props): VNode {\n  const options = props.options;\n  const successIconHtml = useMemo(() => ({ __html: SuccessIcon().outerHTML }), []);\n\n  const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout | null>(null);\n\n  const handleOnSuccessClick = useCallback(() => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      setTimeoutId(null);\n    }\n    onFormSubmitted();\n  }, [timeoutId]);\n\n  const onSubmitSuccess = useCallback(\n    (data: FeedbackFormData, eventId: string) => {\n      props.onSubmitSuccess(data, eventId);\n      setTimeoutId(\n        setTimeout(() => {\n          onFormSubmitted();\n          setTimeoutId(null);\n        }, SUCCESS_MESSAGE_TIMEOUT),\n      );\n    },\n    [onFormSubmitted],\n  );\n\n  return (\n    <Fragment>\n      {timeoutId ? (\n        <div class=\"success__position\" onClick={handleOnSuccessClick}>\n          <div class=\"success__content\">\n            {options.successMessageText}\n            <span class=\"success__icon\" dangerouslySetInnerHTML={successIconHtml} />\n          </div>\n        </div>\n      ) : (\n        <dialog class=\"dialog\" onClick={options.onFormClose} open={open}>\n          <div class=\"dialog__position\">\n            <div\n              class=\"dialog__content\"\n              onClick={e => {\n                // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n                e.stopPropagation();\n              }}\n            >\n              <DialogHeader options={options} />\n              <Form {...props} onSubmitSuccess={onSubmitSuccess} />\n            </div>\n          </div>\n        </dialog>\n      )}\n    </Fragment>\n  );\n}\n","import type { FeedbackFormData, FeedbackModalIntegration, IntegrationFn, User } from '@sentry/core';\nimport { getClient, getCurrentScope, getGlobalScope, getIsolationScope } from '@sentry/core';\nimport { h, render } from 'preact';\nimport * as hooks from 'preact/hooks';\nimport { DOCUMENT } from '../constants';\nimport { Dialog } from './components/Dialog';\nimport { createDialogStyles } from './components/Dialog.css';\n\nfunction getUser(): User | undefined {\n  const currentUser = getCurrentScope().getUser();\n  const isolationUser = getIsolationScope().getUser();\n  const globalUser = getGlobalScope().getUser();\n  if (currentUser && Object.keys(currentUser).length) {\n    return currentUser;\n  }\n  if (isolationUser && Object.keys(isolationUser).length) {\n    return isolationUser;\n  }\n  return globalUser;\n}\n\nexport const feedbackModalIntegration = ((): FeedbackModalIntegration => {\n  return {\n    name: 'FeedbackModal',\n    setupOnce() {},\n    createDialog: ({ options, screenshotIntegration, sendFeedback, shadow }) => {\n      const shadowRoot = shadow as unknown as ShadowRoot;\n      const userKey = options.useSentryUser;\n      const user = getUser();\n\n      const el = DOCUMENT.createElement('div');\n      const style = createDialogStyles(options.styleNonce);\n\n      let originalOverflow = '';\n      const dialog: ReturnType<FeedbackModalIntegration['createDialog']> = {\n        get el() {\n          return el;\n        },\n        appendToDom(): void {\n          if (!shadowRoot.contains(style) && !shadowRoot.contains(el)) {\n            shadowRoot.appendChild(style);\n            shadowRoot.appendChild(el);\n          }\n        },\n        removeFromDom(): void {\n          el.remove();\n          style.remove();\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n        open() {\n          renderContent(true);\n          options.onFormOpen?.();\n          getClient()?.emit('openFeedbackWidget');\n          originalOverflow = DOCUMENT.body.style.overflow;\n          DOCUMENT.body.style.overflow = 'hidden';\n        },\n        close() {\n          renderContent(false);\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n      };\n\n      const screenshotInput = screenshotIntegration?.createInput({ h, hooks, dialog, options });\n\n      const renderContent = (open: boolean): void => {\n        render(\n          <Dialog\n            options={options}\n            screenshotInput={screenshotInput}\n            showName={options.showName || options.isNameRequired}\n            showEmail={options.showEmail || options.isEmailRequired}\n            defaultName={(userKey && user?.[userKey.name]) || ''}\n            defaultEmail={(userKey && user?.[userKey.email]) || ''}\n            onFormClose={() => {\n              renderContent(false);\n              options.onFormClose?.();\n            }}\n            onSubmit={sendFeedback}\n            onSubmitSuccess={(data: FeedbackFormData, eventId: string) => {\n              renderContent(false);\n              options.onSubmitSuccess?.(data, eventId);\n            }}\n            onSubmitError={(error: Error) => {\n              options.onSubmitError?.(error);\n            }}\n            onFormSubmitted={() => {\n              options.onFormSubmitted?.();\n            }}\n            open={open}\n          />,\n          el,\n        );\n      };\n\n      return dialog;\n    },\n  };\n}) satisfies IntegrationFn;\n","import { DOCUMENT } from '../../constants';\n\nconst DIALOG = `\n.dialog {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: 0;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n\n  color: var(--dialog-color, var(--foreground));\n  fill: var(--dialog-color, var(--foreground));\n  line-height: 1.75em;\n\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  inset: 0;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog__position {\n  position: fixed;\n  z-index: var(--z-index);\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  display: flex;\n  max-height: calc(100vh - (2 * var(--page-margin)));\n}\n@media (max-width: 600px) {\n  .dialog__position {\n    inset: var(--page-margin);\n    padding: 0;\n  }\n}\n\n.dialog__position:has(.editor) {\n  inset: var(--page-margin);\n  padding: 0;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: var(--dialog-padding, 24px);\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  background: var(--dialog-background, var(--background));\n  border-radius: var(--dialog-border-radius, 20px);\n  border: var(--dialog-border, var(--border));\n  box-shadow: var(--dialog-box-shadow, var(--box-shadow));\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.2s ease-in-out;\n}\n\n`;\n\nconst DIALOG_HEADER = `\n.dialog__header {\n  display: flex;\n  gap: 4px;\n  justify-content: space-between;\n  font-weight: var(--dialog-header-weight, 600);\n  margin: 0;\n}\n.dialog__title {\n  align-self: center;\n  width: var(--form-width, 272px);\n}\n\n@media (max-width: 600px) {\n  .dialog__title {\n    width: auto;\n  }\n}\n\n.dialog__position:has(.editor) .dialog__title {\n  width: auto;\n}\n\n\n.brand-link {\n  display: inline-flex;\n}\n.brand-link:focus-visible {\n  outline: var(--outline);\n}\n`;\n\nconst FORM = `\n.form {\n  display: flex;\n  overflow: auto;\n  flex-direction: row;\n  gap: 16px;\n  flex: 1 0;\n}\n\n.form fieldset {\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n\n.form__right {\n  flex: 0 0 auto;\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n  width: var(--form-width, 100%);\n}\n\n.dialog__position:has(.editor) .form__right {\n  width: var(--form-width, 272px);\n}\n\n.form__top {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form__error-container {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background: transparent;\n  box-sizing: border-box;\n  border: var(--input-border, var(--border));\n  border-radius: var(--input-border-radius, 6px);\n  color: var(--input-color, inherit);\n  fill: var(--input-color, inherit);\n  font-size: var(--input-font-size, inherit);\n  font-weight: var(--input-font-weight, 500);\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  opacity: 0.65;\n  color: var(--input-placeholder-color, inherit);\n  filter: var(--interactive-filter);\n}\n\n.form__input:focus-visible {\n  outline: var(--input-focus-outline, var(--outline));\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.error {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n`;\n\nconst BUTTON = `\n.btn-group {\n  display: grid;\n  gap: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--button-font-size, inherit);\n  font-weight: var(--button-font-weight, 600);\n  padding: var(--button-padding, 6px 16px);\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  color: var(--button-primary-color, var(--accent-foreground));\n  fill: var(--button-primary-color, var(--accent-foreground));\n  background: var(--button-primary-background, var(--accent-background));\n  border: var(--button-primary-border, var(--border));\n  border-radius: var(--button-primary-border-radius, 6px);\n  font-weight: var(--button-primary-font-weight, 500);\n}\n.btn--primary:hover {\n  color: var(--button-primary-hover-color, var(--accent-foreground));\n  fill: var(--button-primary-hover-color, var(--accent-foreground));\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n}\n.btn--primary:focus-visible {\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n  outline: var(--button-primary-focus-outline, var(--outline));\n}\n\n.btn--default {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-background, var(--background));\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  font-weight: var(--button-font-weight, 500);\n}\n.btn--default:hover {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n.btn--default:focus-visible {\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n  outline: var(--button-focus-outline, var(--outline));\n}\n`;\n\nconst SUCCESS = `\n.success__position {\n  position: fixed;\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  z-index: var(--z-index);\n}\n.success__content {\n  background: var(--success-background, var(--background));\n  border: var(--success-border, var(--border));\n  border-radius: var(--success-border-radius, 1.7em/50%);\n  box-shadow: var(--success-box-shadow, var(--box-shadow));\n  font-weight: var(--success-font-weight, 600);\n  color: var(--success-color);\n  fill: var(--success-color);\n  padding: 12px 24px;\n  line-height: 1.75em;\n\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success__icon {\n  display: flex;\n}\n`;\n\n/**\n * Creates <style> element for widget dialog\n */\nexport function createDialogStyles(styleNonce?: string): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n\n  style.textContent = `\n:host {\n  --dialog-inset: var(--inset);\n}\n\n${DIALOG}\n${DIALOG_HEADER}\n${FORM}\n${BUTTON}\n${SUCCESS}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n","import { DOCUMENT } from '../../constants';\n\n/**\n * Creates <style> element for widget dialog\n */\nexport function createScreenshotInputStyles(styleNonce?: string): HTMLStyleElement {\n  const style = DOCUMENT.createElement('style');\n\n  const surface200 = '#1A141F';\n  const gray100 = '#302735';\n\n  style.textContent = `\n.editor {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n}\n\n.editor__image-container {\n  justify-items: center;\n  padding: 15px;\n  position: relative;\n  height: 100%;\n  border-radius: var(--menu-border-radius, 6px);\n\n  background-color: ${surface200};\n  background-image: repeating-linear-gradient(\n      -145deg,\n      transparent,\n      transparent 8px,\n      ${surface200} 8px,\n      ${surface200} 11px\n    ),\n    repeating-linear-gradient(\n      -45deg,\n      transparent,\n      transparent 15px,\n      ${gray100} 15px,\n      ${gray100} 16px\n    );\n}\n\n.editor__canvas-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editor__canvas-container > * {\n  object-fit: contain;\n  position: absolute;\n}\n\n.editor__tool-container {\n  padding-top: 8px;\n  display: flex;\n  justify-content: center;\n}\n\n.editor__tool-bar {\n  display: flex;\n  gap: 8px;\n}\n\n.editor__tool {\n  display: flex;\n  padding: 8px 12px;\n  justify-content: center;\n  align-items: center;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  background: var(--button-background, var(--background));\n  color: var(--button-color, var(--foreground));\n}\n\n.editor__tool--active {\n  background: var(--button-primary-background, var(--accent-background));\n  color: var(--button-primary-color, var(--accent-foreground));\n}\n\n.editor__rect {\n  position: absolute;\n  z-index: 2;\n}\n\n.editor__rect button {\n  opacity: 0;\n  position: absolute;\n  top: -12px;\n  right: -12px;\n  cursor: pointer;\n  padding: 0;\n  z-index: 3;\n  border: none;\n  background: none;\n}\n\n.editor__rect:hover button {\n  opacity: 1;\n}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n","import type * as Hooks from 'preact/hooks';\nimport { DOCUMENT, NAVIGATOR, WINDOW } from '../../constants';\n\ninterface FactoryParams {\n  hooks: typeof Hooks;\n}\n\ninterface Props {\n  onBeforeScreenshot: () => void;\n  onScreenshot: (imageSource: HTMLVideoElement, dpi: number) => void;\n  onAfterScreenshot: () => void;\n  onError: (error: Error) => void;\n}\n\ntype UseTakeScreenshot = ({ onBeforeScreenshot, onScreenshot, onAfterScreenshot, onError }: Props) => void;\n\nexport function useTakeScreenshotFactory({ hooks }: FactoryParams): UseTakeScreenshot {\n  function useDpi(): number {\n    const [dpi, setDpi] = hooks.useState<number>(WINDOW.devicePixelRatio ?? 1);\n    hooks.useEffect(() => {\n      const onChange = (): void => {\n        setDpi(WINDOW.devicePixelRatio);\n      };\n      const media = matchMedia(`(resolution: ${WINDOW.devicePixelRatio}dppx)`);\n      media.addEventListener('change', onChange);\n      return () => {\n        media.removeEventListener('change', onChange);\n      };\n    }, []);\n\n    return dpi;\n  }\n\n  return function useTakeScreenshot({ onBeforeScreenshot, onScreenshot, onAfterScreenshot, onError }: Props) {\n    const dpi = useDpi();\n\n    hooks.useEffect(() => {\n      const takeScreenshot = async (): Promise<void> => {\n        onBeforeScreenshot();\n\n        // Chrome will animate a top-bar which can shrink the window height by a\n        // few pixels. The exact amount depends on how fast it takes to exec\n        // the onloadedmetadata callback.\n        // https://stackoverflow.com/q/75833049\n        const stream = await NAVIGATOR.mediaDevices.getDisplayMedia({\n          video: {\n            width: WINDOW.innerWidth * dpi,\n            height: WINDOW.innerHeight * dpi,\n          },\n          audio: false,\n          // @ts-expect-error experimental flags: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#prefercurrenttab\n          monitorTypeSurfaces: 'exclude',\n          preferCurrentTab: true,\n          selfBrowserSurface: 'include',\n          surfaceSwitching: 'exclude',\n        });\n\n        const video = DOCUMENT.createElement('video');\n        await new Promise<void>((resolve, reject) => {\n          video.srcObject = stream;\n          video.onloadedmetadata = () => {\n            onScreenshot(video, dpi);\n            stream.getTracks().forEach(track => track.stop());\n            resolve();\n          };\n          video.play().catch(reject);\n        });\n        onAfterScreenshot();\n      };\n\n      takeScreenshot().catch(onError);\n    }, []);\n  };\n}\n","import type { FeedbackInternalOptions, FeedbackModalIntegration } from '@sentry/core';\nimport type { ComponentType, h as hType, VNode } from 'preact';\nimport { h } from 'preact'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport type * as Hooks from 'preact/hooks';\nimport { DOCUMENT, WINDOW } from '../../constants';\nimport IconCloseFactory from './IconClose';\nimport { createScreenshotInputStyles } from './ScreenshotInput.css';\nimport ToolbarFactory from './Toolbar';\nimport { useTakeScreenshotFactory } from './useTakeScreenshot';\n\ninterface FactoryParams {\n  h: typeof hType;\n  hooks: typeof Hooks;\n\n  /**\n   * A ref to a Canvas Element that serves as our \"value\" or image output.\n   */\n  outputBuffer: HTMLCanvasElement;\n\n  /**\n   * A reference to the whole dialog (the parent of this component) so that we\n   * can show/hide it and take a clean screenshot of the webpage.\n   */\n  dialog: ReturnType<FeedbackModalIntegration['createDialog']>;\n\n  /**\n   * The whole options object.\n   *\n   * Needed to set nonce and id values for editor specific styles\n   */\n  options: FeedbackInternalOptions;\n}\n\ninterface Props {\n  onError: (error: Error) => void;\n}\n\ntype MaybeCanvas = HTMLCanvasElement | null;\ntype Screenshot = { canvas: HTMLCanvasElement; dpi: number };\n\ntype DrawType = 'highlight' | 'hide' | '';\ninterface DrawCommand {\n  type: DrawType;\n  x: number;\n  y: number;\n  h: number;\n  w: number;\n}\n\nfunction drawRect(command: DrawCommand, ctx: CanvasRenderingContext2D, color: string): void {\n  switch (command.type) {\n    case 'highlight': {\n      // creates a shadow around\n      ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\n      ctx.shadowBlur = 50;\n\n      // draws a rectangle first with a shadow\n      ctx.fillStyle = color;\n      ctx.fillRect(command.x - 1, command.y - 1, command.w + 2, command.h + 2);\n\n      // cut out the inside of the rectangle\n      ctx.clearRect(command.x, command.y, command.w, command.h);\n\n      break;\n    }\n    case 'hide':\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(command.x, command.y, command.w, command.h);\n\n      break;\n    default:\n      break;\n  }\n}\n\nfunction with2dContext(\n  canvas: MaybeCanvas,\n  options: CanvasRenderingContext2DSettings,\n  callback: (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) => void,\n): void {\n  if (!canvas) {\n    return;\n  }\n  const ctx = canvas.getContext('2d', options);\n  if (!ctx) {\n    return;\n  }\n  callback(canvas, ctx);\n}\n\nfunction paintImage(maybeDest: MaybeCanvas, source: HTMLCanvasElement): void {\n  with2dContext(maybeDest, { alpha: true }, (destCanvas, destCtx) => {\n    destCtx.drawImage(source, 0, 0, source.width, source.height, 0, 0, destCanvas.width, destCanvas.height);\n  });\n}\n\n// Paint the array of drawCommands into a canvas.\n// Assuming this is the canvas foreground, and the background is cleaned.\nfunction paintForeground(maybeCanvas: MaybeCanvas, strokeColor: string, drawCommands: DrawCommand[]): void {\n  with2dContext(maybeCanvas, { alpha: true }, (canvas, ctx) => {\n    // If there's anything to draw, then we'll first clear the canvas with\n    // a transparent grey background\n    if (drawCommands.length) {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.25)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    drawCommands.forEach(command => {\n      drawRect(command, ctx, strokeColor);\n    });\n  });\n}\n\nexport function ScreenshotEditorFactory({\n  h,\n  hooks,\n  outputBuffer,\n  dialog,\n  options,\n}: FactoryParams): ComponentType<Props> {\n  const useTakeScreenshot = useTakeScreenshotFactory({ hooks });\n  const Toolbar = ToolbarFactory({ h });\n  const IconClose = IconCloseFactory({ h });\n  const editorStyleInnerText = { __html: createScreenshotInputStyles(options.styleNonce).innerText };\n\n  const dialogStyle = (dialog.el as HTMLElement).style;\n\n  const ScreenshotEditor = ({ screenshot }: { screenshot: Screenshot }): VNode => {\n    // Data for rendering:\n    const [action, setAction] = hooks.useState<DrawType>('highlight');\n    const [drawCommands, setDrawCommands] = hooks.useState<DrawCommand[]>([]);\n\n    // Refs to our html components:\n    const measurementRef = hooks.useRef<HTMLDivElement | null>(null);\n    const backgroundRef = hooks.useRef<MaybeCanvas>(null);\n    const foregroundRef = hooks.useRef<MaybeCanvas>(null);\n    const mouseRef = hooks.useRef<HTMLDivElement | null>(null);\n\n    // The size of our window, relative to the imageSource\n    const [scaleFactor, setScaleFactor] = hooks.useState<number>(1);\n\n    const strokeColor = hooks.useMemo((): string => {\n      const sentryFeedback = DOCUMENT.getElementById(options.id);\n      if (!sentryFeedback) {\n        return 'white';\n      }\n      const computedStyle = getComputedStyle(sentryFeedback);\n      return (\n        computedStyle.getPropertyValue('--button-primary-background') ||\n        computedStyle.getPropertyValue('--accent-background')\n      );\n    }, [options.id]);\n\n    // The initial resize, to measure the area and set the children to the correct size\n    hooks.useLayoutEffect(() => {\n      const handleResize = (): void => {\n        const measurementDiv = measurementRef.current;\n        if (!measurementDiv) {\n          return;\n        }\n\n        with2dContext(screenshot.canvas, { alpha: false }, canvas => {\n          const scale = Math.min(\n            measurementDiv.clientWidth / canvas.width,\n            measurementDiv.clientHeight / canvas.height,\n          );\n          setScaleFactor(scale);\n        });\n\n        // For Firefox, the canvas is not yet measured, so we need to wait for it to get the correct size\n        if (measurementDiv.clientHeight === 0 || measurementDiv.clientWidth === 0) {\n          setTimeout(handleResize, 0);\n        }\n      };\n\n      handleResize();\n      WINDOW.addEventListener('resize', handleResize);\n      return () => {\n        WINDOW.removeEventListener('resize', handleResize);\n      };\n    }, [screenshot]);\n\n    // Set the size of the canvas element to match our screenshot\n    const setCanvasSize = hooks.useCallback(\n      (maybeCanvas: MaybeCanvas, scale: number): void => {\n        with2dContext(maybeCanvas, { alpha: true }, (canvas, ctx) => {\n          // Must call `scale()` before setting `width` & `height`\n          ctx.scale(scale, scale);\n          canvas.width = screenshot.canvas.width;\n          canvas.height = screenshot.canvas.height;\n        });\n      },\n      [screenshot],\n    );\n\n    // Draw the screenshot into the background\n    hooks.useEffect(() => {\n      setCanvasSize(backgroundRef.current, screenshot.dpi);\n      paintImage(backgroundRef.current, screenshot.canvas);\n    }, [screenshot]);\n\n    // Draw the commands into the foreground\n    hooks.useEffect(() => {\n      setCanvasSize(foregroundRef.current, screenshot.dpi);\n      with2dContext(foregroundRef.current, { alpha: true }, (canvas, ctx) => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n      });\n      paintForeground(foregroundRef.current, strokeColor, drawCommands);\n    }, [drawCommands, strokeColor]);\n\n    // Draw into the output outputBuffer\n    hooks.useEffect(() => {\n      setCanvasSize(outputBuffer, screenshot.dpi);\n      paintImage(outputBuffer, screenshot.canvas);\n      with2dContext(DOCUMENT.createElement('canvas'), { alpha: true }, (foreground, ctx) => {\n        ctx.scale(screenshot.dpi, screenshot.dpi); // The scale needs to be set before we set the width/height and paint\n        foreground.width = screenshot.canvas.width;\n        foreground.height = screenshot.canvas.height;\n        paintForeground(foreground, strokeColor, drawCommands);\n        paintImage(outputBuffer, foreground);\n      });\n    }, [drawCommands, screenshot, strokeColor]);\n\n    const handleMouseDown = (e: MouseEvent): void => {\n      if (!action || !mouseRef.current) {\n        return;\n      }\n\n      const boundingRect = mouseRef.current.getBoundingClientRect();\n      const startingPoint: DrawCommand = {\n        type: action,\n        x: e.offsetX / scaleFactor,\n        y: e.offsetY / scaleFactor,\n        w: 0,\n        h: 0,\n      };\n\n      const getDrawCommand = (startingPoint: DrawCommand, e: MouseEvent): DrawCommand => {\n        const x = (e.clientX - boundingRect.x) / scaleFactor;\n        const y = (e.clientY - boundingRect.y) / scaleFactor;\n        return {\n          type: startingPoint.type,\n          x: Math.min(startingPoint.x, x),\n          y: Math.min(startingPoint.y, y),\n          w: Math.abs(x - startingPoint.x),\n          h: Math.abs(y - startingPoint.y),\n        } as DrawCommand;\n      };\n\n      const handleMouseMove = (e: MouseEvent): void => {\n        with2dContext(foregroundRef.current, { alpha: true }, (canvas, ctx) => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n        });\n        paintForeground(foregroundRef.current, strokeColor, [...drawCommands, getDrawCommand(startingPoint, e)]);\n      };\n\n      const handleMouseUp = (e: MouseEvent): void => {\n        const drawCommand = getDrawCommand(startingPoint, e);\n\n        // Prevent just clicking onto the canvas, mouse has to move at least 1 pixel\n        if (drawCommand.w * scaleFactor >= 1 && drawCommand.h * scaleFactor >= 1) {\n          setDrawCommands(prev => [...prev, drawCommand]);\n        }\n        DOCUMENT.removeEventListener('mousemove', handleMouseMove);\n        DOCUMENT.removeEventListener('mouseup', handleMouseUp);\n      };\n\n      DOCUMENT.addEventListener('mousemove', handleMouseMove);\n      DOCUMENT.addEventListener('mouseup', handleMouseUp);\n    };\n\n    const deleteRect = hooks.useCallback((index: number): hType.JSX.MouseEventHandler<HTMLButtonElement> => {\n      return (e: MouseEvent): void => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDrawCommands(prev => {\n          const updatedRects = [...prev];\n          updatedRects.splice(index, 1);\n          return updatedRects;\n        });\n      };\n    }, []);\n\n    const dimensions = {\n      width: `${screenshot.canvas.width * scaleFactor}px`,\n      height: `${screenshot.canvas.height * scaleFactor}px`,\n    };\n\n    const handleStopPropagation = (e: MouseEvent): void => {\n      e.stopPropagation();\n    };\n\n    return (\n      <div class=\"editor\">\n        <style nonce={options.styleNonce} dangerouslySetInnerHTML={editorStyleInnerText} />\n        <div class=\"editor__image-container\">\n          <div class=\"editor__canvas-container\" ref={measurementRef}>\n            <canvas ref={backgroundRef} id=\"background\" style={dimensions} />\n            <canvas ref={foregroundRef} id=\"foreground\" style={dimensions} />\n            <div ref={mouseRef} onMouseDown={handleMouseDown} style={dimensions}>\n              {drawCommands.map((rect, index) => (\n                <div\n                  key={index}\n                  class=\"editor__rect\"\n                  style={{\n                    top: `${rect.y * scaleFactor}px`,\n                    left: `${rect.x * scaleFactor}px`,\n                    width: `${rect.w * scaleFactor}px`,\n                    height: `${rect.h * scaleFactor}px`,\n                  }}\n                >\n                  <button\n                    aria-label=\"Remove\"\n                    onClick={deleteRect(index)}\n                    onMouseDown={handleStopPropagation}\n                    onMouseUp={handleStopPropagation}\n                    type=\"button\"\n                  >\n                    <IconClose />\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        <Toolbar action={action} setAction={setAction} />\n      </div>\n    );\n  };\n\n  return function Wrapper({ onError }: Props): VNode {\n    const [screenshot, setScreenshot] = hooks.useState<undefined | Screenshot>();\n\n    useTakeScreenshot({\n      onBeforeScreenshot: hooks.useCallback(() => {\n        dialogStyle.display = 'none';\n      }, []),\n      onScreenshot: hooks.useCallback((screenshotVideo: HTMLVideoElement, dpi: number) => {\n        // Stash the original screenshot image so we can (re)draw it multiple times\n        with2dContext(DOCUMENT.createElement('canvas'), { alpha: false }, (canvas, ctx) => {\n          ctx.scale(dpi, dpi); // The scale needs to be set before we set the width/height and paint\n          canvas.width = screenshotVideo.videoWidth;\n          canvas.height = screenshotVideo.videoHeight;\n          ctx.drawImage(screenshotVideo, 0, 0, canvas.width, canvas.height);\n\n          setScreenshot({ canvas, dpi });\n        });\n\n        // The output buffer, we only need to set the width/height on this once, it stays the same forever\n        outputBuffer.width = screenshotVideo.videoWidth;\n        outputBuffer.height = screenshotVideo.videoHeight;\n      }, []),\n      onAfterScreenshot: hooks.useCallback(() => {\n        dialogStyle.display = 'block';\n      }, []),\n      onError: hooks.useCallback(error => {\n        dialogStyle.display = 'block';\n        onError(error);\n      }, []),\n    });\n\n    if (screenshot) {\n      return <ScreenshotEditor screenshot={screenshot} />;\n    }\n\n    return <div />;\n  };\n}\n","import type { h as hType, VNode } from 'preact';\nimport type * as Hooks from 'preact/hooks';\n\ninterface FactoryParams {\n  h: typeof hType;\n}\n\nexport default function ToolbarFactory({\n  h, // eslint-disable-line @typescript-eslint/no-unused-vars\n}: FactoryParams) {\n  return function Toolbar({\n    action,\n    setAction,\n  }: {\n    action: 'highlight' | 'hide' | '';\n    setAction: Hooks.StateUpdater<'highlight' | 'hide' | ''>;\n  }): VNode {\n    return (\n      <div class=\"editor__tool-container\">\n        <div class=\"editor__tool-bar\">\n          <button\n            type=\"button\"\n            class={`editor__tool ${action === 'highlight' ? 'editor__tool--active' : ''}`}\n            onClick={() => {\n              setAction(action === 'highlight' ? '' : 'highlight');\n            }}\n          >\n            Highlight\n          </button>\n          <button\n            type=\"button\"\n            class={`editor__tool ${action === 'hide' ? 'editor__tool--active' : ''}`}\n            onClick={() => {\n              setAction(action === 'hide' ? '' : 'hide');\n            }}\n          >\n            Hide\n          </button>\n        </div>\n      </div>\n    );\n  };\n}\n","import type { h as hType, VNode } from 'preact';\n\ninterface FactoryParams {\n  h: typeof hType;\n}\n\nexport default function IconCloseFactory({\n  h, // eslint-disable-line @typescript-eslint/no-unused-vars\n}: FactoryParams) {\n  return function IconClose(): VNode {\n    return (\n      <svg data-test-id=\"icon-close\" viewBox=\"0 0 16 16\" fill=\"#2B2233\" height=\"25px\" width=\"25px\">\n        <circle r=\"7\" cx=\"8\" cy=\"8\" fill=\"white\" />\n        <path\n          strokeWidth=\"1.5\"\n          d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\"\n        ></path>\n        <path\n          strokeWidth=\"1.5\"\n          d=\"M5.34,11.41a.71.71,0,0,1-.53-.22.74.74,0,0,1,0-1.06l5.32-5.32a.75.75,0,0,1,1.06,1.06L5.87,11.19A.74.74,0,0,1,5.34,11.41Z\"\n        ></path>\n        <path\n          strokeWidth=\"1.5\"\n          d=\"M10.66,11.41a.74.74,0,0,1-.53-.22L4.81,5.87A.75.75,0,0,1,5.87,4.81l5.32,5.32a.74.74,0,0,1,0,1.06A.71.71,0,0,1,10.66,11.41Z\"\n        ></path>\n      </svg>\n    );\n  };\n}\n","import type { Attachment, FeedbackScreenshotIntegration, IntegrationFn } from '@sentry/core';\nimport type { h as hType } from 'preact';\nimport type * as Hooks from 'preact/hooks';\nimport { DOCUMENT } from '../constants';\nimport { ScreenshotEditorFactory } from './components/ScreenshotEditor';\n\nexport const feedbackScreenshotIntegration = ((): FeedbackScreenshotIntegration => {\n  return {\n    name: 'FeedbackScreenshot',\n    setupOnce() {},\n    createInput: ({ h, hooks, dialog, options }) => {\n      const outputBuffer = DOCUMENT.createElement('canvas');\n\n      return {\n        input: ScreenshotEditorFactory({\n          h: h as typeof hType,\n          hooks: hooks as typeof Hooks,\n          outputBuffer,\n          dialog,\n          options,\n        }) as any, // eslint-disable-line @typescript-eslint/no-explicit-any\n\n        value: async () => {\n          const blob = await new Promise<Parameters<BlobCallback>[0]>(resolve => {\n            outputBuffer.toBlob(resolve, 'image/png');\n          });\n          if (blob) {\n            const data = new Uint8Array(await blob.arrayBuffer());\n            const attachment: Attachment = {\n              data,\n              filename: 'screenshot.png',\n              contentType: 'application/png',\n              // attachmentType?: string;\n            };\n            return attachment;\n          }\n          return undefined;\n        },\n      };\n    },\n  };\n}) satisfies IntegrationFn;\n","import type { Mechanism, WrappedFunction } from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  captureException,\n  getLocationHref,\n  getOriginalFunction,\n  GLOBAL_OBJ,\n  markFunctionWrapped,\n  withScope,\n} from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype WrappableFunction = Function;\n\nexport function wrap<T extends WrappableFunction>(\n  fn: T,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): WrappedFunction<T>;\nexport function wrap<NonFunction>(\n  fn: NonFunction,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): NonFunction;\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap<T extends WrappableFunction, NonFunction>(\n  fn: T | NonFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n): NonFunction | WrappedFunction<T> {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn: T | NonFunction): fn is T {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn as WrappedFunction<T>).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function (this: unknown, ...args: unknown[]): unknown {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } as unknown as WrappedFunction<T>;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property as keyof T] = fn[property as keyof T];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name')!;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\n/**\n * Get HTTP request data from the current page.\n */\nexport function getHttpRequestData(): { url: string; headers: Record<string, string> } {\n  // grab as much info as exists and add it to the event\n  const url = getLocationHref();\n  const { referrer } = WINDOW.document || {};\n  const { userAgent } = WINDOW.navigator || {};\n\n  const headers = {\n    ...(referrer && { Referer: referrer }),\n    ...(userAgent && { 'User-Agent': userAgent }),\n  };\n  const request = {\n    url,\n    headers,\n  };\n\n  return request;\n}\n","import type { IntegrationFn } from '@sentry/core';\nimport { getClient, SDK_VERSION } from '@sentry/core';\nimport type { BrowserClient } from '../client';\nimport { WINDOW } from '../helpers';\n\n// This is a map of integration function method to bundle file name.\nconst LazyLoadableIntegrations = {\n  replayIntegration: 'replay',\n  replayCanvasIntegration: 'replay-canvas',\n  feedbackIntegration: 'feedback',\n  feedbackModalIntegration: 'feedback-modal',\n  feedbackScreenshotIntegration: 'feedback-screenshot',\n  captureConsoleIntegration: 'captureconsole',\n  contextLinesIntegration: 'contextlines',\n  linkedErrorsIntegration: 'linkederrors',\n  dedupeIntegration: 'dedupe',\n  extraErrorDataIntegration: 'extraerrordata',\n  graphqlClientIntegration: 'graphqlclient',\n  httpClientIntegration: 'httpclient',\n  reportingObserverIntegration: 'reportingobserver',\n  rewriteFramesIntegration: 'rewriteframes',\n  browserProfilingIntegration: 'browserprofiling',\n  moduleMetadataIntegration: 'modulemetadata',\n} as const;\n\nconst WindowWithMaybeIntegration = WINDOW as {\n  Sentry?: Partial<Record<keyof typeof LazyLoadableIntegrations, IntegrationFn>>;\n};\n\n/**\n * Lazy load an integration from the CDN.\n * Rejects if the integration cannot be loaded.\n */\nexport async function lazyLoadIntegration(\n  name: keyof typeof LazyLoadableIntegrations,\n  scriptNonce?: string,\n): Promise<IntegrationFn> {\n  const bundle = LazyLoadableIntegrations[name];\n\n  // `window.Sentry` is only set when using a CDN bundle, but this method can also be used via the NPM package\n  const sentryOnWindow = (WindowWithMaybeIntegration.Sentry = WindowWithMaybeIntegration.Sentry || {});\n\n  if (!bundle) {\n    throw new Error(`Cannot lazy load integration: ${name}`);\n  }\n\n  // Bail if the integration already exists\n  const existing = sentryOnWindow[name];\n  // The `feedbackIntegration` is loaded by default in the CDN bundles,\n  // so we need to differentiate between the real integration and the shim.\n  // if only the shim exists, we still want to lazy load the real integration.\n  if (typeof existing === 'function' && !('_isShim' in existing)) {\n    return existing;\n  }\n\n  const url = getScriptURL(bundle);\n  const script = WINDOW.document.createElement('script');\n  script.src = url;\n  script.crossOrigin = 'anonymous';\n  script.referrerPolicy = 'strict-origin';\n\n  if (scriptNonce) {\n    script.setAttribute('nonce', scriptNonce);\n  }\n\n  const waitForLoad = new Promise<void>((resolve, reject) => {\n    script.addEventListener('load', () => resolve());\n    script.addEventListener('error', reject);\n  });\n\n  const currentScript = WINDOW.document.currentScript;\n  const parent = WINDOW.document.body || WINDOW.document.head || currentScript?.parentElement;\n\n  if (parent) {\n    parent.appendChild(script);\n  } else {\n    throw new Error(`Could not find parent element to insert lazy-loaded ${name} script`);\n  }\n\n  try {\n    await waitForLoad;\n  } catch {\n    throw new Error(`Error when loading integration: ${name}`);\n  }\n\n  const integrationFn = sentryOnWindow[name];\n\n  if (typeof integrationFn !== 'function') {\n    throw new Error(`Could not load integration: ${name}`);\n  }\n\n  return integrationFn;\n}\n\nfunction getScriptURL(bundle: string): string {\n  const client = getClient<BrowserClient>();\n  const baseURL = client?.getOptions()?.cdnBaseUrl || 'https://browser.sentry-cdn.com';\n\n  return new URL(`/${SDK_VERSION}/${bundle}.min.js`, baseURL).toString();\n}\n","import { buildFeedbackIntegration } from '@sentry-internal/feedback';\nimport { lazyLoadIntegration } from './utils/lazyLoadIntegration';\n\n/**\n * An integration to add user feedback to your application,\n * while loading most of the code lazily only when it's needed.\n */\nexport const feedbackAsyncIntegration = buildFeedbackIntegration({\n  lazyLoadIntegration,\n});\n","import {\n  buildFeedbackIntegration,\n  feedbackModalIntegration,\n  feedbackScreenshotIntegration,\n} from '@sentry-internal/feedback';\n\n/** Add a widget to capture user feedback to your application. */\nexport const feedbackSyncIntegration = buildFeedbackIntegration({\n  getModalIntegration: () => feedbackModalIntegration,\n  getScreenshotIntegration: () => feedbackScreenshotIntegration,\n});\n","import type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  getClient,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/core';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client?.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } as Exception,\n      ],\n    },\n    extra,\n  } satisfies Event;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0]!.stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex: Error): number {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex: Error & { framesToPop?: unknown }): number {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception: unknown): exception is WebAssembly.Exception {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nexport function extractType(ex: Error & { message: { error?: Error } }): string | undefined {\n  const name = ex?.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nexport function extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex?.message;\n\n  if (isWebAssemblyException(ex)) {\n    // For Node 18, Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    if (Array.isArray(ex.message) && ex.message.length == 2) {\n      return ex.message[1];\n    }\n    return 'wasm exception';\n  }\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  level: SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n","import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n} from '@sentry/core';\nimport {\n  _INTERNAL_flushLogsBuffer,\n  addAutoIpAddressToSession,\n  addAutoIpAddressToUser,\n  applySdkMetadata,\n  Client,\n  getSDKSource,\n} from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\ntype BrowserSpecificOptions = BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserSpecificOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> & BrowserSpecificOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends Client<BrowserClientOptions> {\n  private _logFlushIdleTimeout: ReturnType<typeof setTimeout> | undefined;\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = applyDefaultOptions(options);\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    const { sendDefaultPii, sendClientReports, enableLogs } = this._options;\n\n    if (WINDOW.document && (sendClientReports || enableLogs)) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          if (sendClientReports) {\n            this._flushOutcomes();\n          }\n          if (enableLogs) {\n            _INTERNAL_flushLogsBuffer(this);\n          }\n        }\n      });\n    }\n\n    if (enableLogs) {\n      this.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(this);\n      });\n\n      this.on('afterCaptureLog', () => {\n        if (this._logFlushIdleTimeout) {\n          clearTimeout(this._logFlushIdleTimeout);\n        }\n\n        this._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(this);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n\n    if (sendDefaultPii) {\n      this.on('postprocessEvent', addAutoIpAddressToUser);\n      this.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n\n/** Exported only for tests. */\nexport function applyDefaultOptions<T extends Partial<BrowserClientOptions>>(optionsArg: T): T {\n  return {\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE?.id, // This supports the variable that sentry-webpack-plugin injects\n    sendClientReports: true,\n    // We default this to true, as it is the safer scenario\n    parentSpanIsAlwaysRootSpan: true,\n    ...optionsArg,\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type {\n  FetchBreadcrumbHint,\n  HandlerDataFetch,\n  SentryWrappedXMLHttpRequest,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport { GLOBAL_OBJ } from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n\nexport type NetworkMetaWarning =\n  | 'MAYBE_JSON_TRUNCATED'\n  | 'TEXT_TRUNCATED'\n  | 'URL_SKIPPED'\n  | 'BODY_PARSE_ERROR'\n  | 'BODY_PARSE_TIMEOUT'\n  | 'UNPARSEABLE_BODY_TYPE';\n\ntype RequestBody = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\nexport type XhrHint = XhrBreadcrumbHint & {\n  xhr: XMLHttpRequest & SentryWrappedXMLHttpRequest;\n  input?: RequestBody;\n};\nexport type FetchHint = FetchBreadcrumbHint & {\n  input: HandlerDataFetch['args'];\n  response: Response;\n};\n","/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst instanceMap: WeakMap<object, unknown> = new WeakMap();\n\n/**\n * A function that accepts and identity object and a class object and returns\n * either a new instance of that class or an existing instance, if the\n * identity object was previously used.\n */\nexport function initUnique<T>(identityObj: object, ClassObj: new () => T): T {\n  if (!instanceMap.get(identityObj)) {\n    instanceMap.set(identityObj, new ClassObj());\n  }\n  return instanceMap.get(identityObj)! as T;\n}\n","import type { HandlerDataDom } from '@sentry/core';\nimport { addHandler, addNonEnumerableProperty, fill, maybeInstrument, triggerHandlers, uuid4 } from '@sentry/core';\nimport { WINDOW } from '../types';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: unknown;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n    const proto = globalObject[target]?.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto?.hasOwnProperty?.('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (this: InstrumentedElement, type, listener, options): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const handlers = (this.__sentry_instrumentation_handlers__ =\n              this.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (this: InstrumentedElement, type, listener, options): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const handlers = this.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete this.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target?.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","import type { HandlerDataHistory } from '@sentry/core';\nimport { addHandler, fill, maybeInstrument, supportsHistory, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types';\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\n/**\n * Exported just for testing\n */\nexport function instrumentHistory(): void {\n  // The `popstate` event may also be triggered on `pushState`, but it may not always reliably be emitted by the browser\n  // Which is why we also monkey-patch methods below, in addition to this\n  WINDOW.addEventListener('popstate', () => {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n\n    if (from === to) {\n      return;\n    }\n\n    const handlerData = { from, to } satisfies HandlerDataHistory;\n    triggerHandlers('history', handlerData);\n  });\n\n  // Just guard against this not being available, in weird environments\n  if (!supportsHistory()) {\n    return;\n  }\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: unknown[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        const from = lastHref;\n\n        // Ensure the URL is absolute\n        // this can be either a path, then it is relative to the current origin\n        // or a full URL of the current origin - other origins are not allowed\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/History/pushState#url\n        // coerce to string (this is what pushState does)\n        const to = getAbsoluteUrl(String(url));\n\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n\n        if (from === to) {\n          return originalHistoryFunction.apply(this, args);\n        }\n\n        const handlerData = { from, to } satisfies HandlerDataHistory;\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nfunction getAbsoluteUrl(urlOrPath: string): string {\n  try {\n    const url = new URL(urlOrPath, WINDOW.location.origin);\n    return url.toString();\n  } catch {\n    // fallback, just do nothing\n    return urlOrPath;\n  }\n}\n","import { debug, isNativeFunction } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './types';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\ninterface CacheableImplementations {\n  setTimeout: typeof WINDOW.setTimeout;\n  fetch: typeof WINDOW.fetch;\n}\n\nconst cachedImplementations: Partial<CacheableImplementations> = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nexport function getNativeImplementation<T extends keyof CacheableImplementations>(\n  name: T,\n): CacheableImplementations[T] {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] as CacheableImplementations[T];\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow?.[name]) {\n        impl = contentWindow[name] as CacheableImplementations[T];\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && debug.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n}\n\n/** Clear a cached implementation. */\nexport function clearCachedImplementation(name: keyof CacheableImplementations): void {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function fetch(...rest: Parameters<typeof WINDOW.fetch>): ReturnType<typeof WINDOW.fetch> {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nexport function setTimeout(...rest: Parameters<typeof WINDOW.setTimeout>): ReturnType<typeof WINDOW.setTimeout> {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n","import type { HandlerDataXhr, SentryWrappedXMLHttpRequest } from '@sentry/core';\nimport { addHandler, isString, maybeInstrument, timestampInSeconds, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types';\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\ntype WindowWithXhr = Window & { XMLHttpRequest?: typeof XMLHttpRequest };\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  if (!(WINDOW as WindowWithXhr).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(\n      originalOpen,\n      xhrOpenThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest,\n      xhrOpenArgArray:\n        | [method: string, url: string | URL]\n        | [method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null],\n    ) {\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your XHR call did not\n      //       have a stack trace. If you are using HttpClient integration,\n      //       this is the expected behavior, as we are using this virtual error to capture\n      //       the location of your XHR call, and group your HttpClient events accordingly.\n      const virtualError = new Error();\n\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseXhrUrlArg(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n            virtualError,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray: unknown[]) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg: SentryWrappedXMLHttpRequest,\n          setRequestHeaderArgArray: unknown[],\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest, sendArgArray: unknown[]) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\n/**\n * Parses the URL argument of a XHR method to a string.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open#url\n * url: A string or any other object with a stringifier — including a URL object — that provides the URL of the resource to send the request to.\n *\n * @param url - The URL argument of an XHR method\n * @returns The parsed URL string or undefined if the URL is invalid\n */\nfunction parseXhrUrlArg(url: unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // If the passed in argument is not a string, it should have a `toString` method as a stringifier.\n    // If that fails, we just return undefined (like in IE11 where URL is not available)\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import type { Span, SpanAttributes } from '@sentry/core';\nimport {\n  browserPerformanceTimeOrigin,\n  getActiveSpan,\n  getCurrentScope,\n  getRootSpan,\n  htmlTreeAsString,\n  SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT,\n  SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  spanToJSON,\n} from '@sentry/core';\nimport type { InstrumentationHandlerCallback } from './instrument';\nimport {\n  addInpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  isPerformanceEventTiming,\n} from './instrument';\nimport { getBrowserPerformanceAPI, msToSec, startStandaloneWebVitalSpan } from './utils';\n\nconst LAST_INTERACTIONS: number[] = [];\nconst INTERACTIONS_SPAN_MAP = new Map<number, Span>();\n\n/**\n * 60 seconds is the maximum for a plausible INP value\n * (source: Me)\n */\nconst MAX_PLAUSIBLE_INP_DURATION = 60;\n/**\n * Start tracking INP webvital events.\n */\nexport function startTrackingINP(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin()) {\n    const inpCallback = _trackINP();\n\n    return (): void => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP: Record<string, 'click' | 'hover' | 'drag' | 'press'> = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. #\n * exported only for testing\n */\nexport function _trackINP(): () => void {\n  return addInpInstrumentationHandler(_onInp);\n}\n\n/**\n * exported only for testing\n */\nexport const _onInp: InstrumentationHandlerCallback = ({ metric }) => {\n  if (metric.value == undefined) {\n    return;\n  }\n\n  const duration = msToSec(metric.value);\n\n  // We received occasional reports of hour-long INP values.\n  // Therefore, we add a sanity check to avoid creating spans for\n  // unrealistically long INP durations.\n  if (duration > MAX_PLAUSIBLE_INP_DURATION) {\n    return;\n  }\n\n  const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n  if (!entry) {\n    return;\n  }\n\n  const { interactionId } = entry;\n  const interactionType = INP_ENTRY_MAP[entry.name];\n\n  /** Build the INP span, create an envelope from the span, and then send the envelope */\n  const startTime = msToSec((browserPerformanceTimeOrigin() as number) + entry.startTime);\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n  // We first try to lookup the span from our INTERACTIONS_SPAN_MAP,\n  // where we cache the route per interactionId\n  const cachedSpan = interactionId != null ? INTERACTIONS_SPAN_MAP.get(interactionId) : undefined;\n\n  const spanToUse = cachedSpan || rootSpan;\n\n  // Else, we try to use the active span.\n  // Finally, we fall back to look at the transactionName on the scope\n  const routeName = spanToUse ? spanToJSON(spanToUse).description : getCurrentScope().getScopeData().transactionName;\n\n  const name = htmlTreeAsString(entry.target);\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `ui.interaction.${interactionType}`,\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry.duration,\n  };\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('inp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n    });\n\n    span.end(startTime + duration);\n  }\n};\n\n/**\n * Register a listener to cache route information for INP interactions.\n */\nexport function registerInpInteractionListener(): void {\n  const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n    const activeSpan = getActiveSpan();\n    const activeRootSpan = activeSpan && getRootSpan(activeSpan);\n\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !activeRootSpan) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_SPAN_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() as number;\n        INTERACTIONS_SPAN_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the span for this interaction\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_SPAN_MAP.set(interactionId, activeRootSpan);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n","import type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/core';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\nimport { clearCachedImplementation, getNativeImplementation } from '@sentry-internal/browser-utils';\nimport type { WINDOW } from '../helpers';\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch'),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'strict-origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // Note: We do not need to suppress tracing here, becasue we are using the native fetch, instead of our wrapped one.\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/core';\nimport { createStackParser, UNKNOWN_FUNCTION } from '@sentry/core';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) as null | [string, string, string, string];\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) as null | [string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) as null | [string, string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line) as null | [string, string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) as null | [string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line) as null | [string, string, string, string, string];\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line) as null | [string, string, string, string];\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line) as null | [string, string, string, string, string, string];\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] as string) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable max-lines */\n\nimport type {\n  Breadcrumb,\n  Client,\n  Event as SentryEvent,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  IntegrationFn,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport {\n  addBreadcrumb,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  debug,\n  defineIntegration,\n  getBreadcrumbLogLevelFromHttpStatusCode,\n  getClient,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/core';\nimport type { FetchHint, XhrHint } from '@sentry-internal/browser-utils';\nimport {\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  SENTRY_XHR_DATA_KEY,\n} from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      // TODO(v10): Remove this functionality and use `consoleIntegration` from @sentry/core instead.\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        debug.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const breadcrumb = {\n      category: 'xhr',\n      data,\n      type: 'http',\n      level: getBreadcrumbLogLevelFromHttpStatusCode(status_code),\n    };\n\n    client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as XhrHint);\n\n    addBreadcrumb(breadcrumb, hint);\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    const breadcrumbData: FetchBreadcrumbData = {\n      method: handlerData.fetchData.method,\n      url: handlerData.fetchData.url,\n    };\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      } satisfies Breadcrumb;\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as FetchHint);\n\n      addBreadcrumb(breadcrumb, hint);\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response?.status,\n      };\n\n      breadcrumbData.request_body_size = handlerData.fetchData.request_body_size;\n      breadcrumbData.response_body_size = handlerData.fetchData.response_body_size;\n      breadcrumbData.status_code = response?.status;\n\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        type: 'http',\n        level: getBreadcrumbLogLevelFromHttpStatusCode(data.status_code),\n      };\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as FetchHint);\n\n      addBreadcrumb(breadcrumb, hint);\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom?.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { IntegrationFn, WrappedFunction } from '@sentry/core';\nimport { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface BrowserApiErrorsOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n\n  /**\n   * If you experience issues with this integration causing double-invocations of event listeners,\n   * try setting this option to `true`. It will unregister the original callbacks from the event targets\n   * before adding the instrumented callback.\n   *\n   * @default false\n   */\n  unregisterOriginalCallbacks: boolean;\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<BrowserApiErrorsOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    unregisterOriginalCallbacks: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(target => _wrapEventTarget(target, _options));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  return function (this: unknown, ...args: unknown[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original: () => void): (callback: () => void) => unknown {\n  return function (this: unknown, callback: () => void): () => void {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  return function (this: XMLHttpRequest, ...args: unknown[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string, integrationOptions: BrowserApiErrorsOptions): void {\n  const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n  const proto = globalObject[target]?.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto?.hasOwnProperty?.('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction): (\n    ...args: Parameters<typeof WINDOW.addEventListener>\n  ) => ReturnType<typeof WINDOW.addEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      if (integrationOptions.unregisterOriginalCallbacks) {\n        unregisterOriginalCallback(this, eventName, fn);\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener: VoidFunction): (\n    this: unknown,\n    ...args: Parameters<typeof WINDOW.removeEventListener>\n  ) => ReturnType<typeof WINDOW.removeEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn as WrappedFunction).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj: unknown): obj is EventListenerObject {\n  return typeof (obj as EventListenerObject).handleEvent === 'function';\n}\n\nfunction unregisterOriginalCallback(target: unknown, eventName: string, fn: EventListenerOrEventListenerObject): void {\n  if (\n    target &&\n    typeof target === 'object' &&\n    'removeEventListener' in target &&\n    typeof target.removeEventListener === 'function'\n  ) {\n    target.removeEventListener(eventName, fn);\n  }\n}\n","import { captureSession, debug, defineIntegration, startSession } from '@sentry/core';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nexport const browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          debug.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n","import type { Client, Event, IntegrationFn, Primitive, StackParser } from '@sentry/core';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  captureEvent,\n  debug,\n  defineIntegration,\n  getClient,\n  getLocationHref,\n  isPrimitive,\n  isString,\n  UNKNOWN_FUNCTION,\n} from '@sentry/core';\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n    type ErrorWithReason = { reason: unknown };\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error as ErrorWithReason)) {\n      return (error as ErrorWithReason).reason;\n    }\n\n    type CustomEventWithDetail = { detail: { reason: unknown } };\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error as CustomEventWithDetail) && 'reason' in (error as CustomEventWithDetail).detail) {\n      return (error as CustomEventWithDetail).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event: Event,\n  url: string | undefined,\n  line: number | undefined,\n  column: number | undefined,\n): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && debug.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = client?.getOptions() || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","import { defineIntegration } from '@sentry/core';\nimport { getHttpRequestData, WINDOW } from '../helpers';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nexport const httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      const reqData = getHttpRequestData();\n      const headers = {\n        ...reqData.headers,\n        ...event.request?.headers,\n      };\n\n      event.request = {\n        ...reqData,\n        ...event.request,\n        headers,\n      };\n    },\n  };\n});\n","import type { IntegrationFn } from '@sentry/core';\nimport { applyAggregateErrorsToEvent, defineIntegration } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Aggregrate linked errors in an event.\n */\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n","import { consoleSandbox, getLocationHref } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ntype ExtensionRuntime = {\n  runtime?: {\n    id?: string;\n  };\n};\ntype ExtensionProperties = {\n  chrome?: ExtensionRuntime;\n  browser?: ExtensionRuntime;\n  nw?: unknown;\n};\n\n/**\n * Returns true if the SDK is running in an embedded browser extension.\n * Stand-alone browser extensions (which do not share the same data as the main browser page) are fine.\n */\nexport function checkAndWarnIfIsEmbeddedBrowserExtension(): boolean {\n  if (_isEmbeddedBrowserExtension()) {\n    if (DEBUG_BUILD) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.error(\n          '[Sentry] You cannot use Sentry.init() in a browser extension, see: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n        );\n      });\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isEmbeddedBrowserExtension(): boolean {\n  if (typeof WINDOW.window === 'undefined') {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const _window = WINDOW as typeof WINDOW & ExtensionProperties;\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  if (_window.nw) {\n    return false;\n  }\n\n  const extensionObject = _window['chrome'] || _window['browser'];\n\n  if (!extensionObject?.runtime?.id) {\n    return false;\n  }\n\n  const href = getLocationHref();\n  const extensionProtocols = ['chrome-extension', 'moz-extension', 'ms-browser-extension', 'safari-web-extension'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}://`));\n\n  return !isDedicatedExtensionPage;\n}\n","import type { ReportDialogOptions } from '@sentry/core';\nimport { debug, getClient, getCurrentScope, getReportDialogEndpoint, lastEventId } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './helpers';\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the current scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  const optionalDocument = WINDOW.document as Document | undefined;\n  const injectionPoint = optionalDocument?.head || optionalDocument?.body;\n\n  // doesn't work without a document (React Native)\n  if (!injectionPoint) {\n    DEBUG_BUILD && debug.error('[showReportDialog] Global document not defined');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n  const dsn = client?.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && debug.error('[showReportDialog] DSN not configured');\n    return;\n  }\n\n  const mergedOptions = {\n    ...options,\n    user: {\n      ...scope.getUser(),\n      ...options.user,\n    },\n    eventId: options.eventId || lastEventId(),\n  };\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, mergedOptions);\n\n  const { onLoad, onClose } = mergedOptions;\n\n  if (onLoad) {\n    script.onload = onLoad;\n  }\n\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  injectionPoint.appendChild(script);\n}\n","import type { Client, IntegrationFn } from '@sentry/core';\nimport {\n  captureMessage,\n  defineIntegration,\n  getClient,\n  GLOBAL_OBJ,\n  supportsReportingObserver,\n  withScope,\n} from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\ninterface Report {\n  [key: string]: unknown;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\ntype ReportTypes = 'crash' | 'deprecation' | 'intervention';\n\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\ninterface CrashReportBody {\n  [key: string]: unknown;\n  crashId: string;\n  reason?: string;\n}\n\ninterface DeprecationReportBody {\n  [key: string]: unknown;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface InterventionReportBody {\n  [key: string]: unknown;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface ReportingObserverOptions {\n  types?: ReportTypes[];\n}\n\n/** This is experimental and the types are not included with TypeScript, sadly. */\ninterface ReportingObserverClass {\n  new (\n    handler: (reports: Report[]) => void,\n    options: { buffered?: boolean; types?: ReportTypes[] },\n  ): {\n    observe: () => void;\n  };\n}\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _reportingObserverIntegration = ((options: ReportingObserverOptions = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports: Report[]): void {\n    if (!SETUP_CLIENTS.has(getClient() as Client)) {\n      return;\n    }\n\n    for (const report of reports) {\n      withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inherited\n          const plainBody: {\n            [key: string]: unknown;\n          } = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!supportsReportingObserver()) {\n        return;\n      }\n\n      const observer = new (WINDOW as typeof WINDOW & { ReportingObserver: ReportingObserverClass }).ReportingObserver(\n        handler,\n        {\n          buffered: true,\n          types,\n        },\n      );\n\n      observer.observe();\n    },\n\n    setup(client): void {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n */\nexport const reportingObserverIntegration = defineIntegration(_reportingObserverIntegration);\n","var __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar NodeType$2 = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType$2 || {});\nfunction isElement(n2) {\n  return n2.nodeType === n2.ELEMENT_NODE;\n}\nfunction isShadowRoot(n2) {\n  const host = n2?.host;\n  return Boolean(host?.shadowRoot === n2);\n}\nfunction isNativeShadowDom(shadowRoot) {\n  return Object.prototype.toString.call(shadowRoot) === \"[object ShadowRoot]\";\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n  if (cssText.includes(\" background-clip: text;\") && !cssText.includes(\" -webkit-background-clip: text;\")) {\n    cssText = cssText.replace(\n      /\\sbackground-clip:\\s*text;/g,\n      \" -webkit-background-clip: text; background-clip: text;\"\n    );\n  }\n  return cssText;\n}\nfunction escapeImportStatement(rule) {\n  const { cssText } = rule;\n  if (cssText.split('\"').length < 3) return cssText;\n  const statement = [\"@import\", `url(${JSON.stringify(rule.href)})`];\n  if (rule.layerName === \"\") {\n    statement.push(`layer`);\n  } else if (rule.layerName) {\n    statement.push(`layer(${rule.layerName})`);\n  }\n  if (rule.supportsText) {\n    statement.push(`supports(${rule.supportsText})`);\n  }\n  if (rule.media.length) {\n    statement.push(rule.media.mediaText);\n  }\n  return statement.join(\" \") + \";\";\n}\nfunction stringifyStylesheet(s2) {\n  try {\n    const rules2 = s2.rules || s2.cssRules;\n    return rules2 ? fixBrowserCompatibilityIssuesInCSS(\n      Array.from(rules2, stringifyRule).join(\"\")\n    ) : null;\n  } catch (error) {\n    return null;\n  }\n}\nfunction fixAllCssProperty(rule) {\n  let styles = \"\";\n  for (let i2 = 0; i2 < rule.style.length; i2++) {\n    const styleDeclaration = rule.style;\n    const attribute = styleDeclaration[i2];\n    const isImportant = styleDeclaration.getPropertyPriority(attribute);\n    styles += `${attribute}:${styleDeclaration.getPropertyValue(attribute)}${isImportant ? ` !important` : \"\"};`;\n  }\n  return `${rule.selectorText} { ${styles} }`;\n}\nfunction stringifyRule(rule) {\n  let importStringified;\n  if (isCSSImportRule(rule)) {\n    try {\n      importStringified = // for same-origin stylesheets,\n      // we can access the imported stylesheet rules directly\n      stringifyStylesheet(rule.styleSheet) || // work around browser issues with the raw string `@import url(...)` statement\n      escapeImportStatement(rule);\n    } catch (error) {\n    }\n  } else if (isCSSStyleRule(rule)) {\n    let cssText = rule.cssText;\n    const needsSafariColonFix = rule.selectorText.includes(\":\");\n    const needsAllFix = typeof rule.style[\"all\"] === \"string\" && rule.style[\"all\"];\n    if (needsAllFix) {\n      cssText = fixAllCssProperty(rule);\n    }\n    if (needsSafariColonFix) {\n      cssText = fixSafariColons(cssText);\n    }\n    if (needsSafariColonFix || needsAllFix) {\n      return cssText;\n    }\n  }\n  return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n  const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n  return cssStringified.replace(regex, \"$1\\\\$2\");\n}\nfunction isCSSImportRule(rule) {\n  return \"styleSheet\" in rule;\n}\nfunction isCSSStyleRule(rule) {\n  return \"selectorText\" in rule;\n}\nclass Mirror {\n  constructor() {\n    __publicField$1(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField$1(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n2) {\n    if (!n2) return -1;\n    const id = this.getMeta(n2)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n2) {\n    return this.nodeMetaMap.get(n2) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n2) {\n    const id = this.getId(n2);\n    this.idNodeMap.delete(id);\n    if (n2.childNodes) {\n      n2.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n2, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n2);\n    this.nodeMetaMap.set(n2, meta);\n  }\n  replace(id, n2) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n2, meta);\n    }\n    this.idNodeMap.set(id, n2);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction createMirror$2() {\n  return new Mirror();\n}\nfunction shouldMaskInput({\n  maskInputOptions,\n  tagName,\n  type\n}) {\n  if (tagName === \"OPTION\") {\n    tagName = \"SELECT\";\n  }\n  return Boolean(\n    maskInputOptions[tagName.toLowerCase()] || type && maskInputOptions[type] || type === \"password\" || // Default to \"text\" option for inputs without a \"type\" attribute defined\n    tagName === \"INPUT\" && !type && maskInputOptions[\"text\"]\n  );\n}\nfunction maskInputValue({\n  isMasked,\n  element,\n  value,\n  maskInputFn\n}) {\n  let text = value || \"\";\n  if (!isMasked) {\n    return text;\n  }\n  if (maskInputFn) {\n    text = maskInputFn(text, element);\n  }\n  return \"*\".repeat(text.length);\n}\nfunction toLowerCase(str) {\n  return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n  return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = \"__rrweb_original__\";\nfunction is2DCanvasBlank(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return true;\n  const chunkSize = 50;\n  for (let x = 0; x < canvas.width; x += chunkSize) {\n    for (let y = 0; y < canvas.height; y += chunkSize) {\n      const getImageData = ctx.getImageData;\n      const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData ? getImageData[ORIGINAL_ATTRIBUTE_NAME] : getImageData;\n      const pixelBuffer = new Uint32Array(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        originalGetImageData.call(\n          ctx,\n          x,\n          y,\n          Math.min(chunkSize, canvas.width - x),\n          Math.min(chunkSize, canvas.height - y)\n        ).data.buffer\n      );\n      if (pixelBuffer.some((pixel) => pixel !== 0)) return false;\n    }\n  }\n  return true;\n}\nfunction isNodeMetaEqual(a2, b) {\n  if (!a2 || !b || a2.type !== b.type) return false;\n  if (a2.type === NodeType$2.Document)\n    return a2.compatMode === b.compatMode;\n  else if (a2.type === NodeType$2.DocumentType)\n    return a2.name === b.name && a2.publicId === b.publicId && a2.systemId === b.systemId;\n  else if (a2.type === NodeType$2.Comment || a2.type === NodeType$2.Text || a2.type === NodeType$2.CDATA)\n    return a2.textContent === b.textContent;\n  else if (a2.type === NodeType$2.Element)\n    return a2.tagName === b.tagName && JSON.stringify(a2.attributes) === JSON.stringify(b.attributes) && a2.isSVG === b.isSVG && a2.needBlock === b.needBlock;\n  return false;\n}\nfunction getInputType(element) {\n  const type = element.type;\n  return element.hasAttribute(\"data-rr-is-password\") ? \"password\" : type ? (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    toLowerCase(type)\n  ) : null;\n}\nfunction getInputValue(el, tagName, type) {\n  if (tagName === \"INPUT\" && (type === \"radio\" || type === \"checkbox\")) {\n    return el.getAttribute(\"value\") || \"\";\n  }\n  return el.value;\n}\nfunction extractFileExtension(path, baseURL) {\n  let url;\n  try {\n    url = new URL(path, baseURL ?? window.location.href);\n  } catch (err) {\n    return null;\n  }\n  const regex = /\\.([0-9a-z]+)(?:$)/i;\n  const match = url.pathname.match(regex);\n  return match?.[1] ?? null;\n}\nconst cachedImplementations$1 = {};\nfunction getImplementation$1(name) {\n  const cached = cachedImplementations$1[name];\n  if (cached) {\n    return cached;\n  }\n  const document2 = window.document;\n  let impl = window[name];\n  if (document2 && typeof document2.createElement === \"function\") {\n    try {\n      const sandbox = document2.createElement(\"iframe\");\n      sandbox.hidden = true;\n      document2.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = // eslint-disable-next-line @typescript-eslint/unbound-method\n        contentWindow[name];\n      }\n      document2.head.removeChild(sandbox);\n    } catch (e2) {\n    }\n  }\n  return cachedImplementations$1[name] = impl.bind(\n    window\n  );\n}\nfunction setTimeout$2(...rest) {\n  return getImplementation$1(\"setTimeout\")(...rest);\n}\nfunction clearTimeout$1(...rest) {\n  return getImplementation$1(\"clearTimeout\")(...rest);\n}\nfunction getIframeContentDocument(iframe) {\n  try {\n    return iframe.contentDocument;\n  } catch (e2) {\n  }\n}\nlet _id = 1;\nconst tagNameRegex = new RegExp(\"[^a-z0-9-_:]\");\nconst IGNORED_NODE = -2;\nfunction genId() {\n  return _id++;\n}\nfunction getValidTagName$1(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"form\";\n  }\n  const processedTagName = toLowerCase(element.tagName);\n  if (tagNameRegex.test(processedTagName)) {\n    return \"div\";\n  }\n  return processedTagName;\n}\nfunction extractOrigin(url) {\n  let origin = \"\";\n  if (url.indexOf(\"//\") > -1) {\n    origin = url.split(\"/\").slice(0, 3).join(\"/\");\n  } else {\n    origin = url.split(\"/\")[0];\n  }\n  origin = origin.split(\"?\")[0];\n  return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n  return (cssText || \"\").replace(\n    URL_IN_CSS_REF,\n    (origin, quote1, path1, quote2, path2, path3) => {\n      const filePath = path1 || path2 || path3;\n      const maybeQuote = quote1 || quote2 || \"\";\n      if (!filePath) {\n        return origin;\n      }\n      if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (DATA_URI.test(filePath)) {\n        return `url(${maybeQuote}${filePath}${maybeQuote})`;\n      }\n      if (filePath[0] === \"/\") {\n        return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n      }\n      const stack = href.split(\"/\");\n      const parts = filePath.split(\"/\");\n      stack.pop();\n      for (const part of parts) {\n        if (part === \".\") {\n          continue;\n        } else if (part === \"..\") {\n          stack.pop();\n        } else {\n          stack.push(part);\n        }\n      }\n      return `url(${maybeQuote}${stack.join(\"/\")}${maybeQuote})`;\n    }\n  );\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n  if (attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  let pos = 0;\n  function collectCharacters(regEx) {\n    let chars2;\n    const match = regEx.exec(attributeValue.substring(pos));\n    if (match) {\n      chars2 = match[0];\n      pos += chars2.length;\n      return chars2;\n    }\n    return \"\";\n  }\n  const output = [];\n  while (true) {\n    collectCharacters(SRCSET_COMMAS_OR_SPACES);\n    if (pos >= attributeValue.length) {\n      break;\n    }\n    let url = collectCharacters(SRCSET_NOT_SPACES);\n    if (url.slice(-1) === \",\") {\n      url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n      output.push(url);\n    } else {\n      let descriptorsStr = \"\";\n      url = absoluteToDoc(doc, url);\n      let inParens = false;\n      while (true) {\n        const c2 = attributeValue.charAt(pos);\n        if (c2 === \"\") {\n          output.push((url + descriptorsStr).trim());\n          break;\n        } else if (!inParens) {\n          if (c2 === \",\") {\n            pos += 1;\n            output.push((url + descriptorsStr).trim());\n            break;\n          } else if (c2 === \"(\") {\n            inParens = true;\n          }\n        } else {\n          if (c2 === \")\") {\n            inParens = false;\n          }\n        }\n        descriptorsStr += c2;\n        pos += 1;\n      }\n    }\n  }\n  return output.join(\", \");\n}\nconst cachedDocument = /* @__PURE__ */ new WeakMap();\nfunction absoluteToDoc(doc, attributeValue) {\n  if (!attributeValue || attributeValue.trim() === \"\") {\n    return attributeValue;\n  }\n  return getHref(doc, attributeValue);\n}\nfunction isSVGElement(el) {\n  return Boolean(el.tagName === \"svg\" || el.ownerSVGElement);\n}\nfunction getHref(doc, customHref) {\n  let a2 = cachedDocument.get(doc);\n  if (!a2) {\n    a2 = doc.createElement(\"a\");\n    cachedDocument.set(doc, a2);\n  }\n  if (!customHref) {\n    customHref = \"\";\n  } else if (customHref.startsWith(\"blob:\") || customHref.startsWith(\"data:\")) {\n    return customHref;\n  }\n  a2.setAttribute(\"href\", customHref);\n  return a2.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n  if (!value) {\n    return value;\n  }\n  if (name === \"src\" || name === \"href\" && !(tagName === \"use\" && value[0] === \"#\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"xlink:href\" && value[0] !== \"#\") {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"background\" && (tagName === \"table\" || tagName === \"td\" || tagName === \"th\")) {\n    return absoluteToDoc(doc, value);\n  } else if (name === \"srcset\") {\n    return getAbsoluteSrcsetString(doc, value);\n  } else if (name === \"style\") {\n    return absoluteToStylesheet(value, getHref(doc));\n  } else if (tagName === \"object\" && name === \"data\") {\n    return absoluteToDoc(doc, value);\n  }\n  if (typeof maskAttributeFn === \"function\") {\n    return maskAttributeFn(name, value, element);\n  }\n  return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n  return (tagName === \"video\" || tagName === \"audio\") && name === \"autoplay\";\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n  try {\n    if (unblockSelector && element.matches(unblockSelector)) {\n      return false;\n    }\n    if (typeof blockClass === \"string\") {\n      if (element.classList.contains(blockClass)) {\n        return true;\n      }\n    } else {\n      for (let eIndex = element.classList.length; eIndex--; ) {\n        const className = element.classList[eIndex];\n        if (blockClass.test(className)) {\n          return true;\n        }\n      }\n    }\n    if (blockSelector) {\n      return element.matches(blockSelector);\n    }\n  } catch (e2) {\n  }\n  return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n  for (let eIndex = el.classList.length; eIndex--; ) {\n    const className = el.classList[eIndex];\n    if (regex.test(className)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n  if (!node) return -1;\n  if (node.nodeType !== node.ELEMENT_NODE) return -1;\n  if (distance > limit) return -1;\n  if (matchPredicate(node)) return distance;\n  return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n  return (node) => {\n    const el = node;\n    if (el === null) return false;\n    try {\n      if (className) {\n        if (typeof className === \"string\") {\n          if (el.matches(`.${className}`)) return true;\n        } else if (elementClassMatchesRegex(el, className)) {\n          return true;\n        }\n      }\n      if (selector && el.matches(selector)) return true;\n      return false;\n    } catch {\n      return false;\n    }\n  };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n  try {\n    const el = node.nodeType === node.ELEMENT_NODE ? node : node.parentElement;\n    if (el === null) return false;\n    if (el.tagName === \"INPUT\") {\n      const autocomplete = el.getAttribute(\"autocomplete\");\n      const disallowedAutocompleteValues = [\n        \"current-password\",\n        \"new-password\",\n        \"cc-number\",\n        \"cc-exp\",\n        \"cc-exp-month\",\n        \"cc-exp-year\",\n        \"cc-csc\"\n      ];\n      if (disallowedAutocompleteValues.includes(autocomplete)) {\n        return true;\n      }\n    }\n    let maskDistance = -1;\n    let unmaskDistance = -1;\n    if (maskAllText) {\n      unmaskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(unmaskTextClass, unmaskTextSelector)\n      );\n      if (unmaskDistance < 0) {\n        return true;\n      }\n      maskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(maskTextClass, maskTextSelector),\n        unmaskDistance >= 0 ? unmaskDistance : Infinity\n      );\n    } else {\n      maskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(maskTextClass, maskTextSelector)\n      );\n      if (maskDistance < 0) {\n        return false;\n      }\n      unmaskDistance = distanceToMatch(\n        el,\n        createMatchPredicate(unmaskTextClass, unmaskTextSelector),\n        maskDistance >= 0 ? maskDistance : Infinity\n      );\n    }\n    return maskDistance >= 0 ? unmaskDistance >= 0 ? maskDistance <= unmaskDistance : true : unmaskDistance >= 0 ? false : !!maskAllText;\n  } catch (e2) {\n  }\n  return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n  const win = iframeEl.contentWindow;\n  if (!win) {\n    return;\n  }\n  let fired = false;\n  let readyState;\n  try {\n    readyState = win.document.readyState;\n  } catch (error) {\n    return;\n  }\n  if (readyState !== \"complete\") {\n    const timer = setTimeout$2(() => {\n      if (!fired) {\n        listener();\n        fired = true;\n      }\n    }, iframeLoadTimeout);\n    iframeEl.addEventListener(\"load\", () => {\n      clearTimeout$1(timer);\n      fired = true;\n      listener();\n    });\n    return;\n  }\n  const blankUrl = \"about:blank\";\n  if (win.location.href !== blankUrl || iframeEl.src === blankUrl || iframeEl.src === \"\") {\n    setTimeout$2(listener, 0);\n    return iframeEl.addEventListener(\"load\", listener);\n  }\n  iframeEl.addEventListener(\"load\", listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n  let fired = false;\n  let styleSheetLoaded;\n  try {\n    styleSheetLoaded = link.sheet;\n  } catch (error) {\n    return;\n  }\n  if (styleSheetLoaded) return;\n  const timer = setTimeout$2(() => {\n    if (!fired) {\n      listener();\n      fired = true;\n    }\n  }, styleSheetLoadTimeout);\n  link.addEventListener(\"load\", () => {\n    clearTimeout$1(timer);\n    fired = true;\n    listener();\n  });\n}\nfunction serializeNode(n2, options) {\n  const {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskAttributeFn,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false\n  } = options;\n  const rootId = getRootId(doc, mirror2);\n  switch (n2.nodeType) {\n    case n2.DOCUMENT_NODE:\n      if (n2.compatMode !== \"CSS1Compat\") {\n        return {\n          type: NodeType$2.Document,\n          childNodes: [],\n          compatMode: n2.compatMode\n          // probably \"BackCompat\"\n        };\n      } else {\n        return {\n          type: NodeType$2.Document,\n          childNodes: []\n        };\n      }\n    case n2.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType$2.DocumentType,\n        name: n2.name,\n        publicId: n2.publicId,\n        systemId: n2.systemId,\n        rootId\n      };\n    case n2.ELEMENT_NODE:\n      return serializeElementNode(n2, {\n        doc,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        inlineStylesheet,\n        maskAttributeFn,\n        maskInputOptions,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n        rootId,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector\n      });\n    case n2.TEXT_NODE:\n      return serializeTextNode(n2, {\n        doc,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        maskTextFn,\n        maskInputOptions,\n        maskInputFn,\n        rootId\n      });\n    case n2.CDATA_SECTION_NODE:\n      return {\n        type: NodeType$2.CDATA,\n        textContent: \"\",\n        rootId\n      };\n    case n2.COMMENT_NODE:\n      return {\n        type: NodeType$2.Comment,\n        textContent: n2.textContent || \"\",\n        rootId\n      };\n    default:\n      return false;\n  }\n}\nfunction getRootId(doc, mirror2) {\n  if (!mirror2.hasNode(doc)) return void 0;\n  const docId = mirror2.getId(doc);\n  return docId === 1 ? void 0 : docId;\n}\nfunction serializeTextNode(n2, options) {\n  const {\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    maskTextFn,\n    maskInputOptions,\n    maskInputFn,\n    rootId\n  } = options;\n  const parentTagName = n2.parentNode && n2.parentNode.tagName;\n  let textContent = n2.textContent;\n  const isStyle = parentTagName === \"STYLE\" ? true : void 0;\n  const isScript = parentTagName === \"SCRIPT\" ? true : void 0;\n  const isTextarea = parentTagName === \"TEXTAREA\" ? true : void 0;\n  if (isStyle && textContent) {\n    try {\n      if (n2.nextSibling || n2.previousSibling) {\n      } else if (n2.parentNode.sheet?.cssRules) {\n        textContent = stringifyStylesheet(\n          n2.parentNode.sheet\n        );\n      }\n    } catch (err) {\n      console.warn(\n        `Cannot get CSS styles from text's parentNode. Error: ${err}`,\n        n2\n      );\n    }\n    textContent = absoluteToStylesheet(textContent, getHref(options.doc));\n  }\n  if (isScript) {\n    textContent = \"SCRIPT_PLACEHOLDER\";\n  }\n  const forceMask = needMaskingText(\n    n2,\n    maskTextClass,\n    maskTextSelector,\n    unmaskTextClass,\n    unmaskTextSelector,\n    maskAllText\n  );\n  if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n    textContent = maskTextFn ? maskTextFn(textContent, n2.parentElement) : textContent.replace(/[\\S]/g, \"*\");\n  }\n  if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n    textContent = maskInputFn ? maskInputFn(textContent, n2.parentNode) : textContent.replace(/[\\S]/g, \"*\");\n  }\n  if (parentTagName === \"OPTION\" && textContent) {\n    const isInputMasked = shouldMaskInput({\n      type: null,\n      tagName: parentTagName,\n      maskInputOptions\n    });\n    textContent = maskInputValue({\n      isMasked: needMaskingText(\n        n2,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextClass,\n        unmaskTextSelector,\n        isInputMasked\n      ),\n      element: n2,\n      value: textContent,\n      maskInputFn\n    });\n  }\n  return {\n    type: NodeType$2.Text,\n    textContent: textContent || \"\",\n    isStyle,\n    rootId\n  };\n}\nfunction serializeElementNode(n2, options) {\n  const {\n    doc,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    inlineStylesheet,\n    maskInputOptions = {},\n    maskAttributeFn,\n    maskInputFn,\n    dataURLOptions = {},\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement = false,\n    rootId,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector\n  } = options;\n  const needBlock = _isBlockedElement(\n    n2,\n    blockClass,\n    blockSelector,\n    unblockSelector\n  );\n  const tagName = getValidTagName$1(n2);\n  let attributes2 = {};\n  const len = n2.attributes.length;\n  for (let i2 = 0; i2 < len; i2++) {\n    const attr = n2.attributes[i2];\n    if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n      attributes2[attr.name] = transformAttribute(\n        doc,\n        tagName,\n        toLowerCase(attr.name),\n        attr.value,\n        n2,\n        maskAttributeFn\n      );\n    }\n  }\n  if (tagName === \"link\" && inlineStylesheet) {\n    const stylesheet = Array.from(doc.styleSheets).find((s2) => {\n      return s2.href === n2.href;\n    });\n    let cssText = null;\n    if (stylesheet) {\n      cssText = stringifyStylesheet(stylesheet);\n    }\n    if (cssText) {\n      attributes2.rel = null;\n      attributes2.href = null;\n      attributes2.crossorigin = null;\n      attributes2._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n    }\n  }\n  if (tagName === \"style\" && n2.sheet && // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n  !(n2.innerText || n2.textContent || \"\").trim().length) {\n    const cssText = stringifyStylesheet(\n      n2.sheet\n    );\n    if (cssText) {\n      attributes2._cssText = absoluteToStylesheet(cssText, getHref(doc));\n    }\n  }\n  if (tagName === \"input\" || tagName === \"textarea\" || tagName === \"select\" || tagName === \"option\") {\n    const el = n2;\n    const type = getInputType(el);\n    const value = getInputValue(el, toUpperCase(tagName), type);\n    const checked = el.checked;\n    if (type !== \"submit\" && type !== \"button\" && value) {\n      const forceMask = needMaskingText(\n        el,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextClass,\n        unmaskTextSelector,\n        shouldMaskInput({\n          type,\n          tagName: toUpperCase(tagName),\n          maskInputOptions\n        })\n      );\n      attributes2.value = maskInputValue({\n        isMasked: forceMask,\n        element: el,\n        value,\n        maskInputFn\n      });\n    }\n    if (checked) {\n      attributes2.checked = checked;\n    }\n  }\n  if (tagName === \"option\") {\n    if (n2.selected && !maskInputOptions[\"select\"]) {\n      attributes2.selected = true;\n    } else {\n      delete attributes2.selected;\n    }\n  }\n  if (tagName === \"canvas\" && recordCanvas) {\n    if (n2.__context === \"2d\") {\n      if (!is2DCanvasBlank(n2)) {\n        attributes2.rr_dataURL = n2.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      }\n    } else if (!(\"__context\" in n2)) {\n      const canvasDataURL = n2.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      const blankCanvas = doc.createElement(\"canvas\");\n      blankCanvas.width = n2.width;\n      blankCanvas.height = n2.height;\n      const blankCanvasDataURL = blankCanvas.toDataURL(\n        dataURLOptions.type,\n        dataURLOptions.quality\n      );\n      if (canvasDataURL !== blankCanvasDataURL) {\n        attributes2.rr_dataURL = canvasDataURL;\n      }\n    }\n  }\n  if (tagName === \"img\" && inlineImages) {\n    if (!canvasService) {\n      canvasService = doc.createElement(\"canvas\");\n      canvasCtx = canvasService.getContext(\"2d\");\n    }\n    const image = n2;\n    const imageSrc = image.currentSrc || image.getAttribute(\"src\") || \"<unknown-src>\";\n    const priorCrossOrigin = image.crossOrigin;\n    const recordInlineImage = () => {\n      image.removeEventListener(\"load\", recordInlineImage);\n      try {\n        canvasService.width = image.naturalWidth;\n        canvasService.height = image.naturalHeight;\n        canvasCtx.drawImage(image, 0, 0);\n        attributes2.rr_dataURL = canvasService.toDataURL(\n          dataURLOptions.type,\n          dataURLOptions.quality\n        );\n      } catch (err) {\n        if (image.crossOrigin !== \"anonymous\") {\n          image.crossOrigin = \"anonymous\";\n          if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n          else image.addEventListener(\"load\", recordInlineImage);\n          return;\n        } else {\n          console.warn(\n            `Cannot inline img src=${imageSrc}! Error: ${err}`\n          );\n        }\n      }\n      if (image.crossOrigin === \"anonymous\") {\n        priorCrossOrigin ? attributes2.crossOrigin = priorCrossOrigin : image.removeAttribute(\"crossorigin\");\n      }\n    };\n    if (image.complete && image.naturalWidth !== 0) recordInlineImage();\n    else image.addEventListener(\"load\", recordInlineImage);\n  }\n  if (tagName === \"audio\" || tagName === \"video\") {\n    attributes2.rr_mediaState = n2.paused ? \"paused\" : \"played\";\n    attributes2.rr_mediaCurrentTime = n2.currentTime;\n  }\n  if (!newlyAddedElement) {\n    if (n2.scrollLeft) {\n      attributes2.rr_scrollLeft = n2.scrollLeft;\n    }\n    if (n2.scrollTop) {\n      attributes2.rr_scrollTop = n2.scrollTop;\n    }\n  }\n  if (needBlock) {\n    const { width, height } = n2.getBoundingClientRect();\n    attributes2 = {\n      class: attributes2.class,\n      rr_width: `${width}px`,\n      rr_height: `${height}px`\n    };\n  }\n  if (tagName === \"iframe\" && !keepIframeSrcFn(attributes2.src)) {\n    if (!needBlock && !getIframeContentDocument(n2)) {\n      attributes2.rr_src = attributes2.src;\n    }\n    delete attributes2.src;\n  }\n  let isCustomElement;\n  try {\n    if (customElements.get(tagName)) isCustomElement = true;\n  } catch (e2) {\n  }\n  return {\n    type: NodeType$2.Element,\n    tagName,\n    attributes: attributes2,\n    childNodes: [],\n    isSVG: isSVGElement(n2) || void 0,\n    needBlock,\n    rootId,\n    isCustom: isCustomElement\n  };\n}\nfunction lowerIfExists(maybeAttr) {\n  if (maybeAttr === void 0 || maybeAttr === null) {\n    return \"\";\n  } else {\n    return maybeAttr.toLowerCase();\n  }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n  if (slimDOMOptions.comment && sn.type === NodeType$2.Comment) {\n    return true;\n  } else if (sn.type === NodeType$2.Element) {\n    if (slimDOMOptions.script && // script tag\n    (sn.tagName === \"script\" || // (module)preload link\n    sn.tagName === \"link\" && (sn.attributes.rel === \"preload\" || sn.attributes.rel === \"modulepreload\") || // prefetch link\n    sn.tagName === \"link\" && sn.attributes.rel === \"prefetch\" && typeof sn.attributes.href === \"string\" && extractFileExtension(sn.attributes.href) === \"js\")) {\n      return true;\n    } else if (slimDOMOptions.headFavicon && (sn.tagName === \"link\" && sn.attributes.rel === \"shortcut icon\" || sn.tagName === \"meta\" && (lowerIfExists(sn.attributes.name).match(\n      /^msapplication-tile(image|color)$/\n    ) || lowerIfExists(sn.attributes.name) === \"application-name\" || lowerIfExists(sn.attributes.rel) === \"icon\" || lowerIfExists(sn.attributes.rel) === \"apple-touch-icon\" || lowerIfExists(sn.attributes.rel) === \"shortcut icon\"))) {\n      return true;\n    } else if (sn.tagName === \"meta\") {\n      if (slimDOMOptions.headMetaDescKeywords && lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n        return true;\n      } else if (slimDOMOptions.headMetaSocial && (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) || // og = opengraph (facebook)\n      lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) || lowerIfExists(sn.attributes.name) === \"pinterest\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaRobots && (lowerIfExists(sn.attributes.name) === \"robots\" || lowerIfExists(sn.attributes.name) === \"googlebot\" || lowerIfExists(sn.attributes.name) === \"bingbot\")) {\n        return true;\n      } else if (slimDOMOptions.headMetaHttpEquiv && sn.attributes[\"http-equiv\"] !== void 0) {\n        return true;\n      } else if (slimDOMOptions.headMetaAuthorship && (lowerIfExists(sn.attributes.name) === \"author\" || lowerIfExists(sn.attributes.name) === \"generator\" || lowerIfExists(sn.attributes.name) === \"framework\" || lowerIfExists(sn.attributes.name) === \"publisher\" || lowerIfExists(sn.attributes.name) === \"progid\" || lowerIfExists(sn.attributes.property).match(/^article:/) || lowerIfExists(sn.attributes.property).match(/^product:/))) {\n        return true;\n      } else if (slimDOMOptions.headMetaVerification && (lowerIfExists(sn.attributes.name) === \"google-site-verification\" || lowerIfExists(sn.attributes.name) === \"yandex-verification\" || lowerIfExists(sn.attributes.name) === \"csrf-token\" || lowerIfExists(sn.attributes.name) === \"p:domain_verify\" || lowerIfExists(sn.attributes.name) === \"verify-v1\" || lowerIfExists(sn.attributes.name) === \"verification\" || lowerIfExists(sn.attributes.name) === \"shopify-checkout-api-token\")) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction serializeNodeWithId(n2, options) {\n  const {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    skipChild = false,\n    inlineStylesheet = true,\n    maskInputOptions = {},\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions = {},\n    inlineImages = false,\n    recordCanvas = false,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout = 5e3,\n    onStylesheetLoad,\n    stylesheetLoadTimeout = 5e3,\n    keepIframeSrcFn = () => false,\n    newlyAddedElement = false\n  } = options;\n  let { preserveWhiteSpace = true } = options;\n  const _serializedNode = serializeNode(n2, {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    maskAllText,\n    unblockSelector,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    inlineStylesheet,\n    maskInputOptions,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    keepIframeSrcFn,\n    newlyAddedElement\n  });\n  if (!_serializedNode) {\n    console.warn(n2, \"not serialized\");\n    return null;\n  }\n  let id;\n  if (mirror2.hasNode(n2)) {\n    id = mirror2.getId(n2);\n  } else if (slimDOMExcluded(_serializedNode, slimDOMOptions) || !preserveWhiteSpace && _serializedNode.type === NodeType$2.Text && !_serializedNode.isStyle && !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, \"\").length) {\n    id = IGNORED_NODE;\n  } else {\n    id = genId();\n  }\n  const serializedNode2 = Object.assign(_serializedNode, { id });\n  mirror2.add(n2, serializedNode2);\n  if (id === IGNORED_NODE) {\n    return null;\n  }\n  if (onSerialize) {\n    onSerialize(n2);\n  }\n  let recordChild = !skipChild;\n  if (serializedNode2.type === NodeType$2.Element) {\n    recordChild = recordChild && !serializedNode2.needBlock;\n    delete serializedNode2.needBlock;\n    const shadowRoot = n2.shadowRoot;\n    if (shadowRoot && isNativeShadowDom(shadowRoot))\n      serializedNode2.isShadowHost = true;\n  }\n  if ((serializedNode2.type === NodeType$2.Document || serializedNode2.type === NodeType$2.Element) && recordChild) {\n    if (slimDOMOptions.headWhitespace && serializedNode2.type === NodeType$2.Element && serializedNode2.tagName === \"head\") {\n      preserveWhiteSpace = false;\n    }\n    const bypassOptions = {\n      doc,\n      mirror: mirror2,\n      blockClass,\n      blockSelector,\n      maskAllText,\n      unblockSelector,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      skipChild,\n      inlineStylesheet,\n      maskInputOptions,\n      maskAttributeFn,\n      maskTextFn,\n      maskInputFn,\n      slimDOMOptions,\n      dataURLOptions,\n      inlineImages,\n      recordCanvas,\n      preserveWhiteSpace,\n      onSerialize,\n      onIframeLoad,\n      iframeLoadTimeout,\n      onStylesheetLoad,\n      stylesheetLoadTimeout,\n      keepIframeSrcFn\n    };\n    for (const childN of Array.from(n2.childNodes)) {\n      const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n      if (serializedChildNode) {\n        serializedNode2.childNodes.push(serializedChildNode);\n      }\n    }\n    if (isElement(n2) && n2.shadowRoot) {\n      for (const childN of Array.from(n2.shadowRoot.childNodes)) {\n        const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n        if (serializedChildNode) {\n          isNativeShadowDom(n2.shadowRoot) && (serializedChildNode.isShadow = true);\n          serializedNode2.childNodes.push(serializedChildNode);\n        }\n      }\n    }\n  }\n  if (n2.parentNode && isShadowRoot(n2.parentNode) && isNativeShadowDom(n2.parentNode)) {\n    serializedNode2.isShadow = true;\n  }\n  if (serializedNode2.type === NodeType$2.Element && serializedNode2.tagName === \"iframe\" && !_isBlockedElement(\n    n2,\n    blockClass,\n    blockSelector,\n    unblockSelector\n  )) {\n    onceIframeLoaded(\n      n2,\n      () => {\n        const iframeDoc = getIframeContentDocument(n2);\n        if (iframeDoc && onIframeLoad) {\n          const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n            doc: iframeDoc,\n            mirror: mirror2,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedIframeNode) {\n            onIframeLoad(\n              n2,\n              serializedIframeNode\n            );\n          }\n        }\n      },\n      iframeLoadTimeout\n    );\n  }\n  if (serializedNode2.type === NodeType$2.Element && serializedNode2.tagName === \"link\" && typeof serializedNode2.attributes.rel === \"string\" && (serializedNode2.attributes.rel === \"stylesheet\" || serializedNode2.attributes.rel === \"preload\" && typeof serializedNode2.attributes.href === \"string\" && extractFileExtension(serializedNode2.attributes.href) === \"css\")) {\n    onceStylesheetLoaded(\n      n2,\n      () => {\n        if (onStylesheetLoad) {\n          const serializedLinkNode = serializeNodeWithId(n2, {\n            doc,\n            mirror: mirror2,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn\n          });\n          if (serializedLinkNode) {\n            onStylesheetLoad(\n              n2,\n              serializedLinkNode\n            );\n          }\n        }\n      },\n      stylesheetLoadTimeout\n    );\n  }\n  return serializedNode2;\n}\nfunction snapshot(n2, options) {\n  const {\n    mirror: mirror2 = new Mirror(),\n    blockClass = \"rr-block\",\n    blockSelector = null,\n    unblockSelector = null,\n    maskAllText = false,\n    maskTextClass = \"rr-mask\",\n    unmaskTextClass = null,\n    maskTextSelector = null,\n    unmaskTextSelector = null,\n    inlineStylesheet = true,\n    inlineImages = false,\n    recordCanvas = false,\n    maskAllInputs = false,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOM = false,\n    dataURLOptions,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn = () => false\n  } = options || {};\n  const maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    \"datetime-local\": true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true\n  } : maskAllInputs === false ? {} : maskAllInputs;\n  const slimDOMOptions = slimDOM === true || slimDOM === \"all\" ? (\n    // if true: set of sensible options that should not throw away any information\n    {\n      script: true,\n      comment: true,\n      headFavicon: true,\n      headWhitespace: true,\n      headMetaDescKeywords: slimDOM === \"all\",\n      // destructive\n      headMetaSocial: true,\n      headMetaRobots: true,\n      headMetaHttpEquiv: true,\n      headMetaAuthorship: true,\n      headMetaVerification: true\n    }\n  ) : slimDOM === false ? {} : slimDOM;\n  return serializeNodeWithId(n2, {\n    doc: n2,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    maskAllText,\n    maskTextClass,\n    unmaskTextClass,\n    maskTextSelector,\n    unmaskTextSelector,\n    skipChild: false,\n    inlineStylesheet,\n    maskInputOptions,\n    maskAttributeFn,\n    maskTextFn,\n    maskInputFn,\n    slimDOMOptions,\n    dataURLOptions,\n    inlineImages,\n    recordCanvas,\n    preserveWhiteSpace,\n    onSerialize,\n    onIframeLoad,\n    iframeLoadTimeout,\n    onStylesheetLoad,\n    stylesheetLoadTimeout,\n    keepIframeSrcFn,\n    newlyAddedElement: false\n  });\n}\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nfunction parse(css, options = {}) {\n  let lineno = 1;\n  let column = 1;\n  function updatePosition(str) {\n    const lines = str.match(/\\n/g);\n    if (lines) {\n      lineno += lines.length;\n    }\n    const i2 = str.lastIndexOf(\"\\n\");\n    column = i2 === -1 ? column + str.length : str.length - i2;\n  }\n  function position() {\n    const start = { line: lineno, column };\n    return (node) => {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n  const _Position = class _Position2 {\n    constructor(start) {\n      __publicField$1(this, \"content\");\n      __publicField$1(this, \"start\");\n      __publicField$1(this, \"end\");\n      __publicField$1(this, \"source\");\n      this.start = start;\n      this.end = { line: lineno, column };\n      this.source = options.source;\n      this.content = _Position2.content;\n    }\n  };\n  __publicField$1(_Position, \"content\");\n  let Position = _Position;\n  Position.content = css;\n  const errorsList = [];\n  function error(msg) {\n    const err = new Error(\n      `${options.source || \"\"}:${lineno}:${column}: ${msg}`\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n  function stylesheet() {\n    const rulesList = rules2();\n    return {\n      type: \"stylesheet\",\n      stylesheet: {\n        source: options.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n  function open() {\n    return match(/^{\\s*/);\n  }\n  function close() {\n    return match(/^}/);\n  }\n  function rules2() {\n    let node;\n    const rules22 = [];\n    whitespace();\n    comments(rules22);\n    while (css.length && css.charAt(0) !== \"}\" && (node = atrule() || rule())) {\n      if (node) {\n        rules22.push(node);\n        comments(rules22);\n      }\n    }\n    return rules22;\n  }\n  function match(re) {\n    const m = re.exec(css);\n    if (!m) {\n      return;\n    }\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n  function whitespace() {\n    match(/^\\s*/);\n  }\n  function comments(rules22 = []) {\n    let c2;\n    while (c2 = comment()) {\n      if (c2) {\n        rules22.push(c2);\n      }\n      c2 = comment();\n    }\n    return rules22;\n  }\n  function comment() {\n    const pos = position();\n    if (\"/\" !== css.charAt(0) || \"*\" !== css.charAt(1)) {\n      return;\n    }\n    let i2 = 2;\n    while (\"\" !== css.charAt(i2) && (\"*\" !== css.charAt(i2) || \"/\" !== css.charAt(i2 + 1))) {\n      ++i2;\n    }\n    i2 += 2;\n    if (\"\" === css.charAt(i2 - 1)) {\n      return error(\"End of comment missing\");\n    }\n    const str = css.slice(2, i2 - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i2);\n    column += 2;\n    return pos({\n      type: \"comment\",\n      comment: str\n    });\n  }\n  function selector() {\n    const m = match(/^([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const splitSelectors = trim(m[0]).replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, \"\").replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m2) => {\n      return m2.replace(/,/g, \"‌\");\n    }).split(/\\s*(?![^(]*\\)),\\s*/);\n    if (splitSelectors.length <= 1) {\n      return splitSelectors.map((s2) => {\n        return s2.replace(/\\u200C/g, \",\");\n      });\n    }\n    let i2 = 0;\n    let j = 0;\n    const len = splitSelectors.length;\n    const finalSelectors = [];\n    while (i2 < len) {\n      const openingParensCount = (splitSelectors[i2].match(/\\(/g) || []).length;\n      const closingParensCount = (splitSelectors[i2].match(/\\)/g) || []).length;\n      let unbalancedParens = openingParensCount - closingParensCount;\n      if (unbalancedParens >= 1) {\n        let foundClosingSelector = false;\n        j = i2 + 1;\n        while (j < len) {\n          const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || []).length;\n          const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || []).length;\n          const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\n          if (nextUnbalancedParens === unbalancedParens) {\n            finalSelectors.push(splitSelectors.slice(i2, j + 1).join(\",\"));\n            i2 = j + 1;\n            foundClosingSelector = true;\n            break;\n          }\n          j++;\n          unbalancedParens -= nextUnbalancedParens;\n        }\n        if (foundClosingSelector) {\n          continue;\n        }\n        splitSelectors.slice(i2, len).forEach((selector2) => selector2 && finalSelectors.push(selector2));\n        break;\n      }\n      splitSelectors[i2] && finalSelectors.push(splitSelectors[i2]);\n      i2++;\n    }\n    return finalSelectors.map((s2) => {\n      return s2.replace(/\\u200C/g, \",\");\n    });\n  }\n  function declaration() {\n    const pos = position();\n    const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!propMatch) {\n      return;\n    }\n    const prop = trim(propMatch[0]);\n    if (!match(/^:\\s*/)) {\n      return error(`property missing ':'`);\n    }\n    const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    const ret = pos({\n      type: \"declaration\",\n      property: prop.replace(commentre, \"\"),\n      value: val ? trim(val[0]).replace(commentre, \"\") : \"\"\n    });\n    match(/^[;\\s]*/);\n    return ret;\n  }\n  function declarations() {\n    const decls = [];\n    if (!open()) {\n      return error(`missing '{'`);\n    }\n    comments(decls);\n    let decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n      decl = declaration();\n    }\n    if (!close()) {\n      return error(`missing '}'`);\n    }\n    return decls;\n  }\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n    if (!vals.length) {\n      return;\n    }\n    return pos({\n      type: \"keyframe\",\n      values: vals,\n      declarations: declarations()\n    });\n  }\n  function atkeyframes() {\n    const pos = position();\n    let m = match(/^@([-\\w]+)?keyframes\\s*/);\n    if (!m) {\n      return;\n    }\n    const vendor = m[1];\n    m = match(/^([-\\w]+)\\s*/);\n    if (!m) {\n      return error(\"@keyframes missing name\");\n    }\n    const name = m[1];\n    if (!open()) {\n      return error(`@keyframes missing '{'`);\n    }\n    let frame;\n    let frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n    if (!close()) {\n      return error(`@keyframes missing '}'`);\n    }\n    return pos({\n      type: \"keyframes\",\n      name,\n      vendor,\n      keyframes: frames\n    });\n  }\n  function atsupports() {\n    const pos = position();\n    const m = match(/^@supports *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const supports = trim(m[1]);\n    if (!open()) {\n      return error(`@supports missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@supports missing '}'`);\n    }\n    return pos({\n      type: \"supports\",\n      supports,\n      rules: style\n    });\n  }\n  function athost() {\n    const pos = position();\n    const m = match(/^@host\\s*/);\n    if (!m) {\n      return;\n    }\n    if (!open()) {\n      return error(`@host missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@host missing '}'`);\n    }\n    return pos({\n      type: \"host\",\n      rules: style\n    });\n  }\n  function atmedia() {\n    const pos = position();\n    const m = match(/^@media *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const media = trim(m[1]);\n    if (!open()) {\n      return error(`@media missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@media missing '}'`);\n    }\n    return pos({\n      type: \"media\",\n      media,\n      rules: style\n    });\n  }\n  function atcustommedia() {\n    const pos = position();\n    const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) {\n      return;\n    }\n    return pos({\n      type: \"custom-media\",\n      name: trim(m[1]),\n      media: trim(m[2])\n    });\n  }\n  function atpage() {\n    const pos = position();\n    const m = match(/^@page */);\n    if (!m) {\n      return;\n    }\n    const sel = selector() || [];\n    if (!open()) {\n      return error(`@page missing '{'`);\n    }\n    let decls = comments();\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) {\n      return error(`@page missing '}'`);\n    }\n    return pos({\n      type: \"page\",\n      selectors: sel,\n      declarations: decls\n    });\n  }\n  function atdocument() {\n    const pos = position();\n    const m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) {\n      return;\n    }\n    const vendor = trim(m[1]);\n    const doc = trim(m[2]);\n    if (!open()) {\n      return error(`@document missing '{'`);\n    }\n    const style = comments().concat(rules2());\n    if (!close()) {\n      return error(`@document missing '}'`);\n    }\n    return pos({\n      type: \"document\",\n      document: doc,\n      vendor,\n      rules: style\n    });\n  }\n  function atfontface() {\n    const pos = position();\n    const m = match(/^@font-face\\s*/);\n    if (!m) {\n      return;\n    }\n    if (!open()) {\n      return error(`@font-face missing '{'`);\n    }\n    let decls = comments();\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) {\n      return error(`@font-face missing '}'`);\n    }\n    return pos({\n      type: \"font-face\",\n      declarations: decls\n    });\n  }\n  const atimport = _compileAtrule(\"import\");\n  const atcharset = _compileAtrule(\"charset\");\n  const atnamespace = _compileAtrule(\"namespace\");\n  function _compileAtrule(name) {\n    const re = new RegExp(\n      \"^@\" + name + \"\\\\s*((?:\" + [\n        /[^\\\\]\"(?:\\\\\"|[^\"])*\"/.source,\n        // consume any quoted parts (checking that the double quote isn't itself escaped)\n        /[^\\\\]'(?:\\\\'|[^'])*'/.source,\n        // same but for single quotes\n        \"[^;]\"\n      ].join(\"|\") + \")+);\"\n    );\n    return () => {\n      const pos = position();\n      const m = match(re);\n      if (!m) {\n        return;\n      }\n      const ret = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n  function atrule() {\n    if (css[0] !== \"@\") {\n      return;\n    }\n    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface();\n  }\n  function rule() {\n    const pos = position();\n    const sel = selector();\n    if (!sel) {\n      return error(\"selector missing\");\n    }\n    comments();\n    return pos({\n      type: \"rule\",\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n  return addParent(stylesheet());\n}\nfunction trim(str) {\n  return str ? str.replace(/^\\s+|\\s+$/g, \"\") : \"\";\n}\nfunction addParent(obj, parent) {\n  const isNode = obj && typeof obj.type === \"string\";\n  const childParent = isNode ? obj : parent;\n  for (const k of Object.keys(obj)) {\n    const value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach((v2) => {\n        addParent(v2, childParent);\n      });\n    } else if (value && typeof value === \"object\") {\n      addParent(value, childParent);\n    }\n  }\n  if (isNode) {\n    Object.defineProperty(obj, \"parent\", {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n  return obj;\n}\nconst tagMap = {\n  script: \"noscript\",\n  // camel case svg element tag names\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nfunction getTagName(n2) {\n  let tagName = tagMap[n2.tagName] ? tagMap[n2.tagName] : n2.tagName;\n  if (tagName === \"link\" && n2.attributes._cssText) {\n    tagName = \"style\";\n  }\n  return tagName;\n}\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, \"g\");\nfunction addHoverClass(cssText, cache) {\n  const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\n  if (cachedStyle) return cachedStyle;\n  if (cssText.length >= 1e6) {\n    return cssText;\n  }\n  const ast = parse(cssText, {\n    silent: true\n  });\n  if (!ast.stylesheet) {\n    return cssText;\n  }\n  const selectors = [];\n  ast.stylesheet.rules.forEach((rule) => {\n    if (\"selectors\" in rule) {\n      (rule.selectors || []).forEach((selector) => {\n        if (HOVER_SELECTOR.test(selector)) {\n          selectors.push(selector);\n        }\n      });\n    }\n  });\n  if (selectors.length === 0) {\n    return cssText;\n  }\n  const selectorMatcher = new RegExp(\n    selectors.filter((selector, index) => selectors.indexOf(selector) === index).sort((a2, b) => b.length - a2.length).map((selector) => {\n      return escapeRegExp(selector);\n    }).join(\"|\"),\n    \"g\"\n  );\n  const result = cssText.replace(selectorMatcher, (selector) => {\n    const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, \"$1.\\\\:hover\");\n    return `${selector}, ${newSelector}`;\n  });\n  cache?.stylesWithHoverClass.set(cssText, result);\n  return result;\n}\nfunction createCache() {\n  const stylesWithHoverClass = /* @__PURE__ */ new Map();\n  return {\n    stylesWithHoverClass\n  };\n}\nfunction buildNode(n2, options) {\n  const { doc, hackCss, cache } = options;\n  switch (n2.type) {\n    case NodeType$2.Document:\n      return doc.implementation.createDocument(null, \"\", null);\n    case NodeType$2.DocumentType:\n      return doc.implementation.createDocumentType(\n        n2.name || \"html\",\n        n2.publicId,\n        n2.systemId\n      );\n    case NodeType$2.Element: {\n      const tagName = getTagName(n2);\n      let node;\n      if (n2.isSVG) {\n        node = doc.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n      } else {\n        if (\n          // If the tag name is a custom element name\n          n2.isCustom && // If the browser supports custom elements\n          doc.defaultView?.customElements && // If the custom element hasn't been defined yet\n          !doc.defaultView.customElements.get(n2.tagName)\n        )\n          doc.defaultView.customElements.define(\n            n2.tagName,\n            class extends doc.defaultView.HTMLElement {\n            }\n          );\n        node = doc.createElement(tagName);\n      }\n      const specialAttributes = {};\n      for (const name in n2.attributes) {\n        if (!Object.prototype.hasOwnProperty.call(n2.attributes, name)) {\n          continue;\n        }\n        let value = n2.attributes[name];\n        if (tagName === \"option\" && name === \"selected\" && value === false) {\n          continue;\n        }\n        if (value === null) {\n          continue;\n        }\n        if (value === true) value = \"\";\n        if (name.startsWith(\"rr_\")) {\n          specialAttributes[name] = value;\n          continue;\n        }\n        const isTextarea = tagName === \"textarea\" && name === \"value\";\n        const isRemoteOrDynamicCss = tagName === \"style\" && name === \"_cssText\";\n        if (isRemoteOrDynamicCss && hackCss && typeof value === \"string\") {\n          value = addHoverClass(value, cache);\n        }\n        if ((isTextarea || isRemoteOrDynamicCss) && typeof value === \"string\") {\n          const child = doc.createTextNode(value);\n          for (const c2 of Array.from(node.childNodes)) {\n            if (c2.nodeType === node.TEXT_NODE) {\n              node.removeChild(c2);\n            }\n          }\n          node.appendChild(child);\n          continue;\n        }\n        try {\n          if (n2.isSVG && name === \"xlink:href\") {\n            node.setAttributeNS(\n              \"http://www.w3.org/1999/xlink\",\n              name,\n              value.toString()\n            );\n          } else if (name === \"onload\" || name === \"onclick\" || name.substring(0, 7) === \"onmouse\") {\n            node.setAttribute(\"_\" + name, value.toString());\n          } else if (tagName === \"meta\" && n2.attributes[\"http-equiv\"] === \"Content-Security-Policy\" && name === \"content\") {\n            node.setAttribute(\"csp-content\", value.toString());\n            continue;\n          } else if (tagName === \"link\" && (n2.attributes.rel === \"preload\" || n2.attributes.rel === \"modulepreload\")) {\n          } else if (tagName === \"link\" && n2.attributes.rel === \"prefetch\" && typeof n2.attributes.href === \"string\" && extractFileExtension(n2.attributes.href) === \"js\") {\n          } else if (tagName === \"img\" && n2.attributes.srcset && n2.attributes.rr_dataURL) {\n            node.setAttribute(\n              \"rrweb-original-srcset\",\n              n2.attributes.srcset\n            );\n          } else {\n            node.setAttribute(name, value.toString());\n          }\n        } catch (error) {\n        }\n      }\n      for (const name in specialAttributes) {\n        const value = specialAttributes[name];\n        if (tagName === \"canvas\" && name === \"rr_dataURL\") {\n          const image = doc.createElement(\"img\");\n          image.onload = () => {\n            const ctx = node.getContext(\"2d\");\n            if (ctx) {\n              ctx.drawImage(image, 0, 0, image.width, image.height);\n            }\n          };\n          image.src = value.toString();\n          if (node.RRNodeType)\n            node.rr_dataURL = value.toString();\n        } else if (tagName === \"img\" && name === \"rr_dataURL\") {\n          const image = node;\n          if (!image.currentSrc.startsWith(\"data:\")) {\n            image.setAttribute(\n              \"rrweb-original-src\",\n              n2.attributes.src\n            );\n            image.src = value.toString();\n          }\n        }\n        if (name === \"rr_width\") {\n          node.style.setProperty(\"width\", value.toString());\n        } else if (name === \"rr_height\") {\n          node.style.setProperty(\"height\", value.toString());\n        } else if (name === \"rr_mediaCurrentTime\" && typeof value === \"number\") {\n          node.currentTime = value;\n        } else if (name === \"rr_mediaState\") {\n          switch (value) {\n            case \"played\":\n              node.play().catch((e2) => console.warn(\"media playback error\", e2));\n              break;\n            case \"paused\":\n              node.pause();\n              break;\n          }\n        }\n      }\n      if (n2.isShadowHost) {\n        if (!node.shadowRoot) {\n          node.attachShadow({ mode: \"open\" });\n        } else {\n          while (node.shadowRoot.firstChild) {\n            node.shadowRoot.removeChild(node.shadowRoot.firstChild);\n          }\n        }\n      }\n      return node;\n    }\n    case NodeType$2.Text:\n      return doc.createTextNode(\n        n2.isStyle && hackCss ? addHoverClass(n2.textContent, cache) : n2.textContent\n      );\n    case NodeType$2.CDATA:\n      if (!(doc instanceof XMLDocument)) {\n        return null;\n      }\n      return doc.createCDATASection(n2.textContent);\n    case NodeType$2.Comment:\n      return doc.createComment(n2.textContent);\n    default:\n      return null;\n  }\n}\nfunction buildNodeWithSN(n2, options) {\n  const {\n    doc,\n    mirror: mirror2,\n    skipChild = false,\n    hackCss = true,\n    afterAppend,\n    cache\n  } = options;\n  if (mirror2.has(n2.id)) {\n    const nodeInMirror = mirror2.getNode(n2.id);\n    const meta = mirror2.getMeta(nodeInMirror);\n    if (isNodeMetaEqual(meta, n2)) return mirror2.getNode(n2.id);\n  }\n  let node = buildNode(n2, { doc, hackCss, cache });\n  if (!node) {\n    return null;\n  }\n  if (n2.rootId && mirror2.getNode(n2.rootId) !== doc) {\n    mirror2.replace(n2.rootId, doc);\n  }\n  if (n2.type === NodeType$2.Document) {\n    doc.close();\n    doc.open();\n    if (n2.compatMode === \"BackCompat\" && n2.childNodes && n2.childNodes[0].type !== NodeType$2.DocumentType) {\n      if (n2.childNodes[0].type === NodeType$2.Element && \"xmlns\" in n2.childNodes[0].attributes && n2.childNodes[0].attributes.xmlns === \"http://www.w3.org/1999/xhtml\") {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">'\n        );\n      } else {\n        doc.write(\n          '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">'\n        );\n      }\n    }\n    node = doc;\n  }\n  mirror2.add(node, n2);\n  if ((n2.type === NodeType$2.Document || n2.type === NodeType$2.Element) && !skipChild) {\n    for (const childN of n2.childNodes) {\n      const childNode = buildNodeWithSN(childN, {\n        doc,\n        mirror: mirror2,\n        skipChild: false,\n        hackCss,\n        afterAppend,\n        cache\n      });\n      if (!childNode) {\n        console.warn(\"Failed to rebuild\", childN);\n        continue;\n      }\n      if (childN.isShadow && isElement(node) && node.shadowRoot) {\n        node.shadowRoot.appendChild(childNode);\n      } else if (n2.type === NodeType$2.Document && childN.type == NodeType$2.Element) {\n        const htmlElement = childNode;\n        let body = null;\n        htmlElement.childNodes.forEach((child) => {\n          if (child.nodeName === \"BODY\") body = child;\n        });\n        if (body) {\n          htmlElement.removeChild(body);\n          node.appendChild(childNode);\n          htmlElement.appendChild(body);\n        } else {\n          node.appendChild(childNode);\n        }\n      } else {\n        node.appendChild(childNode);\n      }\n      if (afterAppend) {\n        afterAppend(childNode, childN.id);\n      }\n    }\n  }\n  return node;\n}\nfunction visit(mirror2, onVisit) {\n  function walk(node) {\n    onVisit(node);\n  }\n  for (const id of mirror2.getIds()) {\n    if (mirror2.has(id)) {\n      walk(mirror2.getNode(id));\n    }\n  }\n}\nfunction handleScroll(node, mirror2) {\n  const n2 = mirror2.getMeta(node);\n  if (n2?.type !== NodeType$2.Element) {\n    return;\n  }\n  const el = node;\n  for (const name in n2.attributes) {\n    if (!(Object.prototype.hasOwnProperty.call(n2.attributes, name) && name.startsWith(\"rr_\"))) {\n      continue;\n    }\n    const value = n2.attributes[name];\n    if (name === \"rr_scrollLeft\") {\n      el.scrollLeft = value;\n    }\n    if (name === \"rr_scrollTop\") {\n      el.scrollTop = value;\n    }\n  }\n}\nfunction rebuild(n2, options) {\n  const {\n    doc,\n    onVisit,\n    hackCss = true,\n    afterAppend,\n    cache,\n    mirror: mirror2 = new Mirror()\n  } = options;\n  const node = buildNodeWithSN(n2, {\n    doc,\n    mirror: mirror2,\n    skipChild: false,\n    hackCss,\n    afterAppend,\n    cache\n  });\n  visit(mirror2, (visitedNode) => {\n    if (onVisit) {\n      onVisit(visitedNode);\n    }\n    handleScroll(visitedNode, mirror2);\n  });\n  return node;\n}\nfunction on(type, fn, target = document) {\n  const options = { capture: true, passive: true };\n  target.addEventListener(type, fn, options);\n  return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = \"Please stop import mirror directly. Instead of that,\\r\\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\\r\\nor you can use record.mirror to access the mirror instance during recording.\";\nlet _mirror = {\n  map: {},\n  getId() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return -1;\n  },\n  getNode() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return null;\n  },\n  removeNodeFromMap() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  },\n  has() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return false;\n  },\n  reset() {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  }\n};\nif (typeof window !== \"undefined\" && window.Proxy && window.Reflect) {\n  _mirror = new Proxy(_mirror, {\n    get(target, prop, receiver) {\n      if (prop === \"map\") {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\nfunction throttle(func, wait, options = {}) {\n  let timeout = null;\n  let previous = 0;\n  return function(...args) {\n    const now = Date.now();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    const context = this;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout$1(() => {\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        func.apply(context, args);\n      }, remaining);\n    }\n  };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n  const original = win.Object.getOwnPropertyDescriptor(target, key);\n  win.Object.defineProperty(\n    target,\n    key,\n    isRevoked ? d : {\n      set(value) {\n        setTimeout$1(() => {\n          d.set.call(this, value);\n        }, 0);\n        if (original && original.set) {\n          original.set.call(this, value);\n        }\n      }\n    }\n  );\n  return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n  try {\n    if (!(name in source)) {\n      return () => {\n      };\n    }\n    const original = source[name];\n    const wrapped = replacement(original);\n    if (typeof wrapped === \"function\") {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __rrweb_original__: {\n          enumerable: false,\n          value: original\n        }\n      });\n    }\n    source[name] = wrapped;\n    return () => {\n      source[name] = original;\n    };\n  } catch {\n    return () => {\n    };\n  }\n}\nlet nowTimestamp = Date.now;\nif (!/* @__PURE__ */ /[1-9][0-9]{12}/.test(Date.now().toString())) {\n  nowTimestamp = () => (/* @__PURE__ */ new Date()).getTime();\n}\nfunction getWindowScroll(win) {\n  const doc = win.document;\n  return {\n    left: doc.scrollingElement ? doc.scrollingElement.scrollLeft : win.pageXOffset !== void 0 ? win.pageXOffset : doc?.documentElement.scrollLeft || doc?.body?.parentElement?.scrollLeft || doc?.body?.scrollLeft || 0,\n    top: doc.scrollingElement ? doc.scrollingElement.scrollTop : win.pageYOffset !== void 0 ? win.pageYOffset : doc?.documentElement.scrollTop || doc?.body?.parentElement?.scrollTop || doc?.body?.scrollTop || 0\n  };\n}\nfunction getWindowHeight() {\n  return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight;\n}\nfunction getWindowWidth() {\n  return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth;\n}\nfunction closestElementOfNode(node) {\n  if (!node) {\n    return null;\n  }\n  try {\n    const el = node.nodeType === node.ELEMENT_NODE ? node : node.parentElement;\n    return el;\n  } catch (error) {\n    return null;\n  }\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n  if (!node) {\n    return false;\n  }\n  const el = closestElementOfNode(node);\n  if (!el) {\n    return false;\n  }\n  const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n  if (!checkAncestors) {\n    const isUnblocked = unblockSelector && el.matches(unblockSelector);\n    return blockedPredicate(el) && !isUnblocked;\n  }\n  const blockDistance = distanceToMatch(el, blockedPredicate);\n  let unblockDistance = -1;\n  if (blockDistance < 0) {\n    return false;\n  }\n  if (unblockSelector) {\n    unblockDistance = distanceToMatch(\n      el,\n      createMatchPredicate(null, unblockSelector)\n    );\n  }\n  if (blockDistance > -1 && unblockDistance < 0) {\n    return true;\n  }\n  return blockDistance < unblockDistance;\n}\nfunction isSerialized(n2, mirror2) {\n  return mirror2.getId(n2) !== -1;\n}\nfunction isIgnored(n2, mirror2) {\n  return mirror2.getId(n2) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror2) {\n  if (isShadowRoot(target)) {\n    return false;\n  }\n  const id = mirror2.getId(target);\n  if (!mirror2.has(id)) {\n    return true;\n  }\n  if (target.parentNode && target.parentNode.nodeType === target.DOCUMENT_NODE) {\n    return false;\n  }\n  if (!target.parentNode) {\n    return true;\n  }\n  return isAncestorRemoved(target.parentNode, mirror2);\n}\nfunction legacy_isTouchEvent(event) {\n  return Boolean(event.changedTouches);\n}\nfunction polyfill$1(win = window) {\n  if (\"NodeList\" in win && !win.NodeList.prototype.forEach) {\n    win.NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (\"DOMTokenList\" in win && !win.DOMTokenList.prototype.forEach) {\n    win.DOMTokenList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (!Node.prototype.contains) {\n    Node.prototype.contains = (...args) => {\n      let node = args[0];\n      if (!(0 in args)) {\n        throw new TypeError(\"1 argument is required\");\n      }\n      do {\n        if (this === node) {\n          return true;\n        }\n      } while (node = node && node.parentNode);\n      return false;\n    };\n  }\n}\nfunction queueToResolveTrees(queue) {\n  const queueNodeMap = {};\n  const putIntoMap = (m, parent) => {\n    const nodeInTree = {\n      value: m,\n      parent,\n      children: []\n    };\n    queueNodeMap[m.node.id] = nodeInTree;\n    return nodeInTree;\n  };\n  const queueNodeTrees = [];\n  for (const mutation of queue) {\n    const { nextId, parentId } = mutation;\n    if (nextId && nextId in queueNodeMap) {\n      const nextInTree = queueNodeMap[nextId];\n      if (nextInTree.parent) {\n        const idx = nextInTree.parent.children.indexOf(nextInTree);\n        nextInTree.parent.children.splice(\n          idx,\n          0,\n          putIntoMap(mutation, nextInTree.parent)\n        );\n      } else {\n        const idx = queueNodeTrees.indexOf(nextInTree);\n        queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\n      }\n      continue;\n    }\n    if (parentId in queueNodeMap) {\n      const parentInTree = queueNodeMap[parentId];\n      parentInTree.children.push(putIntoMap(mutation, parentInTree));\n      continue;\n    }\n    queueNodeTrees.push(putIntoMap(mutation, null));\n  }\n  return queueNodeTrees;\n}\nfunction iterateResolveTree(tree, cb) {\n  cb(tree.value);\n  for (let i2 = tree.children.length - 1; i2 >= 0; i2--) {\n    iterateResolveTree(tree.children[i2], cb);\n  }\n}\nfunction isSerializedIframe(n2, mirror2) {\n  return Boolean(n2.nodeName === \"IFRAME\" && mirror2.getMeta(n2));\n}\nfunction isSerializedStylesheet(n2, mirror2) {\n  return Boolean(\n    n2.nodeName === \"LINK\" && n2.nodeType === n2.ELEMENT_NODE && n2.getAttribute && n2.getAttribute(\"rel\") === \"stylesheet\" && mirror2.getMeta(n2)\n  );\n}\nfunction getBaseDimension(node, rootIframe) {\n  const frameElement = node.ownerDocument?.defaultView?.frameElement;\n  if (!frameElement || frameElement === rootIframe) {\n    return {\n      x: 0,\n      y: 0,\n      relativeScale: 1,\n      absoluteScale: 1\n    };\n  }\n  const frameDimension = frameElement.getBoundingClientRect();\n  const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\n  const relativeScale = frameDimension.height / frameElement.clientHeight;\n  return {\n    x: frameDimension.x * frameBaseDimension.relativeScale + frameBaseDimension.x,\n    y: frameDimension.y * frameBaseDimension.relativeScale + frameBaseDimension.y,\n    relativeScale,\n    absoluteScale: frameBaseDimension.absoluteScale * relativeScale\n  };\n}\nfunction hasShadowRoot(n2) {\n  return Boolean(n2?.shadowRoot);\n}\nfunction getNestedRule(rules2, position) {\n  const rule = rules2[position[0]];\n  if (position.length === 1) {\n    return rule;\n  } else {\n    return getNestedRule(\n      rule.cssRules[position[1]].cssRules,\n      position.slice(2)\n    );\n  }\n}\nfunction getPositionsAndIndex(nestedIndex) {\n  const positions = [...nestedIndex];\n  const index = positions.pop();\n  return { positions, index };\n}\nfunction uniqueTextMutations(mutations) {\n  const idSet = /* @__PURE__ */ new Set();\n  const uniqueMutations = [];\n  for (let i2 = mutations.length; i2--; ) {\n    const mutation = mutations[i2];\n    if (!idSet.has(mutation.id)) {\n      uniqueMutations.push(mutation);\n      idSet.add(mutation.id);\n    }\n  }\n  return uniqueMutations;\n}\nclass StyleSheetMirror {\n  constructor() {\n    this.id = 1;\n    this.styleIDMap = /* @__PURE__ */ new WeakMap();\n    this.idStyleMap = /* @__PURE__ */ new Map();\n  }\n  getId(stylesheet) {\n    return this.styleIDMap.get(stylesheet) ?? -1;\n  }\n  has(stylesheet) {\n    return this.styleIDMap.has(stylesheet);\n  }\n  /**\n   * @returns If the stylesheet is in the mirror, returns the id of the stylesheet. If not, return the new assigned id.\n   */\n  add(stylesheet, id) {\n    if (this.has(stylesheet)) return this.getId(stylesheet);\n    let newId;\n    if (id === void 0) {\n      newId = this.id++;\n    } else newId = id;\n    this.styleIDMap.set(stylesheet, newId);\n    this.idStyleMap.set(newId, stylesheet);\n    return newId;\n  }\n  getStyle(id) {\n    return this.idStyleMap.get(id) || null;\n  }\n  reset() {\n    this.styleIDMap = /* @__PURE__ */ new WeakMap();\n    this.idStyleMap = /* @__PURE__ */ new Map();\n    this.id = 1;\n  }\n  generateId() {\n    return this.id++;\n  }\n}\nfunction getShadowHost(n2) {\n  let shadowHost = null;\n  if (n2.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE && n2.getRootNode().host)\n    shadowHost = n2.getRootNode().host;\n  return shadowHost;\n}\nfunction getRootShadowHost(n2) {\n  let rootShadowHost = n2;\n  let shadowHost;\n  while (shadowHost = getShadowHost(rootShadowHost))\n    rootShadowHost = shadowHost;\n  return rootShadowHost;\n}\nfunction shadowHostInDom(n2) {\n  const doc = n2.ownerDocument;\n  if (!doc) return false;\n  const shadowHost = getRootShadowHost(n2);\n  return doc.contains(shadowHost);\n}\nfunction inDom(n2) {\n  const doc = n2.ownerDocument;\n  if (!doc) return false;\n  return doc.contains(n2) || shadowHostInDom(n2);\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n  const document2 = window.document;\n  let impl = window[name];\n  if (document2 && typeof document2.createElement === \"function\") {\n    try {\n      const sandbox = document2.createElement(\"iframe\");\n      sandbox.hidden = true;\n      document2.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = // eslint-disable-next-line @typescript-eslint/unbound-method\n        contentWindow[name];\n      }\n      document2.head.removeChild(sandbox);\n    } catch (e2) {\n    }\n  }\n  return cachedImplementations[name] = impl.bind(\n    window\n  );\n}\nfunction onRequestAnimationFrame(...rest) {\n  return getImplementation(\"requestAnimationFrame\")(...rest);\n}\nfunction setTimeout$1(...rest) {\n  return getImplementation(\"setTimeout\")(...rest);\n}\nfunction clearTimeout(...rest) {\n  return getImplementation(\"clearTimeout\")(...rest);\n}\nconst utils = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  StyleSheetMirror,\n  get _mirror() {\n    return _mirror;\n  },\n  clearTimeout,\n  closestElementOfNode,\n  getBaseDimension,\n  getNestedRule,\n  getPositionsAndIndex,\n  getRootShadowHost,\n  getShadowHost,\n  getWindowHeight,\n  getWindowScroll,\n  getWindowWidth,\n  hasShadowRoot,\n  hookSetter,\n  inDom,\n  isAncestorRemoved,\n  isBlocked,\n  isIgnored,\n  isSerialized,\n  isSerializedIframe,\n  isSerializedStylesheet,\n  iterateResolveTree,\n  legacy_isTouchEvent,\n  get nowTimestamp() {\n    return nowTimestamp;\n  },\n  on,\n  onRequestAnimationFrame,\n  patch,\n  polyfill: polyfill$1,\n  queueToResolveTrees,\n  setTimeout: setTimeout$1,\n  shadowHostInDom,\n  throttle,\n  uniqueTextMutations\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar MediaInteractions = /* @__PURE__ */ ((MediaInteractions2) => {\n  MediaInteractions2[MediaInteractions2[\"Play\"] = 0] = \"Play\";\n  MediaInteractions2[MediaInteractions2[\"Pause\"] = 1] = \"Pause\";\n  MediaInteractions2[MediaInteractions2[\"Seeked\"] = 2] = \"Seeked\";\n  MediaInteractions2[MediaInteractions2[\"VolumeChange\"] = 3] = \"VolumeChange\";\n  MediaInteractions2[MediaInteractions2[\"RateChange\"] = 4] = \"RateChange\";\n  return MediaInteractions2;\n})(MediaInteractions || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar __defProp2 = Object.defineProperty;\nvar __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField2 = (obj, key, value) => __defNormalProp2(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar NodeType$1 = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType$1 || {});\nlet Mirror$1 = class Mirror2 {\n  constructor() {\n    __publicField2(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField2(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n2) {\n    if (!n2) return -1;\n    const id = this.getMeta(n2)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n2) {\n    return this.nodeMetaMap.get(n2) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n2) {\n    const id = this.getId(n2);\n    this.idNodeMap.delete(id);\n    if (n2.childNodes) {\n      n2.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n2, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n2);\n    this.nodeMetaMap.set(n2, meta);\n  }\n  replace(id, n2) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n2, meta);\n    }\n    this.idNodeMap.set(id, n2);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nfunction createMirror$1() {\n  return new Mirror$1();\n}\nfunction parseCSSText(cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/;\n  const comment = /\\/\\*.*?\\*\\//g;\n  cssText.replace(comment, \"\").split(listDelimiter).forEach(function(item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[camelize(tmp[0].trim())] = tmp[1].trim());\n    }\n  });\n  return res;\n}\nfunction toCSSText(style) {\n  const properties = [];\n  for (const name in style) {\n    const value = style[name];\n    if (typeof value !== \"string\") continue;\n    const normalizedName = hyphenate(name);\n    properties.push(`${normalizedName}: ${value};`);\n  }\n  return properties.join(\" \");\n}\nconst camelizeRE = /-([a-z])/g;\nconst CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nconst camelize = (str) => {\n  if (CUSTOM_PROPERTY_REGEX.test(str)) return str;\n  return str.replace(camelizeRE, (_, c2) => c2 ? c2.toUpperCase() : \"\");\n};\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = (str) => {\n  return str.replace(hyphenateRE, \"-$1\").toLowerCase();\n};\nclass BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n  constructor(..._args) {\n    __publicField(this, \"parentElement\", null);\n    __publicField(this, \"parentNode\", null);\n    __publicField(this, \"ownerDocument\");\n    __publicField(this, \"firstChild\", null);\n    __publicField(this, \"lastChild\", null);\n    __publicField(this, \"previousSibling\", null);\n    __publicField(this, \"nextSibling\", null);\n    __publicField(this, \"ELEMENT_NODE\", 1);\n    __publicField(this, \"TEXT_NODE\", 3);\n    __publicField(this, \"nodeType\");\n    __publicField(this, \"nodeName\");\n    __publicField(this, \"RRNodeType\");\n  }\n  get childNodes() {\n    const childNodes = [];\n    let childIterator = this.firstChild;\n    while (childIterator) {\n      childNodes.push(childIterator);\n      childIterator = childIterator.nextSibling;\n    }\n    return childNodes;\n  }\n  contains(node) {\n    if (!(node instanceof BaseRRNode)) return false;\n    else if (node.ownerDocument !== this.ownerDocument) return false;\n    else if (node === this) return true;\n    while (node.parentNode) {\n      if (node.parentNode === this) return true;\n      node = node.parentNode;\n    }\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  appendChild(_newChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  insertBefore(_newChild, _refChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeChild(_node) {\n    throw new Error(\n      `RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  toString() {\n    return \"RRNode\";\n  }\n}\nclass BaseRRDocument extends BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(...args) {\n    super(args);\n    __publicField(this, \"nodeType\", 9);\n    __publicField(this, \"nodeName\", \"#document\");\n    __publicField(this, \"compatMode\", \"CSS1Compat\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Document);\n    __publicField(this, \"textContent\", null);\n    this.ownerDocument = this;\n  }\n  get documentElement() {\n    return this.childNodes.find(\n      (node) => node.RRNodeType === NodeType$1.Element && node.tagName === \"HTML\"\n    ) || null;\n  }\n  get body() {\n    return this.documentElement?.childNodes.find(\n      (node) => node.RRNodeType === NodeType$1.Element && node.tagName === \"BODY\"\n    ) || null;\n  }\n  get head() {\n    return this.documentElement?.childNodes.find(\n      (node) => node.RRNodeType === NodeType$1.Element && node.tagName === \"HEAD\"\n    ) || null;\n  }\n  get implementation() {\n    return this;\n  }\n  get firstElementChild() {\n    return this.documentElement;\n  }\n  appendChild(newChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s2) => s2.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = appendChild(this, newChild);\n    child.parentElement = null;\n    return child;\n  }\n  insertBefore(newChild, refChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s2) => s2.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = insertBefore(this, newChild, refChild);\n    child.parentElement = null;\n    return child;\n  }\n  removeChild(node) {\n    return removeChild(this, node);\n  }\n  open() {\n    this.firstChild = null;\n    this.lastChild = null;\n  }\n  close() {\n  }\n  /**\n   * Adhoc implementation for setting xhtml namespace in rebuilt.ts (rrweb-snapshot).\n   * There are two lines used this function:\n   * 1. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\"\\>')\n   * 2. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\"\\>')\n   */\n  write(content) {\n    let publicId;\n    if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD XHTML 1.0 Transitional//EN\";\n    else if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD HTML 4.0 Transitional//EN\";\n    if (publicId) {\n      const doctype = this.createDocumentType(\"html\", publicId, \"\");\n      this.open();\n      this.appendChild(doctype);\n    }\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new BaseRRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const doctype = new BaseRRDocumentType(qualifiedName, publicId, systemId);\n    doctype.ownerDocument = this;\n    return doctype;\n  }\n  createElement(tagName) {\n    const element = new BaseRRElement(tagName);\n    element.ownerDocument = this;\n    return element;\n  }\n  createElementNS(_namespaceURI, qualifiedName) {\n    return this.createElement(qualifiedName);\n  }\n  createTextNode(data) {\n    const text = new BaseRRText(data);\n    text.ownerDocument = this;\n    return text;\n  }\n  createComment(data) {\n    const comment = new BaseRRComment(data);\n    comment.ownerDocument = this;\n    return comment;\n  }\n  createCDATASection(data) {\n    const CDATASection = new BaseRRCDATASection(data);\n    CDATASection.ownerDocument = this;\n    return CDATASection;\n  }\n  toString() {\n    return \"RRDocument\";\n  }\n}\nclass BaseRRDocumentType extends BaseRRNode {\n  constructor(qualifiedName, publicId, systemId) {\n    super();\n    __publicField(this, \"nodeType\", 10);\n    __publicField(this, \"RRNodeType\", NodeType$1.DocumentType);\n    __publicField(this, \"name\");\n    __publicField(this, \"publicId\");\n    __publicField(this, \"systemId\");\n    __publicField(this, \"textContent\", null);\n    this.name = qualifiedName;\n    this.publicId = publicId;\n    this.systemId = systemId;\n    this.nodeName = qualifiedName;\n  }\n  toString() {\n    return \"RRDocumentType\";\n  }\n}\nclass BaseRRElement extends BaseRRNode {\n  constructor(tagName) {\n    super();\n    __publicField(this, \"nodeType\", 1);\n    __publicField(this, \"RRNodeType\", NodeType$1.Element);\n    __publicField(this, \"tagName\");\n    __publicField(this, \"attributes\", {});\n    __publicField(this, \"shadowRoot\", null);\n    __publicField(this, \"scrollLeft\");\n    __publicField(this, \"scrollTop\");\n    this.tagName = tagName.toUpperCase();\n    this.nodeName = tagName.toUpperCase();\n  }\n  get textContent() {\n    let result = \"\";\n    this.childNodes.forEach((node) => result += node.textContent);\n    return result;\n  }\n  set textContent(textContent) {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.appendChild(this.ownerDocument.createTextNode(textContent));\n  }\n  get classList() {\n    return new ClassList(\n      this.attributes.class,\n      (newClassName) => {\n        this.attributes.class = newClassName;\n      }\n    );\n  }\n  get id() {\n    return this.attributes.id || \"\";\n  }\n  get className() {\n    return this.attributes.class || \"\";\n  }\n  get style() {\n    const style = this.attributes.style ? parseCSSText(this.attributes.style) : {};\n    const hyphenateRE2 = /\\B([A-Z])/g;\n    style.setProperty = (name, value, priority) => {\n      if (hyphenateRE2.test(name)) return;\n      const normalizedName = camelize(name);\n      if (!value) delete style[normalizedName];\n      else style[normalizedName] = value;\n      if (priority === \"important\") style[normalizedName] += \" !important\";\n      this.attributes.style = toCSSText(style);\n    };\n    style.removeProperty = (name) => {\n      if (hyphenateRE2.test(name)) return \"\";\n      const normalizedName = camelize(name);\n      const value = style[normalizedName] || \"\";\n      delete style[normalizedName];\n      this.attributes.style = toCSSText(style);\n      return value;\n    };\n    return style;\n  }\n  getAttribute(name) {\n    return this.attributes[name] || null;\n  }\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n  }\n  setAttributeNS(_namespace, qualifiedName, value) {\n    this.setAttribute(qualifiedName, value);\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n  }\n  appendChild(newChild) {\n    return appendChild(this, newChild);\n  }\n  insertBefore(newChild, refChild) {\n    return insertBefore(this, newChild, refChild);\n  }\n  removeChild(node) {\n    return removeChild(this, node);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    const shadowRoot = this.ownerDocument.createElement(\"SHADOWROOT\");\n    this.shadowRoot = shadowRoot;\n    return shadowRoot;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dispatchEvent(_event) {\n    return true;\n  }\n  toString() {\n    let attributeString = \"\";\n    for (const attribute in this.attributes) {\n      attributeString += `${attribute}=\"${this.attributes[attribute]}\" `;\n    }\n    return `${this.tagName} ${attributeString}`;\n  }\n}\nclass BaseRRMediaElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"currentTime\");\n    __publicField(this, \"volume\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"muted\");\n    __publicField(this, \"playbackRate\");\n    __publicField(this, \"loop\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    throw new Error(\n      `RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow`\n    );\n  }\n  play() {\n    this.paused = false;\n  }\n  pause() {\n    this.paused = true;\n  }\n}\nclass BaseRRText extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 3);\n    __publicField(this, \"nodeName\", \"#text\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Text);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRText text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRComment extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 8);\n    __publicField(this, \"nodeName\", \"#comment\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Comment);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRComment text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRCDATASection extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeName\", \"#cdata-section\");\n    __publicField(this, \"nodeType\", 4);\n    __publicField(this, \"RRNodeType\", NodeType$1.CDATA);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRCDATASection data=${JSON.stringify(this.data)}`;\n  }\n}\nclass ClassList {\n  constructor(classText, onChange) {\n    __publicField(this, \"onChange\");\n    __publicField(this, \"classes\", []);\n    __publicField(this, \"add\", (...classNames) => {\n      for (const item of classNames) {\n        const className = String(item);\n        if (this.classes.indexOf(className) >= 0) continue;\n        this.classes.push(className);\n      }\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    __publicField(this, \"remove\", (...classNames) => {\n      this.classes = this.classes.filter(\n        (item) => classNames.indexOf(item) === -1\n      );\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    if (classText) {\n      const classes = classText.trim().split(/\\s+/);\n      this.classes.push(...classes);\n    }\n    this.onChange = onChange;\n  }\n}\nfunction appendChild(parent, newChild) {\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  if (parent.lastChild) {\n    parent.lastChild.nextSibling = newChild;\n    newChild.previousSibling = parent.lastChild;\n  } else {\n    parent.firstChild = newChild;\n    newChild.previousSibling = null;\n  }\n  parent.lastChild = newChild;\n  newChild.nextSibling = null;\n  newChild.parentNode = parent;\n  newChild.parentElement = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction insertBefore(parent, newChild, refChild) {\n  if (!refChild) return appendChild(parent, newChild);\n  if (refChild.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.\"\n    );\n  if (newChild === refChild) return newChild;\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  newChild.previousSibling = refChild.previousSibling;\n  refChild.previousSibling = newChild;\n  newChild.nextSibling = refChild;\n  if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;\n  else parent.firstChild = newChild;\n  newChild.parentElement = parent;\n  newChild.parentNode = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction removeChild(parent, child) {\n  if (child.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'removeChild' on 'RRNode': The RRNode to be removed is not a child of this RRNode.\"\n    );\n  if (child.previousSibling)\n    child.previousSibling.nextSibling = child.nextSibling;\n  else parent.firstChild = child.nextSibling;\n  if (child.nextSibling)\n    child.nextSibling.previousSibling = child.previousSibling;\n  else parent.lastChild = child.previousSibling;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  child.parentElement = null;\n  child.parentNode = null;\n  return child;\n}\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"PLACEHOLDER\"] = 0] = \"PLACEHOLDER\";\n  NodeType2[NodeType2[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n  NodeType2[NodeType2[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n  NodeType2[NodeType2[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n  NodeType2[NodeType2[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n  NodeType2[NodeType2[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\n  NodeType2[NodeType2[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\n  NodeType2[NodeType2[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n  NodeType2[NodeType2[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n  return NodeType2;\n})(NodeType || {});\nfunction getIFrameContentDocument(iframe) {\n  try {\n    return iframe.contentDocument;\n  } catch (e2) {\n  }\n}\nfunction getIFrameContentWindow(iframe) {\n  try {\n    return iframe.contentWindow;\n  } catch (e2) {\n  }\n}\nconst NAMESPACES = {\n  svg: \"http://www.w3.org/2000/svg\",\n  \"xlink:href\": \"http://www.w3.org/1999/xlink\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\nconst SVGTagMap = {\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nlet createdNodeSet = null;\nfunction diff(oldTree, newTree, replayer, rrnodeMirror = newTree.mirror || newTree.ownerDocument.mirror) {\n  oldTree = diffBeforeUpdatingChildren(\n    oldTree,\n    newTree,\n    replayer,\n    rrnodeMirror\n  );\n  diffChildren(oldTree, newTree, replayer, rrnodeMirror);\n  diffAfterUpdatingChildren(oldTree, newTree, replayer);\n}\nfunction diffBeforeUpdatingChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  if (replayer.afterAppend && !createdNodeSet) {\n    createdNodeSet = /* @__PURE__ */ new WeakSet();\n    setTimeout(() => {\n      createdNodeSet = null;\n    }, 0);\n  }\n  if (!sameNodeType(oldTree, newTree)) {\n    const calibratedOldTree = createOrGetNode(\n      newTree,\n      replayer.mirror,\n      rrnodeMirror\n    );\n    oldTree.parentNode?.replaceChild(calibratedOldTree, oldTree);\n    oldTree = calibratedOldTree;\n  }\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      if (!nodeMatching(oldTree, newTree, replayer.mirror, rrnodeMirror)) {\n        const newMeta = rrnodeMirror.getMeta(newTree);\n        if (newMeta) {\n          replayer.mirror.removeNodeFromMap(oldTree);\n          oldTree.close();\n          oldTree.open();\n          replayer.mirror.add(oldTree, newMeta);\n          createdNodeSet?.add(oldTree);\n        }\n      }\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      switch (newRRElement.tagName) {\n        case \"IFRAME\": {\n          const oldContentDocument = getIFrameContentDocument(\n            oldTree\n          );\n          if (!oldContentDocument) break;\n          diff(\n            oldContentDocument,\n            newTree.contentDocument,\n            replayer,\n            rrnodeMirror\n          );\n          break;\n        }\n      }\n      if (newRRElement.shadowRoot) {\n        if (!oldElement.shadowRoot) oldElement.attachShadow({ mode: \"open\" });\n        diffChildren(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          oldElement.shadowRoot,\n          newRRElement.shadowRoot,\n          replayer,\n          rrnodeMirror\n        );\n      }\n      diffProps(oldElement, newRRElement, rrnodeMirror);\n      break;\n    }\n  }\n  return oldTree;\n}\nfunction diffAfterUpdatingChildren(oldTree, newTree, replayer) {\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      const scrollData = newTree.scrollData;\n      scrollData && replayer.applyScroll(scrollData, true);\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      newRRElement.scrollData && replayer.applyScroll(newRRElement.scrollData, true);\n      newRRElement.inputData && replayer.applyInput(newRRElement.inputData);\n      switch (newRRElement.tagName) {\n        case \"AUDIO\":\n        case \"VIDEO\": {\n          const oldMediaElement = oldTree;\n          const newMediaRRElement = newRRElement;\n          if (newMediaRRElement.paused !== void 0)\n            newMediaRRElement.paused ? void oldMediaElement.pause() : void oldMediaElement.play();\n          if (newMediaRRElement.muted !== void 0)\n            oldMediaElement.muted = newMediaRRElement.muted;\n          if (newMediaRRElement.volume !== void 0)\n            oldMediaElement.volume = newMediaRRElement.volume;\n          if (newMediaRRElement.currentTime !== void 0)\n            oldMediaElement.currentTime = newMediaRRElement.currentTime;\n          if (newMediaRRElement.playbackRate !== void 0)\n            oldMediaElement.playbackRate = newMediaRRElement.playbackRate;\n          break;\n        }\n        case \"CANVAS\": {\n          const rrCanvasElement = newTree;\n          if (rrCanvasElement.rr_dataURL !== null) {\n            const image = document.createElement(\"img\");\n            image.onload = () => {\n              const ctx = oldElement.getContext(\"2d\");\n              if (ctx) {\n                ctx.drawImage(image, 0, 0, image.width, image.height);\n              }\n            };\n            image.src = rrCanvasElement.rr_dataURL;\n          }\n          rrCanvasElement.canvasMutations.forEach(\n            (canvasMutation2) => replayer.applyCanvas(\n              canvasMutation2.event,\n              canvasMutation2.mutation,\n              oldTree\n            )\n          );\n          break;\n        }\n        case \"STYLE\": {\n          const styleSheet = oldElement.sheet;\n          styleSheet && newTree.rules.forEach(\n            (data) => replayer.applyStyleSheetMutation(data, styleSheet)\n          );\n          break;\n        }\n      }\n      break;\n    }\n    case NodeType$1.Text:\n    case NodeType$1.Comment:\n    case NodeType$1.CDATA: {\n      if (oldTree.textContent !== newTree.data)\n        oldTree.textContent = newTree.data;\n      break;\n    }\n  }\n  if (createdNodeSet?.has(oldTree)) {\n    createdNodeSet.delete(oldTree);\n    replayer.afterAppend?.(oldTree, replayer.mirror.getId(oldTree));\n  }\n}\nfunction diffProps(oldTree, newTree, rrnodeMirror) {\n  const oldAttributes = oldTree.attributes;\n  const newAttributes = newTree.attributes;\n  for (const name in newAttributes) {\n    const newValue = newAttributes[name];\n    const sn = rrnodeMirror.getMeta(newTree);\n    if (sn?.isSVG && NAMESPACES[name])\n      oldTree.setAttributeNS(NAMESPACES[name], name, newValue);\n    else if (newTree.tagName === \"CANVAS\" && name === \"rr_dataURL\") {\n      const image = document.createElement(\"img\");\n      image.src = newValue;\n      image.onload = () => {\n        const ctx = oldTree.getContext(\"2d\");\n        if (ctx) {\n          ctx.drawImage(image, 0, 0, image.width, image.height);\n        }\n      };\n    } else if (newTree.tagName === \"IFRAME\" && name === \"srcdoc\") continue;\n    else {\n      try {\n        oldTree.setAttribute(name, newValue);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n  }\n  for (const { name } of Array.from(oldAttributes))\n    if (!(name in newAttributes)) oldTree.removeAttribute(name);\n  newTree.scrollLeft && (oldTree.scrollLeft = newTree.scrollLeft);\n  newTree.scrollTop && (oldTree.scrollTop = newTree.scrollTop);\n}\nfunction diffChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  const oldChildren = Array.from(oldTree.childNodes);\n  const newChildren = newTree.childNodes;\n  if (oldChildren.length === 0 && newChildren.length === 0) return;\n  let oldStartIndex = 0, oldEndIndex = oldChildren.length - 1, newStartIndex = 0, newEndIndex = newChildren.length - 1;\n  let oldStartNode = oldChildren[oldStartIndex], oldEndNode = oldChildren[oldEndIndex], newStartNode = newChildren[newStartIndex], newEndNode = newChildren[newEndIndex];\n  let oldIdToIndex = void 0, indexInOld = void 0;\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (oldStartNode === void 0) {\n      oldStartNode = oldChildren[++oldStartIndex];\n    } else if (oldEndNode === void 0) {\n      oldEndNode = oldChildren[--oldEndIndex];\n    } else if (\n      // same first node?\n      nodeMatching(oldStartNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldStartNode = oldChildren[++oldStartIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else if (\n      // same last node?\n      nodeMatching(oldEndNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldEndNode = oldChildren[--oldEndIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the first old node the same as the last new node?\n      nodeMatching(oldStartNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        handleInsertBefore(oldTree, oldStartNode, oldEndNode.nextSibling);\n      } catch (e2) {\n        console.warn(e2);\n      }\n      oldStartNode = oldChildren[++oldStartIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the last old node the same as the first new node?\n      nodeMatching(oldEndNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        handleInsertBefore(oldTree, oldEndNode, oldStartNode);\n      } catch (e2) {\n        console.warn(e2);\n      }\n      oldEndNode = oldChildren[--oldEndIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else {\n      if (!oldIdToIndex) {\n        oldIdToIndex = {};\n        for (let i2 = oldStartIndex; i2 <= oldEndIndex; i2++) {\n          const oldChild2 = oldChildren[i2];\n          if (oldChild2 && replayer.mirror.hasNode(oldChild2))\n            oldIdToIndex[replayer.mirror.getId(oldChild2)] = i2;\n        }\n      }\n      indexInOld = oldIdToIndex[rrnodeMirror.getId(newStartNode)];\n      const nodeToMove = oldChildren[indexInOld];\n      if (indexInOld !== void 0 && nodeToMove && nodeMatching(nodeToMove, newStartNode, replayer.mirror, rrnodeMirror)) {\n        try {\n          handleInsertBefore(oldTree, nodeToMove, oldStartNode);\n        } catch (e2) {\n          console.warn(e2);\n        }\n        oldChildren[indexInOld] = void 0;\n      } else {\n        const newNode = createOrGetNode(\n          newStartNode,\n          replayer.mirror,\n          rrnodeMirror\n        );\n        if (oldTree.nodeName === \"#document\" && oldStartNode && /**\n        * Special case 1: one document isn't allowed to have two doctype nodes at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A parent document in the old tree already has a doctype node with an id e.g. #1. A new full snapshot rebuilds the replayer with a new doctype node with another id #2. According to the algorithm, the new doctype node will be inserted before the old one, which is not allowed by the Document standard.\n        */\n        (newNode.nodeType === newNode.DOCUMENT_TYPE_NODE && oldStartNode.nodeType === oldStartNode.DOCUMENT_TYPE_NODE || /**\n        * Special case 2: one document isn't allowed to have two HTMLElements at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A mounted iframe element has an automatically created HTML element. We should delete it before inserting a serialized one. Otherwise, an error 'Only one element on document allowed' will be thrown.\n        */\n        newNode.nodeType === newNode.ELEMENT_NODE && oldStartNode.nodeType === oldStartNode.ELEMENT_NODE)) {\n          oldTree.removeChild(oldStartNode);\n          replayer.mirror.removeNodeFromMap(oldStartNode);\n          oldStartNode = oldChildren[++oldStartIndex];\n        }\n        try {\n          handleInsertBefore(oldTree, newNode, oldStartNode || null);\n        } catch (e2) {\n          console.warn(e2);\n        }\n      }\n      newStartNode = newChildren[++newStartIndex];\n    }\n  }\n  if (oldStartIndex > oldEndIndex) {\n    const referenceRRNode = newChildren[newEndIndex + 1];\n    let referenceNode = null;\n    if (referenceRRNode)\n      referenceNode = replayer.mirror.getNode(\n        rrnodeMirror.getId(referenceRRNode)\n      );\n    for (; newStartIndex <= newEndIndex; ++newStartIndex) {\n      const newNode = createOrGetNode(\n        newChildren[newStartIndex],\n        replayer.mirror,\n        rrnodeMirror\n      );\n      try {\n        handleInsertBefore(oldTree, newNode, referenceNode);\n      } catch (e2) {\n        console.warn(e2);\n      }\n    }\n  } else if (newStartIndex > newEndIndex) {\n    for (; oldStartIndex <= oldEndIndex; oldStartIndex++) {\n      const node = oldChildren[oldStartIndex];\n      if (!node || node.parentNode !== oldTree) continue;\n      try {\n        oldTree.removeChild(node);\n        replayer.mirror.removeNodeFromMap(node);\n      } catch (e2) {\n        console.warn(e2);\n      }\n    }\n  }\n  let oldChild = oldTree.firstChild;\n  let newChild = newTree.firstChild;\n  while (oldChild !== null && newChild !== null) {\n    diff(oldChild, newChild, replayer, rrnodeMirror);\n    oldChild = oldChild.nextSibling;\n    newChild = newChild.nextSibling;\n  }\n}\nfunction createOrGetNode(rrNode, domMirror, rrnodeMirror) {\n  const nodeId = rrnodeMirror.getId(rrNode);\n  const sn = rrnodeMirror.getMeta(rrNode);\n  let node = null;\n  if (nodeId > -1) node = domMirror.getNode(nodeId);\n  if (node !== null && sameNodeType(node, rrNode)) return node;\n  switch (rrNode.RRNodeType) {\n    case NodeType$1.Document:\n      node = new Document();\n      break;\n    case NodeType$1.DocumentType:\n      node = document.implementation.createDocumentType(\n        rrNode.name,\n        rrNode.publicId,\n        rrNode.systemId\n      );\n      break;\n    case NodeType$1.Element: {\n      let tagName = rrNode.tagName.toLowerCase();\n      tagName = SVGTagMap[tagName] || tagName;\n      if (sn && \"isSVG\" in sn && sn?.isSVG) {\n        node = document.createElementNS(NAMESPACES[\"svg\"], tagName);\n      } else node = document.createElement(rrNode.tagName);\n      break;\n    }\n    case NodeType$1.Text:\n      node = document.createTextNode(rrNode.data);\n      break;\n    case NodeType$1.Comment:\n      node = document.createComment(rrNode.data);\n      break;\n    case NodeType$1.CDATA:\n      node = document.createCDATASection(rrNode.data);\n      break;\n  }\n  if (sn) domMirror.add(node, { ...sn });\n  try {\n    createdNodeSet?.add(node);\n  } catch (e2) {\n  }\n  return node;\n}\nfunction sameNodeType(node1, node2) {\n  if (node1.nodeType !== node2.nodeType) return false;\n  return node1.nodeType !== node1.ELEMENT_NODE || node1.tagName.toUpperCase() === node2.tagName;\n}\nfunction nodeMatching(node1, node2, domMirror, rrdomMirror) {\n  const node1Id = domMirror.getId(node1);\n  const node2Id = rrdomMirror.getId(node2);\n  if (node1Id === -1 || node1Id !== node2Id) return false;\n  return sameNodeType(node1, node2);\n}\nfunction getInsertedStylesFromElement(styleElement) {\n  const elementCssRules = styleElement.sheet?.cssRules;\n  if (!elementCssRules || !elementCssRules.length) return;\n  const tempStyleSheet = new CSSStyleSheet();\n  tempStyleSheet.replaceSync(styleElement.innerText);\n  const innerTextStylesMap = {};\n  for (let i2 = 0; i2 < tempStyleSheet.cssRules.length; i2++) {\n    innerTextStylesMap[tempStyleSheet.cssRules[i2].cssText] = tempStyleSheet.cssRules[i2];\n  }\n  const insertedStylesStyleSheet = [];\n  for (let i2 = 0; i2 < elementCssRules?.length; i2++) {\n    const cssRuleText = elementCssRules[i2].cssText;\n    if (!innerTextStylesMap[cssRuleText]) {\n      insertedStylesStyleSheet.push({\n        index: i2,\n        cssRuleText\n      });\n    }\n  }\n  return insertedStylesStyleSheet;\n}\nfunction handleInsertBefore(oldTree, nodeToMove, insertBeforeNode) {\n  let insertedStyles;\n  if (nodeToMove.nodeName === \"STYLE\") {\n    insertedStyles = getInsertedStylesFromElement(\n      nodeToMove\n    );\n  }\n  oldTree.insertBefore(nodeToMove, insertBeforeNode);\n  if (insertedStyles && insertedStyles.length) {\n    insertedStyles.forEach(({ cssRuleText, index }) => {\n      nodeToMove.sheet?.insertRule(cssRuleText, index);\n    });\n  }\n}\nclass RRDocument extends BaseRRDocument {\n  constructor(mirror2) {\n    super();\n    __publicField(this, \"UNSERIALIZED_STARTING_ID\", -2);\n    __publicField(this, \"_unserializedId\", this.UNSERIALIZED_STARTING_ID);\n    __publicField(this, \"mirror\", createMirror());\n    __publicField(this, \"scrollData\", null);\n    if (mirror2) {\n      this.mirror = mirror2;\n    }\n  }\n  /**\n   * Every time the id is used, it will minus 1 automatically to avoid collisions.\n   */\n  get unserializedId() {\n    return this._unserializedId--;\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new RRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n  createElement(tagName) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case \"AUDIO\":\n      case \"VIDEO\":\n        element = new RRMediaElement(upperTagName);\n        break;\n      case \"IFRAME\":\n        element = new RRIFrameElement(upperTagName, this.mirror);\n        break;\n      case \"CANVAS\":\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case \"STYLE\":\n        element = new RRStyleElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n  createComment(data) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n  createCDATASection(data) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n  createTextNode(data) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n  destroyTree() {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.mirror.reset();\n  }\n  open() {\n    super.open();\n    this._unserializedId = this.UNSERIALIZED_STARTING_ID;\n  }\n}\nconst RRDocumentType = BaseRRDocumentType;\nclass RRElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"inputData\", null);\n    __publicField(this, \"scrollData\", null);\n  }\n}\nclass RRMediaElement extends BaseRRMediaElement {\n}\nclass RRCanvasElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rr_dataURL\", null);\n    __publicField(this, \"canvasMutations\", []);\n  }\n  /**\n   * This is a dummy implementation to distinguish RRCanvasElement from real HTMLCanvasElement.\n   */\n  getContext() {\n    return null;\n  }\n}\nclass RRStyleElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rules\", []);\n  }\n}\nclass RRIFrameElement extends RRElement {\n  constructor(upperTagName, mirror2) {\n    super(upperTagName);\n    __publicField(this, \"contentDocument\", new RRDocument());\n    this.contentDocument.mirror = mirror2;\n  }\n}\nconst RRText = BaseRRText;\nconst RRComment = BaseRRComment;\nconst RRCDATASection = BaseRRCDATASection;\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"FORM\";\n  }\n  return element.tagName.toUpperCase();\n}\nfunction buildFromNode(node, rrdom, domMirror, parentRRNode) {\n  let rrNode;\n  switch (node.nodeType) {\n    case NodeType.DOCUMENT_NODE:\n      if (parentRRNode && parentRRNode.nodeName === \"IFRAME\")\n        rrNode = parentRRNode.contentDocument;\n      else {\n        rrNode = rrdom;\n        rrNode.compatMode = node.compatMode;\n      }\n      break;\n    case NodeType.DOCUMENT_TYPE_NODE: {\n      const documentType = node;\n      rrNode = rrdom.createDocumentType(\n        documentType.name,\n        documentType.publicId,\n        documentType.systemId\n      );\n      break;\n    }\n    case NodeType.ELEMENT_NODE: {\n      const elementNode = node;\n      const tagName = getValidTagName(elementNode);\n      rrNode = rrdom.createElement(tagName);\n      const rrElement = rrNode;\n      for (const { name, value } of Array.from(elementNode.attributes)) {\n        rrElement.attributes[name] = value;\n      }\n      elementNode.scrollLeft && (rrElement.scrollLeft = elementNode.scrollLeft);\n      elementNode.scrollTop && (rrElement.scrollTop = elementNode.scrollTop);\n      break;\n    }\n    case NodeType.TEXT_NODE:\n      rrNode = rrdom.createTextNode(node.textContent || \"\");\n      break;\n    case NodeType.CDATA_SECTION_NODE:\n      rrNode = rrdom.createCDATASection(node.data);\n      break;\n    case NodeType.COMMENT_NODE:\n      rrNode = rrdom.createComment(node.textContent || \"\");\n      break;\n    case NodeType.DOCUMENT_FRAGMENT_NODE:\n      rrNode = parentRRNode.attachShadow({ mode: \"open\" });\n      break;\n    default:\n      return null;\n  }\n  let sn = domMirror.getMeta(node);\n  if (rrdom instanceof RRDocument) {\n    if (!sn) {\n      sn = getDefaultSN(rrNode, rrdom.unserializedId);\n      domMirror.add(node, sn);\n    }\n    rrdom.mirror.add(rrNode, { ...sn });\n  }\n  return rrNode;\n}\nfunction buildFromDom(dom, domMirror = createMirror$1(), rrdom = new RRDocument()) {\n  function walk2(node, parentRRNode) {\n    const rrNode = buildFromNode(node, rrdom, domMirror, parentRRNode);\n    if (rrNode === null) return;\n    if (\n      // if the parentRRNode isn't a RRIFrameElement\n      parentRRNode?.nodeName !== \"IFRAME\" && // if node isn't a shadow root\n      node.nodeType !== NodeType.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parentRRNode?.appendChild(rrNode);\n      rrNode.parentNode = parentRRNode;\n      rrNode.parentElement = parentRRNode;\n    }\n    if (node.nodeName === \"IFRAME\") {\n      const iframeDoc = getIFrameContentDocument(node);\n      iframeDoc && walk2(iframeDoc, rrNode);\n    } else if (node.nodeType === NodeType.DOCUMENT_NODE || node.nodeType === NodeType.ELEMENT_NODE || node.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\n      if (node.nodeType === NodeType.ELEMENT_NODE && node.shadowRoot)\n        walk2(node.shadowRoot, rrNode);\n      node.childNodes.forEach((childNode) => walk2(childNode, rrNode));\n    }\n  }\n  walk2(dom, null);\n  return rrdom;\n}\nfunction createMirror() {\n  return new Mirror22();\n}\nclass Mirror22 {\n  constructor() {\n    __publicField(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n2) {\n    if (!n2) return -1;\n    const id = this.getMeta(n2)?.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n2) {\n    return this.nodeMetaMap.get(n2) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n2) {\n    const id = this.getId(n2);\n    this.idNodeMap.delete(id);\n    if (n2.childNodes) {\n      n2.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node) {\n    return this.nodeMetaMap.has(node);\n  }\n  add(n2, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n2);\n    this.nodeMetaMap.set(n2, meta);\n  }\n  replace(id, n2) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n2, meta);\n    }\n    this.idNodeMap.set(id, n2);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction getDefaultSN(node, id) {\n  switch (node.RRNodeType) {\n    case NodeType$1.Document:\n      return {\n        id,\n        type: node.RRNodeType,\n        childNodes: []\n      };\n    case NodeType$1.DocumentType: {\n      const doctype = node;\n      return {\n        id,\n        type: node.RRNodeType,\n        name: doctype.name,\n        publicId: doctype.publicId,\n        systemId: doctype.systemId\n      };\n    }\n    case NodeType$1.Element:\n      return {\n        id,\n        type: node.RRNodeType,\n        tagName: node.tagName.toLowerCase(),\n        // In rrweb data, all tagNames are lowercase.\n        attributes: {},\n        childNodes: []\n      };\n    case NodeType$1.Text:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: node.textContent || \"\"\n      };\n    case NodeType$1.Comment:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: node.textContent || \"\"\n      };\n    case NodeType$1.CDATA:\n      return {\n        id,\n        type: node.RRNodeType,\n        textContent: \"\"\n      };\n  }\n}\nfunction isNodeInLinkedList(n2) {\n  return \"__ln\" in n2;\n}\nclass DoubleLinkedList {\n  constructor() {\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n  }\n  get(position) {\n    if (position >= this.length) {\n      throw new Error(\"Position outside of list range\");\n    }\n    let current = this.head;\n    for (let index = 0; index < position; index++) {\n      current = current?.next || null;\n    }\n    return current;\n  }\n  addNode(n2) {\n    const node = {\n      value: n2,\n      previous: null,\n      next: null\n    };\n    n2.__ln = node;\n    if (n2.previousSibling && isNodeInLinkedList(n2.previousSibling)) {\n      const current = n2.previousSibling.__ln.next;\n      node.next = current;\n      node.previous = n2.previousSibling.__ln;\n      n2.previousSibling.__ln.next = node;\n      if (current) {\n        current.previous = node;\n      }\n    } else if (n2.nextSibling && isNodeInLinkedList(n2.nextSibling) && n2.nextSibling.__ln.previous) {\n      const current = n2.nextSibling.__ln.previous;\n      node.previous = current;\n      node.next = n2.nextSibling.__ln;\n      n2.nextSibling.__ln.previous = node;\n      if (current) {\n        current.next = node;\n      }\n    } else {\n      if (this.head) {\n        this.head.previous = node;\n      }\n      node.next = this.head;\n      this.head = node;\n    }\n    if (node.next === null) {\n      this.tail = node;\n    }\n    this.length++;\n  }\n  removeNode(n2) {\n    const current = n2.__ln;\n    if (!this.head) {\n      return;\n    }\n    if (!current.previous) {\n      this.head = current.next;\n      if (this.head) {\n        this.head.previous = null;\n      } else {\n        this.tail = null;\n      }\n    } else {\n      current.previous.next = current.next;\n      if (current.next) {\n        current.next.previous = current.previous;\n      } else {\n        this.tail = current.previous;\n      }\n    }\n    if (n2.__ln) {\n      delete n2.__ln;\n    }\n    this.length--;\n  }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n  constructor() {\n    this.frozen = false;\n    this.locked = false;\n    this.texts = [];\n    this.attributes = [];\n    this.attributeMap = /* @__PURE__ */ new WeakMap();\n    this.removes = [];\n    this.mapRemoves = [];\n    this.movedMap = {};\n    this.addedSet = /* @__PURE__ */ new Set();\n    this.movedSet = /* @__PURE__ */ new Set();\n    this.droppedSet = /* @__PURE__ */ new Set();\n    this.processMutations = (mutations) => {\n      mutations.forEach(this.processMutation);\n      this.emit();\n    };\n    this.emit = () => {\n      if (this.frozen || this.locked) {\n        return;\n      }\n      const adds = [];\n      const addedIds = /* @__PURE__ */ new Set();\n      const addList = new DoubleLinkedList();\n      const getNextId = (n2) => {\n        let ns = n2;\n        let nextId = IGNORED_NODE;\n        while (nextId === IGNORED_NODE) {\n          ns = ns && ns.nextSibling;\n          nextId = ns && this.mirror.getId(ns);\n        }\n        return nextId;\n      };\n      const pushAdd = (n2) => {\n        if (!n2.parentNode || !inDom(n2)) {\n          return;\n        }\n        const parentId = isShadowRoot(n2.parentNode) ? this.mirror.getId(getShadowHost(n2)) : this.mirror.getId(n2.parentNode);\n        const nextId = getNextId(n2);\n        if (parentId === -1 || nextId === -1) {\n          return addList.addNode(n2);\n        }\n        const sn = serializeNodeWithId(n2, {\n          doc: this.doc,\n          mirror: this.mirror,\n          blockClass: this.blockClass,\n          blockSelector: this.blockSelector,\n          maskAllText: this.maskAllText,\n          unblockSelector: this.unblockSelector,\n          maskTextClass: this.maskTextClass,\n          unmaskTextClass: this.unmaskTextClass,\n          maskTextSelector: this.maskTextSelector,\n          unmaskTextSelector: this.unmaskTextSelector,\n          skipChild: true,\n          newlyAddedElement: true,\n          inlineStylesheet: this.inlineStylesheet,\n          maskInputOptions: this.maskInputOptions,\n          maskAttributeFn: this.maskAttributeFn,\n          maskTextFn: this.maskTextFn,\n          maskInputFn: this.maskInputFn,\n          slimDOMOptions: this.slimDOMOptions,\n          dataURLOptions: this.dataURLOptions,\n          recordCanvas: this.recordCanvas,\n          inlineImages: this.inlineImages,\n          onSerialize: (currentN) => {\n            if (isSerializedIframe(currentN, this.mirror) && !isBlocked(\n              currentN,\n              this.blockClass,\n              this.blockSelector,\n              this.unblockSelector,\n              false\n            )) {\n              this.iframeManager.addIframe(currentN);\n            }\n            if (isSerializedStylesheet(currentN, this.mirror)) {\n              this.stylesheetManager.trackLinkElement(\n                currentN\n              );\n            }\n            if (hasShadowRoot(n2)) {\n              this.shadowDomManager.addShadowRoot(n2.shadowRoot, this.doc);\n            }\n          },\n          onIframeLoad: (iframe, childSn) => {\n            if (isBlocked(\n              iframe,\n              this.blockClass,\n              this.blockSelector,\n              this.unblockSelector,\n              false\n            )) {\n              return;\n            }\n            this.iframeManager.attachIframe(iframe, childSn);\n            if (iframe.contentWindow) {\n              this.canvasManager.addWindow(iframe.contentWindow);\n            }\n            this.shadowDomManager.observeAttachShadow(iframe);\n          },\n          onStylesheetLoad: (link, childSn) => {\n            this.stylesheetManager.attachLinkElement(link, childSn);\n          }\n        });\n        if (sn) {\n          adds.push({\n            parentId,\n            nextId,\n            node: sn\n          });\n          addedIds.add(sn.id);\n        }\n      };\n      while (this.mapRemoves.length) {\n        this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n      }\n      for (const n2 of this.movedSet) {\n        if (isParentRemoved(this.removes, n2, this.mirror) && !this.movedSet.has(n2.parentNode)) {\n          continue;\n        }\n        pushAdd(n2);\n      }\n      for (const n2 of this.addedSet) {\n        if (!isAncestorInSet(this.droppedSet, n2) && !isParentRemoved(this.removes, n2, this.mirror)) {\n          pushAdd(n2);\n        } else if (isAncestorInSet(this.movedSet, n2)) {\n          pushAdd(n2);\n        } else {\n          this.droppedSet.add(n2);\n        }\n      }\n      let candidate = null;\n      while (addList.length) {\n        let node = null;\n        if (candidate) {\n          const parentId = this.mirror.getId(candidate.value.parentNode);\n          const nextId = getNextId(candidate.value);\n          if (parentId !== -1 && nextId !== -1) {\n            node = candidate;\n          }\n        }\n        if (!node) {\n          let tailNode = addList.tail;\n          while (tailNode) {\n            const _node = tailNode;\n            tailNode = tailNode.previous;\n            if (_node) {\n              const parentId = this.mirror.getId(_node.value.parentNode);\n              const nextId = getNextId(_node.value);\n              if (nextId === -1) continue;\n              else if (parentId !== -1) {\n                node = _node;\n                break;\n              } else {\n                const unhandledNode = _node.value;\n                if (unhandledNode.parentNode && unhandledNode.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                  const shadowHost = unhandledNode.parentNode.host;\n                  const parentId2 = this.mirror.getId(shadowHost);\n                  if (parentId2 !== -1) {\n                    node = _node;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (!node) {\n          while (addList.head) {\n            addList.removeNode(addList.head.value);\n          }\n          break;\n        }\n        candidate = node.previous;\n        addList.removeNode(node.value);\n        pushAdd(node.value);\n      }\n      const payload = {\n        texts: this.texts.map((text) => ({\n          id: this.mirror.getId(text.node),\n          value: text.value\n        })).filter((text) => !addedIds.has(text.id)).filter((text) => this.mirror.has(text.id)),\n        attributes: this.attributes.map((attribute) => {\n          const { attributes } = attribute;\n          if (typeof attributes.style === \"string\") {\n            const diffAsStr = JSON.stringify(attribute.styleDiff);\n            const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n            if (diffAsStr.length < attributes.style.length) {\n              if ((diffAsStr + unchangedAsStr).split(\"var(\").length === attributes.style.split(\"var(\").length) {\n                attributes.style = attribute.styleDiff;\n              }\n            }\n          }\n          return {\n            id: this.mirror.getId(attribute.node),\n            attributes\n          };\n        }).filter((attribute) => !addedIds.has(attribute.id)).filter((attribute) => this.mirror.has(attribute.id)),\n        removes: this.removes,\n        adds\n      };\n      if (!payload.texts.length && !payload.attributes.length && !payload.removes.length && !payload.adds.length) {\n        return;\n      }\n      this.texts = [];\n      this.attributes = [];\n      this.attributeMap = /* @__PURE__ */ new WeakMap();\n      this.removes = [];\n      this.addedSet = /* @__PURE__ */ new Set();\n      this.movedSet = /* @__PURE__ */ new Set();\n      this.droppedSet = /* @__PURE__ */ new Set();\n      this.movedMap = {};\n      this.mutationCb(payload);\n    };\n    this.processMutation = (m) => {\n      if (isIgnored(m.target, this.mirror)) {\n        return;\n      }\n      switch (m.type) {\n        case \"characterData\": {\n          const value = m.target.textContent;\n          if (!isBlocked(\n            m.target,\n            this.blockClass,\n            this.blockSelector,\n            this.unblockSelector,\n            false\n          ) && value !== m.oldValue) {\n            this.texts.push({\n              value: needMaskingText(\n                m.target,\n                this.maskTextClass,\n                this.maskTextSelector,\n                this.unmaskTextClass,\n                this.unmaskTextSelector,\n                this.maskAllText\n              ) && value ? this.maskTextFn ? this.maskTextFn(value, closestElementOfNode(m.target)) : value.replace(/[\\S]/g, \"*\") : value,\n              node: m.target\n            });\n          }\n          break;\n        }\n        case \"attributes\": {\n          const target = m.target;\n          let attributeName = m.attributeName;\n          let value = m.target.getAttribute(attributeName);\n          if (attributeName === \"value\") {\n            const type = getInputType(target);\n            const tagName = target.tagName;\n            value = getInputValue(target, tagName, type);\n            const isInputMasked = shouldMaskInput({\n              maskInputOptions: this.maskInputOptions,\n              tagName,\n              type\n            });\n            const forceMask = needMaskingText(\n              m.target,\n              this.maskTextClass,\n              this.maskTextSelector,\n              this.unmaskTextClass,\n              this.unmaskTextSelector,\n              isInputMasked\n            );\n            value = maskInputValue({\n              isMasked: forceMask,\n              element: target,\n              value,\n              maskInputFn: this.maskInputFn\n            });\n          }\n          if (isBlocked(\n            m.target,\n            this.blockClass,\n            this.blockSelector,\n            this.unblockSelector,\n            false\n          ) || value === m.oldValue) {\n            return;\n          }\n          let item = this.attributeMap.get(m.target);\n          if (target.tagName === \"IFRAME\" && attributeName === \"src\" && !this.keepIframeSrcFn(value)) {\n            const iframeDoc = getIFrameContentDocument(\n              target\n            );\n            if (!iframeDoc) {\n              attributeName = \"rr_src\";\n            } else {\n              return;\n            }\n          }\n          if (!item) {\n            item = {\n              node: m.target,\n              attributes: {},\n              styleDiff: {},\n              _unchangedStyles: {}\n            };\n            this.attributes.push(item);\n            this.attributeMap.set(m.target, item);\n          }\n          if (attributeName === \"type\" && target.tagName === \"INPUT\" && (m.oldValue || \"\").toLowerCase() === \"password\") {\n            target.setAttribute(\"data-rr-is-password\", \"true\");\n          }\n          if (!ignoreAttribute(target.tagName, attributeName)) {\n            item.attributes[attributeName] = transformAttribute(\n              this.doc,\n              toLowerCase(target.tagName),\n              toLowerCase(attributeName),\n              value,\n              target,\n              this.maskAttributeFn\n            );\n            if (attributeName === \"style\") {\n              if (!this.unattachedDoc) {\n                try {\n                  this.unattachedDoc = document.implementation.createHTMLDocument();\n                } catch (e2) {\n                  this.unattachedDoc = this.doc;\n                }\n              }\n              const old = this.unattachedDoc.createElement(\"span\");\n              if (m.oldValue) {\n                old.setAttribute(\"style\", m.oldValue);\n              }\n              for (const pname of Array.from(target.style)) {\n                const newValue = target.style.getPropertyValue(pname);\n                const newPriority = target.style.getPropertyPriority(pname);\n                if (newValue !== old.style.getPropertyValue(pname) || newPriority !== old.style.getPropertyPriority(pname)) {\n                  if (newPriority === \"\") {\n                    item.styleDiff[pname] = newValue;\n                  } else {\n                    item.styleDiff[pname] = [newValue, newPriority];\n                  }\n                } else {\n                  item._unchangedStyles[pname] = [newValue, newPriority];\n                }\n              }\n              for (const pname of Array.from(old.style)) {\n                if (target.style.getPropertyValue(pname) === \"\") {\n                  item.styleDiff[pname] = false;\n                }\n              }\n            }\n          }\n          break;\n        }\n        case \"childList\": {\n          if (isBlocked(\n            m.target,\n            this.blockClass,\n            this.blockSelector,\n            this.unblockSelector,\n            true\n          )) {\n            return;\n          }\n          m.addedNodes.forEach((n2) => this.genAdds(n2, m.target));\n          m.removedNodes.forEach((n2) => {\n            const nodeId = this.mirror.getId(n2);\n            const parentId = isShadowRoot(m.target) ? this.mirror.getId(m.target.host) : this.mirror.getId(m.target);\n            if (isBlocked(\n              m.target,\n              this.blockClass,\n              this.blockSelector,\n              this.unblockSelector,\n              false\n            ) || isIgnored(n2, this.mirror) || !isSerialized(n2, this.mirror)) {\n              return;\n            }\n            if (this.addedSet.has(n2)) {\n              deepDelete(this.addedSet, n2);\n              this.droppedSet.add(n2);\n            } else if (this.addedSet.has(m.target) && nodeId === -1) ;\n            else if (isAncestorRemoved(m.target, this.mirror)) ;\n            else if (this.movedSet.has(n2) && this.movedMap[moveKey(nodeId, parentId)]) {\n              deepDelete(this.movedSet, n2);\n            } else {\n              this.removes.push({\n                parentId,\n                id: nodeId,\n                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target) ? true : void 0\n              });\n            }\n            this.mapRemoves.push(n2);\n          });\n          break;\n        }\n      }\n    };\n    this.genAdds = (n2, target) => {\n      if (this.processedNodeManager.inOtherBuffer(n2, this)) return;\n      if (this.addedSet.has(n2) || this.movedSet.has(n2)) return;\n      if (this.mirror.hasNode(n2)) {\n        if (isIgnored(n2, this.mirror)) {\n          return;\n        }\n        this.movedSet.add(n2);\n        let targetId = null;\n        if (target && this.mirror.hasNode(target)) {\n          targetId = this.mirror.getId(target);\n        }\n        if (targetId && targetId !== -1) {\n          this.movedMap[moveKey(this.mirror.getId(n2), targetId)] = true;\n        }\n      } else {\n        this.addedSet.add(n2);\n        this.droppedSet.delete(n2);\n      }\n      if (!isBlocked(\n        n2,\n        this.blockClass,\n        this.blockSelector,\n        this.unblockSelector,\n        false\n      )) {\n        n2.childNodes.forEach((childN) => this.genAdds(childN));\n        if (hasShadowRoot(n2)) {\n          n2.shadowRoot.childNodes.forEach((childN) => {\n            this.processedNodeManager.add(childN, this);\n            this.genAdds(childN, n2);\n          });\n        }\n      }\n    };\n  }\n  init(options) {\n    [\n      \"mutationCb\",\n      \"blockClass\",\n      \"blockSelector\",\n      \"unblockSelector\",\n      \"maskAllText\",\n      \"maskTextClass\",\n      \"unmaskTextClass\",\n      \"maskTextSelector\",\n      \"unmaskTextSelector\",\n      \"inlineStylesheet\",\n      \"maskInputOptions\",\n      \"maskAttributeFn\",\n      \"maskTextFn\",\n      \"maskInputFn\",\n      \"keepIframeSrcFn\",\n      \"recordCanvas\",\n      \"inlineImages\",\n      \"slimDOMOptions\",\n      \"dataURLOptions\",\n      \"doc\",\n      \"mirror\",\n      \"iframeManager\",\n      \"stylesheetManager\",\n      \"shadowDomManager\",\n      \"canvasManager\",\n      \"processedNodeManager\"\n    ].forEach((key) => {\n      this[key] = options[key];\n    });\n  }\n  freeze() {\n    this.frozen = true;\n    this.canvasManager.freeze();\n  }\n  unfreeze() {\n    this.frozen = false;\n    this.canvasManager.unfreeze();\n    this.emit();\n  }\n  isFrozen() {\n    return this.frozen;\n  }\n  lock() {\n    this.locked = true;\n    this.canvasManager.lock();\n  }\n  unlock() {\n    this.locked = false;\n    this.canvasManager.unlock();\n    this.emit();\n  }\n  reset() {\n    this.shadowDomManager.reset();\n    this.canvasManager.reset();\n  }\n}\nfunction deepDelete(addsSet, n2) {\n  addsSet.delete(n2);\n  n2.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n2, mirror2) {\n  if (removes.length === 0) return false;\n  return _isParentRemoved(removes, n2, mirror2);\n}\nfunction _isParentRemoved(removes, n2, mirror2) {\n  let node = n2.parentNode;\n  while (node) {\n    const parentId = mirror2.getId(node);\n    if (removes.some((r2) => r2.id === parentId)) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n}\nfunction isAncestorInSet(set, n2) {\n  if (set.size === 0) return false;\n  return _isAncestorInSet(set, n2);\n}\nfunction _isAncestorInSet(set, n2) {\n  const { parentNode } = n2;\n  if (!parentNode) {\n    return false;\n  }\n  if (set.has(parentNode)) {\n    return true;\n  }\n  return _isAncestorInSet(set, parentNode);\n}\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n  errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n  errorHandler = void 0;\n}\nconst callbackWrapper = (cb) => {\n  if (!errorHandler) {\n    return cb;\n  }\n  const rrwebWrapped = (...rest) => {\n    try {\n      return cb(...rest);\n    } catch (error) {\n      if (errorHandler && errorHandler(error) === true) {\n        return () => {\n        };\n      }\n      throw error;\n    }\n  };\n  return rrwebWrapped;\n};\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n  try {\n    if (\"composedPath\" in event) {\n      const path = event.composedPath();\n      if (path.length) {\n        return path[0];\n      }\n    } else if (\"path\" in event && event.path.length) {\n      return event.path[0];\n    }\n  } catch {\n  }\n  return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n  const mutationBuffer = new MutationBuffer();\n  mutationBuffers.push(mutationBuffer);\n  mutationBuffer.init(options);\n  let mutationObserverCtor = window.MutationObserver || /**\n  * Some websites may disable MutationObserver by removing it from the window object.\n  * If someone is using rrweb to build a browser extention or things like it, they\n  * could not change the website's code but can have an opportunity to inject some\n  * code before the website executing its JS logic.\n  * Then they can do this to store the native MutationObserver:\n  * window.__rrMutationObserver = MutationObserver\n  */\n  window.__rrMutationObserver;\n  const angularZoneSymbol = window?.Zone?.__symbol__?.(\"MutationObserver\");\n  if (angularZoneSymbol && window[angularZoneSymbol]) {\n    mutationObserverCtor = window[angularZoneSymbol];\n  }\n  const observer = new mutationObserverCtor(\n    callbackWrapper((mutations) => {\n      if (options.onMutation && options.onMutation(mutations) === false) {\n        return;\n      }\n      mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    })\n  );\n  observer.observe(rootEl, {\n    attributes: true,\n    attributeOldValue: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction initMoveObserver({\n  mousemoveCb,\n  sampling,\n  doc,\n  mirror: mirror2\n}) {\n  if (sampling.mousemove === false) {\n    return () => {\n    };\n  }\n  const threshold = typeof sampling.mousemove === \"number\" ? sampling.mousemove : 50;\n  const callbackThreshold = typeof sampling.mousemoveCallback === \"number\" ? sampling.mousemoveCallback : 500;\n  let positions = [];\n  let timeBaseline;\n  const wrappedCb = throttle(\n    callbackWrapper(\n      (source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(\n          positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n          }),\n          source\n        );\n        positions = [];\n        timeBaseline = null;\n      }\n    ),\n    callbackThreshold\n  );\n  const updatePosition = callbackWrapper(\n    throttle(\n      callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt) ? evt.changedTouches[0] : evt;\n        if (!timeBaseline) {\n          timeBaseline = nowTimestamp();\n        }\n        positions.push({\n          x: clientX,\n          y: clientY,\n          id: mirror2.getId(target),\n          timeOffset: nowTimestamp() - timeBaseline\n        });\n        wrappedCb(\n          typeof DragEvent !== \"undefined\" && evt instanceof DragEvent ? IncrementalSource.Drag : evt instanceof MouseEvent ? IncrementalSource.MouseMove : IncrementalSource.TouchMove\n        );\n      }),\n      threshold,\n      {\n        trailing: false\n      }\n    )\n  );\n  const handlers = [\n    on(\"mousemove\", updatePosition, doc),\n    on(\"touchmove\", updatePosition, doc),\n    on(\"drag\", updatePosition, doc)\n  ];\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initMouseInteractionObserver({\n  mouseInteractionCb,\n  doc,\n  mirror: mirror2,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  sampling\n}) {\n  if (sampling.mouseInteraction === false) {\n    return () => {\n    };\n  }\n  const disableMap = sampling.mouseInteraction === true || sampling.mouseInteraction === void 0 ? {} : sampling.mouseInteraction;\n  const handlers = [];\n  let currentPointerType = null;\n  const getHandler = (eventKey) => {\n    return (event) => {\n      const target = getEventTarget(event);\n      if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n        return;\n      }\n      let pointerType = null;\n      let thisEventKey = eventKey;\n      if (\"pointerType\" in event) {\n        switch (event.pointerType) {\n          case \"mouse\":\n            pointerType = PointerTypes.Mouse;\n            break;\n          case \"touch\":\n            pointerType = PointerTypes.Touch;\n            break;\n          case \"pen\":\n            pointerType = PointerTypes.Pen;\n            break;\n        }\n        if (pointerType === PointerTypes.Touch) {\n          if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n            thisEventKey = \"TouchStart\";\n          } else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n            thisEventKey = \"TouchEnd\";\n          }\n        } else if (pointerType === PointerTypes.Pen) ;\n      } else if (legacy_isTouchEvent(event)) {\n        pointerType = PointerTypes.Touch;\n      }\n      if (pointerType !== null) {\n        currentPointerType = pointerType;\n        if (thisEventKey.startsWith(\"Touch\") && pointerType === PointerTypes.Touch || thisEventKey.startsWith(\"Mouse\") && pointerType === PointerTypes.Mouse) {\n          pointerType = null;\n        }\n      } else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n        pointerType = currentPointerType;\n        currentPointerType = null;\n      }\n      const e2 = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n      if (!e2) {\n        return;\n      }\n      const id = mirror2.getId(target);\n      const { clientX, clientY } = e2;\n      callbackWrapper(mouseInteractionCb)({\n        type: MouseInteractions[thisEventKey],\n        id,\n        x: clientX,\n        y: clientY,\n        ...pointerType !== null && { pointerType }\n      });\n    };\n  };\n  Object.keys(MouseInteractions).filter(\n    (key) => Number.isNaN(Number(key)) && !key.endsWith(\"_Departed\") && disableMap[key] !== false\n  ).forEach((eventKey) => {\n    let eventName = toLowerCase(eventKey);\n    const handler = getHandler(eventKey);\n    if (window.PointerEvent) {\n      switch (MouseInteractions[eventKey]) {\n        case MouseInteractions.MouseDown:\n        case MouseInteractions.MouseUp:\n          eventName = eventName.replace(\n            \"mouse\",\n            \"pointer\"\n          );\n          break;\n        case MouseInteractions.TouchStart:\n        case MouseInteractions.TouchEnd:\n          return;\n      }\n    }\n    handlers.push(on(eventName, handler, doc));\n  });\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initScrollObserver({\n  scrollCb,\n  doc,\n  mirror: mirror2,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  sampling\n}) {\n  const updatePosition = callbackWrapper(\n    throttle(\n      callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target || isBlocked(\n          target,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          true\n        )) {\n          return;\n        }\n        const id = mirror2.getId(target);\n        if (target === doc && doc.defaultView) {\n          const scrollLeftTop = getWindowScroll(doc.defaultView);\n          scrollCb({\n            id,\n            x: scrollLeftTop.left,\n            y: scrollLeftTop.top\n          });\n        } else {\n          scrollCb({\n            id,\n            x: target.scrollLeft,\n            y: target.scrollTop\n          });\n        }\n      }),\n      sampling.scroll || 100\n    )\n  );\n  return on(\"scroll\", updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n  let lastH = -1;\n  let lastW = -1;\n  const updateDimension = callbackWrapper(\n    throttle(\n      callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n          viewportResizeCb({\n            width: Number(width),\n            height: Number(height)\n          });\n          lastH = height;\n          lastW = width;\n        }\n      }),\n      200\n    )\n  );\n  return on(\"resize\", updateDimension, win);\n}\nconst INPUT_TAGS = [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\nconst lastInputValueMap = /* @__PURE__ */ new WeakMap();\nfunction initInputObserver({\n  inputCb,\n  doc,\n  mirror: mirror2,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  ignoreClass,\n  ignoreSelector,\n  maskInputOptions,\n  maskInputFn,\n  sampling,\n  userTriggeredOnInput,\n  maskTextClass,\n  unmaskTextClass,\n  maskTextSelector,\n  unmaskTextSelector\n}) {\n  function eventHandler(event) {\n    let target = getEventTarget(event);\n    const userTriggered = event.isTrusted;\n    const tagName = target && toUpperCase(target.tagName);\n    if (tagName === \"OPTION\") target = target.parentElement;\n    if (!target || !tagName || INPUT_TAGS.indexOf(tagName) < 0 || isBlocked(\n      target,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      true\n    )) {\n      return;\n    }\n    const el = target;\n    if (el.classList.contains(ignoreClass) || ignoreSelector && el.matches(ignoreSelector)) {\n      return;\n    }\n    const type = getInputType(target);\n    let text = getInputValue(el, tagName, type);\n    let isChecked = false;\n    const isInputMasked = shouldMaskInput({\n      maskInputOptions,\n      tagName,\n      type\n    });\n    const forceMask = needMaskingText(\n      target,\n      maskTextClass,\n      maskTextSelector,\n      unmaskTextClass,\n      unmaskTextSelector,\n      isInputMasked\n    );\n    if (type === \"radio\" || type === \"checkbox\") {\n      isChecked = target.checked;\n    }\n    text = maskInputValue({\n      isMasked: forceMask,\n      element: target,\n      value: text,\n      maskInputFn\n    });\n    cbWithDedup(\n      target,\n      userTriggeredOnInput ? { text, isChecked, userTriggered } : { text, isChecked }\n    );\n    const name = target.name;\n    if (type === \"radio\" && name && isChecked) {\n      doc.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`).forEach((el2) => {\n        if (el2 !== target) {\n          const text2 = maskInputValue({\n            // share mask behavior of `target`\n            isMasked: forceMask,\n            element: el2,\n            value: getInputValue(el2, tagName, type),\n            maskInputFn\n          });\n          cbWithDedup(\n            el2,\n            userTriggeredOnInput ? { text: text2, isChecked: !isChecked, userTriggered: false } : { text: text2, isChecked: !isChecked }\n          );\n        }\n      });\n    }\n  }\n  function cbWithDedup(target, v2) {\n    const lastInputValue = lastInputValueMap.get(target);\n    if (!lastInputValue || lastInputValue.text !== v2.text || lastInputValue.isChecked !== v2.isChecked) {\n      lastInputValueMap.set(target, v2);\n      const id = mirror2.getId(target);\n      callbackWrapper(inputCb)({\n        ...v2,\n        id\n      });\n    }\n  }\n  const events = sampling.input === \"last\" ? [\"change\"] : [\"input\", \"change\"];\n  const handlers = events.map(\n    (eventName) => on(eventName, callbackWrapper(eventHandler), doc)\n  );\n  const currentWindow = doc.defaultView;\n  if (!currentWindow) {\n    return () => {\n      handlers.forEach((h) => h());\n    };\n  }\n  const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(\n    currentWindow.HTMLInputElement.prototype,\n    \"value\"\n  );\n  const hookProperties = [\n    [currentWindow.HTMLInputElement.prototype, \"value\"],\n    [currentWindow.HTMLInputElement.prototype, \"checked\"],\n    [currentWindow.HTMLSelectElement.prototype, \"value\"],\n    [currentWindow.HTMLTextAreaElement.prototype, \"value\"],\n    // Some UI library use selectedIndex to set select value\n    [currentWindow.HTMLSelectElement.prototype, \"selectedIndex\"],\n    [currentWindow.HTMLOptionElement.prototype, \"selected\"]\n  ];\n  if (propertyDescriptor && propertyDescriptor.set) {\n    handlers.push(\n      ...hookProperties.map(\n        (p) => hookSetter(\n          p[0],\n          p[1],\n          {\n            set() {\n              callbackWrapper(eventHandler)({\n                target: this,\n                isTrusted: false\n                // userTriggered to false as this could well be programmatic\n              });\n            }\n          },\n          false,\n          currentWindow\n        )\n      )\n    );\n  }\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction getNestedCSSRulePositions(rule) {\n  const positions = [];\n  function recurse(childRule, pos) {\n    if (hasNestedCSSRule(\"CSSGroupingRule\") && childRule.parentRule instanceof CSSGroupingRule || hasNestedCSSRule(\"CSSMediaRule\") && childRule.parentRule instanceof CSSMediaRule || hasNestedCSSRule(\"CSSSupportsRule\") && childRule.parentRule instanceof CSSSupportsRule || hasNestedCSSRule(\"CSSConditionRule\") && childRule.parentRule instanceof CSSConditionRule) {\n      const rules2 = Array.from(\n        childRule.parentRule.cssRules\n      );\n      const index = rules2.indexOf(childRule);\n      pos.unshift(index);\n    } else if (childRule.parentStyleSheet) {\n      const rules2 = Array.from(childRule.parentStyleSheet.cssRules);\n      const index = rules2.indexOf(childRule);\n      pos.unshift(index);\n    }\n    return pos;\n  }\n  return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror2, styleMirror) {\n  let id, styleId;\n  if (!sheet) return {};\n  if (sheet.ownerNode) id = mirror2.getId(sheet.ownerNode);\n  else styleId = styleMirror.getId(sheet);\n  return {\n    styleId,\n    id\n  };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror: mirror2, stylesheetManager }, { win }) {\n  if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n    return () => {\n    };\n  }\n  const insertRule = win.CSSStyleSheet.prototype.insertRule;\n  win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [rule, index] = argumentsList;\n        const { id, styleId } = getIdAndStyleId(\n          thisArg,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleSheetRuleCb({\n            id,\n            styleId,\n            adds: [{ rule, index }]\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n  win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [index] = argumentsList;\n        const { id, styleId } = getIdAndStyleId(\n          thisArg,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleSheetRuleCb({\n            id,\n            styleId,\n            removes: [{ index }]\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  let replace;\n  if (win.CSSStyleSheet.prototype.replace) {\n    replace = win.CSSStyleSheet.prototype.replace;\n    win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n      apply: callbackWrapper(\n        (target, thisArg, argumentsList) => {\n          const [text] = argumentsList;\n          const { id, styleId } = getIdAndStyleId(\n            thisArg,\n            mirror2,\n            stylesheetManager.styleMirror\n          );\n          if (id && id !== -1 || styleId && styleId !== -1) {\n            styleSheetRuleCb({\n              id,\n              styleId,\n              replace: text\n            });\n          }\n          return target.apply(thisArg, argumentsList);\n        }\n      )\n    });\n  }\n  let replaceSync;\n  if (win.CSSStyleSheet.prototype.replaceSync) {\n    replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n    win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n      apply: callbackWrapper(\n        (target, thisArg, argumentsList) => {\n          const [text] = argumentsList;\n          const { id, styleId } = getIdAndStyleId(\n            thisArg,\n            mirror2,\n            stylesheetManager.styleMirror\n          );\n          if (id && id !== -1 || styleId && styleId !== -1) {\n            styleSheetRuleCb({\n              id,\n              styleId,\n              replaceSync: text\n            });\n          }\n          return target.apply(thisArg, argumentsList);\n        }\n      )\n    });\n  }\n  const supportedNestedCSSRuleTypes = {};\n  if (canMonkeyPatchNestedCSSRule(\"CSSGroupingRule\")) {\n    supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n  } else {\n    if (canMonkeyPatchNestedCSSRule(\"CSSMediaRule\")) {\n      supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n    }\n    if (canMonkeyPatchNestedCSSRule(\"CSSConditionRule\")) {\n      supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n    }\n    if (canMonkeyPatchNestedCSSRule(\"CSSSupportsRule\")) {\n      supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n    }\n  }\n  const unmodifiedFunctions = {};\n  Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n    unmodifiedFunctions[typeKey] = {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      insertRule: type.prototype.insertRule,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      deleteRule: type.prototype.deleteRule\n    };\n    type.prototype.insertRule = new Proxy(\n      unmodifiedFunctions[typeKey].insertRule,\n      {\n        apply: callbackWrapper(\n          (target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(\n              thisArg.parentStyleSheet,\n              mirror2,\n              stylesheetManager.styleMirror\n            );\n            if (id && id !== -1 || styleId && styleId !== -1) {\n              styleSheetRuleCb({\n                id,\n                styleId,\n                adds: [\n                  {\n                    rule,\n                    index: [\n                      ...getNestedCSSRulePositions(thisArg),\n                      index || 0\n                      // defaults to 0\n                    ]\n                  }\n                ]\n              });\n            }\n            return target.apply(thisArg, argumentsList);\n          }\n        )\n      }\n    );\n    type.prototype.deleteRule = new Proxy(\n      unmodifiedFunctions[typeKey].deleteRule,\n      {\n        apply: callbackWrapper(\n          (target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(\n              thisArg.parentStyleSheet,\n              mirror2,\n              stylesheetManager.styleMirror\n            );\n            if (id && id !== -1 || styleId && styleId !== -1) {\n              styleSheetRuleCb({\n                id,\n                styleId,\n                removes: [\n                  { index: [...getNestedCSSRulePositions(thisArg), index] }\n                ]\n              });\n            }\n            return target.apply(thisArg, argumentsList);\n          }\n        )\n      }\n    );\n  });\n  return callbackWrapper(() => {\n    win.CSSStyleSheet.prototype.insertRule = insertRule;\n    win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n    replace && (win.CSSStyleSheet.prototype.replace = replace);\n    replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n      type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n      type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n    });\n  });\n}\nfunction initAdoptedStyleSheetObserver({\n  mirror: mirror2,\n  stylesheetManager\n}, host) {\n  let hostId = null;\n  if (host.nodeName === \"#document\") hostId = mirror2.getId(host);\n  else hostId = mirror2.getId(host.host);\n  const patchTarget = host.nodeName === \"#document\" ? host.defaultView?.Document : host.ownerDocument?.defaultView?.ShadowRoot;\n  const originalPropertyDescriptor = patchTarget?.prototype ? Object.getOwnPropertyDescriptor(\n    patchTarget?.prototype,\n    \"adoptedStyleSheets\"\n  ) : void 0;\n  if (hostId === null || hostId === -1 || !patchTarget || !originalPropertyDescriptor)\n    return () => {\n    };\n  Object.defineProperty(host, \"adoptedStyleSheets\", {\n    configurable: originalPropertyDescriptor.configurable,\n    enumerable: originalPropertyDescriptor.enumerable,\n    get() {\n      return originalPropertyDescriptor.get?.call(this);\n    },\n    set(sheets) {\n      const result = originalPropertyDescriptor.set?.call(this, sheets);\n      if (hostId !== null && hostId !== -1) {\n        try {\n          stylesheetManager.adoptStyleSheets(sheets, hostId);\n        } catch (e2) {\n        }\n      }\n      return result;\n    }\n  });\n  return callbackWrapper(() => {\n    Object.defineProperty(host, \"adoptedStyleSheets\", {\n      configurable: originalPropertyDescriptor.configurable,\n      enumerable: originalPropertyDescriptor.enumerable,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      get: originalPropertyDescriptor.get,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      set: originalPropertyDescriptor.set\n    });\n  });\n}\nfunction initStyleDeclarationObserver({\n  styleDeclarationCb,\n  mirror: mirror2,\n  ignoreCSSAttributes,\n  stylesheetManager\n}, { win }) {\n  const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n  win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [property, value, priority] = argumentsList;\n        if (ignoreCSSAttributes.has(property)) {\n          return setProperty.apply(thisArg, [property, value, priority]);\n        }\n        const { id, styleId } = getIdAndStyleId(\n          thisArg.parentRule?.parentStyleSheet,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleDeclarationCb({\n            id,\n            styleId,\n            set: {\n              property,\n              value,\n              priority\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            index: getNestedCSSRulePositions(thisArg.parentRule)\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n  win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n    apply: callbackWrapper(\n      (target, thisArg, argumentsList) => {\n        const [property] = argumentsList;\n        if (ignoreCSSAttributes.has(property)) {\n          return removeProperty.apply(thisArg, [property]);\n        }\n        const { id, styleId } = getIdAndStyleId(\n          thisArg.parentRule?.parentStyleSheet,\n          mirror2,\n          stylesheetManager.styleMirror\n        );\n        if (id && id !== -1 || styleId && styleId !== -1) {\n          styleDeclarationCb({\n            id,\n            styleId,\n            remove: {\n              property\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            index: getNestedCSSRulePositions(thisArg.parentRule)\n          });\n        }\n        return target.apply(thisArg, argumentsList);\n      }\n    )\n  });\n  return callbackWrapper(() => {\n    win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n  });\n}\nfunction initMediaInteractionObserver({\n  mediaInteractionCb,\n  blockClass,\n  blockSelector,\n  unblockSelector,\n  mirror: mirror2,\n  sampling,\n  doc\n}) {\n  const handler = callbackWrapper(\n    (type) => throttle(\n      callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target || isBlocked(\n          target,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          true\n        )) {\n          return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n          type,\n          id: mirror2.getId(target),\n          currentTime,\n          volume,\n          muted,\n          playbackRate\n        });\n      }),\n      sampling.media || 500\n    )\n  );\n  const handlers = [\n    on(\"play\", handler(MediaInteractions.Play), doc),\n    on(\"pause\", handler(MediaInteractions.Pause), doc),\n    on(\"seeked\", handler(MediaInteractions.Seeked), doc),\n    on(\"volumechange\", handler(MediaInteractions.VolumeChange), doc),\n    on(\"ratechange\", handler(MediaInteractions.RateChange), doc)\n  ];\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initFontObserver({ fontCb, doc }) {\n  const win = doc.defaultView;\n  if (!win) {\n    return () => {\n    };\n  }\n  const handlers = [];\n  const fontMap = /* @__PURE__ */ new WeakMap();\n  const originalFontFace = win.FontFace;\n  win.FontFace = function FontFace2(family, source, descriptors) {\n    const fontFace = new originalFontFace(family, source, descriptors);\n    fontMap.set(fontFace, {\n      family,\n      buffer: typeof source !== \"string\",\n      descriptors,\n      fontSource: typeof source === \"string\" ? source : JSON.stringify(Array.from(new Uint8Array(source)))\n    });\n    return fontFace;\n  };\n  const restoreHandler = patch(\n    doc.fonts,\n    \"add\",\n    function(original) {\n      return function(fontFace) {\n        setTimeout$1(\n          callbackWrapper(() => {\n            const p = fontMap.get(fontFace);\n            if (p) {\n              fontCb(p);\n              fontMap.delete(fontFace);\n            }\n          }),\n          0\n        );\n        return original.apply(this, [fontFace]);\n      };\n    }\n  );\n  handlers.push(() => {\n    win.FontFace = originalFontFace;\n  });\n  handlers.push(restoreHandler);\n  return callbackWrapper(() => {\n    handlers.forEach((h) => h());\n  });\n}\nfunction initSelectionObserver(param) {\n  const {\n    doc,\n    mirror: mirror2,\n    blockClass,\n    blockSelector,\n    unblockSelector,\n    selectionCb\n  } = param;\n  let collapsed = true;\n  const updateSelection = callbackWrapper(() => {\n    const selection = doc.getSelection();\n    if (!selection || collapsed && selection?.isCollapsed) return;\n    collapsed = selection.isCollapsed || false;\n    const ranges = [];\n    const count = selection.rangeCount || 0;\n    for (let i2 = 0; i2 < count; i2++) {\n      const range = selection.getRangeAt(i2);\n      const { startContainer, startOffset, endContainer, endOffset } = range;\n      const blocked = isBlocked(\n        startContainer,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        true\n      ) || isBlocked(\n        endContainer,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        true\n      );\n      if (blocked) continue;\n      ranges.push({\n        start: mirror2.getId(startContainer),\n        startOffset,\n        end: mirror2.getId(endContainer),\n        endOffset\n      });\n    }\n    selectionCb({ ranges });\n  });\n  updateSelection();\n  return on(\"selectionchange\", updateSelection);\n}\nfunction initCustomElementObserver({\n  doc,\n  customElementCb\n}) {\n  const win = doc.defaultView;\n  if (!win || !win.customElements) return () => {\n  };\n  const restoreHandler = patch(\n    win.customElements,\n    \"define\",\n    function(original) {\n      return function(name, constructor, options) {\n        try {\n          customElementCb({\n            define: {\n              name\n            }\n          });\n        } catch (e2) {\n        }\n        return original.apply(this, [name, constructor, options]);\n      };\n    }\n  );\n  return restoreHandler;\n}\nfunction initObservers(o2, _hooks = {}) {\n  const currentWindow = o2.doc.defaultView;\n  if (!currentWindow) {\n    return () => {\n    };\n  }\n  let mutationObserver;\n  if (o2.recordDOM) {\n    mutationObserver = initMutationObserver(o2, o2.doc);\n  }\n  const mousemoveHandler = initMoveObserver(o2);\n  const mouseInteractionHandler = initMouseInteractionObserver(o2);\n  const scrollHandler = initScrollObserver(o2);\n  const viewportResizeHandler = initViewportResizeObserver(o2, {\n    win: currentWindow\n  });\n  const inputHandler = initInputObserver(o2);\n  const mediaInteractionHandler = initMediaInteractionObserver(o2);\n  let styleSheetObserver = () => {\n  };\n  let adoptedStyleSheetObserver = () => {\n  };\n  let styleDeclarationObserver = () => {\n  };\n  let fontObserver = () => {\n  };\n  if (o2.recordDOM) {\n    styleSheetObserver = initStyleSheetObserver(o2, { win: currentWindow });\n    adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o2, o2.doc);\n    styleDeclarationObserver = initStyleDeclarationObserver(o2, {\n      win: currentWindow\n    });\n    if (o2.collectFonts) {\n      fontObserver = initFontObserver(o2);\n    }\n  }\n  const selectionObserver = initSelectionObserver(o2);\n  const customElementObserver = initCustomElementObserver(o2);\n  const pluginHandlers = [];\n  for (const plugin of o2.plugins) {\n    pluginHandlers.push(\n      plugin.observer(plugin.callback, currentWindow, plugin.options)\n    );\n  }\n  return callbackWrapper(() => {\n    mutationBuffers.forEach((b) => b.reset());\n    mutationObserver?.disconnect();\n    mousemoveHandler();\n    mouseInteractionHandler();\n    scrollHandler();\n    viewportResizeHandler();\n    inputHandler();\n    mediaInteractionHandler();\n    styleSheetObserver();\n    adoptedStyleSheetObserver();\n    styleDeclarationObserver();\n    fontObserver();\n    selectionObserver();\n    customElementObserver();\n    pluginHandlers.forEach((h) => h());\n  });\n}\nfunction hasNestedCSSRule(prop) {\n  return typeof window[prop] !== \"undefined\";\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n  return Boolean(\n    typeof window[prop] !== \"undefined\" && // Note: Generally, this check _shouldn't_ be necessary\n    // However, in some scenarios (e.g. jsdom) this can sometimes fail, so we check for it here\n    window[prop].prototype && \"insertRule\" in window[prop].prototype && \"deleteRule\" in window[prop].prototype\n  );\n}\nclass CrossOriginIframeMirror {\n  constructor(generateIdFn) {\n    this.generateIdFn = generateIdFn;\n    this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap();\n    this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();\n  }\n  getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n    const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n    const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n    let id = idToRemoteIdMap.get(remoteId);\n    if (!id) {\n      id = this.generateIdFn();\n      idToRemoteIdMap.set(remoteId, id);\n      remoteIdToIdMap.set(id, remoteId);\n    }\n    return id;\n  }\n  getIds(iframe, remoteId) {\n    const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n    const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n    return remoteId.map(\n      (id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap)\n    );\n  }\n  getRemoteId(iframe, id, map) {\n    const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n    if (typeof id !== \"number\") return id;\n    const remoteId = remoteIdToIdMap.get(id);\n    if (!remoteId) return -1;\n    return remoteId;\n  }\n  getRemoteIds(iframe, ids) {\n    const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n    return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n  }\n  reset(iframe) {\n    if (!iframe) {\n      this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap();\n      this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();\n      return;\n    }\n    this.iframeIdToRemoteIdMap.delete(iframe);\n    this.iframeRemoteIdToIdMap.delete(iframe);\n  }\n  getIdToRemoteIdMap(iframe) {\n    let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n    if (!idToRemoteIdMap) {\n      idToRemoteIdMap = /* @__PURE__ */ new Map();\n      this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n    }\n    return idToRemoteIdMap;\n  }\n  getRemoteIdToIdMap(iframe) {\n    let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n    if (!remoteIdToIdMap) {\n      remoteIdToIdMap = /* @__PURE__ */ new Map();\n      this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n    }\n    return remoteIdToIdMap;\n  }\n}\nclass IframeManagerNoop {\n  constructor() {\n    this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n    this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap();\n  }\n  addIframe() {\n  }\n  addLoadListener() {\n  }\n  attachIframe() {\n  }\n}\nclass IframeManager {\n  constructor(options) {\n    this.iframes = /* @__PURE__ */ new WeakMap();\n    this.crossOriginIframeMap = /* @__PURE__ */ new WeakMap();\n    this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n    this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap();\n    this.mutationCb = options.mutationCb;\n    this.wrappedEmit = options.wrappedEmit;\n    this.stylesheetManager = options.stylesheetManager;\n    this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n    this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(\n      this.stylesheetManager.styleMirror.generateId.bind(\n        this.stylesheetManager.styleMirror\n      )\n    );\n    this.mirror = options.mirror;\n    if (this.recordCrossOriginIframes) {\n      window.addEventListener(\"message\", this.handleMessage.bind(this));\n    }\n  }\n  addIframe(iframeEl) {\n    this.iframes.set(iframeEl, true);\n    if (iframeEl.contentWindow)\n      this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n  }\n  addLoadListener(cb) {\n    this.loadListener = cb;\n  }\n  attachIframe(iframeEl, childSn) {\n    this.mutationCb({\n      adds: [\n        {\n          parentId: this.mirror.getId(iframeEl),\n          nextId: null,\n          node: childSn\n        }\n      ],\n      removes: [],\n      texts: [],\n      attributes: [],\n      isAttachIframe: true\n    });\n    if (this.recordCrossOriginIframes)\n      iframeEl.contentWindow?.addEventListener(\n        \"message\",\n        this.handleMessage.bind(this)\n      );\n    this.loadListener?.(iframeEl);\n    const iframeDoc = getIFrameContentDocument(iframeEl);\n    if (iframeDoc && iframeDoc.adoptedStyleSheets && iframeDoc.adoptedStyleSheets.length > 0)\n      this.stylesheetManager.adoptStyleSheets(\n        iframeDoc.adoptedStyleSheets,\n        this.mirror.getId(iframeDoc)\n      );\n  }\n  handleMessage(message) {\n    const crossOriginMessageEvent = message;\n    if (crossOriginMessageEvent.data.type !== \"rrweb\" || // To filter out the rrweb messages which are forwarded by some sites.\n    crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n      return;\n    const iframeSourceWindow = message.source;\n    if (!iframeSourceWindow) return;\n    const iframeEl = this.crossOriginIframeMap.get(message.source);\n    if (!iframeEl) return;\n    const transformedEvent = this.transformCrossOriginEvent(\n      iframeEl,\n      crossOriginMessageEvent.data.event\n    );\n    if (transformedEvent)\n      this.wrappedEmit(\n        transformedEvent,\n        crossOriginMessageEvent.data.isCheckout\n      );\n  }\n  transformCrossOriginEvent(iframeEl, e2) {\n    switch (e2.type) {\n      case EventType.FullSnapshot: {\n        this.crossOriginIframeMirror.reset(iframeEl);\n        this.crossOriginIframeStyleMirror.reset(iframeEl);\n        this.replaceIdOnNode(e2.data.node, iframeEl);\n        const rootId = e2.data.node.id;\n        this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n        this.patchRootIdOnNode(e2.data.node, rootId);\n        return {\n          timestamp: e2.timestamp,\n          type: EventType.IncrementalSnapshot,\n          data: {\n            source: IncrementalSource.Mutation,\n            adds: [\n              {\n                parentId: this.mirror.getId(iframeEl),\n                nextId: null,\n                node: e2.data.node\n              }\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true\n          }\n        };\n      }\n      case EventType.Meta:\n      case EventType.Load:\n      case EventType.DomContentLoaded: {\n        return false;\n      }\n      case EventType.Plugin: {\n        return e2;\n      }\n      case EventType.Custom: {\n        this.replaceIds(\n          e2.data.payload,\n          iframeEl,\n          [\"id\", \"parentId\", \"previousId\", \"nextId\"]\n        );\n        return e2;\n      }\n      case EventType.IncrementalSnapshot: {\n        switch (e2.data.source) {\n          case IncrementalSource.Mutation: {\n            e2.data.adds.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\n                \"parentId\",\n                \"nextId\",\n                \"previousId\"\n              ]);\n              this.replaceIdOnNode(n2.node, iframeEl);\n              const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n              rootId && this.patchRootIdOnNode(n2.node, rootId);\n            });\n            e2.data.removes.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\"parentId\", \"id\"]);\n            });\n            e2.data.attributes.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\"id\"]);\n            });\n            e2.data.texts.forEach((n2) => {\n              this.replaceIds(n2, iframeEl, [\"id\"]);\n            });\n            return e2;\n          }\n          case IncrementalSource.Drag:\n          case IncrementalSource.TouchMove:\n          case IncrementalSource.MouseMove: {\n            e2.data.positions.forEach((p) => {\n              this.replaceIds(p, iframeEl, [\"id\"]);\n            });\n            return e2;\n          }\n          case IncrementalSource.ViewportResize: {\n            return false;\n          }\n          case IncrementalSource.MediaInteraction:\n          case IncrementalSource.MouseInteraction:\n          case IncrementalSource.Scroll:\n          case IncrementalSource.CanvasMutation:\n          case IncrementalSource.Input: {\n            this.replaceIds(e2.data, iframeEl, [\"id\"]);\n            return e2;\n          }\n          case IncrementalSource.StyleSheetRule:\n          case IncrementalSource.StyleDeclaration: {\n            this.replaceIds(e2.data, iframeEl, [\"id\"]);\n            this.replaceStyleIds(e2.data, iframeEl, [\"styleId\"]);\n            return e2;\n          }\n          case IncrementalSource.Font: {\n            return e2;\n          }\n          case IncrementalSource.Selection: {\n            e2.data.ranges.forEach((range) => {\n              this.replaceIds(range, iframeEl, [\"start\", \"end\"]);\n            });\n            return e2;\n          }\n          case IncrementalSource.AdoptedStyleSheet: {\n            this.replaceIds(e2.data, iframeEl, [\"id\"]);\n            this.replaceStyleIds(e2.data, iframeEl, [\"styleIds\"]);\n            e2.data.styles?.forEach((style) => {\n              this.replaceStyleIds(style, iframeEl, [\"styleId\"]);\n            });\n            return e2;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  replace(iframeMirror, obj, iframeEl, keys) {\n    for (const key of keys) {\n      if (!Array.isArray(obj[key]) && typeof obj[key] !== \"number\") continue;\n      if (Array.isArray(obj[key])) {\n        obj[key] = iframeMirror.getIds(\n          iframeEl,\n          obj[key]\n        );\n      } else {\n        obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n      }\n    }\n    return obj;\n  }\n  replaceIds(obj, iframeEl, keys) {\n    return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n  }\n  replaceStyleIds(obj, iframeEl, keys) {\n    return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n  }\n  replaceIdOnNode(node, iframeEl) {\n    this.replaceIds(node, iframeEl, [\"id\", \"rootId\"]);\n    if (\"childNodes\" in node) {\n      node.childNodes.forEach((child) => {\n        this.replaceIdOnNode(child, iframeEl);\n      });\n    }\n  }\n  patchRootIdOnNode(node, rootId) {\n    if (node.type !== NodeType$2.Document && !node.rootId) node.rootId = rootId;\n    if (\"childNodes\" in node) {\n      node.childNodes.forEach((child) => {\n        this.patchRootIdOnNode(child, rootId);\n      });\n    }\n  }\n}\nclass ShadowDomManagerNoop {\n  init() {\n  }\n  addShadowRoot() {\n  }\n  observeAttachShadow() {\n  }\n  reset() {\n  }\n}\nclass ShadowDomManager {\n  constructor(options) {\n    this.shadowDoms = /* @__PURE__ */ new WeakSet();\n    this.restoreHandlers = [];\n    this.mutationCb = options.mutationCb;\n    this.scrollCb = options.scrollCb;\n    this.bypassOptions = options.bypassOptions;\n    this.mirror = options.mirror;\n    this.init();\n  }\n  init() {\n    this.reset();\n    this.patchAttachShadow(Element, document);\n  }\n  addShadowRoot(shadowRoot, doc) {\n    if (!isNativeShadowDom(shadowRoot)) return;\n    if (this.shadowDoms.has(shadowRoot)) return;\n    this.shadowDoms.add(shadowRoot);\n    this.bypassOptions.canvasManager.addShadowRoot(shadowRoot);\n    const observer = initMutationObserver(\n      {\n        ...this.bypassOptions,\n        doc,\n        mutationCb: this.mutationCb,\n        mirror: this.mirror,\n        shadowDomManager: this\n      },\n      shadowRoot\n    );\n    this.restoreHandlers.push(() => observer.disconnect());\n    this.restoreHandlers.push(\n      initScrollObserver({\n        ...this.bypassOptions,\n        scrollCb: this.scrollCb,\n        // https://gist.github.com/praveenpuglia/0832da687ed5a5d7a0907046c9ef1813\n        // scroll is not allowed to pass the boundary, so we need to listen the shadow document\n        doc: shadowRoot,\n        mirror: this.mirror\n      })\n    );\n    setTimeout$1(() => {\n      if (shadowRoot.adoptedStyleSheets && shadowRoot.adoptedStyleSheets.length > 0)\n        this.bypassOptions.stylesheetManager.adoptStyleSheets(\n          shadowRoot.adoptedStyleSheets,\n          this.mirror.getId(shadowRoot.host)\n        );\n      this.restoreHandlers.push(\n        initAdoptedStyleSheetObserver(\n          {\n            mirror: this.mirror,\n            stylesheetManager: this.bypassOptions.stylesheetManager\n          },\n          shadowRoot\n        )\n      );\n    }, 0);\n  }\n  /**\n   * Monkey patch 'attachShadow' of an IFrameElement to observe newly added shadow doms.\n   */\n  observeAttachShadow(iframeElement) {\n    const iframeDoc = getIFrameContentDocument(iframeElement);\n    const iframeWindow = getIFrameContentWindow(iframeElement);\n    if (!iframeDoc || !iframeWindow) return;\n    this.patchAttachShadow(\n      iframeWindow.Element,\n      iframeDoc\n    );\n  }\n  /**\n   * Patch 'attachShadow' to observe newly added shadow doms.\n   */\n  patchAttachShadow(element, doc) {\n    const manager = this;\n    this.restoreHandlers.push(\n      patch(\n        element.prototype,\n        \"attachShadow\",\n        function(original) {\n          return function(option) {\n            const shadowRoot = original.call(this, option);\n            if (this.shadowRoot && inDom(this))\n              manager.addShadowRoot(this.shadowRoot, doc);\n            return shadowRoot;\n          };\n        }\n      )\n    );\n  }\n  reset() {\n    this.restoreHandlers.forEach((handler) => {\n      try {\n        handler();\n      } catch (e2) {\n      }\n    });\n    this.restoreHandlers = [];\n    this.shadowDoms = /* @__PURE__ */ new WeakSet();\n    this.bypassOptions.canvasManager.resetShadowRoots();\n  }\n}\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar lookup = typeof Uint8Array === \"undefined\" ? [] : new Uint8Array(256);\nfor (var i$1 = 0; i$1 < chars.length; i$1++) {\n  lookup[chars.charCodeAt(i$1)] = i$1;\n}\nvar encode = function(arraybuffer) {\n  var bytes = new Uint8Array(arraybuffer), i2, len = bytes.length, base64 = \"\";\n  for (i2 = 0; i2 < len; i2 += 3) {\n    base64 += chars[bytes[i2] >> 2];\n    base64 += chars[(bytes[i2] & 3) << 4 | bytes[i2 + 1] >> 4];\n    base64 += chars[(bytes[i2 + 1] & 15) << 2 | bytes[i2 + 2] >> 6];\n    base64 += chars[bytes[i2 + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + \"=\";\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + \"==\";\n  }\n  return base64;\n};\nvar decode = function(base64) {\n  var bufferLength = base64.length * 0.75, len = base64.length, i2, p = 0, encoded1, encoded2, encoded3, encoded4;\n  if (base64[base64.length - 1] === \"=\") {\n    bufferLength--;\n    if (base64[base64.length - 2] === \"=\") {\n      bufferLength--;\n    }\n  }\n  var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n  for (i2 = 0; i2 < len; i2 += 4) {\n    encoded1 = lookup[base64.charCodeAt(i2)];\n    encoded2 = lookup[base64.charCodeAt(i2 + 1)];\n    encoded3 = lookup[base64.charCodeAt(i2 + 2)];\n    encoded4 = lookup[base64.charCodeAt(i2 + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arraybuffer;\n};\nconst canvasVarMap = /* @__PURE__ */ new Map();\nfunction variableListFor$1(ctx, ctor) {\n  let contextMap = canvasVarMap.get(ctx);\n  if (!contextMap) {\n    contextMap = /* @__PURE__ */ new Map();\n    canvasVarMap.set(ctx, contextMap);\n  }\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n  return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n  if (!value || !(isInstanceOfWebGLObject(value, win) || typeof value === \"object\"))\n    return;\n  const name = value.constructor.name;\n  const list = variableListFor$1(ctx, name);\n  let index = list.indexOf(value);\n  if (index === -1) {\n    index = list.length;\n    list.push(value);\n  }\n  return index;\n};\nfunction serializeArg(value, win, ctx) {\n  if (value instanceof Array) {\n    return value.map((arg) => serializeArg(arg, win, ctx));\n  } else if (value === null) {\n    return value;\n  } else if (value instanceof Float32Array || value instanceof Float64Array || value instanceof Int32Array || value instanceof Uint32Array || value instanceof Uint8Array || value instanceof Uint16Array || value instanceof Int16Array || value instanceof Int8Array || value instanceof Uint8ClampedArray) {\n    const name = value.constructor.name;\n    return {\n      rr_type: name,\n      args: [Object.values(value)]\n    };\n  } else if (\n    // SharedArrayBuffer disabled on most browsers due to spectre.\n    // More info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/SharedArrayBuffer\n    // value instanceof SharedArrayBuffer ||\n    value instanceof ArrayBuffer\n  ) {\n    const name = value.constructor.name;\n    const base64 = encode(value);\n    return {\n      rr_type: name,\n      base64\n    };\n  } else if (value instanceof DataView) {\n    const name = value.constructor.name;\n    return {\n      rr_type: name,\n      args: [\n        serializeArg(value.buffer, win, ctx),\n        value.byteOffset,\n        value.byteLength\n      ]\n    };\n  } else if (value instanceof HTMLImageElement) {\n    const name = value.constructor.name;\n    const { src } = value;\n    return {\n      rr_type: name,\n      src\n    };\n  } else if (value instanceof HTMLCanvasElement) {\n    const name = \"HTMLImageElement\";\n    const src = value.toDataURL();\n    return {\n      rr_type: name,\n      src\n    };\n  } else if (value instanceof ImageData) {\n    const name = value.constructor.name;\n    return {\n      rr_type: name,\n      args: [serializeArg(value.data, win, ctx), value.width, value.height]\n    };\n  } else if (isInstanceOfWebGLObject(value, win) || typeof value === \"object\") {\n    const name = value.constructor.name;\n    const index = saveWebGLVar(value, win, ctx);\n    return {\n      rr_type: name,\n      index\n    };\n  }\n  return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n  return args.map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n  const webGLConstructorNames = [\n    \"WebGLActiveInfo\",\n    \"WebGLBuffer\",\n    \"WebGLFramebuffer\",\n    \"WebGLProgram\",\n    \"WebGLRenderbuffer\",\n    \"WebGLShader\",\n    \"WebGLShaderPrecisionFormat\",\n    \"WebGLTexture\",\n    \"WebGLUniformLocation\",\n    \"WebGLVertexArrayObject\",\n    // In old Chrome versions, value won't be an instanceof WebGLVertexArrayObject.\n    \"WebGLVertexArrayObjectOES\"\n  ];\n  const supportedWebGLConstructorNames = webGLConstructorNames.filter(\n    (name) => typeof win[name] === \"function\"\n  );\n  return Boolean(\n    supportedWebGLConstructorNames.find(\n      (name) => value instanceof win[name]\n    )\n  );\n};\nfunction initCanvas2DMutationObserver(cb, win, blockClass2, blockSelector, unblockSelector) {\n  const handlers = [];\n  const props2D = Object.getOwnPropertyNames(\n    win.CanvasRenderingContext2D.prototype\n  );\n  for (const prop of props2D) {\n    try {\n      if (typeof win.CanvasRenderingContext2D.prototype[prop] !== \"function\") {\n        continue;\n      }\n      const restoreHandler = patch(\n        win.CanvasRenderingContext2D.prototype,\n        prop,\n        function(original) {\n          return function(...args) {\n            if (!isBlocked(\n              this.canvas,\n              blockClass2,\n              blockSelector,\n              unblockSelector,\n              true\n            )) {\n              setTimeout$1(() => {\n                const recordArgs = serializeArgs(args, win, this);\n                cb(this.canvas, {\n                  type: CanvasContext[\"2D\"],\n                  property: prop,\n                  args: recordArgs\n                });\n              }, 0);\n            }\n            return original.apply(this, args);\n          };\n        }\n      );\n      handlers.push(restoreHandler);\n    } catch {\n      const hookHandler = hookSetter(\n        win.CanvasRenderingContext2D.prototype,\n        prop,\n        {\n          set(v2) {\n            cb(this.canvas, {\n              type: CanvasContext[\"2D\"],\n              property: prop,\n              args: [v2],\n              setter: true\n            });\n          }\n        }\n      );\n      handlers.push(hookHandler);\n    }\n  }\n  return () => {\n    handlers.forEach((h) => h());\n  };\n}\nfunction getNormalizedContextName(contextType) {\n  return contextType === \"experimental-webgl\" ? \"webgl\" : contextType;\n}\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n  const handlers = [];\n  try {\n    const restoreHandler = patch(\n      win.HTMLCanvasElement.prototype,\n      \"getContext\",\n      function(original) {\n        return function(contextType, ...args) {\n          if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n            const ctxName = getNormalizedContextName(contextType);\n            if (!(\"__context\" in this)) this.__context = ctxName;\n            if (setPreserveDrawingBufferToTrue && [\"webgl\", \"webgl2\"].includes(ctxName)) {\n              if (args[0] && typeof args[0] === \"object\") {\n                const contextAttributes = args[0];\n                if (!contextAttributes.preserveDrawingBuffer) {\n                  contextAttributes.preserveDrawingBuffer = true;\n                }\n              } else {\n                args.splice(0, 1, {\n                  preserveDrawingBuffer: true\n                });\n              }\n            }\n          }\n          return original.apply(this, [contextType, ...args]);\n        };\n      }\n    );\n    handlers.push(restoreHandler);\n  } catch {\n    console.error(\"failed to patch HTMLCanvasElement.prototype.getContext\");\n  }\n  return () => {\n    handlers.forEach((h) => h());\n  };\n}\nfunction patchGLPrototype(prototype, type, cb, blockClass2, blockSelector, unblockSelector, _mirror2, win) {\n  const handlers = [];\n  const props = Object.getOwnPropertyNames(prototype);\n  for (const prop of props) {\n    if (\n      //prop.startsWith('get') ||  // e.g. getProgramParameter, but too risky\n      [\n        \"isContextLost\",\n        \"canvas\",\n        \"drawingBufferWidth\",\n        \"drawingBufferHeight\"\n      ].includes(prop)\n    ) {\n      continue;\n    }\n    try {\n      if (typeof prototype[prop] !== \"function\") {\n        continue;\n      }\n      const restoreHandler = patch(\n        prototype,\n        prop,\n        function(original) {\n          return function(...args) {\n            const result = original.apply(this, args);\n            saveWebGLVar(result, win, this);\n            if (\"tagName\" in this.canvas && !isBlocked(\n              this.canvas,\n              blockClass2,\n              blockSelector,\n              unblockSelector,\n              true\n            )) {\n              const recordArgs = serializeArgs(args, win, this);\n              const mutation = {\n                type,\n                property: prop,\n                args: recordArgs\n              };\n              cb(this.canvas, mutation);\n            }\n            return result;\n          };\n        }\n      );\n      handlers.push(restoreHandler);\n    } catch {\n      const hookHandler = hookSetter(prototype, prop, {\n        set(v2) {\n          cb(this.canvas, {\n            type,\n            property: prop,\n            args: [v2],\n            setter: true\n          });\n        }\n      });\n      handlers.push(hookHandler);\n    }\n  }\n  return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass2, blockSelector, unblockSelector, mirror2) {\n  const handlers = [];\n  handlers.push(\n    ...patchGLPrototype(\n      win.WebGLRenderingContext.prototype,\n      CanvasContext.WebGL,\n      cb,\n      blockClass2,\n      blockSelector,\n      unblockSelector,\n      mirror2,\n      win\n    )\n  );\n  if (typeof win.WebGL2RenderingContext !== \"undefined\") {\n    handlers.push(\n      ...patchGLPrototype(\n        win.WebGL2RenderingContext.prototype,\n        CanvasContext.WebGL2,\n        cb,\n        blockClass2,\n        blockSelector,\n        unblockSelector,\n        mirror2,\n        win\n      )\n    );\n  }\n  return () => {\n    handlers.forEach((h) => h());\n  };\n}\nconst r$1 = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\nfunction t$1() {\n  const t2 = new Blob([r$1]);\n  return URL.createObjectURL(t2);\n}\nclass CanvasManagerNoop {\n  reset() {\n  }\n  freeze() {\n  }\n  unfreeze() {\n  }\n  lock() {\n  }\n  unlock() {\n  }\n  snapshot() {\n  }\n  addWindow() {\n  }\n  addShadowRoot() {\n  }\n  resetShadowRoots() {\n  }\n}\nclass CanvasManager {\n  constructor(options) {\n    this.pendingCanvasMutations = /* @__PURE__ */ new Map();\n    this.rafStamps = { latestId: 0, invokeId: null };\n    this.shadowDoms = /* @__PURE__ */ new Set();\n    this.windowsSet = /* @__PURE__ */ new WeakSet();\n    this.windows = [];\n    this.restoreHandlers = [];\n    this.frozen = false;\n    this.locked = false;\n    this.snapshotInProgressMap = /* @__PURE__ */ new Map();\n    this.worker = null;\n    this.lastSnapshotTime = 0;\n    this.processMutation = (target, mutation) => {\n      const newFrame = this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId;\n      if (newFrame || !this.rafStamps.invokeId)\n        this.rafStamps.invokeId = this.rafStamps.latestId;\n      if (!this.pendingCanvasMutations.has(target)) {\n        this.pendingCanvasMutations.set(target, []);\n      }\n      this.pendingCanvasMutations.get(target).push(mutation);\n    };\n    const {\n      sampling = \"all\",\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maxCanvasSize,\n      recordCanvas,\n      dataURLOptions,\n      errorHandler: errorHandler2\n    } = options;\n    this.mutationCb = options.mutationCb;\n    this.mirror = options.mirror;\n    this.options = options;\n    if (errorHandler2) {\n      registerErrorHandler(errorHandler2);\n    }\n    if (recordCanvas && typeof sampling === \"number\" || options.enableManualSnapshot) {\n      this.worker = this.initFPSWorker();\n    }\n    this.addWindow(win);\n    if (options.enableManualSnapshot) {\n      return;\n    }\n    callbackWrapper(() => {\n      if (recordCanvas && sampling === \"all\") {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n      }\n      if (recordCanvas && typeof sampling === \"number\") {\n        this.initCanvasFPSObserver(\n          sampling,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          maxCanvasSize,\n          {\n            dataURLOptions\n          }\n        );\n      }\n    })();\n  }\n  reset() {\n    this.pendingCanvasMutations.clear();\n    this.restoreHandlers.forEach((handler) => {\n      try {\n        handler();\n      } catch (e2) {\n      }\n    });\n    this.restoreHandlers = [];\n    this.windowsSet = /* @__PURE__ */ new WeakSet();\n    this.windows = [];\n    this.shadowDoms = /* @__PURE__ */ new Set();\n    this.worker?.terminate();\n    this.worker = null;\n    this.snapshotInProgressMap = /* @__PURE__ */ new Map();\n  }\n  freeze() {\n    this.frozen = true;\n  }\n  unfreeze() {\n    this.frozen = false;\n  }\n  lock() {\n    this.locked = true;\n  }\n  unlock() {\n    this.locked = false;\n  }\n  addWindow(win) {\n    const {\n      sampling = \"all\",\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      recordCanvas,\n      enableManualSnapshot\n    } = this.options;\n    if (this.windowsSet.has(win)) return;\n    if (enableManualSnapshot) {\n      this.windowsSet.add(win);\n      this.windows.push(new WeakRef(win));\n      return;\n    }\n    callbackWrapper(() => {\n      if (recordCanvas && sampling === \"all\") {\n        this.initCanvasMutationObserver(\n          win,\n          blockClass,\n          blockSelector,\n          unblockSelector\n        );\n      }\n      if (recordCanvas && typeof sampling === \"number\") {\n        const canvasContextReset = initCanvasContextObserver(\n          win,\n          blockClass,\n          blockSelector,\n          unblockSelector,\n          true\n        );\n        this.restoreHandlers.push(() => {\n          canvasContextReset();\n        });\n      }\n    })();\n    this.windowsSet.add(win);\n    this.windows.push(new WeakRef(win));\n  }\n  addShadowRoot(shadowRoot) {\n    this.shadowDoms.add(new WeakRef(shadowRoot));\n  }\n  resetShadowRoots() {\n    this.shadowDoms = /* @__PURE__ */ new Set();\n  }\n  initFPSWorker() {\n    const worker = new Worker(t$1());\n    worker.onmessage = (e2) => {\n      const data = e2.data;\n      const { id } = data;\n      this.snapshotInProgressMap.set(id, false);\n      if (!(\"base64\" in data)) return;\n      const { base64, type, width, height } = data;\n      this.mutationCb({\n        id,\n        type: CanvasContext[\"2D\"],\n        commands: [\n          {\n            property: \"clearRect\",\n            // wipe canvas\n            args: [0, 0, width, height]\n          },\n          {\n            property: \"drawImage\",\n            // draws (semi-transparent) image\n            args: [\n              {\n                rr_type: \"ImageBitmap\",\n                args: [\n                  {\n                    rr_type: \"Blob\",\n                    data: [{ rr_type: \"ArrayBuffer\", base64 }],\n                    type\n                  }\n                ]\n              },\n              0,\n              0,\n              // The below args are needed if we enforce a max size, we want to\n              // retain the original size when drawing the image (which should be smaller)\n              width,\n              height\n            ]\n          }\n        ]\n      });\n    };\n    return worker;\n  }\n  initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\n    const rafId = this.takeSnapshot(\n      false,\n      fps,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maxCanvasSize,\n      options.dataURLOptions\n    );\n    this.restoreHandlers.push(() => {\n      cancelAnimationFrame(rafId);\n    });\n  }\n  initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n    const canvasContextReset = initCanvasContextObserver(\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      false\n    );\n    const canvas2DReset = initCanvas2DMutationObserver(\n      this.processMutation.bind(this),\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector\n    );\n    const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(\n      this.processMutation.bind(this),\n      win,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      this.mirror\n    );\n    this.restoreHandlers.push(() => {\n      canvasContextReset();\n      canvas2DReset();\n      canvasWebGL1and2Reset();\n    });\n  }\n  snapshot(canvasElement) {\n    const { options } = this;\n    const rafId = this.takeSnapshot(\n      true,\n      options.sampling === \"all\" ? 2 : options.sampling || 2,\n      options.blockClass,\n      options.blockSelector,\n      options.unblockSelector,\n      options.maxCanvasSize,\n      options.dataURLOptions,\n      canvasElement\n    );\n    this.restoreHandlers.push(() => {\n      cancelAnimationFrame(rafId);\n    });\n  }\n  takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\n    const timeBetweenSnapshots = 1e3 / fps;\n    let rafId;\n    const getCanvas = (canvasElement2) => {\n      if (canvasElement2) {\n        return [canvasElement2];\n      }\n      const matchedCanvas = [];\n      const searchCanvas = (root) => {\n        root.querySelectorAll(\"canvas\").forEach((canvas) => {\n          if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\n            matchedCanvas.push(canvas);\n          }\n        });\n      };\n      for (const item of this.windows) {\n        const window2 = item.deref();\n        let _document;\n        try {\n          _document = window2 && window2.document;\n        } catch {\n        }\n        if (_document) {\n          searchCanvas(_document);\n        }\n      }\n      for (const item of this.shadowDoms) {\n        const shadowRoot = item.deref();\n        if (shadowRoot) {\n          searchCanvas(shadowRoot);\n        }\n      }\n      return matchedCanvas;\n    };\n    const takeCanvasSnapshots = (timestamp) => {\n      if (!this.windows.length) {\n        return;\n      }\n      if (this.lastSnapshotTime && timestamp - this.lastSnapshotTime < timeBetweenSnapshots) {\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        return;\n      }\n      this.lastSnapshotTime = timestamp;\n      getCanvas(canvasElement).forEach((canvas) => {\n        if (!this.mirror.hasNode(canvas)) {\n          return;\n        }\n        const id = this.mirror.getId(canvas);\n        if (this.snapshotInProgressMap.get(id)) return;\n        if (!canvas.width || !canvas.height) return;\n        this.snapshotInProgressMap.set(id, true);\n        if (!isManualSnapshot && [\"webgl\", \"webgl2\"].includes(canvas.__context)) {\n          const context = canvas.getContext(canvas.__context);\n          if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\n            context.clear(context.COLOR_BUFFER_BIT);\n          }\n        }\n        createImageBitmap(canvas).then((bitmap) => {\n          this.worker?.postMessage(\n            {\n              id,\n              bitmap,\n              width: canvas.width,\n              height: canvas.height,\n              dataURLOptions,\n              maxCanvasSize\n            },\n            [bitmap]\n          );\n        }).catch((error) => {\n          callbackWrapper(() => {\n            throw error;\n          })();\n        });\n      });\n      if (!isManualSnapshot) {\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n      }\n    };\n    rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n    return rafId;\n  }\n  startPendingCanvasMutationFlusher() {\n    onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n  }\n  startRAFTimestamping() {\n    const setLatestRAFTimestamp = (timestamp) => {\n      this.rafStamps.latestId = timestamp;\n      onRequestAnimationFrame(setLatestRAFTimestamp);\n    };\n    onRequestAnimationFrame(setLatestRAFTimestamp);\n  }\n  flushPendingCanvasMutations() {\n    this.pendingCanvasMutations.forEach(\n      (_values, canvas) => {\n        const id = this.mirror.getId(canvas);\n        this.flushPendingCanvasMutationFor(canvas, id);\n      }\n    );\n    onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n  }\n  flushPendingCanvasMutationFor(canvas, id) {\n    if (this.frozen || this.locked) {\n      return;\n    }\n    const valuesWithType = this.pendingCanvasMutations.get(canvas);\n    if (!valuesWithType || id === -1) return;\n    const values = valuesWithType.map((value) => {\n      const { type: type2, ...rest } = value;\n      return rest;\n    });\n    const { type } = valuesWithType[0];\n    this.mutationCb({ id, type, commands: values });\n    this.pendingCanvasMutations.delete(canvas);\n  }\n}\nclass StylesheetManager {\n  constructor(options) {\n    this.trackedLinkElements = /* @__PURE__ */ new WeakSet();\n    this.styleMirror = new StyleSheetMirror();\n    this.mutationCb = options.mutationCb;\n    this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n  }\n  attachLinkElement(linkEl, childSn) {\n    if (\"_cssText\" in childSn.attributes)\n      this.mutationCb({\n        adds: [],\n        removes: [],\n        texts: [],\n        attributes: [\n          {\n            id: childSn.id,\n            attributes: childSn.attributes\n          }\n        ]\n      });\n    this.trackLinkElement(linkEl);\n  }\n  trackLinkElement(linkEl) {\n    if (this.trackedLinkElements.has(linkEl)) return;\n    this.trackedLinkElements.add(linkEl);\n    this.trackStylesheetInLinkElement(linkEl);\n  }\n  adoptStyleSheets(sheets, hostId) {\n    if (sheets.length === 0) return;\n    const adoptedStyleSheetData = {\n      id: hostId,\n      styleIds: []\n    };\n    const styles = [];\n    for (const sheet of sheets) {\n      let styleId;\n      if (!this.styleMirror.has(sheet)) {\n        styleId = this.styleMirror.add(sheet);\n        styles.push({\n          styleId,\n          rules: Array.from(sheet.rules || CSSRule, (r2, index) => ({\n            rule: stringifyRule(r2),\n            index\n          }))\n        });\n      } else styleId = this.styleMirror.getId(sheet);\n      adoptedStyleSheetData.styleIds.push(styleId);\n    }\n    if (styles.length > 0) adoptedStyleSheetData.styles = styles;\n    this.adoptedStyleSheetCb(adoptedStyleSheetData);\n  }\n  reset() {\n    this.styleMirror.reset();\n    this.trackedLinkElements = /* @__PURE__ */ new WeakSet();\n  }\n  // TODO: take snapshot on stylesheet reload by applying event listener\n  trackStylesheetInLinkElement(_linkEl) {\n  }\n}\nclass ProcessedNodeManager {\n  constructor() {\n    this.nodeMap = /* @__PURE__ */ new WeakMap();\n    this.active = false;\n  }\n  inOtherBuffer(node, thisBuffer) {\n    const buffers = this.nodeMap.get(node);\n    return buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer);\n  }\n  add(node, buffer) {\n    if (!this.active) {\n      this.active = true;\n      onRequestAnimationFrame(() => {\n        this.nodeMap = /* @__PURE__ */ new WeakMap();\n        this.active = false;\n      });\n    }\n    this.nodeMap.set(node, (this.nodeMap.get(node) || /* @__PURE__ */ new Set()).add(buffer));\n  }\n  destroy() {\n  }\n}\nlet wrappedEmit;\nlet _wrappedEmit;\nlet _takeFullSnapshot;\ntry {\n  if (Array.from([1], (x) => x * 2)[0] !== 2) {\n    const cleanFrame = document.createElement(\"iframe\");\n    document.body.appendChild(cleanFrame);\n    Array.from = cleanFrame.contentWindow?.Array.from || Array.from;\n    document.body.removeChild(cleanFrame);\n  }\n} catch (err) {\n  console.debug(\"Unable to override Array.from\", err);\n}\nconst mirror = createMirror$2();\nfunction record(options = {}) {\n  const {\n    emit,\n    checkoutEveryNms,\n    checkoutEveryNth,\n    blockClass = \"rr-block\",\n    blockSelector = null,\n    unblockSelector = null,\n    ignoreClass = \"rr-ignore\",\n    ignoreSelector = null,\n    maskAllText = false,\n    maskTextClass = \"rr-mask\",\n    unmaskTextClass = null,\n    maskTextSelector = null,\n    unmaskTextSelector = null,\n    inlineStylesheet = true,\n    maskAllInputs,\n    maskInputOptions: _maskInputOptions,\n    slimDOMOptions: _slimDOMOptions,\n    maskAttributeFn,\n    maskInputFn,\n    maskTextFn,\n    maxCanvasSize = null,\n    packFn,\n    sampling = {},\n    dataURLOptions = {},\n    mousemoveWait,\n    recordDOM = true,\n    recordCanvas = false,\n    recordCrossOriginIframes = false,\n    recordAfter = options.recordAfter === \"DOMContentLoaded\" ? options.recordAfter : \"load\",\n    userTriggeredOnInput = false,\n    collectFonts = false,\n    inlineImages = false,\n    plugins,\n    keepIframeSrcFn = () => false,\n    ignoreCSSAttributes = /* @__PURE__ */ new Set([]),\n    errorHandler: errorHandler2,\n    onMutation,\n    getCanvasManager\n  } = options;\n  registerErrorHandler(errorHandler2);\n  const inEmittingFrame = recordCrossOriginIframes ? window.parent === window : true;\n  let passEmitsToParent = false;\n  if (!inEmittingFrame) {\n    try {\n      if (window.parent.document) {\n        passEmitsToParent = false;\n      }\n    } catch (e2) {\n      passEmitsToParent = true;\n    }\n  }\n  if (inEmittingFrame && !emit) {\n    throw new Error(\"emit function is required\");\n  }\n  if (!inEmittingFrame && !passEmitsToParent) {\n    return () => {\n    };\n  }\n  if (mousemoveWait !== void 0 && sampling.mousemove === void 0) {\n    sampling.mousemove = mousemoveWait;\n  }\n  mirror.reset();\n  const maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    \"datetime-local\": true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true,\n    radio: true,\n    checkbox: true\n  } : _maskInputOptions !== void 0 ? _maskInputOptions : {};\n  const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === \"all\" ? {\n    script: true,\n    comment: true,\n    headFavicon: true,\n    headWhitespace: true,\n    headMetaSocial: true,\n    headMetaRobots: true,\n    headMetaHttpEquiv: true,\n    headMetaVerification: true,\n    // the following are off for slimDOMOptions === true,\n    // as they destroy some (hidden) info:\n    headMetaAuthorship: _slimDOMOptions === \"all\",\n    headMetaDescKeywords: _slimDOMOptions === \"all\"\n  } : _slimDOMOptions ? _slimDOMOptions : {};\n  polyfill$1();\n  let lastFullSnapshotEvent;\n  let incrementalSnapshotCount = 0;\n  const eventProcessor = (e2) => {\n    for (const plugin of plugins || []) {\n      if (plugin.eventProcessor) {\n        e2 = plugin.eventProcessor(e2);\n      }\n    }\n    if (packFn && // Disable packing events which will be emitted to parent frames.\n    !passEmitsToParent) {\n      e2 = packFn(e2);\n    }\n    return e2;\n  };\n  wrappedEmit = (r2, isCheckout) => {\n    const e2 = r2;\n    e2.timestamp = nowTimestamp();\n    if (mutationBuffers[0]?.isFrozen() && e2.type !== EventType.FullSnapshot && !(e2.type === EventType.IncrementalSnapshot && e2.data.source === IncrementalSource.Mutation)) {\n      mutationBuffers.forEach((buf) => buf.unfreeze());\n    }\n    if (inEmittingFrame) {\n      emit?.(eventProcessor(e2), isCheckout);\n    } else if (passEmitsToParent) {\n      const message = {\n        type: \"rrweb\",\n        event: eventProcessor(e2),\n        origin: window.location.origin,\n        isCheckout\n      };\n      window.parent.postMessage(message, \"*\");\n    }\n    if (e2.type === EventType.FullSnapshot) {\n      lastFullSnapshotEvent = e2;\n      incrementalSnapshotCount = 0;\n    } else if (e2.type === EventType.IncrementalSnapshot) {\n      if (e2.data.source === IncrementalSource.Mutation && e2.data.isAttachIframe) {\n        return;\n      }\n      incrementalSnapshotCount++;\n      const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n      const exceedTime = checkoutEveryNms && lastFullSnapshotEvent && e2.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n      if (exceedCount || exceedTime) {\n        takeFullSnapshot2(true);\n      }\n    }\n  };\n  _wrappedEmit = wrappedEmit;\n  const wrappedMutationEmit = (m) => {\n    wrappedEmit({\n      type: EventType.IncrementalSnapshot,\n      data: {\n        source: IncrementalSource.Mutation,\n        ...m\n      }\n    });\n  };\n  const wrappedScrollEmit = (p) => wrappedEmit({\n    type: EventType.IncrementalSnapshot,\n    data: {\n      source: IncrementalSource.Scroll,\n      ...p\n    }\n  });\n  const wrappedCanvasMutationEmit = (p) => wrappedEmit({\n    type: EventType.IncrementalSnapshot,\n    data: {\n      source: IncrementalSource.CanvasMutation,\n      ...p\n    }\n  });\n  const wrappedAdoptedStyleSheetEmit = (a2) => wrappedEmit({\n    type: EventType.IncrementalSnapshot,\n    data: {\n      source: IncrementalSource.AdoptedStyleSheet,\n      ...a2\n    }\n  });\n  const stylesheetManager = new StylesheetManager({\n    mutationCb: wrappedMutationEmit,\n    adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit\n  });\n  const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === \"boolean\" && __RRWEB_EXCLUDE_IFRAME__ ? new IframeManagerNoop() : new IframeManager({\n    mirror,\n    mutationCb: wrappedMutationEmit,\n    stylesheetManager,\n    recordCrossOriginIframes,\n    wrappedEmit\n  });\n  for (const plugin of plugins || []) {\n    if (plugin.getMirror)\n      plugin.getMirror({\n        nodeMirror: mirror,\n        crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n        crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror\n      });\n  }\n  const processedNodeManager = new ProcessedNodeManager();\n  const canvasManager = _getCanvasManager(\n    getCanvasManager,\n    {\n      mirror,\n      win: window,\n      mutationCb: (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n          source: IncrementalSource.CanvasMutation,\n          ...p\n        }\n      }),\n      recordCanvas,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maxCanvasSize,\n      sampling: sampling[\"canvas\"],\n      dataURLOptions,\n      errorHandler: errorHandler2\n    }\n  );\n  const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === \"boolean\" && __RRWEB_EXCLUDE_SHADOW_DOM__ ? new ShadowDomManagerNoop() : new ShadowDomManager({\n    mutationCb: wrappedMutationEmit,\n    scrollCb: wrappedScrollEmit,\n    bypassOptions: {\n      onMutation,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maskAllText,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      inlineStylesheet,\n      maskInputOptions,\n      dataURLOptions,\n      maskAttributeFn,\n      maskTextFn,\n      maskInputFn,\n      recordCanvas,\n      inlineImages,\n      sampling,\n      slimDOMOptions,\n      iframeManager,\n      stylesheetManager,\n      canvasManager,\n      keepIframeSrcFn,\n      processedNodeManager\n    },\n    mirror\n  });\n  const takeFullSnapshot2 = (isCheckout = false) => {\n    if (!recordDOM) {\n      return;\n    }\n    wrappedEmit(\n      {\n        type: EventType.Meta,\n        data: {\n          href: window.location.href,\n          width: getWindowWidth(),\n          height: getWindowHeight()\n        }\n      },\n      isCheckout\n    );\n    stylesheetManager.reset();\n    shadowDomManager.init();\n    mutationBuffers.forEach((buf) => buf.lock());\n    const node = snapshot(document, {\n      mirror,\n      blockClass,\n      blockSelector,\n      unblockSelector,\n      maskAllText,\n      maskTextClass,\n      unmaskTextClass,\n      maskTextSelector,\n      unmaskTextSelector,\n      inlineStylesheet,\n      maskAllInputs: maskInputOptions,\n      maskAttributeFn,\n      maskInputFn,\n      maskTextFn,\n      slimDOM: slimDOMOptions,\n      dataURLOptions,\n      recordCanvas,\n      inlineImages,\n      onSerialize: (n2) => {\n        if (isSerializedIframe(n2, mirror)) {\n          iframeManager.addIframe(n2);\n        }\n        if (isSerializedStylesheet(n2, mirror)) {\n          stylesheetManager.trackLinkElement(n2);\n        }\n        if (hasShadowRoot(n2)) {\n          shadowDomManager.addShadowRoot(n2.shadowRoot, document);\n        }\n      },\n      onIframeLoad: (iframe, childSn) => {\n        iframeManager.attachIframe(iframe, childSn);\n        if (iframe.contentWindow) {\n          canvasManager.addWindow(iframe.contentWindow);\n        }\n        shadowDomManager.observeAttachShadow(iframe);\n      },\n      onStylesheetLoad: (linkEl, childSn) => {\n        stylesheetManager.attachLinkElement(linkEl, childSn);\n      },\n      keepIframeSrcFn\n    });\n    if (!node) {\n      return console.warn(\"Failed to snapshot the document\");\n    }\n    wrappedEmit({\n      type: EventType.FullSnapshot,\n      data: {\n        node,\n        initialOffset: getWindowScroll(window)\n      }\n    });\n    mutationBuffers.forEach((buf) => buf.unlock());\n    if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n      stylesheetManager.adoptStyleSheets(\n        document.adoptedStyleSheets,\n        mirror.getId(document)\n      );\n  };\n  _takeFullSnapshot = takeFullSnapshot2;\n  try {\n    const handlers = [];\n    const observe = (doc) => {\n      return callbackWrapper(initObservers)(\n        {\n          onMutation,\n          mutationCb: wrappedMutationEmit,\n          mousemoveCb: (positions, source) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source,\n              positions\n            }\n          }),\n          mouseInteractionCb: (d) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.MouseInteraction,\n              ...d\n            }\n          }),\n          scrollCb: wrappedScrollEmit,\n          viewportResizeCb: (d) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.ViewportResize,\n              ...d\n            }\n          }),\n          inputCb: (v2) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.Input,\n              ...v2\n            }\n          }),\n          mediaInteractionCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.MediaInteraction,\n              ...p\n            }\n          }),\n          styleSheetRuleCb: (r2) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.StyleSheetRule,\n              ...r2\n            }\n          }),\n          styleDeclarationCb: (r2) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.StyleDeclaration,\n              ...r2\n            }\n          }),\n          canvasMutationCb: wrappedCanvasMutationEmit,\n          fontCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: IncrementalSource.Font,\n              ...p\n            }\n          }),\n          selectionCb: (p) => {\n            wrappedEmit({\n              type: EventType.IncrementalSnapshot,\n              data: {\n                source: IncrementalSource.Selection,\n                ...p\n              }\n            });\n          },\n          customElementCb: (c2) => {\n            wrappedEmit({\n              type: EventType.IncrementalSnapshot,\n              data: {\n                source: IncrementalSource.CustomElement,\n                ...c2\n              }\n            });\n          },\n          blockClass,\n          ignoreClass,\n          ignoreSelector,\n          maskAllText,\n          maskTextClass,\n          unmaskTextClass,\n          maskTextSelector,\n          unmaskTextSelector,\n          maskInputOptions,\n          inlineStylesheet,\n          sampling,\n          recordDOM,\n          recordCanvas,\n          inlineImages,\n          userTriggeredOnInput,\n          collectFonts,\n          doc,\n          maskAttributeFn,\n          maskInputFn,\n          maskTextFn,\n          keepIframeSrcFn,\n          blockSelector,\n          unblockSelector,\n          slimDOMOptions,\n          dataURLOptions,\n          mirror,\n          iframeManager,\n          stylesheetManager,\n          shadowDomManager,\n          processedNodeManager,\n          canvasManager,\n          ignoreCSSAttributes,\n          plugins: plugins?.filter((p) => p.observer)?.map((p) => ({\n            observer: p.observer,\n            options: p.options,\n            callback: (payload) => wrappedEmit({\n              type: EventType.Plugin,\n              data: {\n                plugin: p.name,\n                payload\n              }\n            })\n          })) || []\n        },\n        {}\n      );\n    };\n    iframeManager.addLoadListener((iframeEl) => {\n      try {\n        handlers.push(observe(iframeEl.contentDocument));\n      } catch (error) {\n        console.warn(error);\n      }\n    });\n    const init = () => {\n      takeFullSnapshot2();\n      handlers.push(observe(document));\n    };\n    if (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n      init();\n    } else {\n      handlers.push(\n        on(\"DOMContentLoaded\", () => {\n          wrappedEmit({\n            type: EventType.DomContentLoaded,\n            data: {}\n          });\n          if (recordAfter === \"DOMContentLoaded\") init();\n        })\n      );\n      handlers.push(\n        on(\n          \"load\",\n          () => {\n            wrappedEmit({\n              type: EventType.Load,\n              data: {}\n            });\n            if (recordAfter === \"load\") init();\n          },\n          window\n        )\n      );\n    }\n    return () => {\n      handlers.forEach((h) => h());\n      processedNodeManager.destroy();\n      _takeFullSnapshot = void 0;\n      unregisterErrorHandler();\n    };\n  } catch (error) {\n    console.warn(error);\n  }\n}\nfunction addCustomEvent(tag, payload) {\n  if (!_wrappedEmit) {\n    throw new Error(\"please add custom event after start recording\");\n  }\n  wrappedEmit({\n    type: EventType.Custom,\n    data: {\n      tag,\n      payload\n    }\n  });\n}\nfunction freezePage() {\n  mutationBuffers.forEach((buf) => buf.freeze());\n}\nfunction takeFullSnapshot(isCheckout) {\n  if (!_takeFullSnapshot) {\n    throw new Error(\"please take full snapshot after start recording\");\n  }\n  _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n  try {\n    return getCanvasManagerFn ? getCanvasManagerFn(options) : new CanvasManagerNoop();\n  } catch {\n    console.warn(\"Unable to initialize CanvasManager\");\n    return new CanvasManagerNoop();\n  }\n}\nfunction mitt$1(n2) {\n  return { all: n2 = n2 || /* @__PURE__ */ new Map(), on: function(t2, e2) {\n    var i2 = n2.get(t2);\n    i2 ? i2.push(e2) : n2.set(t2, [e2]);\n  }, off: function(t2, e2) {\n    var i2 = n2.get(t2);\n    i2 && (e2 ? i2.splice(i2.indexOf(e2) >>> 0, 1) : n2.set(t2, []));\n  }, emit: function(t2, e2) {\n    var i2 = n2.get(t2);\n    i2 && i2.slice().map(function(n3) {\n      n3(e2);\n    }), (i2 = n2.get(\"*\")) && i2.slice().map(function(n3) {\n      n3(t2, e2);\n    });\n  } };\n}\nconst mittProxy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: mitt$1\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction polyfill(w = window, d = document) {\n  if (\"scrollBehavior\" in d.documentElement.style && w.__forceSmoothScrollPolyfill__ !== true) {\n    return;\n  }\n  const Element2 = w.HTMLElement || w.Element;\n  const SCROLL_TIME = 468;\n  const original = {\n    scroll: w.scroll || w.scrollTo,\n    scrollBy: w.scrollBy,\n    elementScroll: Element2.prototype.scroll || scrollElement,\n    scrollIntoView: Element2.prototype.scrollIntoView\n  };\n  const now = w.performance && w.performance.now ? w.performance.now.bind(w.performance) : Date.now;\n  function isMicrosoftBrowser(userAgent) {\n    const userAgentPatterns = [\"MSIE \", \"Trident/\", \"Edge/\"];\n    return new RegExp(userAgentPatterns.join(\"|\")).test(userAgent);\n  }\n  const ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n  function scrollElement(x, y) {\n    this.scrollLeft = x;\n    this.scrollTop = y;\n  }\n  function ease(k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  }\n  function shouldBailOut(firstArg) {\n    if (firstArg === null || typeof firstArg !== \"object\" || firstArg.behavior === void 0 || firstArg.behavior === \"auto\" || firstArg.behavior === \"instant\") {\n      return true;\n    }\n    if (typeof firstArg === \"object\" && firstArg.behavior === \"smooth\") {\n      return false;\n    }\n    throw new TypeError(\n      \"behavior member of ScrollOptions \" + firstArg.behavior + \" is not a valid value for enumeration ScrollBehavior.\"\n    );\n  }\n  function hasScrollableSpace(el, axis) {\n    if (axis === \"Y\") {\n      return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n    }\n    if (axis === \"X\") {\n      return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n    }\n  }\n  function canOverflow(el, axis) {\n    const overflowValue = w.getComputedStyle(el, null)[\"overflow\" + axis];\n    return overflowValue === \"auto\" || overflowValue === \"scroll\";\n  }\n  function isScrollable(el) {\n    const isScrollableY = hasScrollableSpace(el, \"Y\") && canOverflow(el, \"Y\");\n    const isScrollableX = hasScrollableSpace(el, \"X\") && canOverflow(el, \"X\");\n    return isScrollableY || isScrollableX;\n  }\n  function findScrollableParent(el) {\n    while (el !== d.body && isScrollable(el) === false) {\n      el = el.parentNode || el.host;\n    }\n    return el;\n  }\n  function step(context) {\n    const time = now();\n    let value;\n    let currentX;\n    let currentY;\n    let elapsed = (time - context.startTime) / SCROLL_TIME;\n    elapsed = elapsed > 1 ? 1 : elapsed;\n    value = ease(elapsed);\n    currentX = context.startX + (context.x - context.startX) * value;\n    currentY = context.startY + (context.y - context.startY) * value;\n    context.method.call(context.scrollable, currentX, currentY);\n    if (currentX !== context.x || currentY !== context.y) {\n      w.requestAnimationFrame(step.bind(w, context));\n    }\n  }\n  function smoothScroll(el, x, y) {\n    let scrollable;\n    let startX;\n    let startY;\n    let method;\n    const startTime = now();\n    if (el === d.body) {\n      scrollable = w;\n      startX = w.scrollX || w.pageXOffset;\n      startY = w.scrollY || w.pageYOffset;\n      method = original.scroll;\n    } else {\n      scrollable = el;\n      startX = el.scrollLeft;\n      startY = el.scrollTop;\n      method = scrollElement;\n    }\n    step({\n      scrollable,\n      method,\n      startTime,\n      startX,\n      startY,\n      x,\n      y\n    });\n  }\n  w.scroll = w.scrollTo = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0]) === true) {\n      original.scroll.call(\n        w,\n        arguments[0].left !== void 0 ? arguments[0].left : typeof arguments[0] !== \"object\" ? arguments[0] : w.scrollX || w.pageXOffset,\n        // use top prop, second argument if present or fallback to scrollY\n        arguments[0].top !== void 0 ? arguments[0].top : arguments[1] !== void 0 ? arguments[1] : w.scrollY || w.pageYOffset\n      );\n      return;\n    }\n    smoothScroll.call(\n      w,\n      d.body,\n      arguments[0].left !== void 0 ? ~~arguments[0].left : w.scrollX || w.pageXOffset,\n      arguments[0].top !== void 0 ? ~~arguments[0].top : w.scrollY || w.pageYOffset\n    );\n  };\n  w.scrollBy = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0])) {\n      original.scrollBy.call(\n        w,\n        arguments[0].left !== void 0 ? arguments[0].left : typeof arguments[0] !== \"object\" ? arguments[0] : 0,\n        arguments[0].top !== void 0 ? arguments[0].top : arguments[1] !== void 0 ? arguments[1] : 0\n      );\n      return;\n    }\n    smoothScroll.call(\n      w,\n      d.body,\n      ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n      ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n    );\n  };\n  Element2.prototype.scroll = Element2.prototype.scrollTo = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0]) === true) {\n      if (typeof arguments[0] === \"number\" && arguments[1] === void 0) {\n        throw new SyntaxError(\"Value could not be converted\");\n      }\n      original.elementScroll.call(\n        this,\n        // use left prop, first number argument or fallback to scrollLeft\n        arguments[0].left !== void 0 ? ~~arguments[0].left : typeof arguments[0] !== \"object\" ? ~~arguments[0] : this.scrollLeft,\n        // use top prop, second argument or fallback to scrollTop\n        arguments[0].top !== void 0 ? ~~arguments[0].top : arguments[1] !== void 0 ? ~~arguments[1] : this.scrollTop\n      );\n      return;\n    }\n    const left = arguments[0].left;\n    const top = arguments[0].top;\n    smoothScroll.call(\n      this,\n      this,\n      typeof left === \"undefined\" ? this.scrollLeft : ~~left,\n      typeof top === \"undefined\" ? this.scrollTop : ~~top\n    );\n  };\n  Element2.prototype.scrollBy = function() {\n    if (arguments[0] === void 0) {\n      return;\n    }\n    if (shouldBailOut(arguments[0]) === true) {\n      original.elementScroll.call(\n        this,\n        arguments[0].left !== void 0 ? ~~arguments[0].left + this.scrollLeft : ~~arguments[0] + this.scrollLeft,\n        arguments[0].top !== void 0 ? ~~arguments[0].top + this.scrollTop : ~~arguments[1] + this.scrollTop\n      );\n      return;\n    }\n    this.scroll({\n      left: ~~arguments[0].left + this.scrollLeft,\n      top: ~~arguments[0].top + this.scrollTop,\n      behavior: arguments[0].behavior\n    });\n  };\n  Element2.prototype.scrollIntoView = function() {\n    if (shouldBailOut(arguments[0]) === true) {\n      original.scrollIntoView.call(\n        this,\n        arguments[0] === void 0 ? true : arguments[0]\n      );\n      return;\n    }\n    const scrollableParent = findScrollableParent(this);\n    const parentRects = scrollableParent.getBoundingClientRect();\n    const clientRects = this.getBoundingClientRect();\n    if (scrollableParent !== d.body) {\n      smoothScroll.call(\n        this,\n        scrollableParent,\n        scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n        scrollableParent.scrollTop + clientRects.top - parentRects.top\n      );\n      if (w.getComputedStyle(scrollableParent).position !== \"fixed\") {\n        w.scrollBy({\n          left: parentRects.left,\n          top: parentRects.top,\n          behavior: \"smooth\"\n        });\n      }\n    } else {\n      w.scrollBy({\n        left: clientRects.left,\n        top: clientRects.top,\n        behavior: \"smooth\"\n      });\n    }\n  };\n}\nclass Timer {\n  constructor(actions = [], config) {\n    this.timeOffset = 0;\n    this.raf = null;\n    this.actions = actions;\n    this.speed = config.speed;\n  }\n  /**\n   * Add an action, possibly after the timer starts.\n   */\n  addAction(action) {\n    const rafWasActive = this.raf === true;\n    if (!this.actions.length || this.actions[this.actions.length - 1].delay <= action.delay) {\n      this.actions.push(action);\n    } else {\n      const index = this.findActionIndex(action);\n      this.actions.splice(index, 0, action);\n    }\n    if (rafWasActive) {\n      this.raf = onRequestAnimationFrame(this.rafCheck.bind(this));\n    }\n  }\n  start() {\n    this.timeOffset = 0;\n    this.lastTimestamp = performance.now();\n    this.raf = onRequestAnimationFrame(this.rafCheck.bind(this));\n  }\n  rafCheck() {\n    const time = performance.now();\n    this.timeOffset += (time - this.lastTimestamp) * this.speed;\n    this.lastTimestamp = time;\n    while (this.actions.length) {\n      const action = this.actions[0];\n      if (this.timeOffset >= action.delay) {\n        this.actions.shift();\n        action.doAction();\n      } else {\n        break;\n      }\n    }\n    if (this.actions.length > 0) {\n      this.raf = onRequestAnimationFrame(this.rafCheck.bind(this));\n    } else {\n      this.raf = true;\n    }\n  }\n  clear() {\n    if (this.raf) {\n      if (this.raf !== true) {\n        cancelAnimationFrame(this.raf);\n      }\n      this.raf = null;\n    }\n    this.actions.length = 0;\n  }\n  setSpeed(speed) {\n    this.speed = speed;\n  }\n  isActive() {\n    return this.raf !== null;\n  }\n  findActionIndex(action) {\n    let start = 0;\n    let end = this.actions.length - 1;\n    while (start <= end) {\n      const mid = Math.floor((start + end) / 2);\n      if (this.actions[mid].delay < action.delay) {\n        start = mid + 1;\n      } else if (this.actions[mid].delay > action.delay) {\n        end = mid - 1;\n      } else {\n        return mid + 1;\n      }\n    }\n    return start;\n  }\n}\nfunction addDelay(event, baselineTime) {\n  if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.MouseMove && event.data.positions && event.data.positions.length) {\n    const firstOffset = event.data.positions[0].timeOffset;\n    const firstTimestamp = event.timestamp + firstOffset;\n    event.delay = firstTimestamp - baselineTime;\n    return firstTimestamp - baselineTime;\n  }\n  event.delay = event.timestamp - baselineTime;\n  return event.delay;\n}\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction t(t2, n2) {\n  var e2 = \"function\" == typeof Symbol && t2[Symbol.iterator];\n  if (!e2) return t2;\n  var r2, o2, i2 = e2.call(t2), a2 = [];\n  try {\n    for (; (void 0 === n2 || n2-- > 0) && !(r2 = i2.next()).done; ) a2.push(r2.value);\n  } catch (t3) {\n    o2 = { error: t3 };\n  } finally {\n    try {\n      r2 && !r2.done && (e2 = i2.return) && e2.call(i2);\n    } finally {\n      if (o2) throw o2.error;\n    }\n  }\n  return a2;\n}\nvar n;\n!function(t2) {\n  t2[t2.NotStarted = 0] = \"NotStarted\", t2[t2.Running = 1] = \"Running\", t2[t2.Stopped = 2] = \"Stopped\";\n}(n || (n = {}));\nvar e = { type: \"xstate.init\" };\nfunction r(t2) {\n  return void 0 === t2 ? [] : [].concat(t2);\n}\nfunction o(t2) {\n  return { type: \"xstate.assign\", assignment: t2 };\n}\nfunction i(t2, n2) {\n  return \"string\" == typeof (t2 = \"string\" == typeof t2 && n2 && n2[t2] ? n2[t2] : t2) ? { type: t2 } : \"function\" == typeof t2 ? { type: t2.name, exec: t2 } : t2;\n}\nfunction a(t2) {\n  return function(n2) {\n    return t2 === n2;\n  };\n}\nfunction u(t2) {\n  return \"string\" == typeof t2 ? { type: t2 } : t2;\n}\nfunction c(t2, n2) {\n  return { value: t2, context: n2, actions: [], changed: false, matches: a(t2) };\n}\nfunction f(t2, n2, e2) {\n  var r2 = n2, o2 = false;\n  return [t2.filter(function(t3) {\n    if (\"xstate.assign\" === t3.type) {\n      o2 = true;\n      var n3 = Object.assign({}, r2);\n      return \"function\" == typeof t3.assignment ? n3 = t3.assignment(r2, e2) : Object.keys(t3.assignment).forEach(function(o3) {\n        n3[o3] = \"function\" == typeof t3.assignment[o3] ? t3.assignment[o3](r2, e2) : t3.assignment[o3];\n      }), r2 = n3, false;\n    }\n    return true;\n  }), r2, o2];\n}\nfunction s(n2, o2) {\n  void 0 === o2 && (o2 = {});\n  var s2 = t(f(r(n2.states[n2.initial].entry).map(function(t2) {\n    return i(t2, o2.actions);\n  }), n2.context, e), 2), l2 = s2[0], v2 = s2[1], y = { config: n2, _options: o2, initialState: { value: n2.initial, actions: l2, context: v2, matches: a(n2.initial) }, transition: function(e2, o3) {\n    var s3, l3, v3 = \"string\" == typeof e2 ? { value: e2, context: n2.context } : e2, p = v3.value, g = v3.context, d = u(o3), x = n2.states[p];\n    if (x.on) {\n      var m = r(x.on[d.type]);\n      try {\n        for (var h = function(t2) {\n          var n3 = \"function\" == typeof Symbol && Symbol.iterator, e3 = n3 && t2[n3], r2 = 0;\n          if (e3) return e3.call(t2);\n          if (t2 && \"number\" == typeof t2.length) return { next: function() {\n            return t2 && r2 >= t2.length && (t2 = void 0), { value: t2 && t2[r2++], done: !t2 };\n          } };\n          throw new TypeError(n3 ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n        }(m), b = h.next(); !b.done; b = h.next()) {\n          var S = b.value;\n          if (void 0 === S) return c(p, g);\n          var w = \"string\" == typeof S ? { target: S } : S, j = w.target, E = w.actions, R = void 0 === E ? [] : E, N = w.cond, O = void 0 === N ? function() {\n            return true;\n          } : N, _ = void 0 === j, k = null != j ? j : p, T = n2.states[k];\n          if (O(g, d)) {\n            var q = t(f((_ ? r(R) : [].concat(x.exit, R, T.entry).filter(function(t2) {\n              return t2;\n            })).map(function(t2) {\n              return i(t2, y._options.actions);\n            }), g, d), 3), z = q[0], A = q[1], B = q[2], C = null != j ? j : p;\n            return { value: C, context: A, actions: z, changed: j !== p || z.length > 0 || B, matches: a(C) };\n          }\n        }\n      } catch (t2) {\n        s3 = { error: t2 };\n      } finally {\n        try {\n          b && !b.done && (l3 = h.return) && l3.call(h);\n        } finally {\n          if (s3) throw s3.error;\n        }\n      }\n    }\n    return c(p, g);\n  } };\n  return y;\n}\nvar l = function(t2, n2) {\n  return t2.actions.forEach(function(e2) {\n    var r2 = e2.exec;\n    return r2 && r2(t2.context, n2);\n  });\n};\nfunction v(t2) {\n  var r2 = t2.initialState, o2 = n.NotStarted, i2 = /* @__PURE__ */ new Set(), c2 = { _machine: t2, send: function(e2) {\n    o2 === n.Running && (r2 = t2.transition(r2, e2), l(r2, u(e2)), i2.forEach(function(t3) {\n      return t3(r2);\n    }));\n  }, subscribe: function(t3) {\n    return i2.add(t3), t3(r2), { unsubscribe: function() {\n      return i2.delete(t3);\n    } };\n  }, start: function(i3) {\n    if (i3) {\n      var u2 = \"object\" == typeof i3 ? i3 : { context: t2.config.context, value: i3 };\n      r2 = { value: u2.value, actions: [], context: u2.context, matches: a(u2.value) };\n    }\n    return o2 = n.Running, l(r2, e), c2;\n  }, stop: function() {\n    return o2 = n.Stopped, i2.clear(), c2;\n  }, get state() {\n    return r2;\n  }, get status() {\n    return o2;\n  } };\n  return c2;\n}\nfunction discardPriorSnapshots(events, baselineTime) {\n  for (let idx = events.length - 1; idx >= 0; idx--) {\n    const event = events[idx];\n    if (event.type === EventType.Meta) {\n      if (event.timestamp <= baselineTime) {\n        return events.slice(idx);\n      }\n    }\n  }\n  return events;\n}\nfunction createPlayerService(context, { getCastFn, applyEventsSynchronously, emitter }) {\n  const playerMachine = s(\n    {\n      id: \"player\",\n      context,\n      initial: \"paused\",\n      states: {\n        playing: {\n          on: {\n            PAUSE: {\n              target: \"paused\",\n              actions: [\"pause\"]\n            },\n            CAST_EVENT: {\n              target: \"playing\",\n              actions: \"castEvent\"\n            },\n            END: {\n              target: \"paused\",\n              actions: [\"resetLastPlayedEvent\", \"pause\"]\n            },\n            ADD_EVENT: {\n              target: \"playing\",\n              actions: [\"addEvent\"]\n            }\n          }\n        },\n        paused: {\n          on: {\n            PLAY: {\n              target: \"playing\",\n              actions: [\"recordTimeOffset\", \"play\"]\n            },\n            CAST_EVENT: {\n              target: \"paused\",\n              actions: \"castEvent\"\n            },\n            TO_LIVE: {\n              target: \"live\",\n              actions: [\"startLive\"]\n            },\n            ADD_EVENT: {\n              target: \"paused\",\n              actions: [\"addEvent\"]\n            }\n          }\n        },\n        live: {\n          on: {\n            ADD_EVENT: {\n              target: \"live\",\n              actions: [\"addEvent\"]\n            },\n            CAST_EVENT: {\n              target: \"live\",\n              actions: [\"castEvent\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        castEvent: o({\n          lastPlayedEvent: (ctx, event) => {\n            if (event.type === \"CAST_EVENT\") {\n              return event.payload.event;\n            }\n            return ctx.lastPlayedEvent;\n          }\n        }),\n        recordTimeOffset: o((ctx, event) => {\n          let timeOffset = ctx.timeOffset;\n          if (\"payload\" in event && \"timeOffset\" in event.payload) {\n            timeOffset = event.payload.timeOffset;\n          }\n          return {\n            ...ctx,\n            timeOffset,\n            baselineTime: ctx.events[0].timestamp + timeOffset\n          };\n        }),\n        play(ctx) {\n          const { timer, events, baselineTime, lastPlayedEvent } = ctx;\n          timer.clear();\n          for (const event of events) {\n            addDelay(event, baselineTime);\n          }\n          const neededEvents = discardPriorSnapshots(events, baselineTime);\n          let lastPlayedTimestamp = lastPlayedEvent?.timestamp;\n          if (lastPlayedEvent?.type === EventType.IncrementalSnapshot && lastPlayedEvent.data.source === IncrementalSource.MouseMove) {\n            lastPlayedTimestamp = lastPlayedEvent.timestamp + lastPlayedEvent.data.positions[0]?.timeOffset;\n          }\n          if (baselineTime < (lastPlayedTimestamp || 0)) {\n            emitter.emit(ReplayerEvents.PlayBack);\n          }\n          const syncEvents = new Array();\n          for (const event of neededEvents) {\n            if (lastPlayedTimestamp && lastPlayedTimestamp < baselineTime && (event.timestamp <= lastPlayedTimestamp || event === lastPlayedEvent)) {\n              continue;\n            }\n            if (event.timestamp < baselineTime) {\n              syncEvents.push(event);\n            } else {\n              const castFn = getCastFn(event, false);\n              timer.addAction({\n                doAction: () => {\n                  castFn();\n                },\n                delay: event.delay\n              });\n            }\n          }\n          applyEventsSynchronously(syncEvents);\n          emitter.emit(ReplayerEvents.Flush);\n          timer.start();\n        },\n        pause(ctx) {\n          ctx.timer.clear();\n        },\n        resetLastPlayedEvent: o((ctx) => {\n          return {\n            ...ctx,\n            lastPlayedEvent: null\n          };\n        }),\n        startLive: o({\n          baselineTime: (ctx, event) => {\n            ctx.timer.start();\n            if (event.type === \"TO_LIVE\" && event.payload.baselineTime) {\n              return event.payload.baselineTime;\n            }\n            return Date.now();\n          }\n        }),\n        addEvent: o((ctx, machineEvent) => {\n          const { baselineTime, timer, events } = ctx;\n          if (machineEvent.type === \"ADD_EVENT\") {\n            const { event } = machineEvent.payload;\n            addDelay(event, baselineTime);\n            let end = events.length - 1;\n            if (!events[end] || events[end].timestamp <= event.timestamp) {\n              events.push(event);\n            } else {\n              let insertionIndex = -1;\n              let start = 0;\n              while (start <= end) {\n                const mid = Math.floor((start + end) / 2);\n                if (events[mid].timestamp <= event.timestamp) {\n                  start = mid + 1;\n                } else {\n                  end = mid - 1;\n                }\n              }\n              if (insertionIndex === -1) {\n                insertionIndex = start;\n              }\n              events.splice(insertionIndex, 0, event);\n            }\n            const isSync = event.timestamp < baselineTime;\n            const castFn = getCastFn(event, isSync);\n            if (isSync) {\n              castFn();\n            } else if (timer.isActive()) {\n              timer.addAction({\n                doAction: () => {\n                  castFn();\n                },\n                delay: event.delay\n              });\n            }\n          }\n          return { ...ctx, events };\n        })\n      }\n    }\n  );\n  return v(playerMachine);\n}\nfunction createSpeedService(context) {\n  const speedMachine = s(\n    {\n      id: \"speed\",\n      context,\n      initial: \"normal\",\n      states: {\n        normal: {\n          on: {\n            FAST_FORWARD: {\n              target: \"skipping\",\n              actions: [\"recordSpeed\", \"setSpeed\"]\n            },\n            SET_SPEED: {\n              target: \"normal\",\n              actions: [\"setSpeed\"]\n            }\n          }\n        },\n        skipping: {\n          on: {\n            BACK_TO_NORMAL: {\n              target: \"normal\",\n              actions: [\"restoreSpeed\"]\n            },\n            SET_SPEED: {\n              target: \"normal\",\n              actions: [\"setSpeed\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        setSpeed: (ctx, event) => {\n          if (\"payload\" in event) {\n            ctx.timer.setSpeed(event.payload.speed);\n          }\n        },\n        recordSpeed: o({\n          normalSpeed: (ctx) => ctx.timer.speed\n        }),\n        restoreSpeed: (ctx) => {\n          ctx.timer.setSpeed(ctx.normalSpeed);\n        }\n      }\n    }\n  );\n  return v(speedMachine);\n}\nconst rules = (blockClass) => [\n  `.${blockClass} { background: currentColor }`,\n  \"noscript { display: none !important; }\"\n];\nconst webGLVarMap = /* @__PURE__ */ new Map();\nfunction variableListFor(ctx, ctor) {\n  let contextMap = webGLVarMap.get(ctx);\n  if (!contextMap) {\n    contextMap = /* @__PURE__ */ new Map();\n    webGLVarMap.set(ctx, contextMap);\n  }\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n  return contextMap.get(ctor);\n}\nfunction deserializeArg(imageMap, ctx, preload) {\n  return async (arg) => {\n    if (arg && typeof arg === \"object\" && \"rr_type\" in arg) {\n      if (preload) preload.isUnchanged = false;\n      if (arg.rr_type === \"ImageBitmap\" && \"args\" in arg) {\n        const args = await deserializeArg(imageMap, ctx, preload)(arg.args);\n        return await createImageBitmap.apply(null, args);\n      } else if (\"index\" in arg) {\n        if (preload || ctx === null) return arg;\n        const { rr_type: name, index } = arg;\n        return variableListFor(ctx, name)[index];\n      } else if (\"args\" in arg) {\n        const { rr_type: name, args } = arg;\n        const ctor = window[name];\n        return new ctor(\n          ...await Promise.all(\n            args.map(deserializeArg(imageMap, ctx, preload))\n          )\n        );\n      } else if (\"base64\" in arg) {\n        return decode(arg.base64);\n      } else if (\"src\" in arg) {\n        const image = imageMap.get(arg.src);\n        if (image) {\n          return image;\n        } else {\n          const image2 = new Image();\n          image2.src = arg.src;\n          imageMap.set(arg.src, image2);\n          return image2;\n        }\n      } else if (\"data\" in arg && arg.rr_type === \"Blob\") {\n        const blobContents = await Promise.all(\n          arg.data.map(deserializeArg(imageMap, ctx, preload))\n        );\n        const blob = new Blob(blobContents, {\n          type: arg.type\n        });\n        return blob;\n      }\n    } else if (Array.isArray(arg)) {\n      const result = await Promise.all(\n        arg.map(deserializeArg(imageMap, ctx, preload))\n      );\n      return result;\n    }\n    return arg;\n  };\n}\nfunction getContext(target, type) {\n  try {\n    if (type === CanvasContext.WebGL) {\n      return target.getContext(\"webgl\") || target.getContext(\"experimental-webgl\");\n    }\n    return target.getContext(\"webgl2\");\n  } catch (e2) {\n    return null;\n  }\n}\nconst WebGLVariableConstructorsNames = [\n  \"WebGLActiveInfo\",\n  \"WebGLBuffer\",\n  \"WebGLFramebuffer\",\n  \"WebGLProgram\",\n  \"WebGLRenderbuffer\",\n  \"WebGLShader\",\n  \"WebGLShaderPrecisionFormat\",\n  \"WebGLTexture\",\n  \"WebGLUniformLocation\",\n  \"WebGLVertexArrayObject\"\n];\nfunction saveToWebGLVarMap(ctx, result) {\n  if (!result?.constructor) return;\n  const { name } = result.constructor;\n  if (!WebGLVariableConstructorsNames.includes(name)) return;\n  const variables = variableListFor(ctx, name);\n  if (!variables.includes(result)) variables.push(result);\n}\nasync function webglMutation({\n  mutation,\n  target,\n  type,\n  imageMap,\n  errorHandler: errorHandler2\n}) {\n  try {\n    const ctx = getContext(target, type);\n    if (!ctx) return;\n    if (mutation.setter) {\n      ctx[mutation.property] = mutation.args[0];\n      return;\n    }\n    const original = ctx[mutation.property];\n    const args = await Promise.all(\n      mutation.args.map(deserializeArg(imageMap, ctx))\n    );\n    const result = original.apply(ctx, args);\n    saveToWebGLVarMap(ctx, result);\n    const debugMode = false;\n    if (debugMode) ;\n  } catch (error) {\n    errorHandler2(mutation, error);\n  }\n}\nasync function canvasMutation$1({\n  event,\n  mutations,\n  target,\n  imageMap,\n  errorHandler: errorHandler2\n}) {\n  const ctx = target.getContext(\"2d\");\n  if (!ctx) {\n    errorHandler2(mutations[0], new Error(\"Canvas context is null\"));\n    return;\n  }\n  const mutationArgsPromises = mutations.map(\n    async (mutation) => {\n      return Promise.all(mutation.args.map(deserializeArg(imageMap, ctx)));\n    }\n  );\n  const args = await Promise.all(mutationArgsPromises);\n  args.forEach((args2, index) => {\n    const mutation = mutations[index];\n    try {\n      if (mutation.setter) {\n        ctx[mutation.property] = mutation.args[0];\n        return;\n      }\n      const original = ctx[mutation.property];\n      if (mutation.property === \"drawImage\" && typeof mutation.args[0] === \"string\") {\n        imageMap.get(event);\n        original.apply(ctx, mutation.args);\n      } else {\n        original.apply(ctx, args2);\n      }\n    } catch (error) {\n      errorHandler2(mutation, error);\n    }\n    return;\n  });\n}\nasync function canvasMutation({\n  event,\n  mutation,\n  target,\n  imageMap,\n  canvasEventMap,\n  errorHandler: errorHandler2\n}) {\n  try {\n    const precomputedMutation = canvasEventMap.get(event) || mutation;\n    const commands = \"commands\" in precomputedMutation ? precomputedMutation.commands : [precomputedMutation];\n    if ([CanvasContext.WebGL, CanvasContext.WebGL2].includes(mutation.type)) {\n      for (let i2 = 0; i2 < commands.length; i2++) {\n        const command = commands[i2];\n        await webglMutation({\n          mutation: command,\n          type: mutation.type,\n          target,\n          imageMap,\n          errorHandler: errorHandler2\n        });\n      }\n      return;\n    }\n    await canvasMutation$1({\n      event,\n      mutations: commands,\n      target,\n      imageMap,\n      errorHandler: errorHandler2\n    });\n  } catch (error) {\n    errorHandler2(mutation, error);\n  }\n}\nconst SKIP_TIME_INTERVAL = 5 * 1e3;\nconst mitt = mitt$1 || mittProxy;\nconst REPLAY_CONSOLE_PREFIX = \"[replayer]\";\nconst defaultMouseTailConfig = {\n  duration: 500,\n  lineCap: \"round\",\n  lineWidth: 3,\n  strokeStyle: \"red\"\n};\nfunction indicatesTouchDevice(e2) {\n  return e2.type == EventType.IncrementalSnapshot && (e2.data.source == IncrementalSource.TouchMove || e2.data.source == IncrementalSource.MouseInteraction && e2.data.type == MouseInteractions.TouchStart);\n}\nfunction getPointerId(d) {\n  const pointerId = \"pointerId\" in d && typeof d.pointerId === \"number\" ? d.pointerId : -1;\n  return pointerId;\n}\nclass Replayer {\n  constructor(events, config) {\n    this.usingVirtualDom = false;\n    this.virtualDom = new RRDocument();\n    this.emitter = mitt();\n    this.legacy_missingNodeRetryMap = {};\n    this.cache = createCache();\n    this.imageMap = /* @__PURE__ */ new Map();\n    this.canvasEventMap = /* @__PURE__ */ new Map();\n    this.mirror = createMirror$2();\n    this.styleMirror = new StyleSheetMirror();\n    this.firstFullSnapshot = null;\n    this.newDocumentQueue = [];\n    this.pointers = {};\n    this.lastMouseDownEvent = null;\n    this.lastSelectionData = null;\n    this.constructedStyleMutations = [];\n    this.adoptedStyleSheets = [];\n    this.handleResize = (dimension) => {\n      this.iframe.style.display = \"inherit\";\n      for (const el of [\n        ...Object.values(this.pointers).flatMap((a2) => a2.mouseTail),\n        this.iframe\n      ]) {\n        if (!el) {\n          continue;\n        }\n        el.setAttribute(\"width\", String(dimension.width));\n        el.setAttribute(\"height\", String(dimension.height));\n      }\n    };\n    this.applyEventsSynchronously = (events2) => {\n      for (const event of events2) {\n        switch (event.type) {\n          case EventType.DomContentLoaded:\n          case EventType.Load:\n          case EventType.Custom:\n            continue;\n          case EventType.FullSnapshot:\n          case EventType.Meta:\n          case EventType.Plugin:\n          case EventType.IncrementalSnapshot:\n            break;\n        }\n        const castFn = this.getCastFn(event, true);\n        castFn();\n      }\n    };\n    this.getCastFn = (event, isSync = false) => {\n      let castFn;\n      switch (event.type) {\n        case EventType.DomContentLoaded:\n        case EventType.Load:\n          break;\n        case EventType.Custom:\n          castFn = () => {\n            this.emitter.emit(ReplayerEvents.CustomEvent, event);\n          };\n          break;\n        case EventType.Meta:\n          castFn = () => this.emitter.emit(ReplayerEvents.Resize, {\n            width: event.data.width,\n            height: event.data.height\n          });\n          break;\n        case EventType.FullSnapshot:\n          castFn = () => {\n            if (this.firstFullSnapshot) {\n              if (this.firstFullSnapshot === event) {\n                this.firstFullSnapshot = true;\n                return;\n              }\n            } else {\n              this.firstFullSnapshot = true;\n            }\n            this.rebuildFullSnapshot(event, isSync);\n            this.iframe.contentWindow?.scrollTo(event.data.initialOffset);\n            this.styleMirror.reset();\n          };\n          break;\n        case EventType.IncrementalSnapshot:\n          castFn = () => {\n            this.applyIncremental(event, isSync);\n            if (isSync) {\n              return;\n            }\n            if (event === this.nextUserInteractionEvent) {\n              this.nextUserInteractionEvent = null;\n              this.backToNormal();\n            }\n            if (this.config.skipInactive && !this.nextUserInteractionEvent) {\n              for (const _event of this.service.state.context.events) {\n                if (_event.timestamp <= event.timestamp) {\n                  continue;\n                }\n                if (this.isUserInteraction(_event)) {\n                  if (\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    _event.delay - event.delay > this.config.inactivePeriodThreshold * this.speedService.state.context.timer.speed\n                  ) {\n                    this.nextUserInteractionEvent = _event;\n                  }\n                  break;\n                }\n              }\n              if (this.nextUserInteractionEvent) {\n                const skipTime = (\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this.nextUserInteractionEvent.delay - event.delay\n                );\n                const payload = {\n                  speed: Math.min(\n                    Math.round(skipTime / SKIP_TIME_INTERVAL),\n                    this.config.maxSpeed\n                  )\n                };\n                this.speedService.send({ type: \"FAST_FORWARD\", payload });\n                this.emitter.emit(ReplayerEvents.SkipStart, payload);\n              }\n            }\n          };\n          break;\n      }\n      const wrappedCastFn = () => {\n        if (castFn) {\n          castFn();\n        }\n        for (const plugin of this.config.plugins || []) {\n          if (plugin.handler) plugin.handler(event, isSync, { replayer: this });\n        }\n        this.service.send({ type: \"CAST_EVENT\", payload: { event } });\n        const last_index = this.service.state.context.events.length - 1;\n        if (!this.config.liveMode && event === this.service.state.context.events[last_index]) {\n          const finish = () => {\n            if (last_index < this.service.state.context.events.length - 1) {\n              return;\n            }\n            this.backToNormal();\n            this.service.send(\"END\");\n            this.emitter.emit(ReplayerEvents.Finish);\n          };\n          let finish_buffer = 50;\n          if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.MouseMove && event.data.positions.length) {\n            finish_buffer += Math.max(0, -event.data.positions[0].timeOffset);\n          }\n          setTimeout$1(finish, finish_buffer);\n        }\n        this.emitter.emit(ReplayerEvents.EventCast, event);\n      };\n      return wrappedCastFn;\n    };\n    if (!config?.liveMode && events.length < 2) {\n      throw new Error(\"Replayer need at least 2 events.\");\n    }\n    const defaultConfig = {\n      speed: 1,\n      maxSpeed: 360,\n      root: document.body,\n      loadTimeout: 0,\n      skipInactive: false,\n      inactivePeriodThreshold: 10 * 1e3,\n      showWarning: true,\n      showDebug: false,\n      blockClass: \"rr-block\",\n      liveMode: false,\n      insertStyleRules: [],\n      triggerFocus: true,\n      UNSAFE_replayCanvas: false,\n      pauseAnimation: true,\n      mouseTail: defaultMouseTailConfig,\n      useVirtualDom: true,\n      // Virtual-dom optimization is enabled by default.\n      logger: console\n    };\n    this.config = Object.assign({}, defaultConfig, config);\n    this.handleResize = this.handleResize.bind(this);\n    this.getCastFn = this.getCastFn.bind(this);\n    this.applyEventsSynchronously = this.applyEventsSynchronously.bind(this);\n    this.emitter.on(ReplayerEvents.Resize, this.handleResize);\n    this.setupDom();\n    for (const plugin of this.config.plugins || []) {\n      if (plugin.getMirror) plugin.getMirror({ nodeMirror: this.mirror });\n    }\n    this.emitter.on(ReplayerEvents.Flush, () => {\n      if (this.usingVirtualDom) {\n        const replayerHandler = {\n          mirror: this.mirror,\n          applyCanvas: (canvasEvent, canvasMutationData2, target) => {\n            void canvasMutation({\n              event: canvasEvent,\n              mutation: canvasMutationData2,\n              target,\n              imageMap: this.imageMap,\n              canvasEventMap: this.canvasEventMap,\n              errorHandler: this.warnCanvasMutationFailed.bind(this)\n            });\n          },\n          applyInput: this.applyInput.bind(this),\n          applyScroll: this.applyScroll.bind(this),\n          applyStyleSheetMutation: (data, styleSheet) => {\n            if (data.source === IncrementalSource.StyleSheetRule)\n              this.applyStyleSheetRule(data, styleSheet);\n            else if (data.source === IncrementalSource.StyleDeclaration)\n              this.applyStyleDeclaration(data, styleSheet);\n          },\n          afterAppend: (node, id) => {\n            for (const plugin of this.config.plugins || []) {\n              if (plugin.onBuild) plugin.onBuild(node, { id, replayer: this });\n            }\n          }\n        };\n        const iframeDoc = getIFrameContentDocument(this.iframe);\n        if (iframeDoc)\n          try {\n            diff(\n              iframeDoc,\n              this.virtualDom,\n              replayerHandler,\n              this.virtualDom.mirror\n            );\n          } catch (e2) {\n            console.warn(e2);\n          }\n        this.virtualDom.destroyTree();\n        this.usingVirtualDom = false;\n        if (Object.keys(this.legacy_missingNodeRetryMap).length) {\n          for (const key in this.legacy_missingNodeRetryMap) {\n            try {\n              const value = this.legacy_missingNodeRetryMap[key];\n              const realNode = createOrGetNode(\n                value.node,\n                this.mirror,\n                this.virtualDom.mirror\n              );\n              diff(\n                realNode,\n                value.node,\n                replayerHandler,\n                this.virtualDom.mirror\n              );\n              value.node = realNode;\n            } catch (error) {\n              this.warn(error);\n            }\n          }\n        }\n        this.constructedStyleMutations.forEach((data) => {\n          this.applyStyleSheetMutation(data);\n        });\n        this.constructedStyleMutations = [];\n        this.adoptedStyleSheets.forEach((data) => {\n          this.applyAdoptedStyleSheet(data);\n        });\n        this.adoptedStyleSheets = [];\n      }\n      for (const [\n        pointerId,\n        { pointerPosition, touchActive }\n      ] of Object.entries(this.pointers)) {\n        const id = parseInt(pointerId);\n        const pointer = this.pointers[id];\n        if (pointerPosition) {\n          this.moveAndHover(\n            pointerPosition.x,\n            pointerPosition.y,\n            pointerPosition.id,\n            true,\n            pointerPosition.debugData,\n            id\n          );\n          pointer.pointerPosition = null;\n        }\n        if (touchActive === true) {\n          pointer.pointerEl.classList.add(\"touch-active\");\n        } else if (touchActive === false) {\n          pointer.pointerEl.classList.remove(\"touch-active\");\n        }\n        pointer.touchActive = null;\n      }\n      if (this.lastMouseDownEvent) {\n        const [target, event] = this.lastMouseDownEvent;\n        target.dispatchEvent(event);\n      }\n      this.lastMouseDownEvent = null;\n      if (this.lastSelectionData) {\n        this.applySelection(this.lastSelectionData);\n        this.lastSelectionData = null;\n      }\n    });\n    this.emitter.on(ReplayerEvents.PlayBack, () => {\n      this.firstFullSnapshot = null;\n      this.mirror.reset();\n      this.styleMirror.reset();\n    });\n    const timer = new Timer([], {\n      speed: this.config.speed\n    });\n    this.service = createPlayerService(\n      {\n        events: events.map((e2) => {\n          if (config && config.unpackFn) {\n            return config.unpackFn(e2);\n          }\n          return e2;\n        }).sort((a1, a2) => a1.timestamp - a2.timestamp),\n        timer,\n        timeOffset: 0,\n        baselineTime: 0,\n        lastPlayedEvent: null\n      },\n      {\n        getCastFn: this.getCastFn,\n        applyEventsSynchronously: this.applyEventsSynchronously,\n        emitter: this.emitter\n      }\n    );\n    this.service.start();\n    this.service.subscribe((state) => {\n      this.emitter.emit(ReplayerEvents.StateChange, {\n        player: state\n      });\n    });\n    this.speedService = createSpeedService({\n      normalSpeed: -1,\n      timer\n    });\n    this.speedService.start();\n    this.speedService.subscribe((state) => {\n      this.emitter.emit(ReplayerEvents.StateChange, {\n        speed: state\n      });\n    });\n    const firstMeta = this.service.state.context.events.find(\n      (e2) => e2.type === EventType.Meta\n    );\n    const firstFullsnapshot = this.service.state.context.events.find(\n      (e2) => e2.type === EventType.FullSnapshot\n    );\n    if (firstMeta) {\n      const { width, height } = firstMeta.data;\n      setTimeout$1(() => {\n        this.emitter.emit(ReplayerEvents.Resize, {\n          width,\n          height\n        });\n      }, 0);\n    }\n    if (firstFullsnapshot) {\n      setTimeout$1(() => {\n        if (this.firstFullSnapshot) {\n          return;\n        }\n        this.firstFullSnapshot = firstFullsnapshot;\n        this.rebuildFullSnapshot(\n          firstFullsnapshot\n        );\n        this.iframe.contentWindow?.scrollTo(\n          firstFullsnapshot.data.initialOffset\n        );\n      }, 1);\n    }\n  }\n  get timer() {\n    return this.service.state.context.timer;\n  }\n  createPointer(pointerId, event) {\n    const mouseTail = document.createElement(\"canvas\");\n    mouseTail.classList.add(\"replayer-mouse-tail\");\n    mouseTail.width = Number.parseFloat(this.iframe.width);\n    mouseTail.height = Number.parseFloat(this.iframe.height);\n    this.wrapper.insertBefore(mouseTail, this.iframe);\n    mouseTail.style.display = this.config.mouseTail === false ? \"none\" : \"inherit\";\n    const newMouse = document.createElement(\"div\");\n    newMouse.classList.add(\"replayer-mouse\");\n    this.pointers[pointerId] = {\n      touchActive: null,\n      pointerEl: newMouse,\n      tailPositions: [],\n      pointerPosition: null,\n      mouseTail\n    };\n    if (indicatesTouchDevice(event)) {\n      newMouse.classList.add(\"touch-device\");\n    }\n    this.wrapper.appendChild(newMouse);\n  }\n  on(event, handler) {\n    this.emitter.on(event, handler);\n    return this;\n  }\n  off(event, handler) {\n    this.emitter.off(event, handler);\n    return this;\n  }\n  setConfig(config) {\n    Object.keys(config).forEach((key) => {\n      config[key];\n      this.config[key] = config[key];\n    });\n    if (!this.config.skipInactive) {\n      this.backToNormal();\n    }\n    if (typeof config.speed !== \"undefined\") {\n      this.speedService.send({\n        type: \"SET_SPEED\",\n        payload: {\n          speed: config.speed\n        }\n      });\n    }\n    if (typeof config.mouseTail !== \"undefined\") {\n      if (config.mouseTail === false) {\n        for (const { mouseTail } of Object.values(this.pointers)) {\n          if (mouseTail) {\n            mouseTail.style.display = \"none\";\n          }\n        }\n      } else {\n        for (let { mouseTail } of Object.values(this.pointers)) {\n          if (!mouseTail) {\n            mouseTail = document.createElement(\"canvas\");\n            mouseTail.width = Number.parseFloat(this.iframe.width);\n            mouseTail.height = Number.parseFloat(this.iframe.height);\n            mouseTail.classList.add(\"replayer-mouse-tail\");\n            this.wrapper.insertBefore(mouseTail, this.iframe);\n          }\n          mouseTail.style.display = \"inherit\";\n        }\n      }\n    }\n  }\n  getMetaData() {\n    const firstEvent = this.service.state.context.events[0];\n    const lastEvent = this.service.state.context.events[this.service.state.context.events.length - 1];\n    return {\n      startTime: firstEvent.timestamp,\n      endTime: lastEvent.timestamp,\n      totalTime: lastEvent.timestamp - firstEvent.timestamp\n    };\n  }\n  getCurrentTime() {\n    return this.timer.timeOffset + this.getTimeOffset();\n  }\n  getTimeOffset() {\n    const { baselineTime, events } = this.service.state.context;\n    return baselineTime - events[0].timestamp;\n  }\n  getMirror() {\n    return this.mirror;\n  }\n  /**\n   * This API was designed to be used as play at any time offset.\n   * Since we minimized the data collected from recorder, we do not\n   * have the ability of undo an event.\n   * So the implementation of play at any time offset will always iterate\n   * all of the events, cast event before the offset synchronously\n   * and cast event after the offset asynchronously with timer.\n   * @param timeOffset - number\n   */\n  play(timeOffset = 0) {\n    if (this.service.state.matches(\"paused\")) {\n      this.service.send({ type: \"PLAY\", payload: { timeOffset } });\n    } else {\n      this.service.send({ type: \"PAUSE\" });\n      this.service.send({ type: \"PLAY\", payload: { timeOffset } });\n    }\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    iframeDoc?.getElementsByTagName(\"html\")[0]?.classList.remove(\"rrweb-paused\");\n    this.emitter.emit(ReplayerEvents.Start);\n  }\n  pause(timeOffset) {\n    if (timeOffset === void 0 && this.service.state.matches(\"playing\")) {\n      this.service.send({ type: \"PAUSE\" });\n    }\n    if (typeof timeOffset === \"number\") {\n      this.play(timeOffset);\n      this.service.send({ type: \"PAUSE\" });\n    }\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    iframeDoc?.getElementsByTagName(\"html\")[0]?.classList.add(\"rrweb-paused\");\n    this.emitter.emit(ReplayerEvents.Pause);\n  }\n  resume(timeOffset = 0) {\n    this.warn(\n      `The 'resume' was deprecated in 1.0. Please use 'play' method which has the same interface.`\n    );\n    this.play(timeOffset);\n    this.emitter.emit(ReplayerEvents.Resume);\n  }\n  /**\n   * Totally destroy this replayer and please be careful that this operation is irreversible.\n   * Memory occupation can be released by removing all references to this replayer.\n   */\n  destroy() {\n    this.pause();\n    this.config.root.removeChild(this.wrapper);\n    this.emitter.emit(ReplayerEvents.Destroy);\n  }\n  startLive(baselineTime) {\n    this.service.send({ type: \"TO_LIVE\", payload: { baselineTime } });\n  }\n  addEvent(rawEvent) {\n    const event = this.config.unpackFn ? this.config.unpackFn(rawEvent) : rawEvent;\n    void Promise.resolve().then(\n      () => this.service.send({ type: \"ADD_EVENT\", payload: { event } })\n    );\n  }\n  enableInteract() {\n    this.iframe.setAttribute(\"scrolling\", \"auto\");\n    this.iframe.style.pointerEvents = \"auto\";\n  }\n  disableInteract() {\n    this.iframe.setAttribute(\"scrolling\", \"no\");\n    this.iframe.style.pointerEvents = \"none\";\n  }\n  /**\n   * Empties the replayer's cache and reclaims memory.\n   * The replayer will use this cache to speed up the playback.\n   */\n  resetCache() {\n    this.cache = createCache();\n  }\n  setupDom() {\n    this.wrapper = document.createElement(\"div\");\n    this.wrapper.classList.add(\"replayer-wrapper\");\n    this.config.root.appendChild(this.wrapper);\n    this.iframe = document.createElement(\"iframe\");\n    const attributes2 = [\"allow-same-origin\"];\n    if (this.config.UNSAFE_replayCanvas) {\n      attributes2.push(\"allow-scripts\");\n    }\n    this.iframe.style.display = \"none\";\n    this.iframe.setAttribute(\"sandbox\", attributes2.join(\" \"));\n    this.disableInteract();\n    this.wrapper.appendChild(this.iframe);\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    const iframeWindow = getIFrameContentWindow(this.iframe);\n    if (iframeWindow && iframeDoc) {\n      polyfill(iframeWindow, iframeDoc);\n      polyfill$1(iframeWindow);\n    }\n  }\n  rebuildFullSnapshot(event, isSync = false) {\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    if (!iframeDoc) {\n      return this.warn(\"Looks like your replayer has been destroyed.\");\n    }\n    if (Object.keys(this.legacy_missingNodeRetryMap).length) {\n      this.warn(\n        \"Found unresolved missing node map\",\n        this.legacy_missingNodeRetryMap\n      );\n    }\n    this.legacy_missingNodeRetryMap = {};\n    const collected = [];\n    const afterAppend = (builtNode, id) => {\n      this.collectIframeAndAttachDocument(collected, builtNode);\n      for (const plugin of this.config.plugins || []) {\n        if (plugin.onBuild)\n          plugin.onBuild(builtNode, {\n            id,\n            replayer: this\n          });\n      }\n    };\n    if (this.usingVirtualDom) {\n      this.virtualDom.destroyTree();\n      this.usingVirtualDom = false;\n    }\n    this.mirror.reset();\n    rebuild(event.data.node, {\n      doc: iframeDoc,\n      afterAppend,\n      cache: this.cache,\n      mirror: this.mirror\n    });\n    afterAppend(iframeDoc, event.data.node.id);\n    for (const { mutationInQueue, builtNode } of collected) {\n      this.attachDocumentToIframe(mutationInQueue, builtNode);\n      this.newDocumentQueue = this.newDocumentQueue.filter(\n        (m) => m !== mutationInQueue\n      );\n    }\n    const { documentElement, head } = iframeDoc;\n    this.insertStyleRules(documentElement, head);\n    if (!this.service.state.matches(\"playing\")) {\n      const iframeHtmlElement = iframeDoc.getElementsByTagName(\"html\")[0];\n      iframeHtmlElement && iframeHtmlElement.classList.add(\"rrweb-paused\");\n    }\n    this.emitter.emit(ReplayerEvents.FullsnapshotRebuilded, event);\n    if (!isSync) {\n      this.waitForStylesheetLoad();\n    }\n    if (this.config.UNSAFE_replayCanvas) {\n      void this.preloadAllImages();\n    }\n  }\n  insertStyleRules(documentElement, head) {\n    const injectStylesRules = rules(\n      this.config.blockClass\n    ).concat(this.config.insertStyleRules);\n    if (this.config.pauseAnimation) {\n      injectStylesRules.push(\n        \"html.rrweb-paused *, html.rrweb-paused *:before, html.rrweb-paused *:after { animation-play-state: paused !important; }\"\n      );\n    }\n    if (this.usingVirtualDom) {\n      const styleEl = this.virtualDom.createElement(\"style\");\n      this.virtualDom.mirror.add(\n        styleEl,\n        getDefaultSN(styleEl, this.virtualDom.unserializedId)\n      );\n      documentElement.insertBefore(styleEl, head);\n      styleEl.rules.push({\n        source: IncrementalSource.StyleSheetRule,\n        adds: injectStylesRules.map((cssText, index) => ({\n          rule: cssText,\n          index\n        }))\n      });\n    } else {\n      const styleEl = document.createElement(\"style\");\n      documentElement.insertBefore(\n        styleEl,\n        head\n      );\n      for (let idx = 0; idx < injectStylesRules.length; idx++) {\n        styleEl.sheet?.insertRule(injectStylesRules[idx], idx);\n      }\n    }\n  }\n  attachDocumentToIframe(mutation, iframeEl) {\n    const mirror2 = this.usingVirtualDom ? this.virtualDom.mirror : this.mirror;\n    const iframeContentDoc = getIFrameContentDocument(\n      iframeEl\n    );\n    const collected = [];\n    const afterAppend = (builtNode, id) => {\n      this.collectIframeAndAttachDocument(collected, builtNode);\n      const sn = mirror2.getMeta(builtNode);\n      if (sn?.type === NodeType$2.Element && sn?.tagName.toUpperCase() === \"HTML\" && iframeContentDoc) {\n        const { documentElement, head } = iframeContentDoc;\n        this.insertStyleRules(\n          documentElement,\n          head\n        );\n      }\n      if (this.usingVirtualDom) return;\n      for (const plugin of this.config.plugins || []) {\n        if (plugin.onBuild)\n          plugin.onBuild(builtNode, {\n            id,\n            replayer: this\n          });\n      }\n    };\n    buildNodeWithSN(mutation.node, {\n      doc: iframeContentDoc,\n      mirror: mirror2,\n      hackCss: true,\n      skipChild: false,\n      afterAppend,\n      cache: this.cache\n    });\n    afterAppend(iframeContentDoc, mutation.node.id);\n    for (const { mutationInQueue, builtNode } of collected) {\n      this.attachDocumentToIframe(mutationInQueue, builtNode);\n      this.newDocumentQueue = this.newDocumentQueue.filter(\n        (m) => m !== mutationInQueue\n      );\n    }\n  }\n  collectIframeAndAttachDocument(collected, builtNode) {\n    if (isSerializedIframe(builtNode, this.mirror)) {\n      const mutationInQueue = this.newDocumentQueue.find(\n        (m) => m.parentId === this.mirror.getId(builtNode)\n      );\n      if (mutationInQueue) {\n        collected.push({\n          mutationInQueue,\n          builtNode\n        });\n      }\n    }\n  }\n  /**\n   * pause when loading style sheet, resume when loaded all timeout exceed\n   */\n  waitForStylesheetLoad() {\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    const head = iframeDoc?.head;\n    if (head) {\n      const unloadSheets = /* @__PURE__ */ new Set();\n      let timer;\n      let beforeLoadState = this.service.state;\n      const stateHandler = () => {\n        beforeLoadState = this.service.state;\n      };\n      this.emitter.on(ReplayerEvents.Start, stateHandler);\n      this.emitter.on(ReplayerEvents.Pause, stateHandler);\n      const unsubscribe = () => {\n        this.emitter.off(ReplayerEvents.Start, stateHandler);\n        this.emitter.off(ReplayerEvents.Pause, stateHandler);\n      };\n      head.querySelectorAll('link[rel=\"stylesheet\"]').forEach((css) => {\n        if (!css.sheet) {\n          unloadSheets.add(css);\n          css.addEventListener(\"load\", () => {\n            unloadSheets.delete(css);\n            if (unloadSheets.size === 0 && timer !== -1) {\n              if (beforeLoadState.matches(\"playing\")) {\n                this.play(this.getCurrentTime());\n              }\n              this.emitter.emit(ReplayerEvents.LoadStylesheetEnd);\n              if (timer) {\n                clearTimeout(timer);\n              }\n              unsubscribe();\n            }\n          });\n        }\n      });\n      if (unloadSheets.size > 0) {\n        this.service.send({ type: \"PAUSE\" });\n        this.emitter.emit(ReplayerEvents.LoadStylesheetStart);\n        timer = setTimeout$1(() => {\n          if (beforeLoadState.matches(\"playing\")) {\n            this.play(this.getCurrentTime());\n          }\n          timer = -1;\n          unsubscribe();\n        }, this.config.loadTimeout);\n      }\n    }\n  }\n  /**\n   * pause when there are some canvas drawImage args need to be loaded\n   */\n  async preloadAllImages() {\n    const promises = [];\n    for (const event of this.service.state.context.events) {\n      if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.CanvasMutation) {\n        promises.push(\n          this.deserializeAndPreloadCanvasEvents(event.data, event)\n        );\n        const commands = \"commands\" in event.data ? event.data.commands : [event.data];\n        commands.forEach((c2) => {\n          this.preloadImages(c2, event);\n        });\n      }\n    }\n    return Promise.all(promises);\n  }\n  preloadImages(data, event) {\n    if (data.property === \"drawImage\" && typeof data.args[0] === \"string\" && !this.imageMap.has(event)) {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const imgd = ctx?.createImageData(canvas.width, canvas.height);\n      ctx?.putImageData(imgd, 0, 0);\n    }\n  }\n  async deserializeAndPreloadCanvasEvents(data, event) {\n    if (!this.canvasEventMap.has(event)) {\n      const status = {\n        isUnchanged: true\n      };\n      if (\"commands\" in data) {\n        const commands = await Promise.all(\n          data.commands.map(async (c2) => {\n            const args = await Promise.all(\n              c2.args.map(deserializeArg(this.imageMap, null, status))\n            );\n            return { ...c2, args };\n          })\n        );\n        if (status.isUnchanged === false)\n          this.canvasEventMap.set(event, { ...data, commands });\n      } else {\n        const args = await Promise.all(\n          data.args.map(deserializeArg(this.imageMap, null, status))\n        );\n        if (status.isUnchanged === false)\n          this.canvasEventMap.set(event, { ...data, args });\n      }\n    }\n  }\n  applyIncremental(e2, isSync) {\n    const { data: d } = e2;\n    switch (d.source) {\n      case IncrementalSource.Mutation: {\n        try {\n          this.applyMutation(d, isSync);\n        } catch (error) {\n          this.warn(`Exception in mutation ${error.message || error}`, d);\n        }\n        break;\n      }\n      case IncrementalSource.Drag:\n      case IncrementalSource.TouchMove:\n      case IncrementalSource.MouseMove: {\n        const pointerId = getPointerId(d);\n        if (!this.pointers[pointerId]) {\n          this.createPointer(pointerId, e2);\n        }\n        const pointer = this.pointers[pointerId];\n        if (isSync) {\n          const lastPosition = d.positions[d.positions.length - 1];\n          pointer.pointerPosition = {\n            x: lastPosition.x,\n            y: lastPosition.y,\n            id: lastPosition.id,\n            debugData: d\n          };\n        } else {\n          d.positions.forEach((p) => {\n            const action = {\n              doAction: () => {\n                this.moveAndHover(p.x, p.y, p.id, isSync, d, pointerId);\n              },\n              delay: p.timeOffset + e2.timestamp - this.service.state.context.baselineTime\n            };\n            this.timer.addAction(action);\n          });\n          this.timer.addAction({\n            doAction() {\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            delay: e2.delay - d.positions[0]?.timeOffset\n          });\n        }\n        break;\n      }\n      case IncrementalSource.MouseInteraction: {\n        const pointerId = getPointerId(d);\n        if (!this.pointers[pointerId]) {\n          this.createPointer(pointerId, e2);\n        }\n        const pointer = this.pointers[pointerId];\n        if (d.id === -1) {\n          break;\n        }\n        const event = new Event(toLowerCase(MouseInteractions[d.type]));\n        const target = this.mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        this.emitter.emit(ReplayerEvents.MouseInteraction, {\n          type: d.type,\n          target\n        });\n        const { triggerFocus } = this.config;\n        switch (d.type) {\n          case MouseInteractions.Blur:\n            if (\"blur\" in target) {\n              target.blur();\n            }\n            break;\n          case MouseInteractions.Focus:\n            if (triggerFocus && target.focus) {\n              target.focus({\n                preventScroll: true\n              });\n            }\n            break;\n          case MouseInteractions.Click:\n          case MouseInteractions.TouchStart:\n          case MouseInteractions.TouchEnd:\n          case MouseInteractions.MouseDown:\n          case MouseInteractions.MouseUp:\n            if (isSync) {\n              if (d.type === MouseInteractions.TouchStart) {\n                pointer.touchActive = true;\n                Object.values(this.pointers).forEach((p) => {\n                  if (p !== pointer && !p.touchActive) {\n                    p.touchActive = false;\n                  }\n                });\n              } else if (d.type === MouseInteractions.TouchEnd) {\n                pointer.touchActive = false;\n                pointer.pointerEl.remove();\n                if (pointer.mouseTail) {\n                  pointer.mouseTail.remove();\n                }\n                delete this.pointers[pointerId];\n              }\n              if (d.type === MouseInteractions.MouseDown) {\n                this.lastMouseDownEvent = [target, event];\n              } else if (d.type === MouseInteractions.MouseUp) {\n                this.lastMouseDownEvent = null;\n              }\n              pointer.pointerPosition = {\n                x: d.x || 0,\n                y: d.y || 0,\n                id: d.id,\n                debugData: d\n              };\n            } else {\n              if (d.type === MouseInteractions.TouchStart) {\n                pointer.tailPositions.length = 0;\n              }\n              this.moveAndHover(d.x || 0, d.y || 0, d.id, isSync, d, pointerId);\n              if (d.type === MouseInteractions.Click) {\n                pointer.pointerEl.classList.remove(\"active\");\n                void pointer.pointerEl.offsetWidth;\n                pointer.pointerEl.classList.add(\"active\");\n              } else if (d.type === MouseInteractions.TouchStart) {\n                void pointer.pointerEl.offsetWidth;\n                pointer.pointerEl.classList.add(\"touch-active\");\n              } else if (d.type === MouseInteractions.TouchEnd) {\n                pointer.pointerEl.remove();\n                if (pointer.mouseTail) {\n                  pointer.mouseTail.remove();\n                }\n                delete this.pointers[pointerId];\n              } else {\n                target.dispatchEvent(event);\n              }\n            }\n            break;\n          case MouseInteractions.TouchCancel:\n            if (isSync) {\n              pointer.touchActive = false;\n            } else {\n              pointer.pointerEl.classList.remove(\"touch-active\");\n            }\n            break;\n          default:\n            target.dispatchEvent(event);\n        }\n        break;\n      }\n      case IncrementalSource.Scroll: {\n        if (d.id === -1) {\n          break;\n        }\n        if (this.usingVirtualDom) {\n          const target = this.virtualDom.mirror.getNode(d.id);\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          target.scrollData = d;\n          break;\n        }\n        this.applyScroll(d, isSync);\n        break;\n      }\n      case IncrementalSource.ViewportResize:\n        this.emitter.emit(ReplayerEvents.Resize, {\n          width: d.width,\n          height: d.height\n        });\n        break;\n      case IncrementalSource.Input: {\n        if (d.id === -1) {\n          break;\n        }\n        if (this.usingVirtualDom) {\n          const target = this.virtualDom.mirror.getNode(d.id);\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          target.inputData = d;\n          break;\n        }\n        this.applyInput(d);\n        break;\n      }\n      case IncrementalSource.MediaInteraction: {\n        const target = this.usingVirtualDom ? this.virtualDom.mirror.getNode(d.id) : this.mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        const mediaEl = target;\n        try {\n          if (d.currentTime !== void 0) {\n            mediaEl.currentTime = d.currentTime;\n          }\n          if (d.volume !== void 0) {\n            mediaEl.volume = d.volume;\n          }\n          if (d.muted !== void 0) {\n            mediaEl.muted = d.muted;\n          }\n          if (d.type === MediaInteractions.Pause) {\n            mediaEl.pause();\n          }\n          if (d.type === MediaInteractions.Play) {\n            void mediaEl.play();\n          }\n          if (d.type === MediaInteractions.RateChange) {\n            mediaEl.playbackRate = d.playbackRate;\n          }\n        } catch (error) {\n          this.warn(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n            `Failed to replay media interactions: ${error.message || error}`\n          );\n        }\n        break;\n      }\n      case IncrementalSource.StyleSheetRule:\n      case IncrementalSource.StyleDeclaration: {\n        if (this.usingVirtualDom) {\n          if (d.styleId) this.constructedStyleMutations.push(d);\n          else if (d.id)\n            this.virtualDom.mirror.getNode(d.id)?.rules?.push(d);\n        } else this.applyStyleSheetMutation(d);\n        break;\n      }\n      case IncrementalSource.CanvasMutation: {\n        if (!this.config.UNSAFE_replayCanvas) {\n          return;\n        }\n        if (this.usingVirtualDom) {\n          const target = this.virtualDom.mirror.getNode(\n            d.id\n          );\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          target.canvasMutations.push({\n            event: e2,\n            mutation: d\n          });\n        } else {\n          const target = this.mirror.getNode(d.id);\n          if (!target) {\n            return this.debugNodeNotFound(d, d.id);\n          }\n          void canvasMutation({\n            event: e2,\n            mutation: d,\n            target,\n            imageMap: this.imageMap,\n            canvasEventMap: this.canvasEventMap,\n            errorHandler: this.warnCanvasMutationFailed.bind(this)\n          });\n        }\n        break;\n      }\n      case IncrementalSource.Font: {\n        try {\n          const fontFace = new FontFace(\n            d.family,\n            d.buffer ? new Uint8Array(JSON.parse(d.fontSource)) : d.fontSource,\n            d.descriptors\n          );\n          getIFrameContentDocument(this.iframe)?.fonts.add(fontFace);\n        } catch (error) {\n          this.warn(error);\n        }\n        break;\n      }\n      case IncrementalSource.Selection: {\n        if (isSync) {\n          this.lastSelectionData = d;\n          break;\n        }\n        this.applySelection(d);\n        break;\n      }\n      case IncrementalSource.AdoptedStyleSheet: {\n        if (this.usingVirtualDom) this.adoptedStyleSheets.push(d);\n        else this.applyAdoptedStyleSheet(d);\n        break;\n      }\n    }\n  }\n  applyMutation(d, isSync) {\n    if (this.config.useVirtualDom && !this.usingVirtualDom && isSync) {\n      this.usingVirtualDom = true;\n      const iframeDoc = getIFrameContentDocument(this.iframe);\n      if (iframeDoc) {\n        buildFromDom(iframeDoc, this.mirror, this.virtualDom);\n      }\n      if (Object.keys(this.legacy_missingNodeRetryMap).length) {\n        for (const key in this.legacy_missingNodeRetryMap) {\n          try {\n            const value = this.legacy_missingNodeRetryMap[key];\n            const virtualNode = buildFromNode(\n              value.node,\n              this.virtualDom,\n              this.mirror\n            );\n            if (virtualNode) value.node = virtualNode;\n          } catch (error) {\n            this.warn(error);\n          }\n        }\n      }\n    }\n    const mirror2 = this.usingVirtualDom ? this.virtualDom.mirror : this.mirror;\n    d.removes = d.removes.filter((mutation) => {\n      if (!mirror2.getNode(mutation.id)) {\n        this.warnNodeNotFound(d, mutation.id);\n        return false;\n      }\n      return true;\n    });\n    d.removes.forEach((mutation) => {\n      const target = mirror2.getNode(mutation.id);\n      if (!target) {\n        return;\n      }\n      let parent = mirror2.getNode(\n        mutation.parentId\n      );\n      if (!parent) {\n        return this.warnNodeNotFound(d, mutation.parentId);\n      }\n      if (mutation.isShadow && hasShadowRoot(parent)) {\n        parent = parent.shadowRoot;\n      }\n      mirror2.removeNodeFromMap(target);\n      if (parent)\n        try {\n          parent.removeChild(target);\n          if (this.usingVirtualDom && target.nodeName === \"#text\" && parent.nodeName === \"STYLE\" && parent.rules?.length > 0)\n            parent.rules = [];\n        } catch (error) {\n          if (error instanceof DOMException) {\n            this.warn(\n              \"parent could not remove child in mutation\",\n              parent,\n              target,\n              d\n            );\n          } else {\n            throw error;\n          }\n        }\n    });\n    const legacy_missingNodeMap = {\n      ...this.legacy_missingNodeRetryMap\n    };\n    const queue = [];\n    const nextNotInDOM = (mutation) => {\n      let next = null;\n      if (mutation.nextId) {\n        next = mirror2.getNode(mutation.nextId);\n      }\n      if (mutation.nextId !== null && mutation.nextId !== void 0 && mutation.nextId !== -1 && !next) {\n        return true;\n      }\n      return false;\n    };\n    const appendNode = (mutation) => {\n      const iframeDoc = getIFrameContentDocument(this.iframe);\n      if (!iframeDoc) {\n        return this.warn(\"Looks like your replayer has been destroyed.\");\n      }\n      let parent = mirror2.getNode(\n        mutation.parentId\n      );\n      if (!parent) {\n        if (mutation.node.type === NodeType$2.Document) {\n          return this.newDocumentQueue.push(mutation);\n        }\n        return queue.push(mutation);\n      }\n      if (mutation.node.isShadow) {\n        if (!hasShadowRoot(parent)) {\n          parent.attachShadow({ mode: \"open\" });\n          parent = parent.shadowRoot;\n        } else parent = parent.shadowRoot;\n      }\n      let previous = null;\n      let next = null;\n      if (mutation.previousId) {\n        previous = mirror2.getNode(mutation.previousId);\n      }\n      if (mutation.nextId) {\n        next = mirror2.getNode(mutation.nextId);\n      }\n      if (nextNotInDOM(mutation)) {\n        return queue.push(mutation);\n      }\n      if (mutation.node.rootId && !mirror2.getNode(mutation.node.rootId)) {\n        return;\n      }\n      const targetDoc = mutation.node.rootId ? mirror2.getNode(mutation.node.rootId) : this.usingVirtualDom ? this.virtualDom : iframeDoc;\n      if (isSerializedIframe(parent, mirror2)) {\n        this.attachDocumentToIframe(\n          mutation,\n          parent\n        );\n        return;\n      }\n      const afterAppend = (node, id) => {\n        if (this.usingVirtualDom) return;\n        for (const plugin of this.config.plugins || []) {\n          if (plugin.onBuild) plugin.onBuild(node, { id, replayer: this });\n        }\n      };\n      const target = buildNodeWithSN(mutation.node, {\n        doc: targetDoc,\n        // can be Document or RRDocument\n        mirror: mirror2,\n        // can be this.mirror or virtualDom.mirror\n        skipChild: true,\n        hackCss: true,\n        cache: this.cache,\n        /**\n         * caveat: `afterAppend` only gets called on child nodes of target\n         * we have to call it again below when this target was added to the DOM\n         */\n        afterAppend\n      });\n      if (mutation.previousId === -1 || mutation.nextId === -1) {\n        legacy_missingNodeMap[mutation.node.id] = {\n          node: target,\n          mutation\n        };\n        return;\n      }\n      const parentSn = mirror2.getMeta(parent);\n      if (parentSn && parentSn.type === NodeType$2.Element && parentSn.tagName === \"textarea\" && mutation.node.type === NodeType$2.Text) {\n        const childNodeArray = Array.isArray(parent.childNodes) ? parent.childNodes : Array.from(parent.childNodes);\n        for (const c2 of childNodeArray) {\n          if (c2.nodeType === parent.TEXT_NODE) {\n            parent.removeChild(c2);\n          }\n        }\n      } else if (parentSn?.type === NodeType$2.Document) {\n        const parentDoc = parent;\n        if (mutation.node.type === NodeType$2.DocumentType && parentDoc.childNodes[0]?.nodeType === Node.DOCUMENT_TYPE_NODE)\n          parentDoc.removeChild(parentDoc.childNodes[0]);\n        if (target.nodeName === \"HTML\" && parentDoc.documentElement)\n          parentDoc.removeChild(\n            parentDoc.documentElement\n          );\n      }\n      if (previous && previous.nextSibling && previous.nextSibling.parentNode) {\n        parent.insertBefore(\n          target,\n          previous.nextSibling\n        );\n      } else if (next && next.parentNode) {\n        parent.contains(next) ? parent.insertBefore(target, next) : parent.insertBefore(target, null);\n      } else {\n        parent.appendChild(target);\n      }\n      afterAppend(target, mutation.node.id);\n      if (this.usingVirtualDom && target.nodeName === \"#text\" && parent.nodeName === \"STYLE\" && parent.rules?.length > 0)\n        parent.rules = [];\n      if (isSerializedIframe(target, this.mirror)) {\n        const targetId = this.mirror.getId(target);\n        const mutationInQueue = this.newDocumentQueue.find(\n          (m) => m.parentId === targetId\n        );\n        if (mutationInQueue) {\n          this.attachDocumentToIframe(\n            mutationInQueue,\n            target\n          );\n          this.newDocumentQueue = this.newDocumentQueue.filter(\n            (m) => m !== mutationInQueue\n          );\n        }\n      }\n      if (mutation.previousId || mutation.nextId) {\n        this.legacy_resolveMissingNode(\n          legacy_missingNodeMap,\n          parent,\n          target,\n          mutation\n        );\n      }\n    };\n    d.adds.forEach((mutation) => {\n      appendNode(mutation);\n    });\n    const startTime = Date.now();\n    while (queue.length) {\n      const resolveTrees = queueToResolveTrees(queue);\n      queue.length = 0;\n      if (Date.now() - startTime > 500) {\n        this.warn(\n          \"Timeout in the loop, please check the resolve tree data:\",\n          resolveTrees\n        );\n        break;\n      }\n      for (const tree of resolveTrees) {\n        const parent = mirror2.getNode(tree.value.parentId);\n        if (!parent) {\n          this.debug(\n            \"Drop resolve tree since there is no parent for the root node.\",\n            tree\n          );\n        } else {\n          iterateResolveTree(tree, (mutation) => {\n            appendNode(mutation);\n          });\n        }\n      }\n    }\n    if (Object.keys(legacy_missingNodeMap).length) {\n      Object.assign(this.legacy_missingNodeRetryMap, legacy_missingNodeMap);\n    }\n    uniqueTextMutations(d.texts).forEach((mutation) => {\n      const target = mirror2.getNode(mutation.id);\n      if (!target) {\n        if (d.removes.find((r2) => r2.id === mutation.id)) {\n          return;\n        }\n        return this.warnNodeNotFound(d, mutation.id);\n      }\n      target.textContent = mutation.value;\n      if (this.usingVirtualDom) {\n        const parent = target.parentNode;\n        if (parent?.rules?.length > 0) parent.rules = [];\n      }\n    });\n    d.attributes.forEach((mutation) => {\n      const target = mirror2.getNode(mutation.id);\n      if (!target) {\n        if (d.removes.find((r2) => r2.id === mutation.id)) {\n          return;\n        }\n        return this.warnNodeNotFound(d, mutation.id);\n      }\n      for (const attributeName in mutation.attributes) {\n        if (typeof attributeName === \"string\") {\n          const value = mutation.attributes[attributeName];\n          if (value === null) {\n            target.removeAttribute(attributeName);\n          } else if (typeof value === \"string\") {\n            try {\n              if (attributeName === \"_cssText\" && (target.nodeName === \"LINK\" || target.nodeName === \"STYLE\")) {\n                try {\n                  const newSn = mirror2.getMeta(\n                    target\n                  );\n                  const newNode = buildNodeWithSN(\n                    {\n                      ...newSn,\n                      attributes: {\n                        ...newSn.attributes,\n                        ...mutation.attributes\n                      }\n                    },\n                    {\n                      doc: target.ownerDocument,\n                      // can be Document or RRDocument\n                      mirror: mirror2,\n                      skipChild: true,\n                      hackCss: true,\n                      cache: this.cache\n                    }\n                  );\n                  const siblingNode = target.nextSibling;\n                  const parentNode = target.parentNode;\n                  if (newNode && parentNode) {\n                    parentNode.removeChild(target);\n                    parentNode.insertBefore(\n                      newNode,\n                      siblingNode\n                    );\n                    mirror2.replace(mutation.id, newNode);\n                    break;\n                  }\n                } catch (e2) {\n                }\n              }\n              target.setAttribute(\n                attributeName,\n                value\n              );\n            } catch (error) {\n              this.warn(\n                \"An error occurred may due to the checkout feature.\",\n                error\n              );\n            }\n          } else if (attributeName === \"style\") {\n            const styleValues = value;\n            const targetEl = target;\n            for (const s2 in styleValues) {\n              if (styleValues[s2] === false) {\n                targetEl.style.removeProperty(s2);\n              } else if (styleValues[s2] instanceof Array) {\n                const svp = styleValues[s2];\n                targetEl.style.setProperty(s2, svp[0], svp[1]);\n              } else {\n                const svs = styleValues[s2];\n                targetEl.style.setProperty(s2, svs);\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n  /**\n   * Apply the scroll data on real elements.\n   * If the replayer is in sync mode, smooth scroll behavior should be disabled.\n   * @param d - the scroll data\n   * @param isSync - whether the replayer is in sync mode(fast-forward)\n   */\n  applyScroll(d, isSync) {\n    const target = this.mirror.getNode(d.id);\n    if (!target) {\n      return this.debugNodeNotFound(d, d.id);\n    }\n    const sn = this.mirror.getMeta(target);\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    if (target === iframeDoc) {\n      this.iframe.contentWindow?.scrollTo({\n        top: d.y,\n        left: d.x,\n        behavior: isSync ? \"auto\" : \"smooth\"\n      });\n    } else if (sn?.type === NodeType$2.Document) {\n      target.defaultView?.scrollTo({\n        top: d.y,\n        left: d.x,\n        behavior: isSync ? \"auto\" : \"smooth\"\n      });\n    } else {\n      try {\n        target.scrollTo({\n          top: d.y,\n          left: d.x,\n          behavior: isSync ? \"auto\" : \"smooth\"\n        });\n      } catch (error) {\n      }\n    }\n  }\n  applyInput(d) {\n    const target = this.mirror.getNode(d.id);\n    if (!target) {\n      return this.debugNodeNotFound(d, d.id);\n    }\n    try {\n      target.checked = d.isChecked;\n      target.value = d.text;\n    } catch (error) {\n    }\n  }\n  applySelection(d) {\n    try {\n      const selectionSet = /* @__PURE__ */ new Set();\n      const ranges = d.ranges.map(({ start, startOffset, end, endOffset }) => {\n        const startContainer = this.mirror.getNode(start);\n        const endContainer = this.mirror.getNode(end);\n        if (!startContainer || !endContainer) return;\n        const result = new Range();\n        result.setStart(startContainer, startOffset);\n        result.setEnd(endContainer, endOffset);\n        const doc = startContainer.ownerDocument;\n        const selection = doc?.getSelection();\n        selection && selectionSet.add(selection);\n        return {\n          range: result,\n          selection\n        };\n      });\n      selectionSet.forEach((s2) => s2.removeAllRanges());\n      ranges.forEach((r2) => r2 && r2.selection?.addRange(r2.range));\n    } catch (error) {\n    }\n  }\n  applyStyleSheetMutation(data) {\n    let styleSheet = null;\n    if (data.styleId) styleSheet = this.styleMirror.getStyle(data.styleId);\n    else if (data.id)\n      styleSheet = this.mirror.getNode(data.id)?.sheet || null;\n    if (!styleSheet) return;\n    if (data.source === IncrementalSource.StyleSheetRule)\n      this.applyStyleSheetRule(data, styleSheet);\n    else if (data.source === IncrementalSource.StyleDeclaration)\n      this.applyStyleDeclaration(data, styleSheet);\n  }\n  applyStyleSheetRule(data, styleSheet) {\n    data.adds?.forEach(({ rule, index: nestedIndex }) => {\n      try {\n        if (Array.isArray(nestedIndex)) {\n          const { positions, index } = getPositionsAndIndex(nestedIndex);\n          const nestedRule = getNestedRule(styleSheet.cssRules, positions);\n          nestedRule.insertRule(rule, index);\n        } else {\n          const index = nestedIndex === void 0 ? void 0 : Math.min(nestedIndex, styleSheet.cssRules.length);\n          styleSheet?.insertRule(rule, index);\n        }\n      } catch (e2) {\n      }\n    });\n    data.removes?.forEach(({ index: nestedIndex }) => {\n      try {\n        if (Array.isArray(nestedIndex)) {\n          const { positions, index } = getPositionsAndIndex(nestedIndex);\n          const nestedRule = getNestedRule(styleSheet.cssRules, positions);\n          nestedRule.deleteRule(index || 0);\n        } else {\n          styleSheet?.deleteRule(nestedIndex);\n        }\n      } catch (e2) {\n      }\n    });\n    if (data.replace)\n      try {\n        void styleSheet.replace?.(data.replace);\n      } catch (e2) {\n      }\n    if (data.replaceSync)\n      try {\n        styleSheet.replaceSync?.(data.replaceSync);\n      } catch (e2) {\n      }\n  }\n  applyStyleDeclaration(data, styleSheet) {\n    if (data.set) {\n      const rule = getNestedRule(\n        styleSheet.rules,\n        data.index\n      );\n      rule && rule.style && rule.style.setProperty(\n        data.set.property,\n        data.set.value,\n        data.set.priority\n      );\n    }\n    if (data.remove) {\n      const rule = getNestedRule(\n        styleSheet.rules,\n        data.index\n      );\n      rule && rule.style && rule.style.removeProperty(data.remove.property);\n    }\n  }\n  applyAdoptedStyleSheet(data) {\n    const targetHost = this.mirror.getNode(data.id);\n    if (!targetHost) return;\n    data.styles?.forEach((style) => {\n      let newStyleSheet = null;\n      let hostWindow = null;\n      if (hasShadowRoot(targetHost))\n        hostWindow = targetHost.ownerDocument?.defaultView || null;\n      else if (targetHost.nodeName === \"#document\")\n        hostWindow = targetHost.defaultView;\n      if (!hostWindow) return;\n      try {\n        newStyleSheet = new hostWindow.CSSStyleSheet();\n        this.styleMirror.add(newStyleSheet, style.styleId);\n        this.applyStyleSheetRule(\n          {\n            source: IncrementalSource.StyleSheetRule,\n            adds: style.rules\n          },\n          newStyleSheet\n        );\n      } catch (e2) {\n      }\n    });\n    const MAX_RETRY_TIME = 10;\n    let count = 0;\n    const adoptStyleSheets = (targetHost2, styleIds) => {\n      const stylesToAdopt = styleIds.map((styleId) => this.styleMirror.getStyle(styleId)).filter((style) => style !== null);\n      if (hasShadowRoot(targetHost2))\n        targetHost2.shadowRoot.adoptedStyleSheets = stylesToAdopt;\n      else if (targetHost2.nodeName === \"#document\")\n        targetHost2.adoptedStyleSheets = stylesToAdopt;\n      if (stylesToAdopt.length !== styleIds.length && count < MAX_RETRY_TIME) {\n        setTimeout$1(\n          () => adoptStyleSheets(targetHost2, styleIds),\n          0 + 100 * count\n        );\n        count++;\n      }\n    };\n    adoptStyleSheets(targetHost, data.styleIds);\n  }\n  legacy_resolveMissingNode(map, parent, target, targetMutation) {\n    const { previousId, nextId } = targetMutation;\n    const previousInMap = previousId && map[previousId];\n    const nextInMap = nextId && map[nextId];\n    if (previousInMap) {\n      const { node, mutation } = previousInMap;\n      parent.insertBefore(node, target);\n      delete map[mutation.node.id];\n      delete this.legacy_missingNodeRetryMap[mutation.node.id];\n      if (mutation.previousId || mutation.nextId) {\n        this.legacy_resolveMissingNode(map, parent, node, mutation);\n      }\n    }\n    if (nextInMap) {\n      const { node, mutation } = nextInMap;\n      parent.insertBefore(\n        node,\n        target.nextSibling\n      );\n      delete map[mutation.node.id];\n      delete this.legacy_missingNodeRetryMap[mutation.node.id];\n      if (mutation.previousId || mutation.nextId) {\n        this.legacy_resolveMissingNode(map, parent, node, mutation);\n      }\n    }\n  }\n  moveAndHover(x, y, id, isSync, debugData, pointerId) {\n    const target = this.mirror.getNode(id);\n    if (!target) {\n      return this.debugNodeNotFound(debugData, id);\n    }\n    const base = getBaseDimension(target, this.iframe);\n    const _x = x * base.absoluteScale + base.x;\n    const _y = y * base.absoluteScale + base.y;\n    const pointer = this.pointers[pointerId];\n    if (pointer && pointer.pointerEl) {\n      pointer.pointerEl.style.left = `${_x}px`;\n      pointer.pointerEl.style.top = `${_y}px`;\n    }\n    if (!isSync) {\n      this.drawMouseTail({ x: _x, y: _y }, pointerId);\n    }\n    this.hoverElements(target);\n  }\n  drawMouseTail(position, pointerId) {\n    const pointer = this.pointers[pointerId];\n    if (!pointer || !pointer.mouseTail) {\n      return;\n    }\n    const { lineCap, lineWidth, strokeStyle, duration } = this.config.mouseTail === true ? defaultMouseTailConfig : Object.assign({}, defaultMouseTailConfig, this.config.mouseTail);\n    const draw = () => {\n      if (!pointer || !pointer.mouseTail) {\n        return;\n      }\n      const mouseTail = pointer.mouseTail;\n      const ctx = mouseTail.getContext(\"2d\");\n      if (!ctx || !pointer.tailPositions.length) {\n        return;\n      }\n      ctx.clearRect(0, 0, mouseTail.width, mouseTail.height);\n      ctx.beginPath();\n      ctx.lineWidth = lineWidth;\n      ctx.lineCap = lineCap;\n      ctx.strokeStyle = strokeStyle;\n      ctx.moveTo(pointer.tailPositions[0].x, pointer.tailPositions[0].y);\n      pointer.tailPositions.forEach((p) => ctx.lineTo(p.x, p.y));\n      ctx.stroke();\n    };\n    pointer.tailPositions.push(position);\n    draw();\n    setTimeout$1(() => {\n      if (pointerId in this.pointers) {\n        pointer.tailPositions = pointer.tailPositions.filter(\n          (p) => p !== position\n        );\n        draw();\n      }\n    }, duration / this.speedService.state.context.timer.speed);\n  }\n  hoverElements(el) {\n    const iframeDoc = getIFrameContentDocument(this.iframe);\n    const rootElement = this.lastHoveredRootNode || iframeDoc;\n    if (rootElement && typeof rootElement.querySelectorAll === \"function\") {\n      rootElement.querySelectorAll(\".\\\\:hover\").forEach((hoveredEl) => {\n        hoveredEl.classList.remove(\":hover\");\n      });\n    }\n    this.lastHoveredRootNode = el.getRootNode();\n    let currentEl = el;\n    while (currentEl) {\n      if (currentEl.classList) {\n        currentEl.classList.add(\":hover\");\n      }\n      currentEl = currentEl.parentElement;\n    }\n  }\n  isUserInteraction(event) {\n    if (event.type !== EventType.IncrementalSnapshot) {\n      return false;\n    }\n    return event.data.source > IncrementalSource.Mutation && event.data.source <= IncrementalSource.Input;\n  }\n  backToNormal() {\n    this.nextUserInteractionEvent = null;\n    if (this.speedService.state.matches(\"normal\")) {\n      return;\n    }\n    this.speedService.send({ type: \"BACK_TO_NORMAL\" });\n    this.emitter.emit(ReplayerEvents.SkipEnd, {\n      speed: this.speedService.state.context.normalSpeed\n    });\n  }\n  warnNodeNotFound(d, id) {\n    this.warn(`Node with id '${id}' not found. `, d);\n  }\n  warnCanvasMutationFailed(d, error) {\n    this.warn(`Has error on canvas update`, error, \"canvas mutation:\", d);\n  }\n  debugNodeNotFound(d, id) {\n    this.debug(`Node with id '${id}' not found. `, d);\n  }\n  warn(...args) {\n    if (!this.config.showWarning) {\n      return;\n    }\n    this.config.logger.warn(REPLAY_CONSOLE_PREFIX, ...args);\n  }\n  debug(...args) {\n    if (!this.config.showDebug) {\n      return;\n    }\n    this.config.logger.log(REPLAY_CONSOLE_PREFIX, ...args);\n  }\n}\nexport {\n  CanvasManager,\n  EventType,\n  IncrementalSource,\n  MouseInteractions,\n  Replayer,\n  ReplayerEvents,\n  addCustomEvent,\n  canvasMutation,\n  deserializeArg,\n  freezePage,\n  record,\n  takeFullSnapshot,\n  utils\n};\n//# sourceMappingURL=rrweb.js.map\n","import type { Breadcrumb } from '@sentry/core';\nimport { setTimeout } from '@sentry-internal/browser-utils';\nimport { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Any IncrementalSource for rrweb that we interpret as a kind of mutation. */\nconst IncrementalMutationSources = new Set([\n  IncrementalSource.Mutation,\n  IncrementalSource.StyleSheetRule,\n  IncrementalSource.StyleDeclaration,\n  IncrementalSource.AdoptedStyleSheet,\n  IncrementalSource.CanvasMutation,\n  IncrementalSource.Selection,\n  IncrementalSource.MediaInteraction,\n]);\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scrollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scrollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scrollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (IncrementalMutationSources.has(source)) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type { ConsoleLevel, SeverityLevel } from '@sentry/core';\nimport { addBreadcrumb, captureException, debug as coreDebug, severityLevelFromString } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\n\ntype ReplayConsoleLevels = Extract<ConsoleLevel, 'log' | 'warn' | 'error'>;\nconst CONSOLE_LEVELS: readonly ReplayConsoleLevels[] = ['log', 'warn', 'error'] as const;\nconst PREFIX = '[Replay] ';\n\ninterface LoggerConfig {\n  captureExceptions: boolean;\n  traceInternals: boolean;\n}\n\ntype CoreDebugLogger = typeof coreDebug;\n\ninterface ReplayDebugLogger extends CoreDebugLogger {\n  /**\n   * Calls `debug.log` but saves breadcrumb in the next tick due to race\n   * conditions before replay is initialized.\n   */\n  infoTick: CoreDebugLogger['log'];\n  /**\n   * Captures exceptions (`Error`) if \"capture internal exceptions\" is enabled\n   */\n  exception: CoreDebugLogger['error'];\n  /**\n   * Configures the logger with additional debugging behavior\n   */\n  setConfig(config: Partial<LoggerConfig>): void;\n}\n\nfunction _addBreadcrumb(message: unknown, level: SeverityLevel = 'info'): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level,\n      message: `${PREFIX}${message}`,\n    },\n    { level },\n  );\n}\n\nfunction makeReplayDebugLogger(): ReplayDebugLogger {\n  let _capture = false;\n  let _trace = false;\n\n  const _debug: Partial<ReplayDebugLogger> = {\n    exception: () => undefined,\n    infoTick: () => undefined,\n    setConfig: (opts: Partial<LoggerConfig>) => {\n      _capture = !!opts.captureExceptions;\n      _trace = !!opts.traceInternals;\n    },\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      _debug[name] = (...args: unknown[]) => {\n        coreDebug[name](PREFIX, ...args);\n        if (_trace) {\n          _addBreadcrumb(args.join(''), severityLevelFromString(name));\n        }\n      };\n    });\n\n    _debug.exception = (error: unknown, ...message: unknown[]) => {\n      if (message.length && _debug.error) {\n        _debug.error(...message);\n      }\n\n      coreDebug.error(PREFIX, error);\n\n      if (_capture) {\n        captureException(error);\n      } else if (_trace) {\n        // No need for a breadcrumb if `_capture` is enabled since it should be\n        // captured as an exception\n        _addBreadcrumb(error, 'error');\n      }\n    };\n\n    _debug.infoTick = (...args: unknown[]) => {\n      coreDebug.log(PREFIX, ...args);\n      if (_trace) {\n        // Wait a tick here to avoid race conditions for some initial logs\n        // which may be added before replay is initialized\n        setTimeout(() => _addBreadcrumb(args[0]), 0);\n      }\n    };\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      _debug[name] = () => undefined;\n    });\n  }\n\n  return _debug as ReplayDebugLogger;\n}\n\nexport const debug = makeReplayDebugLogger();\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { GLOBAL_OBJ } from '@sentry/core';\n\nconst NAVIGATOR = GLOBAL_OBJ.navigator;\n\n/**\n *  Disable sampling mousemove events on iOS browsers as this can cause blocking the main thread\n *  https://github.com/getsentry/sentry-javascript/issues/14534\n */\nexport function getRecordingSamplingOptions(): Partial<{ sampling: { mousemove: boolean } }> {\n  if (\n    /iPhone|iPad|iPod/i.test(NAVIGATOR?.userAgent ?? '') ||\n    (/Macintosh/i.test(NAVIGATOR?.userAgent ?? '') && NAVIGATOR?.maxTouchPoints && NAVIGATOR?.maxTouchPoints > 1)\n  ) {\n    return {\n      sampling: {\n        mousemove: false,\n      },\n    };\n  }\n\n  return {};\n}\n","import type { RateLimits, ReplayEvent, TransportMakeRequestResponse } from '@sentry/core';\nimport { getClient, getCurrentScope, isRateLimited, resolvedSyncPromise, updateRateLimits } from '@sentry/core';\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { debug } from './logger';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client?.getTransport();\n  const dsn = client?.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay');\n    DEBUG_BUILD && debug.log('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import type { Client, HandlerDataXhr, SentryWrappedXMLHttpRequest, Span, WebFetchHeaders } from '@sentry/core';\nimport {\n  addFetchEndInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  getActiveSpan,\n  getClient,\n  getLocationHref,\n  getTraceData,\n  hasSpansEnabled,\n  instrumentFetchRequest,\n  parseUrl,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SentryNonRecordingSpan,\n  setHttpStatus,\n  spanToJSON,\n  startInactiveSpan,\n  stringMatchesSomePattern,\n  stripUrlQueryAndFragment,\n} from '@sentry/core';\nimport type { XhrHint } from '@sentry-internal/browser-utils';\nimport {\n  addPerformanceInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  SENTRY_XHR_DATA_KEY,\n} from '@sentry-internal/browser-utils';\nimport { WINDOW } from '../helpers';\nimport { resourceTimingToSpanAttributes } from './resource-timing';\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * List of strings and/or Regular Expressions used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * **Default:** If this option is not provided, tracing headers will be attached to all outgoing requests.\n   * If you are using a browser SDK, by default, tracing headers will only be attached to outgoing requests to the same origin.\n   *\n   * **Disclaimer:** Carelessly setting this option in browser environments may result into CORS errors!\n   * Only attach tracing headers to requests to the same origin, or to requests to services you can control CORS headers of.\n   * Cross-origin requests, meaning requests to a different domain, for example a request to `https://api.example.com/` while you're on `https://example.com/`, take special care.\n   * If you are attaching headers to cross-origin requests, make sure the backend handling the request returns a `\"Access-Control-Allow-Headers: sentry-trace, baggage\"` header to ensure your requests aren't blocked.\n   *\n   * If you provide a `tracePropagationTargets` array, the entries you provide will be matched against the entire URL of the outgoing request.\n   * If you are using a browser SDK, the entries will also be matched against the pathname of the outgoing requests.\n   * This is so you can have matchers for relative requests, for example, `/^\\/api/` if you want to trace requests to your `/api` routes on the same domain.\n   *\n   * If any of the two match any of the provided values, tracing headers will be attached to the outgoing request.\n   * Both, the string values, and the RegExes you provide in the array will match if they partially match the URL or pathname.\n   *\n   * Examples:\n   * - `tracePropagationTargets: [/^\\/api/]` and request to `https://same-origin.com/api/posts`:\n   *   - Tracing headers will be attached because the request is sent to the same origin and the regex matches the pathname \"/api/posts\".\n   * - `tracePropagationTargets: [/^\\/api/]` and request to `https://different-origin.com/api/posts`:\n   *   - Tracing headers will not be attached because the pathname will only be compared when the request target lives on the same origin.\n   * - `tracePropagationTargets: [/^\\/api/, 'https://external-api.com']` and request to `https://external-api.com/v1/data`:\n   *   - Tracing headers will be attached because the request URL matches the string `'https://external-api.com'`.\n   */\n  tracePropagationTargets?: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * Flag to disable tracking of long-lived streams, like server-sent events (SSE) via fetch.\n   * Do not enable this in case you have live streams or very long running streams.\n   *\n   * Disabled by default since it can lead to issues with streams using the `cancel()` api\n   * (https://github.com/getsentry/sentry-javascript/issues/13950)\n   *\n   * Default: false\n   */\n  trackFetchStreamPerformance: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n\n  /**\n   * Is called when spans are started for outgoing requests.\n   */\n  onRequestSpanStart?(span: Span, requestInformation: { headers?: WebFetchHeaders }): void;\n}\n\nconst responseToSpanId = new WeakMap<object, string>();\nconst spanIdToEndTimestamp = new Map<string, number>();\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  trackFetchStreamPerformance: false,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(client: Client, _options?: Partial<RequestInstrumentationOptions>): void {\n  const {\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    tracePropagationTargets,\n    onRequestSpanStart,\n  } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  const shouldAttachHeadersWithTargets = (url: string): boolean => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    // Keeping track of http requests, whose body payloads resolved later than the initial resolved request\n    // e.g. streaming using server sent events (SSE)\n    client.addEventProcessor(event => {\n      if (event.type === 'transaction' && event.spans) {\n        event.spans.forEach(span => {\n          if (span.op === 'http.client') {\n            const updatedTimestamp = spanIdToEndTimestamp.get(span.span_id);\n            if (updatedTimestamp) {\n              span.timestamp = updatedTimestamp / 1000;\n              spanIdToEndTimestamp.delete(span.span_id);\n            }\n          }\n        });\n      }\n      return event;\n    });\n\n    if (trackFetchStreamPerformance) {\n      addFetchEndInstrumentationHandler(handlerData => {\n        if (handlerData.response) {\n          const span = responseToSpanId.get(handlerData.response);\n          if (span && handlerData.endTimestamp) {\n            spanIdToEndTimestamp.set(span, handlerData.endTimestamp);\n          }\n        }\n      });\n    }\n\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n\n      if (handlerData.response && handlerData.fetchData.__span) {\n        responseToSpanId.set(handlerData.response, handlerData.fetchData.__span);\n      }\n\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n\n        if (enableHTTPTimings) {\n          addHTTPTimings(createdSpan);\n        }\n\n        onRequestSpanStart?.(createdSpan, { headers: handlerData.headers });\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (createdSpan) {\n        if (enableHTTPTimings) {\n          addHTTPTimings(createdSpan);\n        }\n\n        let headers;\n        try {\n          headers = new Headers(handlerData.xhr.__sentry_xhr_v3__?.request_headers);\n        } catch {\n          // noop\n        }\n        onRequestSpanStart?.(createdSpan, { headers });\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data;\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanAttributes = resourceTimingToSpanAttributes(entry);\n        spanAttributes.forEach(attributeArray => span.setAttribute(...attributeArray));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nexport function shouldAttachHeaders(\n  targetUrl: string,\n  tracePropagationTargets: (string | RegExp)[] | undefined,\n): boolean {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href = getLocationHref();\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr?.[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const { url, method } = sentryXhrData;\n\n  const shouldCreateSpanResult = hasSpansEnabled() && shouldCreateSpan(url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(url);\n  const parsedUrl = fullUrl ? parseUrl(fullUrl) : parseUrl(url);\n\n  const urlForSpanName = stripUrlQueryAndFragment(url);\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${method} ${urlForSpanName}`,\n          attributes: {\n            url,\n            type: 'xhr',\n            'http.method': method,\n            'http.url': fullUrl,\n            'server.address': parsedUrl?.host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n            ...(parsedUrl?.search && { 'http.query': parsedUrl?.search }),\n            ...(parsedUrl?.hash && { 'http.fragment': parsedUrl?.hash }),\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  if (shouldAttachHeaders(url)) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasSpansEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  const client = getClient();\n  if (client) {\n    client.emit('beforeOutgoingRequestSpan', span, handlerData as XhrHint);\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr: SentryWrappedXMLHttpRequest, span?: Span): void {\n  const { 'sentry-trace': sentryTrace, baggage } = getTraceData({ span });\n\n  if (sentryTrace) {\n    setHeaderOnXhr(xhr, sentryTrace, baggage);\n  }\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  const originalHeaders = xhr.__sentry_xhr_v3__?.request_headers;\n\n  if (originalHeaders?.['sentry-trace']) {\n    // bail if a sentry-trace header is already set\n    return;\n  }\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // only add our headers if\n      // - no pre-existing baggage header exists\n      // - or it is set and doesn't yet contain sentry values\n      const originalBaggageHeader = originalHeaders?.['baggage'];\n      if (!originalBaggageHeader || !baggageHeaderHasSentryValues(originalBaggageHeader)) {\n        // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n        // We can therefore simply set a baggage header without checking what was there before\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        xhr.setRequestHeader!('baggage', sentryBaggageHeader);\n      }\n    }\n  } catch {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction baggageHeaderHasSentryValues(baggageHeader: string): boolean {\n  return baggageHeader.split(',').some(value => value.trim().startsWith('sentry-'));\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n","/* eslint-disable max-lines */\nimport type { DebugImage, Envelope, Event, EventEnvelope, Profile, Span, ThreadCpuProfile } from '@sentry/core';\nimport {\n  browserPerformanceTimeOrigin,\n  debug,\n  DEFAULT_ENVIRONMENT,\n  forEachEnvelopeItem,\n  getClient,\n  getDebugImagesForResources,\n  spanToJSON,\n  timestampInSeconds,\n  uuid4,\n} from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile, JSSelfProfiler, JSSelfProfilerConstructor, JSSelfProfileStack } from './jsSelfProfiling';\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// We force make this optional to be on the safe side...\nconst navigator = WINDOW.navigator as typeof WINDOW.navigator | undefined;\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = navigator?.userAgent || '';\nlet OS_MODEL = '';\nconst OS_LOCALE = navigator?.language || navigator?.languages?.[0] || '';\n\ntype UAData = {\n  platform?: string;\n  architecture?: string;\n  model?: string;\n  platformVersion?: string;\n  fullVersionList?: {\n    brand: string;\n    version: string;\n  }[];\n};\n\ninterface UserAgentData {\n  getHighEntropyValues: (keys: string[]) => Promise<UAData>;\n}\n\nfunction isUserAgentData(data: unknown): data is UserAgentData {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = navigator?.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua: UAData) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList?.length) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1]!;\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile: ThreadCpuProfile | JSSelfProfile): profile is JSSelfProfile {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nexport function enrichWithThreadInformation(profile: ThreadCpuProfile | JSSelfProfile): ThreadCpuProfile {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\nexport interface ProfiledEvent extends Event {\n  sdkProcessingMetadata: {\n    profile?: JSSelfProfile;\n  };\n}\n\nfunction getTraceId(event: Event): string {\n  const traceId: unknown = event.contexts?.trace?.trace_id;\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      debug.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nexport function createProfilePayload(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  processed_profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : timestampInSeconds() * 1000;\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : timestampInSeconds() * 1000;\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/**\n *\n */\nexport function isProfiledTransactionEvent(event: Event): event is ProfiledEvent {\n  return !!event.sdkProcessingMetadata?.profile;\n}\n\n/*\n  See packages/browser-utils/src/browser/router.ts\n*/\n/**\n *\n */\nexport function isAutomatedPageLoadSpan(span: Span): boolean {\n  return spanToJSON(span).op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nexport function convertJSSelfProfileToSampledFormat(input: JSSelfProfile): Profile['profile'] {\n  let EMPTY_STACK_ID: undefined | number = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile: Profile['profile'] = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  const firstSample = input.samples[0];\n  if (!firstSample) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = firstSample.timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const perfOrigin = browserPerformanceTimeOrigin();\n  const origin = typeof performance.timeOrigin === 'number' ? performance.timeOrigin : perfOrigin || 0;\n  const adjustForOriginChange = origin - (perfOrigin || origin);\n\n  input.samples.forEach((jsSample, i) => {\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      return;\n    }\n\n    let stackTop: JSSelfProfileStack | undefined = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack: number[] = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (frame && profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample: Profile['profile']['samples'][0] = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  });\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nexport function addProfilesToEnvelope(envelope: EventEnvelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] as Event;\n\n      if (event?.contexts?.profile?.profile_id) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nexport function applyDebugMetadata(resource_paths: ReadonlyArray<string>): DebugImage[] {\n  const client = getClient();\n  const options = client?.getOptions();\n  const stackParser = options?.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  return getDebugImagesForResources(stackParser, resource_paths);\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      debug.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && debug.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile: JSSelfProfile): profile is JSSelfProfile & { profile_id: string } {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      debug.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      debug.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED: boolean = false;\nexport const MAX_PROFILE_DURATION_MS = 30_000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler: unknown): maybeProfiler is typeof JSSelfProfilerConstructor {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nexport function startJSSelfProfile(): JSSelfProfiler | undefined {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      debug.log('[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.');\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      debug.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      debug.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nexport function shouldProfileSpan(span: Span): boolean {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      debug.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!span.isRecording()) {\n    if (DEBUG_BUILD) {\n      debug.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client?.getOptions();\n  if (!options) {\n    DEBUG_BUILD && debug.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate: number | boolean | undefined = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && debug.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      debug.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      debug.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependency. We need to resolve this in v8.\nconst PROFILE_MAP: Map<string, JSSelfProfile> = new Map();\n/**\n *\n */\nexport function getActiveProfilesCount(): number {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nexport function takeProfileFromGlobalCache(profile_id: string): JSSelfProfile | undefined {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nexport function addProfileToGlobalCache(profile_id: string, profile: JSSelfProfile): void {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last: string = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n","import type { BrowserOptions } from '@sentry/browser';\nimport { init as browserInit, setContext } from '@sentry/browser';\nimport type { Client } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { version } from 'react';\n\n/**\n * Inits the React SDK\n */\nexport function init(options: BrowserOptions): Client | undefined {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n  setContext('react', { version });\n  return browserInit(opts);\n}\n","import type { Client, Integration, Options } from '@sentry/core';\nimport {\n  dedupeIntegration,\n  functionToStringIntegration,\n  getIntegrationsToSetup,\n  inboundFiltersIntegration,\n  initAndBind,\n  stackParserFromStackParserOptions,\n} from '@sentry/core';\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors';\nimport { browserSessionIntegration } from './integrations/browsersession';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport } from './transports/fetch';\nimport { checkAndWarnIfIsEmbeddedBrowserExtension } from './utils/detectBrowserExtension';\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    // TODO(v10): Replace with `eventFiltersIntegration` once we remove the deprecated `inboundFiltersIntegration`\n    // eslint-disable-next-line deprecation/deprecation\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n    browserSessionIntegration(),\n  ];\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): Client | undefined {\n  const shouldDisableBecauseIsBrowserExtenstion =\n    !options.skipBrowserExtensionCheck && checkAndWarnIfIsEmbeddedBrowserExtension();\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    enabled: shouldDisableBecauseIsBrowserExtenstion ? false : options.enabled,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup({\n      integrations: options.integrations,\n      defaultIntegrations:\n        options.defaultIntegrations == null ? getDefaultIntegrations(options) : options.defaultIntegrations,\n    }),\n    transport: options.transport || makeFetchTransport,\n  };\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n","import { captureException, withScope } from '@sentry/browser';\nimport { isError } from '@sentry/core';\nimport type { ErrorInfo } from 'react';\nimport { version } from 'react';\n\n/**\n * See if React major version is 17+ by parsing version string.\n */\nexport function isAtLeastReact17(reactVersion: string): boolean {\n  const reactMajor = reactVersion.match(/^([^.]+)/);\n  return reactMajor !== null && parseInt(reactMajor[0]) >= 17;\n}\n\n/**\n * Recurse through `error.cause` chain to set cause on an error.\n */\nexport function setCause(error: Error & { cause?: Error }, cause: Error): void {\n  const seenErrors = new WeakSet();\n\n  function recurse(error: Error & { cause?: Error }, cause: Error): void {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.add(error);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * Captures an error that was thrown by a React ErrorBoundary or React root.\n *\n * @param error The error to capture.\n * @param errorInfo The errorInfo provided by React.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureReactException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any,\n  { componentStack }: ErrorInfo,\n  hint?: Parameters<typeof captureException>[1],\n): string {\n  // If on React version >= 17, create stack trace from componentStack param and links\n  // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n  // Linking errors requires the `LinkedErrors` integration be enabled.\n  // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n  //\n  // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n  // with non-error objects. This is why we need to check if the error is an error-like object.\n  // See: https://github.com/getsentry/sentry-javascript/issues/6167\n  if (isAtLeastReact17(version) && isError(error) && componentStack) {\n    const errorBoundaryError = new Error(error.message);\n    errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n    errorBoundaryError.stack = componentStack;\n\n    // Using the `LinkedErrors` integration to link the errors together.\n    setCause(error, errorBoundaryError);\n  }\n\n  return withScope(scope => {\n    scope.setContext('react', { componentStack });\n    return captureException(error, hint);\n  });\n}\n\n/**\n * Creates an error handler that can be used with the `onCaughtError`, `onUncaughtError`,\n * and `onRecoverableError` options in `createRoot` and `hydrateRoot` React DOM methods.\n *\n * @param callback An optional callback that will be called after the error is captured.\n * Use this to add custom handling for errors.\n *\n * @example\n *\n * ```JavaScript\n * const root = createRoot(container, {\n *  onCaughtError: Sentry.reactErrorHandler(),\n *  onUncaughtError: Sentry.reactErrorHandler((error, errorInfo) => {\n *    console.warn('Caught error', error, errorInfo.componentStack);\n *  });\n * });\n * ```\n */\nexport function reactErrorHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback?: (error: any, errorInfo: ErrorInfo, eventId: string) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): (error: any, errorInfo: ErrorInfo) => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (error: any, errorInfo: ErrorInfo) => {\n    const eventId = captureReactException(error, errorInfo);\n    if (callback) {\n      callback(error, errorInfo, eventId);\n    }\n  };\n}\n","import { startInactiveSpan } from '@sentry/browser';\nimport type { Span } from '@sentry/core';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, spanToJSON, timestampInSeconds, withActiveSpan } from '@sentry/core';\nimport * as React from 'react';\nimport { REACT_MOUNT_OP, REACT_RENDER_OP, REACT_UPDATE_OP } from './constants';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type ProfilerProps = {\n  // The name of the component being profiled.\n  name: string;\n  // If the Profiler is disabled. False by default. This is useful if you want to disable profilers\n  // in certain environments.\n  disabled?: boolean;\n  // If time component is on page should be displayed as spans. True by default.\n  includeRender?: boolean;\n  // If component updates should be displayed as spans. True by default.\n  includeUpdates?: boolean;\n  // Component that is being profiled.\n  children?: React.ReactNode;\n  // props given to component being profiled.\n  updateProps: { [key: string]: unknown };\n};\n\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nclass Profiler extends React.Component<ProfilerProps> {\n  /**\n   * The span of the mount activity\n   * Made protected for the React Native SDK to access\n   */\n  protected _mountSpan: Span | undefined;\n  /**\n   * The span that represents the duration of time between shouldComponentUpdate and componentDidUpdate\n   */\n  protected _updateSpan: Span | undefined;\n\n  public constructor(props: ProfilerProps) {\n    super(props);\n    const { name, disabled = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this._mountSpan = startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  }\n\n  // If a component mounted, we can finish the mount activity.\n  public componentDidMount(): void {\n    if (this._mountSpan) {\n      this._mountSpan.end();\n    }\n  }\n\n  public shouldComponentUpdate({ updateProps, includeUpdates = true }: ProfilerProps): boolean {\n    // Only generate an update span if includeUpdates is true, if there is a valid mountSpan,\n    // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n    // We are just trying to give baseline clues for further investigation.\n    if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n      // See what props have changed between the previous props, and the current props. This is\n      // set as data on the span. We just store the prop keys as the values could be potentially very large.\n      const changedProps = Object.keys(updateProps).filter(k => updateProps[k] !== this.props.updateProps[k]);\n      if (changedProps.length > 0) {\n        const now = timestampInSeconds();\n        this._updateSpan = withActiveSpan(this._mountSpan, () => {\n          return startInactiveSpan({\n            name: `<${this.props.name}>`,\n            onlyIfParent: true,\n            op: REACT_UPDATE_OP,\n            startTime: now,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n              'ui.component_name': this.props.name,\n              'ui.react.changed_props': changedProps,\n            },\n          });\n        });\n      }\n    }\n\n    return true;\n  }\n\n  public componentDidUpdate(): void {\n    if (this._updateSpan) {\n      this._updateSpan.end();\n      this._updateSpan = undefined;\n    }\n  }\n\n  // If a component is unmounted, we can say it is no longer on the screen.\n  // This means we can finish the span representing the component render.\n  public componentWillUnmount(): void {\n    const endTimestamp = timestampInSeconds();\n    const { name, includeRender = true } = this.props;\n\n    if (this._mountSpan && includeRender) {\n      const startTime = spanToJSON(this._mountSpan).timestamp;\n      withActiveSpan(this._mountSpan, () => {\n        const renderSpan = startInactiveSpan({\n          onlyIfParent: true,\n          name: `<${name}>`,\n          op: REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      });\n    }\n  }\n\n  public render(): React.ReactNode {\n    return this.props.children;\n  }\n}\n\n// React.Component default props are defined as static property on the class\nObject.assign(Profiler, {\n  defaultProps: {\n    disabled: false,\n    includeRender: true,\n    includeUpdates: true,\n  },\n});\n\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withProfiler<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  // We do not want to have `updateProps` given in options, it is instead filled through the HOC.\n  options?: Pick<Partial<ProfilerProps>, Exclude<keyof ProfilerProps, 'updateProps' | 'children'>>,\n): React.FC<P> {\n  const componentDisplayName =\n    options?.name || WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <Profiler {...options} name={componentDisplayName} updateProps={props}>\n      <WrappedComponent {...props} />\n    </Profiler>\n  );\n\n  Wrapped.displayName = `profiler(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(\n  name: string,\n  options: { disabled?: boolean; hasRenderSpan?: boolean } = {\n    disabled: false,\n    hasRenderSpan: true,\n  },\n): void {\n  const [mountSpan] = React.useState(() => {\n    if (options?.disabled) {\n      return undefined;\n    }\n\n    return startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  });\n\n  React.useEffect(() => {\n    if (mountSpan) {\n      mountSpan.end();\n    }\n\n    return (): void => {\n      if (mountSpan && options.hasRenderSpan) {\n        const startTime = spanToJSON(mountSpan).timestamp;\n        const endTimestamp = timestampInSeconds();\n\n        const renderSpan = startInactiveSpan({\n          name: `<${name}>`,\n          onlyIfParent: true,\n          op: REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      }\n    };\n    // We only want this to run once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport { Profiler, useProfiler, withProfiler };\n","export const REACT_RENDER_OP = 'ui.react.render';\n\nexport const REACT_UPDATE_OP = 'ui.react.update';\n\nexport const REACT_MOUNT_OP = 'ui.react.mount';\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type { ReportDialogOptions } from '@sentry/browser';\nimport { getClient, showReportDialog, withScope } from '@sentry/browser';\nimport type { Scope } from '@sentry/core';\nimport { debug } from '@sentry/core';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build';\nimport { captureReactException } from './error';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type FallbackRender = (errorData: {\n  error: unknown;\n  componentStack: string;\n  eventId: string;\n  resetError(): void;\n}) => React.ReactElement;\n\ntype OnUnmountType = {\n  (error: null, componentStack: null, eventId: null): void;\n  (error: unknown, componentStack: string, eventId: string): void;\n};\n\nexport type ErrorBoundaryProps = {\n  children?: React.ReactNode | (() => React.ReactNode);\n  /** If a Sentry report dialog should be rendered on error */\n  showDialog?: boolean | undefined;\n  /**\n   * Options to be passed into the Sentry report dialog.\n   * No-op if {@link showDialog} is false.\n   */\n  dialogOptions?: ReportDialogOptions | undefined;\n  /**\n   * A fallback component that gets rendered when the error boundary encounters an error.\n   *\n   * Can either provide a React Component, or a function that returns React Component as\n   * a valid fallback prop. If a function is provided, the function will be called with\n   * the error, the component stack, and an function that resets the error boundary on error.\n   *\n   */\n  fallback?: React.ReactElement | FallbackRender | undefined;\n  /**\n   * If set to `true` or `false`, the error `handled` property will be set to the given value.\n   * If unset, the default behaviour is to rely on the presence of the `fallback` prop to determine\n   * if the error was handled or not.\n   */\n  handled?: boolean | undefined;\n  /** Called when the error boundary encounters an error */\n  onError?: ((error: unknown, componentStack: string, eventId: string) => void) | undefined;\n  /** Called on componentDidMount() */\n  onMount?: (() => void) | undefined;\n  /**\n   * Called when the error boundary resets due to a reset call from the\n   * fallback render props function.\n   */\n  onReset?: ((error: unknown, componentStack: string, eventId: string) => void) | undefined;\n  /**\n   * Called on componentWillUnmount() with the error, componentStack, and eventId.\n   *\n   * If the error boundary never encountered an error, the error\n   * componentStack, and eventId will be null.\n   */\n  onUnmount?: OnUnmountType | undefined;\n  /** Called before the error is captured by Sentry, allows for you to add tags or context using the scope */\n  beforeCapture?: ((scope: Scope, error: unknown, componentStack: string) => void) | undefined;\n};\n\ntype ErrorBoundaryState =\n  | {\n      componentStack: null;\n      error: null;\n      eventId: null;\n    }\n  | {\n      componentStack: React.ErrorInfo['componentStack'];\n      error: unknown;\n      eventId: string;\n    };\n\nconst INITIAL_STATE: ErrorBoundaryState = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState;\n\n  private readonly _openFallbackReportDialog: boolean;\n\n  private _lastEventId?: string;\n  private _cleanupHook?: () => void;\n\n  public constructor(props: ErrorBoundaryProps) {\n    super(props);\n\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = getClient();\n    if (client && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      this._cleanupHook = client.on('afterSendEvent', event => {\n        if (!event.type && this._lastEventId && event.event_id === this._lastEventId) {\n          showReportDialog({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n  public componentDidCatch(error: unknown, errorInfo: React.ErrorInfo): void {\n    const { componentStack } = errorInfo;\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    withScope(scope => {\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n\n      const handled = this.props.handled != null ? this.props.handled : !!this.props.fallback;\n      const eventId = captureReactException(error, errorInfo, { mechanism: { handled } });\n\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          showReportDialog({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n  public componentDidMount(): void {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      if (this.state === INITIAL_STATE) {\n        // If the error boundary never encountered an error, call onUnmount with null values\n        onUnmount(null, null, null);\n      } else {\n        // `componentStack` and `eventId` are guaranteed to be non-null here because `onUnmount` is only called\n        // when the error boundary has already encountered an error.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        onUnmount(error, componentStack!, eventId!);\n      }\n    }\n\n    if (this._cleanupHook) {\n      this._cleanupHook();\n      this._cleanupHook = undefined;\n    }\n  }\n\n  public resetErrorBoundary(): void {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      // `componentStack` and `eventId` are guaranteed to be non-null here because `onReset` is only called\n      // when the error boundary has already encountered an error.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      onReset(error, componentStack!, eventId!);\n    }\n    this.setState(INITIAL_STATE);\n  }\n\n  public render(): React.ReactNode {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    // `componentStack` is only null in the initial state, when no error has been captured.\n    // If an error has been captured, `componentStack` will be a string.\n    // We cannot check `state.error` because null can be thrown as an error.\n    if (state.componentStack === null) {\n      return typeof children === 'function' ? children() : children;\n    }\n\n    const element =\n      typeof fallback === 'function'\n        ? React.createElement(fallback, {\n            error: state.error,\n            componentStack: state.componentStack,\n            resetError: () => this.resetErrorBoundary(),\n            eventId: state.eventId,\n          })\n        : fallback;\n\n    if (React.isValidElement(element)) {\n      return element;\n    }\n\n    if (fallback) {\n      DEBUG_BUILD && debug.warn('fallback did not produce a valid ReactElement');\n    }\n\n    // Fail gracefully if no fallback provided or is not valid\n    return null;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  errorBoundaryOptions: ErrorBoundaryProps,\n): React.FC<P> {\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = React.memo((props: P) => (\n    <ErrorBoundary {...errorBoundaryOptions}>\n      <WrappedComponent {...props} />\n    </ErrorBoundary>\n  )) as unknown as React.FC<P>;\n\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, withErrorBoundary };\n","/* eslint-disable max-lines */\n// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\nimport {\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n  WINDOW,\n} from '@sentry/browser';\nimport type { Client, Integration, Span, TransactionSource } from '@sentry/core';\nimport {\n  debug,\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getRootSpan,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  spanToJSON,\n} from '@sentry/core';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\nimport type {\n  Action,\n  AgnosticDataRouteMatch,\n  CreateRouterFunction,\n  CreateRoutesFromChildren,\n  Location,\n  MatchRoutes,\n  RouteMatch,\n  RouteObject,\n  Router,\n  RouterState,\n  UseEffect,\n  UseLocation,\n  UseNavigationType,\n  UseRoutes,\n} from './types';\n\nlet _useEffect: UseEffect;\nlet _useLocation: UseLocation;\nlet _useNavigationType: UseNavigationType;\nlet _createRoutesFromChildren: CreateRoutesFromChildren;\nlet _matchRoutes: MatchRoutes;\nlet _stripBasename: boolean = false;\n\nconst CLIENTS_WITH_INSTRUMENT_NAVIGATION = new WeakSet<Client>();\n\nexport interface ReactRouterOptions {\n  useEffect: UseEffect;\n  useLocation: UseLocation;\n  useNavigationType: UseNavigationType;\n  createRoutesFromChildren: CreateRoutesFromChildren;\n  matchRoutes: MatchRoutes;\n  stripBasename?: boolean;\n}\n\ntype V6CompatibleVersion = '6' | '7';\n\n// Keeping as a global variable for cross-usage in multiple functions\nconst allRoutes = new Set<RouteObject>();\n\n/**\n * Creates a wrapCreateBrowserRouter function that can be used with all React Router v6 compatible versions.\n */\nexport function createV6CompatibleWrapCreateBrowserRouter<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(\n  createRouterFunction: CreateRouterFunction<TState, TRouter>,\n  version: V6CompatibleVersion,\n): CreateRouterFunction<TState, TRouter> {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      debug.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  return function (routes: RouteObject[], opts?: Record<string, unknown> & { basename?: string }): TRouter {\n    addRoutesToAllRoutes(routes);\n\n    const router = createRouterFunction(routes, opts);\n    const basename = opts?.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(\n        activeRootSpan,\n        router.state.location,\n        routes,\n        undefined,\n        basename,\n        Array.from(allRoutes),\n      );\n    }\n\n    router.subscribe((state: RouterState) => {\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        // Wait for the next render if loading an unsettled route\n        if (state.navigation.state !== 'idle') {\n          requestAnimationFrame(() => {\n            handleNavigation({\n              location: state.location,\n              routes,\n              navigationType: state.historyAction,\n              version,\n              basename,\n              allRoutes: Array.from(allRoutes),\n            });\n          });\n        } else {\n          handleNavigation({\n            location: state.location,\n            routes,\n            navigationType: state.historyAction,\n            version,\n            basename,\n            allRoutes: Array.from(allRoutes),\n          });\n        }\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a wrapCreateMemoryRouter function that can be used with all React Router v6 compatible versions.\n */\nexport function createV6CompatibleWrapCreateMemoryRouter<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(\n  createRouterFunction: CreateRouterFunction<TState, TRouter>,\n  version: V6CompatibleVersion,\n): CreateRouterFunction<TState, TRouter> {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      debug.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createMemoryRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  return function (\n    routes: RouteObject[],\n    opts?: Record<string, unknown> & {\n      basename?: string;\n      initialEntries?: (string | { pathname: string })[];\n      initialIndex?: number;\n    },\n  ): TRouter {\n    addRoutesToAllRoutes(routes);\n\n    const router = createRouterFunction(routes, opts);\n    const basename = opts?.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n    let initialEntry = undefined;\n\n    const initialEntries = opts?.initialEntries;\n    const initialIndex = opts?.initialIndex;\n\n    const hasOnlyOneInitialEntry = initialEntries && initialEntries.length === 1;\n    const hasIndexedEntry = initialIndex !== undefined && initialEntries && initialEntries[initialIndex];\n\n    initialEntry = hasOnlyOneInitialEntry\n      ? initialEntries[0]\n      : hasIndexedEntry\n        ? initialEntries[initialIndex]\n        : undefined;\n\n    const location = initialEntry\n      ? typeof initialEntry === 'string'\n        ? { pathname: initialEntry }\n        : initialEntry\n      : router.state.location;\n\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, location, routes, undefined, basename, Array.from(allRoutes));\n    }\n\n    router.subscribe((state: RouterState) => {\n      const location = state.location;\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        handleNavigation({\n          location,\n          routes,\n          navigationType: state.historyAction,\n          version,\n          basename,\n          allRoutes: Array.from(allRoutes),\n        });\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a browser tracing integration that can be used with all React Router v6 compatible versions.\n */\nexport function createReactRouterV6CompatibleTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n  version: V6CompatibleVersion,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    setup(client) {\n      integration.setup(client);\n\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n    },\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const initPathName = WINDOW.location?.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.reactrouter_v${version}`,\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        CLIENTS_WITH_INSTRUMENT_NAVIGATION.add(client);\n      }\n    },\n  };\n}\n\nexport function createV6CompatibleWrapUseRoutes(origUseRoutes: UseRoutes, version: V6CompatibleVersion): UseRoutes {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      debug.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  const SentryRoutes: React.FC<{\n    children?: React.ReactNode;\n    routes: RouteObject[];\n    locationArg?: Partial<Location> | string;\n  }> = (props: { children?: React.ReactNode; routes: RouteObject[]; locationArg?: Partial<Location> | string }) => {\n    const isMountRenderPass = React.useRef(true);\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || locationArg?.pathname ? (locationArg as { pathname: string }) : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass.current) {\n        addRoutesToAllRoutes(routes);\n\n        updatePageloadTransaction(\n          getActiveRootSpan(),\n          normalizedLocation,\n          routes,\n          undefined,\n          undefined,\n          Array.from(allRoutes),\n        );\n        isMountRenderPass.current = false;\n      } else {\n        handleNavigation({\n          location: normalizedLocation,\n          routes,\n          navigationType,\n          version,\n          allRoutes: Array.from(allRoutes),\n        });\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes: RouteObject[], locationArg?: Partial<Location> | string): React.ReactElement | null => {\n    return <SentryRoutes routes={routes} locationArg={locationArg} />;\n  };\n}\n\nexport function handleNavigation(opts: {\n  location: Location;\n  routes: RouteObject[];\n  navigationType: Action;\n  version: V6CompatibleVersion;\n  matches?: AgnosticDataRouteMatch;\n  basename?: string;\n  allRoutes?: RouteObject[];\n}): void {\n  const { location, routes, navigationType, version, matches, basename, allRoutes } = opts;\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  const client = getClient();\n  if (!client || !CLIENTS_WITH_INSTRUMENT_NAVIGATION.has(client)) {\n    return;\n  }\n\n  if ((navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    let name,\n      source: TransactionSource = 'url';\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    const activeSpan = getActiveSpan();\n    const isAlreadyInNavigationSpan = activeSpan && spanToJSON(activeSpan).op === 'navigation';\n\n    // Cross usage can result in multiple navigation spans being created without this check\n    if (isAlreadyInNavigationSpan) {\n      activeSpan?.updateName(name);\n      activeSpan?.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    } else {\n      startBrowserTracingNavigationSpan(client, {\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.reactrouter_v${version}`,\n        },\n      });\n    }\n  }\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname: string, basename: string): string {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction sendIndexPath(pathBuilder: string, pathname: string, basename: string): [string, TransactionSource] {\n  const reconstructedPath = pathBuilder || _stripBasename ? stripBasenameFromPathname(pathname, basename) : pathname;\n\n  const formattedPath =\n    // If the path ends with a slash, remove it\n    reconstructedPath[reconstructedPath.length - 1] === '/'\n      ? reconstructedPath.slice(0, -1)\n      : // If the path ends with a wildcard, remove it\n        reconstructedPath.slice(-2) === '/*'\n        ? reconstructedPath.slice(0, -1)\n        : reconstructedPath;\n\n  return [formattedPath, 'route'];\n}\n\nfunction pathEndsWithWildcard(path: string): boolean {\n  return path.endsWith('*');\n}\n\nfunction pathIsWildcardAndHasChildren(path: string, branch: RouteMatch<string>): boolean {\n  return (pathEndsWithWildcard(path) && !!branch.route.children?.length) || false;\n}\n\nfunction routeIsDescendant(route: RouteObject): boolean {\n  return !!(!route.children && route.element && route.path?.endsWith('/*'));\n}\n\nfunction locationIsInsideDescendantRoute(location: Location, routes: RouteObject[]): boolean {\n  const matchedRoutes = _matchRoutes(routes, location) as RouteMatch[];\n\n  if (matchedRoutes) {\n    for (const match of matchedRoutes) {\n      if (routeIsDescendant(match.route) && pickSplat(match)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addRoutesToAllRoutes(routes: RouteObject[]): void {\n  routes.forEach(route => {\n    const extractedChildRoutes = getChildRoutesRecursively(route);\n\n    extractedChildRoutes.forEach(r => {\n      allRoutes.add(r);\n    });\n  });\n}\n\nfunction getChildRoutesRecursively(route: RouteObject, allRoutes: Set<RouteObject> = new Set()): Set<RouteObject> {\n  if (!allRoutes.has(route)) {\n    allRoutes.add(route);\n\n    if (route.children && !route.index) {\n      route.children.forEach(child => {\n        const childRoutes = getChildRoutesRecursively(child, allRoutes);\n\n        childRoutes.forEach(r => {\n          allRoutes.add(r);\n        });\n      });\n    }\n  }\n\n  return allRoutes;\n}\n\nfunction pickPath(match: RouteMatch): string {\n  return trimWildcard(match.route.path || '');\n}\n\nfunction pickSplat(match: RouteMatch): string {\n  return match.params['*'] || '';\n}\n\nfunction trimWildcard(path: string): string {\n  return path[path.length - 1] === '*' ? path.slice(0, -1) : path;\n}\n\nfunction trimSlash(path: string): string {\n  return path[path.length - 1] === '/' ? path.slice(0, -1) : path;\n}\n\nfunction prefixWithSlash(path: string): string {\n  return path[0] === '/' ? path : `/${path}`;\n}\n\nfunction rebuildRoutePathFromAllRoutes(allRoutes: RouteObject[], location: Location): string {\n  const matchedRoutes = _matchRoutes(allRoutes, location) as RouteMatch[];\n\n  if (!matchedRoutes || matchedRoutes.length === 0) {\n    return '';\n  }\n\n  for (const match of matchedRoutes) {\n    if (match.route.path && match.route.path !== '*') {\n      const path = pickPath(match);\n      const strippedPath = stripBasenameFromPathname(location.pathname, prefixWithSlash(match.pathnameBase));\n\n      if (location.pathname === strippedPath) {\n        return trimSlash(strippedPath);\n      }\n\n      return trimSlash(\n        trimSlash(path || '') +\n          prefixWithSlash(\n            rebuildRoutePathFromAllRoutes(\n              allRoutes.filter(route => route !== match.route),\n              {\n                pathname: strippedPath,\n              },\n            ),\n          ),\n      );\n    }\n  }\n\n  return '';\n}\n\nfunction getNormalizedName(\n  routes: RouteObject[],\n  location: Location,\n  branches: RouteMatch[],\n  basename: string = '',\n): [string, TransactionSource] {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    for (const branch of branches) {\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return sendIndexPath(pathBuilder, branch.pathname, basename);\n        }\n        const path = route.path;\n\n        // If path is not a wildcard and has no child routes, append the path\n        if (path && !pathIsWildcardAndHasChildren(path, branch)) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder = trimSlash(pathBuilder) + prefixWithSlash(newPath);\n\n          // If the path matches the current location, return the path\n          if (trimSlash(location.pathname) === trimSlash(basename + branch.pathname)) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / separators\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              !pathEndsWithWildcard(pathBuilder)\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n\n            // if the last character of the pathbuilder is a wildcard and there are children, remove the wildcard\n            if (pathIsWildcardAndHasChildren(pathBuilder, branch)) {\n              pathBuilder = pathBuilder.slice(0, -1);\n            }\n\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  const fallbackTransactionName = _stripBasename\n    ? stripBasenameFromPathname(location.pathname, basename)\n    : location.pathname || '/';\n\n  return [fallbackTransactionName, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan: Span | undefined,\n  location: Location,\n  routes: RouteObject[],\n  matches?: AgnosticDataRouteMatch,\n  basename?: string,\n  allRoutes?: RouteObject[],\n): void {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(allRoutes || routes, location, basename) as unknown as RouteMatch[]);\n\n  if (branches) {\n    let name,\n      source: TransactionSource = 'url';\n\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    getCurrentScope().setTransactionName(name || '/');\n\n    if (activeRootSpan) {\n      activeRootSpan.updateName(name);\n      activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createV6CompatibleWithSentryReactRouterRouting<P extends Record<string, any>, R extends React.FC<P>>(\n  Routes: R,\n  version: V6CompatibleVersion,\n): R {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes) {\n    DEBUG_BUILD &&\n      debug.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}.`);\n\n    return Routes;\n  }\n\n  const SentryRoutes: React.FC<P> = (props: P) => {\n    const isMountRenderPass = React.useRef(true);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) as RouteObject[];\n\n        if (isMountRenderPass.current) {\n          addRoutesToAllRoutes(routes);\n\n          updatePageloadTransaction(getActiveRootSpan(), location, routes, undefined, undefined, Array.from(allRoutes));\n          isMountRenderPass.current = false;\n        } else {\n          handleNavigation({\n            location,\n            routes,\n            navigationType,\n            version,\n            allRoutes: Array.from(allRoutes),\n          });\n        }\n      },\n      // `props.children` is purposely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return <Routes {...props} />;\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nfunction getActiveRootSpan(): Span | undefined {\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","export default 'ffffffff-ffff-ffff-ffff-ffffffffffff';\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","import validate from './validate.js';\nfunction parse(uuid) {\n    if (!validate(uuid)) {\n        throw TypeError('Invalid UUID');\n    }\n    let v;\n    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);\n}\nexport default parse;\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","function md5(bytes) {\n    const words = uint8ToUint32(bytes);\n    const md5Bytes = wordsToMd5(words, bytes.length * 8);\n    return uint32ToUint8(md5Bytes);\n}\nfunction uint32ToUint8(input) {\n    const bytes = new Uint8Array(input.length * 4);\n    for (let i = 0; i < input.length * 4; i++) {\n        bytes[i] = (input[i >> 2] >>> ((i % 4) * 8)) & 0xff;\n    }\n    return bytes;\n}\nfunction getOutputLength(inputLength8) {\n    return (((inputLength8 + 64) >>> 9) << 4) + 14 + 1;\n}\nfunction wordsToMd5(x, len) {\n    const xpad = new Uint32Array(getOutputLength(len)).fill(0);\n    xpad.set(x);\n    xpad[len >> 5] |= 0x80 << len % 32;\n    xpad[xpad.length - 1] = len;\n    x = xpad;\n    let a = 1732584193;\n    let b = -271733879;\n    let c = -1732584194;\n    let d = 271733878;\n    for (let i = 0; i < x.length; i += 16) {\n        const olda = a;\n        const oldb = b;\n        const oldc = c;\n        const oldd = d;\n        a = md5ff(a, b, c, d, x[i], 7, -680876936);\n        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n        b = md5gg(b, c, d, a, x[i], 20, -373897302);\n        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n        d = md5hh(d, a, b, c, x[i], 11, -358537222);\n        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n        a = md5ii(a, b, c, d, x[i], 6, -198630844);\n        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n        a = safeAdd(a, olda);\n        b = safeAdd(b, oldb);\n        c = safeAdd(c, oldc);\n        d = safeAdd(d, oldd);\n    }\n    return Uint32Array.of(a, b, c, d);\n}\nfunction uint8ToUint32(input) {\n    if (input.length === 0) {\n        return new Uint32Array();\n    }\n    const output = new Uint32Array(getOutputLength(input.length * 8)).fill(0);\n    for (let i = 0; i < input.length; i++) {\n        output[i >> 2] |= (input[i] & 0xff) << ((i % 4) * 8);\n    }\n    return output;\n}\nfunction safeAdd(x, y) {\n    const lsw = (x & 0xffff) + (y & 0xffff);\n    const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xffff);\n}\nfunction bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n}\nfunction md5cmn(q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;\n","import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport function stringToBytes(str) {\n    str = unescape(encodeURIComponent(str));\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(version, hash, value, namespace, buf, offset) {\n    const valueBytes = typeof value === 'string' ? stringToBytes(value) : value;\n    const namespaceBytes = typeof namespace === 'string' ? parse(namespace) : namespace;\n    if (typeof namespace === 'string') {\n        namespace = parse(namespace);\n    }\n    if (namespace?.length !== 16) {\n        throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n    let bytes = new Uint8Array(16 + valueBytes.length);\n    bytes.set(namespaceBytes);\n    bytes.set(valueBytes, namespaceBytes.length);\n    bytes = hash(bytes);\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = bytes[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(bytes);\n}\n","import md5 from './md5.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v3(value, namespace, buf, offset) {\n    return v35(0x30, md5, value, namespace, buf, offset);\n}\nv3.DNS = DNS;\nv3.URL = URL;\nexport default v3;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","function f(s, x, y, z) {\n    switch (s) {\n        case 0:\n            return (x & y) ^ (~x & z);\n        case 1:\n            return x ^ y ^ z;\n        case 2:\n            return (x & y) ^ (x & z) ^ (y & z);\n        case 3:\n            return x ^ y ^ z;\n    }\n}\nfunction ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction sha1(bytes) {\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    const newBytes = new Uint8Array(bytes.length + 1);\n    newBytes.set(bytes);\n    newBytes[bytes.length] = 0x80;\n    bytes = newBytes;\n    const l = bytes.length / 4 + 2;\n    const N = Math.ceil(l / 16);\n    const M = new Array(N);\n    for (let i = 0; i < N; ++i) {\n        const arr = new Uint32Array(16);\n        for (let j = 0; j < 16; ++j) {\n            arr[j] =\n                (bytes[i * 64 + j * 4] << 24) |\n                    (bytes[i * 64 + j * 4 + 1] << 16) |\n                    (bytes[i * 64 + j * 4 + 2] << 8) |\n                    bytes[i * 64 + j * 4 + 3];\n        }\n        M[i] = arr;\n    }\n    M[N - 1][14] = ((bytes.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n    for (let i = 0; i < N; ++i) {\n        const W = new Uint32Array(80);\n        for (let t = 0; t < 16; ++t) {\n            W[t] = M[i][t];\n        }\n        for (let t = 16; t < 80; ++t) {\n            W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n        }\n        let a = H[0];\n        let b = H[1];\n        let c = H[2];\n        let d = H[3];\n        let e = H[4];\n        for (let t = 0; t < 80; ++t) {\n            const s = Math.floor(t / 20);\n            const T = (ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n            e = d;\n            d = c;\n            c = ROTL(b, 30) >>> 0;\n            b = a;\n            a = T;\n        }\n        H[0] = (H[0] + a) >>> 0;\n        H[1] = (H[1] + b) >>> 0;\n        H[2] = (H[2] + c) >>> 0;\n        H[3] = (H[3] + d) >>> 0;\n        H[4] = (H[4] + e) >>> 0;\n    }\n    return Uint8Array.of(H[0] >> 24, H[0] >> 16, H[0] >> 8, H[0], H[1] >> 24, H[1] >> 16, H[1] >> 8, H[1], H[2] >> 24, H[2] >> 16, H[2] >> 8, H[2], H[3] >> 24, H[3] >> 16, H[3] >> 8, H[3], H[4] >> 24, H[4] >> 16, H[4] >> 8, H[4]);\n}\nexport default sha1;\n","import sha1 from './sha1.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v5(value, namespace, buf, offset) {\n    return v35(0x50, sha1, value, namespace, buf, offset);\n}\nv5.DNS = DNS;\nv5.URL = URL;\nexport default v5;\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport type AgnosticPatchRoutesOnNavigationFunctionArgs<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = {\n  signal: AbortSignal;\n  path: string;\n  matches: M[];\n  fetcherKey: string | undefined;\n  patch: (routeId: string | null, children: O[]) => void;\n};\n\nexport type AgnosticPatchRoutesOnNavigationFunction<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = (\n  opts: AgnosticPatchRoutesOnNavigationFunctionArgs<O, M>\n) => void | Promise<void>;\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      viewTransitionOpts?: ViewTransitionOpts;\n      flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches\n        .slice(0, idx + 1)\n        .every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach((key) => deletedFetchers.delete(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches =\n      opts?.initialHydration &&\n      state.matches &&\n      state.matches.length > 0 &&\n      !initialMatchesIsFOW\n        ? // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n          state.matches\n        : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      matches &&\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error: discoverResult.error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    abortFetcher(key);\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        abortFetcher(staleKey);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset,\n        });\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal,\n    fetcherKey?: string\n  ): Promise<DiscoverRoutesResult> {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties\n            );\n          },\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search\n        ? path.search.replace(/^\\?/, \"?index&\")\n        : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string,\n  includeBoundary = false\n) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  initialHydration: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      initialHydration ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction shouldLoadRouteOnHydration(\n  route: AgnosticDataRouteObject,\n  loaderData: RouteData | null | undefined,\n  errors: RouteData | null | undefined\n) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  let childrenToPatch: AgnosticDataRouteObject[];\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(\n    (newRoute) =>\n      !childrenToPatch.some((existingRoute) =>\n        isSameRoute(newRoute, existingRoute)\n      )\n  );\n\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n\n  childrenToPatch.push(...newRoutes);\n}\n\nfunction isSameRoute(\n  newRoute: AgnosticRouteObject,\n  existingRoute: AgnosticRouteObject\n): boolean {\n  // Most optimal check is by id\n  if (\n    \"id\" in newRoute &&\n    \"id\" in existingRoute &&\n    newRoute.id === existingRoute.id\n  ) {\n    return true;\n  }\n\n  // Second is by pathing differences\n  if (\n    !(\n      newRoute.index === existingRoute.index &&\n      newRoute.path === existingRoute.path &&\n      newRoute.caseSensitive === existingRoute.caseSensitive\n    )\n  ) {\n    return false;\n  }\n\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if (\n    (!newRoute.children || newRoute.children.length === 0) &&\n    (!existingRoute.children || existingRoute.children.length === 0)\n  ) {\n    return true;\n  }\n\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children!.every((aChild, i) =>\n    existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers\n            ? new Headers(result.init.headers)\n            : undefined,\n        };\n      }\n\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          undefined,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: result.init?.headers\n          ? new Headers(result.init.headers)\n          : undefined,\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n  \n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.11.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_logV6DeprecationWarnings as logV6DeprecationWarnings,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [future, router.future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n"],"names":["DEBUG_BUILD","__SENTRY_DEBUG__","GLOBAL_OBJ","globalThis","SDK_VERSION","getMainCarrier","getSentryCarrier","carrier","__SENTRY__","version","getGlobalSingleton","name","creator","obj","arguments","length","undefined","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","Object","keys","forEach","level","originalConsoleMethod","isEnabled","_getLoggerSettings","enabled","_maybeLog","_len4","args","Array","_key4","debug","enable","disable","log","_len","_key","warn","_len2","_key2","error","_len3","_key3","STACKTRACE_FRAME_LIMIT","UNKNOWN_FUNCTION","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","createStackParser","parsers","sortedParsers","sort","a","b","map","p","stack","skipFirstLines","framesToPop","frames","lines","split","i","line","slice","cleanedLine","test","replace","match","parser","frame","push","localStack","from","getLastStackFrame","function","pop","reverse","filename","stripSentryFramesAndReverse","arr","defaultFunctionName","getFunctionName","fn","getFramesFromEvent","event","exception","values","value","stacktrace","handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","e","triggerHandlers","data","typeHandlers","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","onerror","msg","url","column","apply","this","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","onunhandledrejection","objectToString","prototype","toString","isError","wat","call","isInstanceOf","Error","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","then","base","isVueViewModel","__isVue","_isVue","WINDOW","DEFAULT_MAX_STRING_LENGTH","htmlTreeAsString","elem","options","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","nextStr","keyAttrs","isArray","maxStringLength","_htmlElementAsString","parentNode","join","el","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","keyAttrPair","id","classes","c","allowedAttrs","k","attr","getLocationHref","document","location","href","truncate","str","max","safeJoin","input","delimiter","output","String","isMatchingPattern","pattern","requireExactStringMatch","includes","stringMatchesSomePattern","testString","some","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","defineProperty","writable","configurable","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","getOwnProperties","newObj","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","hasOwnProperty","extractExceptionKeysForMessage","maxLength","firstKey","includedKeys","serialized","uuid4","crypto","gbl","msCrypto","getCrypto","getRandomByte","Math","random","randomUUID","getRandomValues","typedArray","Uint8Array","getFirstException","getEventDescription","event_id","eventId","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","isAlreadyCaptured","dateTimestampInSeconds","Date","now","_cachedTimestampInSeconds","timestampInSeconds","performance","timeOrigin","createUnixTimestampInSecondsFunc","makeSession","context","startingTime","session","sid","init","timestamp","started","duration","status","errors","ignoreDuration","toJSON","toISOString","did","abnormal_mechanism","attrs","release","environment","ip_address","ipAddress","user_agent","userAgent","sessionToJSON","updateSession","user","email","username","merge","initialObj","mergeObj","levels","key","generateTraceId","generateSpanId","substring","SCOPE_SPAN_FIELD","_setSpanForScope","scope","span","_getSpanForScope","Scope","constructor","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","traceId","sampleRand","clone","newScope","flags","_level","_session","_transactionName","_fingerprint","_client","_lastEventId","setClient","client","setLastEventId","lastEventId","getClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getUser","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSession","getSession","update","captureContext","scopeToMerge","scopeInstance","getScopeData","contexts","propagationContext","clear","setPropagationContext","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","recordDroppedEvent","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","clearAttachments","breadcrumbs","attachments","eventProcessors","sdkProcessingMetadata","transactionName","setSDKProcessingMetadata","newData","getPropagationContext","captureException","hint","syntheticException","originalException","captureMessage","captureEvent","AsyncContextStack","isolationScope","assignedScope","assignedIsolationScope","_stack","_isolationScope","withScope","_pushScope","maybePromiseResult","_popScope","res","getStackTop","getScope","getIsolationScope","getAsyncContextStack","sentry","withSetScope","withIsolationScope","getAsyncContextStrategy","acs","withSetIsolationScope","getCurrentScope","getGlobalScope","rest","getTraceContextFromScope","parentSpanId","propagationSpanId","traceContext","trace_id","span_id","parent_span_id","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME","SEMANTIC_ATTRIBUTE_PROFILE_ID","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","getCapturedScopesOnSpan","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","baggageHeaderToDynamicSamplingContext","baggageHeader","baggageObject","reduce","acc","curr","currBaggageObject","baggageHeaderToObject","entries","_ref3","parseBaggageHeader","dynamicSamplingContext","_ref","SENTRY_BAGGAGE_KEY_PREFIX","baggageEntry","keyOrValue","decodeURIComponent","trim","_ref4","ORG_ID_REGEX","DSN_REGEX","dsnToString","dsn","withPassword","host","path","pass","port","projectId","protocol","publicKey","dsnFromComponents","components","extractOrgIdFromClient","getOptions","getDsn","org_id","orgId","extractOrgIdFromDsnHost","makeDsn","exec","lastPath","projectMatch","dsnFromString","find","component","isValidProtocol","isNaN","parseInt","validateDsn","parseSampleRate","sampleRate","Number","rate","parseFloat","hasShownSpanDropWarning","spanToTransactionTraceContext","spanId","spanContext","op","origin","links","spanToJSON","spanToTraceContext","isRemote","convertSpanLinksForEnvelope","traceFlags","restContext","attributes","sampled","spanTimeInputToSeconds","ensureTimestampInSeconds","getTime","getSpanJSON","spanIsSentrySpan","castSpan","startTime","endTime","spanIsOpenTelemetrySdkTraceBaseSpan","description","parentSpanContext","start_timestamp","getStatusMessage","spanIsSampled","code","CHILD_SPANS_FIELD","ROOT_SPAN_FIELD","addChildSpanToSpan","childSpan","rootSpan","add","Set","getRootSpan","showSpanDropWarning","hasSpansEnabled","maybeOptions","__SENTRY_TRACING__","tracesSampleRate","tracesSampler","DEFAULT_ENVIRONMENT","FROZEN_DSC_FIELD","freezeDscOnSpan","dsc","getDynamicSamplingContextFromClient","public_key","emit","getDynamicSamplingContextFromScope","getDynamicSamplingContextFromSpan","rootSpanJson","rootSpanAttributes","traceState","rootSpanSampleRate","get","applyLocalSampleRateToDsc","sample_rate","frozenDsc","traceStateDsc","dscOnTraceState","transaction","sample_rand","SentryNonRecordingSpan","_traceId","_spanId","end","_timestamp","setAttribute","_value","setAttributes","_values","setStatus","_status","updateName","_name","isRecording","addEvent","_attributesOrStartTime","_startTime","addLink","_link","addLinks","_links","recordException","_exception","_time","normalize","depth","maxProperties","Infinity","visit","err","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","inner","WeakSet","memoize","has","unmemoize","delete","memoBuilder","isFinite","stringified","_events","global","window","objName","getPrototypeOf","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","numAdded","visitable","visitKey","visitValue","createEnvelope","headers","addItemToEnvelope","envelope","newItem","items","forEachEnvelopeItem","envelopeItems","envelopeItem","encodeUTF8","encodePolyfill","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","item","itemHeaders","payload","stringifiedPayload","buffers","totalLength","buf","merged","offset","buffer","set","concatBuffers","createSpanEnvelopeItem","spanJson","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","profile_chunk","replay_event","replay_recording","check_in","feedback","raw_security","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","createEventEnvelope","metadata","tunnel","sdkInfo","eventType","integrations","packages","enhanceEventWithSdkInfo","envelopeHeaders","sent_at","trace","createEventEnvelopeHeaders","timedEventsToMeasurements","events","measurements","unit","SentrySpan","startTimestamp","_attributes","_parentSpanId","_sampled","endTimestamp","_endTime","_isStandaloneSpan","isStandalone","_onSpanEnded","link","updateStartTime","timeInput","logSpanEnd","profile_id","exclusive_time","is_segment","segment_id","attributesOrStartTime","time","isSpanTimeInput","isStandaloneSpan","spanItems","sendEnvelope","sendSpanEnvelope","spans","dscHasRequiredProps","beforeSendSpan","convertToSpanJSON","createSpanEnvelope","transactionEvent","_convertSpanToTransaction","isFullFinishedSpan","capturedSpanScope","capturedSpanIsolationScope","normalizedRequest","resultSet","addSpanChildren","childSpans","getSpanDescendants","request","transaction_info","SUPPRESS_TRACING_KEY","startInactiveSpan","getAcs","spanArguments","parseSentrySpanArguments","forceTransaction","parentSpan","customParentSpan","withActiveSpan","getParentSpan","onlyIfParent","createChildOrRootSpan","_startChildSpan","parentSampled","_startRootSpan","isRootSpan","header","infoParts","logSpanStart","setCapturedScopesOnSpan","initialCtx","experimental","standalone","ctx","mutableSpanSamplingData","spanAttributes","spanName","decision","finalParentSampled","finalAttributes","currentPropagationContext","localSampleRateWasApplied","samplingContext","inheritOrSampleWith","fallbackSampleRate","parentSampleRate","parsedSampleRate","shouldSample","sampleSpan","parentSpanIsAlwaysRootSpan","TRACING_DEFAULTS","idleTimeout","finalTimeout","childSpanTimeout","resolvedSyncPromise","SyncPromise","resolve","rejectedSyncPromise","reason","_","reject","executor","_state","_handlers","_runExecutor","onfulfilled","onrejected","result","_executeHandlers","catch","val","finally","onfinally","isRejected","cachedHandlers","setResult","state","notifyEventProcessors","processors","index","processor","final","applyScopeDataToEvent","applyDataToEvent","applySpanToEvent","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","mergeAndOverwriteScopeData","prop","mergeVal","parsedStackResults","lastKeysCount","cachedFilenameDebugIds","getFilenameToDebugIdMap","stackParser","debugIdMap","_sentryDebugIds","debugIdKeys","stackKey","parsedStack","stackFrame","debugId","prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","dist","maxValueLength","applyClientOptions","integrationNames","applyIntegrationsMetadata","filenameDebugIdMap","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","normalizeEvent","parseEventHintOrCaptureContext","hintIsScopeOrFunction","captureContextKeys","hintIsScopeContext","startSession","currentScope","navigator","currentSession","endSession","closeSession","_sendSessionUpdate","captureSession","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","_getIngestEndpoint","params","sentry_version","sentry_key","sentry_client","URLSearchParams","_encodedAuth","installedIntegrations","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integration","isDefaultInstance","resolvedUserIntegrations","integrationsByName","currentInstance","existingInstance","filterDuplicates","afterSetupIntegrations","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","preprocessEvent","bind","on","processEvent","assign","addIntegration","getPossibleEventMessages","possibleMessages","lastException","ALREADY_SEEN_ERROR","MISSING_RELEASE_FOR_SESSION_ERROR","INTERNAL_ERROR_SYMBOL","Symbol","for","DO_NOT_SEND_EVENT_SYMBOL","_makeInternalError","_makeDoNotSendEventError","_isInternalError","_isDoNotSendEventError","Client","_options","_integrations","_numProcessing","_outcomes","_hooks","_dsn","_metadata","_transport","transport","transportOptions","hintWithEventId","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","sendSession","getSdkMetadata","getTransport","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","close","eventProcessor","_isEnabled","_setupIntegrations","getIntegrationByName","integrationName","isAlreadyInstalled","sendEvent","env","promise","sendResponse","clientReleaseOption","clientEnvironmentOption","sessionAttrs","createSessionEnvelope","category","count","sendClientReports","hook","hooks","cbIndex","splice","callbacks","send","setupIntegrations","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","ticked","interval","setInterval","clearInterval","_prepareEvent","_processEvent","finalEvent","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","__sentry__","beforeSend","beforeSendTransaction","processedEvent","processedRootSpanJson","convertTransactionEventToSpanJson","processedSpans","processedSpan","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","spanCount","droppedSpanCount","transactionInfo","_clearOutcomes","outcomes","_ref2","quantity","_flushOutcomes","discarded_events","_INTERNAL_flushLogsBuffer","maybeLogBuffer","logBuffer","_INTERNAL_getLogBuffer","clientOptions","logs","item_count","createLogEnvelope","_getBufferMap","WeakMap","initAndBind","clientClass","initialScope","setCurrentClient","SENTRY_BUFFER_FULL_ERROR","makePromiseBuffer","limit","remove","task","Promise","$","taskProducer","drain","counter","capturedSetTimeout","setTimeout","clearTimeout","DEFAULT_RETRY_AFTER","updateRateLimits","limits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","headerDelay","delay","all","headerDate","parse","parseRetryAfterHeader","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","bufferSize","rateLimits","filteredEnvelopeItems","disabledUntil","isRateLimited","filteredEnvelope","recordEnvelopeLoss","requestTask","body","response","addAutoIpAddressToUser","objWithMaybeUser","addAutoIpAddressToSession","applySdkMetadata","names","DEFAULT_BREADCRUMBS","beforeBreadcrumb","finalBreadcrumb","originalFunctionToString","SETUP_CLIENTS","functionToStringIntegration","_functionToStringIntegration","Function","originalFunction","DEFAULT_IGNORE_ERRORS","eventFiltersIntegration","mergedOptions","_mergeOptions","_hint","ignoreTransactions","_isIgnoredTransaction","ignoreErrors","_isIgnoredError","_isUselessError","denyUrls","_getEventFilterUrl","_isDeniedUrl","allowUrls","_isAllowedUrl","_shouldDropEvent","inboundFiltersIntegration","internalOptions","disableErrorDefaults","rootException","parent_id","_getLastValidUrl","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","Map","addConsoleInstrumentationHandler","instrumentConsole","severityLevelFromString","dedupeIntegration","_dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","previousFrames","frameA","frameB","lineno","colno","currentFingerprint","previousFingerprint","parseUrl","query","fragment","search","hash","relative","MCP_RESOURCE_URI_ATTRIBUTE","getBreadcrumbLogLevelFromHttpStatusCode","_isFetchSupported","Headers","Request","Response","isNativeFunction","supportsNativeFetch","EdgeRuntime","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","addFetchInstrumentationHandler","skipNativeFetchCheck","instrumentFetch","onFetchResolved","originalFetch","virtualError","method","fetchArgs","getUrlFromResource","hasProp","toUpperCase","arg","parseFetchArgs","handlerData","fetchData","getHeadersFromFetchArgs","async","TypeError","URL","resource","requestArgument","optionsArgument","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","process","isBrowser","isElectronNodeRenderer","DOCUMENT","NAVIGATOR","TRIGGER_LABEL","CANCEL_BUTTON_LABEL","SUBMIT_BUTTON_LABEL","CONFIRM_BUTTON_LABEL","FORM_TITLE","EMAIL_PLACEHOLDER","EMAIL_LABEL","MESSAGE_PLACEHOLDER","MESSAGE_LABEL","NAME_PLACEHOLDER","NAME_LABEL","SUCCESS_MESSAGE_TEXT","IS_REQUIRED_LABEL","ADD_SCREENSHOT_LABEL","REMOVE_SCREENSHOT_LABEL","sendFeedback","includeReplay","associatedEventId","feedbackEvent","contact_email","associated_event_id","captureFeedback","cleanup","mergeOptions","defaultOptions","optionOverrides","onFormOpen","onFormClose","onSubmitSuccess","onSubmitError","onFormSubmitted","themeDark","themeLight","setAttributesNS","setAttributeNS","Actor","triggerLabel","triggerAriaLabel","shadow","styleNonce","ariaHidden","ariaLabel","createElementNS","svg","width","viewBox","g","clipPath","d","speakerDefs","speakerClipPathDef","speakerRect","FeedbackIcon","label","createTextNode","style","textContent","createActorStyles","appendToDom","removeFromDom","show","hide","PURPLE","DEFAULT_LIGHT","foreground","background","accentForeground","accentBackground","successColor","errorColor","border","boxShadow","outline","interactiveFilter","DEFAULT_DARK","getThemedCssVariables","theme","buildFeedbackIntegration","lazyLoadIntegration","getModalIntegration","getScreenshotIntegration","autoInject","showBranding","isEmailRequired","isNameRequired","showEmail","showName","enableScreenshot","useSentryUser","scriptNonce","colorScheme","addScreenshotButtonLabel","cancelButtonLabel","confirmButtonLabel","emailLabel","emailPlaceholder","formTitle","isRequiredLabel","messageLabel","messagePlaceholder","nameLabel","namePlaceholder","removeScreenshotButtonLabel","submitButtonLabel","successMessageText","_shadow","_subscriptions","_createShadow","attachShadow","mode","createMainStyles","_loadAndRenderDialog","screenshotRequired","maxTouchPoints","isSecureContext","modalIntegration","screenshotIntegration","screenshotIntegrationFn","dialog","createDialog","_attachTo","targetEl","querySelector","addEventListener","handleClick","open","unsubscribe","sub","removeEventListener","_createActor","actor","readyState","attachTo","createWidget","createForm","parentElement","n","l$1","u$1","i$1","o$1","r$1","f$1","c$1","s$1","a$1","h$1","v$1","l","u","p$1","y$1","t","o","r","f","children","defaultProps","d$1","props","ref","__k","__","__b","__e","__d","__c","__v","__i","__u","vnode","g$1","b$1","m$1","w$1","__P","M","__n","ownerSVGElement","k$1","x$1","C$1","__r","debounceRendering","shift","j$1","P$1","h","v","y","s","I","O","S","N","nextSibling","insertBefore","nodeType","T$1","setProperty","A$1","cssText","L","D$1","removeAttribute","m","w","x","C","H","T","A","contextType","__E","render","q$1","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","z$1","diffed","localName","is","childNodes","__html","innerHTML","current","unmount","componentWillUnmount","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","__H","__V","D","__N","every","q","j","z","B","__m","requestAnimationFrame","cancelAnimationFrame","useDebugValue","SentryLogo","transform","DialogHeader","_ref5","logoHtml","outerHTML","class","title","rel","dangerouslySetInnerHTML","retrieveStringValue","formData","Form","_ref6","defaultEmail","defaultName","onSubmit","screenshotInput","isSubmitting","setIsSubmitting","setError","showScreenshotInput","setShowScreenshotInput","ScreenshotInputComponent","screenshotError","setScreenshotError","onScreenshotError","hasAllRequiredFields","missingFields","emptyFields","getMissingFields","handleSubmit","preventDefault","HTMLFormElement","FormData","onError","disabled","LabelText","isRequired","defaultValue","placeholder","required","autoFocus","rows","onClick","prev","_ref7","SuccessIcon","path2","Dialog","_ref8","successIconHtml","timeoutId","setTimeoutId","handleOnSuccessClick","stopPropagation","feedbackModalIntegration","_ref9","shadowRoot","userKey","currentUser","isolationUser","globalUser","createDialogStyles","originalOverflow","contains","overflow","renderContent","createInput","firstChild","B$1","createScreenshotInputStyles","surface200","gray100","useTakeScreenshotFactory","_ref11","_ref12","onBeforeScreenshot","onScreenshot","onAfterScreenshot","dpi","setDpi","useState","devicePixelRatio","useEffect","onChange","media","matchMedia","useDpi","stream","mediaDevices","getDisplayMedia","video","innerWidth","innerHeight","audio","monitorTypeSurfaces","preferCurrentTab","selfBrowserSurface","surfaceSwitching","srcObject","onloadedmetadata","getTracks","track","stop","play","takeScreenshot","with2dContext","canvas","getContext","paintImage","maybeDest","alpha","destCanvas","destCtx","drawImage","paintForeground","maybeCanvas","strokeColor","drawCommands","fillStyle","fillRect","command","color","shadowColor","shadowBlur","clearRect","drawRect","ScreenshotEditorFactory","_ref13","outputBuffer","useTakeScreenshot","Toolbar","_ref1","_ref10","action","setAction","ToolbarFactory","IconClose","_ref0","cx","cy","strokeWidth","IconCloseFactory","editorStyleInnerText","innerText","dialogStyle","ScreenshotEditor","_ref14","screenshot","setDrawCommands","measurementRef","useRef","backgroundRef","foregroundRef","mouseRef","scaleFactor","setScaleFactor","useMemo","sentryFeedback","getElementById","computedStyle","getComputedStyle","getPropertyValue","useLayoutEffect","handleResize","measurementDiv","scale","min","clientWidth","clientHeight","setCanvasSize","useCallback","deleteRect","updatedRects","dimensions","handleStopPropagation","nonce","onMouseDown","boundingRect","getBoundingClientRect","startingPoint","offsetX","offsetY","getDrawCommand","clientX","clientY","abs","handleMouseMove","handleMouseUp","drawCommand","rect","top","left","onMouseUp","_ref15","setScreenshot","display","screenshotVideo","videoWidth","videoHeight","feedbackScreenshotIntegration","_ref16","blob","toBlob","arrayBuffer","ignoreOnError","shouldIgnoreOnError","wrap","isFunction","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","getOwnPropertyDescriptor","LazyLoadableIntegrations","replayIntegration","replayCanvasIntegration","feedbackIntegration","captureConsoleIntegration","contextLinesIntegration","linkedErrorsIntegration","extraErrorDataIntegration","graphqlClientIntegration","httpClientIntegration","reportingObserverIntegration","rewriteFramesIntegration","browserProfilingIntegration","moduleMetadataIntegration","WindowWithMaybeIntegration","bundle","sentryOnWindow","Sentry","existing","baseURL","cdnBaseUrl","getScriptURL","script","src","crossOrigin","referrerPolicy","waitForLoad","currentScript","parent","integrationFn","exceptionFromError","parseStackFrames","extractType","extractMessage","eventFromPlainObject","isUnhandledRejection","errorFromProp","getErrorPropertyFromObject","__serialized__","getNonErrorObjectExceptionValue","eventFromError","skipLines","reactMinifiedRegexp","getSkipFirstStackStringLines","getPopFirstTopFrames","isWebAssemblyException","WebAssembly","Exception","eventFromUnknownInput","attachStacktrace","domException","eventFromString","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","captureType","getObjectClassName","BrowserClient","opts","optionsArg","__SENTRY_RELEASE__","SENTRY_RELEASE","SENTRY_SDK_SOURCE","super","sendDefaultPii","enableLogs","visibilityState","_logFlushIdleTimeout","platform","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","lastHref","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","globalObject","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","globalListener","getEventTarget","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","addHistoryInstrumentationHandler","instrumentHistory","historyReplacementFunction","originalHistoryFunction","to","urlOrPath","getAbsoluteUrl","history","cachedImplementations","getNativeImplementation","cached","impl","clearCachedImplementation","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","XMLHttpRequest","xhrproto","Proxy","originalOpen","xhrOpenThisArg","xhrOpenArgArray","parseXhrUrlArg","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","status_code","xhr","onreadystatechange","originalOnreadystatechange","onreadystatechangeThisArg","onreadystatechangeArgArray","setRequestHeader","originalSetRequestHeader","setRequestHeaderThisArg","setRequestHeaderArgArray","originalSend","sendThisArg","sendArgArray","sentryXhrData","makeFetchTransport","nativeFetch","pendingBodySize","pendingCount","requestSize","requestOptions","keepalive","fetchOptions","createFrame","in_app","chromeRegexNoFnName","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","defaultStackParser","noFnParts","col","subMatch","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","MAX_ALLOWED_STRING_LENGTH","breadcrumbsIntegration","dom","logger","_getConsoleBreadcrumbHandler","componentName","serializeAttribute","element","_isEvent","getComponentName","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","request_body_size","response_body_size","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","eventTarget","unregisterOriginalCallbacks","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","integrationOptions","eventName","handleEvent","unregisterOriginalCallback","originalEventHandler","_wrapEventTarget","originalCallback","wrapOptions","browserSessionIntegration","globalHandlersIntegration","stackTraceLimit","ev","ev0","ev0s","ev0sf","_enhanceEventWithInitialFrame","_installGlobalOnErrorHandler","globalHandlerLog","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","httpContextIntegration","reqData","referrer","Referer","getHttpRequestData","checkAndWarnIfIsEmbeddedBrowserExtension","_window","nw","extensionObject","runtime","extensionProtocols","_isEmbeddedBrowserExtension","showReportDialog","optionalDocument","injectionPoint","dsnLike","dialogOptions","endpoint","encodedOptions","encodeURIComponent","getReportDialogEndpoint","onLoad","onClose","onload","reportDialogClosedMessageHandler","__defProp$1","__publicField$1","__defNormalProp$1","enumerable","NodeType$2","NodeType2","isShadowRoot","n2","isNativeShadowDom","stringifyStylesheet","s2","rules2","rules","cssRules","stringifyRule","rule","importStringified","isCSSImportRule","styleSheet","statement","layerName","supportsText","mediaText","escapeImportStatement","isCSSStyleRule","needsSafariColonFix","selectorText","needsAllFix","styles","i2","styleDeclaration","attribute","isImportant","getPropertyPriority","fixAllCssProperty","cssStringified","regex","fixSafariColons","Mirror","getId","getMeta","getNode","idNodeMap","getIds","nodeMetaMap","removeNodeFromMap","childNode","hasNode","node","meta","oldNode","reset","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","extractFileExtension","pathname","cachedImplementations$1","getImplementation$1","document2","e2","setTimeout$2","clearTimeout$1","getIframeContentDocument","iframe","contentDocument","_id","tagNameRegex","RegExp","genId","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path3","filePath","maybeQuote","extractOrigin","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","cachedDocument","absoluteToDoc","attributeValue","getHref","isSVGElement","customHref","a2","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars2","descriptorsStr","inParens","c2","charAt","getAbsoluteSrcsetString","ignoreAttribute","_isBlockedElement","blockClass","blockSelector","unblockSelector","matches","classList","eIndex","distanceToMatch","matchPredicate","distance","ELEMENT_NODE","createMatchPredicate","selector","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","autocomplete","maskDistance","unmaskDistance","serializeNode","mirror","mirror2","inlineStylesheet","maskTextFn","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","newlyAddedElement","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","needBlock","processedTagName","getValidTagName$1","attributes2","stylesheet","styleSheets","crossorigin","_cssText","sheet","checked","forceMask","selected","__context","getImageData","originalGetImageData","Uint32Array","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","imageSrc","currentSrc","priorCrossOrigin","recordInlineImage","naturalWidth","naturalHeight","complete","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","rr_width","rr_height","rr_src","isCustomElement","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","previousSibling","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","lowerIfExists","maybeAttr","serializeNodeWithId","skipChild","slimDOMOptions","onSerialize","onIframeLoad","iframeLoadTimeout","onStylesheetLoad","stylesheetLoadTimeout","preserveWhiteSpace","_serializedNode","sn","comment","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode2","recordChild","isShadowHost","headWhitespace","bypassOptions","childN","serializedChildNode","isElement$1","isShadow","iframeEl","win","fired","timer","blankUrl","onceIframeLoaded","iframeDoc","serializedIframeNode","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","capture","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","previous","leading","remaining","getImplementation","clearTimeout$2","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","Reflect","receiver","nowTimestamp","getWindowScroll","scrollingElement","pageXOffset","documentElement","pageYOffset","getWindowHeight","getWindowWidth","closestElementOfNode$1","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","getRootNode","Node","DOCUMENT_FRAGMENT_NODE","shadowHostInDom","ownerDocument","rootShadowHost","getRootShadowHost","inDom","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","MediaInteractions","MediaInteractions2","getIFrameContentDocument","isNodeInLinkedList","DoubleLinkedList","tail","position","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","childSn","attachIframe","canvasManager","addWindow","observeAttachShadow","attachLinkElement","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","oldValue","attributeName","isInputMasked","unattachedDoc","implementation","createHTMLDocument","old","pname","newValue","newPriority","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","freeze","unfreeze","isFrozen","lock","unlock","addsSet","r2","_isParentRemoved","size","_isAncestorInSet","errorHandler","callbackWrapper","cb","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","observe","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initMouseInteractionObserver","mouseInteractionCb","sampling","mouseInteraction","disableMap","currentPointerType","endsWith","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initScrollObserver","scrollCb","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","el2","text2","v2","lastInputValue","currentWindow","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","adoptStyleSheets","initObservers","o2","mutationObserver","recordDOM","mousemoveHandler","mousemoveCb","mousemove","threshold","callbackThreshold","mousemoveCallback","timeBaseline","positions","wrappedCb","totalOffset","timeOffset","updatePosition","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","scrollHandler","viewportResizeHandler","viewportResizeCb","lastH","lastW","initViewportResizeObserver","inputHandler","mediaInteractionHandler","mediaInteractionCb","volume","muted","playbackRate","Play","Pause","Seeked","VolumeChange","RateChange","initMediaInteractionObserver","styleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","fontObserver","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","deleteRule","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","initStyleSheetObserver","styleDeclarationCb","ignoreCSSAttributes","CSSStyleDeclaration","priority","removeProperty","initStyleDeclarationObserver","collectFonts","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","initSelectionObserver","customElementObserver","customElementCb","define","initCustomElementObserver","pluginHandlers","plugin","plugins","disconnect","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","addLoadListener","IframeManager","iframes","crossOriginIframeMap","wrappedEmit","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","iframeMirror","child","ShadowDomManagerNoop","ShadowDomManager","shadowDoms","restoreHandlers","patchAttachShadow","iframeElement","iframeWindow","getIFrameContentWindow","manager","option","resetShadowRoots","chars","lookup","charCodeAt","CanvasManagerNoop","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","linkEl","trackStylesheetInLinkElement","adoptedStyleSheetData","styleIds","CSSRule","_linkEl","ProcessedNodeManager","nodeMap","active","thisBuffer","onRequestAnimationFrame","destroy","_takeFullSnapshot","cleanFrame","record","checkoutEveryNms","checkoutEveryNth","maskAllInputs","_maskInputOptions","_slimDOMOptions","maxCanvasSize","packFn","mousemoveWait","recordAfter","errorHandler2","getCanvasManager","inEmittingFrame","passEmitsToParent","date","month","number","tel","week","select","radio","checkbox","lastFullSnapshotEvent","_this","NodeList","DOMTokenList","polyfill$1","incrementalSnapshotCount","postMessage","exceedCount","exceedTime","takeFullSnapshot2","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","slimDOM","initialOffset","canvasMutationCb","CustomElement","t2","takeFullSnapshot","NotStarted","Running","Stopped","PREFIX","_addBreadcrumb","_capture","_trace","_debug","infoTick","setConfig","captureExceptions","traceInternals","debug$1","_len5","_key5","_len6","_key6","makeReplayDebugLogger","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","trackFetchStreamPerformance","OS_PLATFORM","OS_PLATFORM_VERSION","OS_ARCH","OS_BROWSER","OS_MODEL","userAgentData","getHighEntropyValues","ua","architecture","model","platformVersion","fullVersionList","firstUa","brand","shouldDisableBecauseIsBrowserExtenstion","skipBrowserExtensionCheck","init$1","captureReactException","componentStack","reactVersion","reactMajor","isAtLeastReact17","errorBoundaryError","cause","seenErrors","setCause","Profiler","React","_mountSpan","updateProps","includeUpdates","changedProps","_updateSpan","includeRender","renderSpan","INITIAL_STATE","ErrorBoundary","_openFallbackReportDialog","showDialog","_cleanupHook","errorInfo","beforeCapture","fallback","onMount","onUnmount","resetErrorBoundary","onReset","resetError","reactIs","require","REACT_STATICS","childContextTypes","contextTypes","displayName","getDefaultProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertySymbols","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","uuid","REGEX","validate","of","byteToHex","unsafeStringify","rnds8","getOutputLength","inputLength8","safeAdd","lsw","md5cmn","num","cnt","md5ff","md5gg","md5hh","md5ii","bytes","uint32ToUint8","xpad","olda","oldb","oldc","oldd","wordsToMd5","uint8ToUint32","DNS","v35","namespace","valueBytes","unescape","stringToBytes","namespaceBytes","v3","md5","native","rnds","rng","RangeError","ROTL","K","newBytes","ceil","pow","floor","W","v5","sha1","Action","PopStateEventType","createBrowserHistory","getUrlBasedHistory","globalHistory","createLocation","usr","createPath","invariant","warning","cond","getHistoryState","idx","_extends","parsePath","substr","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","Pop","getIndex","handlePop","nextIndex","delta","createURL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","score","siblings","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","isOptional","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","pathnameBase","normalizePathname","matcher","compiledParams","regexpSource","paramName","compilePath","captureGroups","splatValue","startIndex","nextChar","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","AbortedDeferredError","isRouteErrorResponse","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","iterator","toStringTag","kindOf","cache","create","thing","kindOfTest","typeOfTest","isUndefined","isBuffer","isArrayBuffer","isNumber","isObject","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","findKey","_global","self","isContextDefined","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","ret","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","setImmediate","token","asap","queueMicrotask","nextTick","isFormData","kind","isArrayBufferView","ArrayBuffer","isView","isBoolean","isEmptyObject","isStream","pipe","caseless","assignValue","targetKey","extend","stripBOM","content","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","searchString","lastIndex","toArray","forEachEntry","_iterator","done","pair","matchAll","regExp","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","toCamelCase","p1","p2","noop","toFiniteNumber","isSpecCompliantForm","toJSONObject","reducedValue","isIterable","AxiosError","config","captureStackTrace","utils","fileName","lineNumber","columnNumber","customProps","axiosError","isVisitable","removeBrackets","renderKey","dots","predicates","metaTokens","indexes","visitor","defaultVisitor","useBlob","Blob","convertValue","Buffer","isFlatArray","exposedHelpers","build","charMap","AxiosURLSearchParams","_pairs","toFormData","encoder","_encode","buildURL","serialize","serializeFn","serializedParams","hashmarkIndex","use","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","protocols","hasBrowserEnv","_navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","rawValue","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","parseHeaders","entry","tokens","tokensRE","parseTokens","deleted","deleteHeader","format","formatHeader","targets","asStrings","getSetCookie","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","samplesCount","timestamps","firstSampleTS","chunkLength","startedAt","bytesCount","passed","round","freq","lastArgs","invoke","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","total","lengthComputable","progressBytes","progress","estimated","progressEventDecorator","throttled","asyncDecorator","isMSIE","write","expires","domain","secure","cookie","toGMTString","read","buildFullPath","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","password","isURLSameOrigin","xsrfValue","cookies","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","signal","onloadend","responseHeaders","getAllResponseHeaders","responseText","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","upload","cancel","abort","subscribe","aborted","parseProtocol","composeSignals","signals","controller","AbortController","streamChunk","chunk","chunkSize","byteLength","readStream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","isReadableStreamSupported","encodeText","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","knownAdapters","http","xhrAdapter","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","resolvePromise","_listeners","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","Cancel","promises","spread","isAxiosError","formToJSON","getAdapter","default","$$typeof","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Fragment","Lazy","Portal","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","__reactRouterVersion","startTransitionImpl","ReactDOM","BrowserRouter","future","historyRef","setStateImpl","v7_startTransition","newState","UNSAFE_logV6DeprecationWarnings","Router","navigationType","ABSOLUTE_URL_REGEX","Link","absoluteHref","reloadDocument","preventScrollReset","viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","useHref","internalOnClick","_temp","replaceProp","navigate","useNavigate","useLocation","useResolvedPath","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","defaultPrevented","DataRouterHook","DataRouterStateHook","sortIndex","unstable_now","E","F","G","expirationTime","J","priorityLevel","scheduling","isInputPending","P","Q","R","MessageChannel","U","port2","port1","onmessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","unstable_shouldYield","unstable_wrapCallback"],"sourceRoot":""}