{"version":3,"file":"static/js/816.2de7f9b6.chunk.js","mappings":"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","sources":["components/Settings.js","lib/constants.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport { useNotificationContext } from '../contexts/NotificationContext';\nimport { STORAGE_BUCKETS } from '../lib/constants';\n\nconst Settings = () => {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeSection, setActiveSection] = useState('profile');\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [profilePhotoUrl, setProfilePhotoUrl] = useState(null);\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\n\n  // Form states\n\n  const [notificationSettings, setNotificationSettings] = useState({\n    email_notifications: true,\n    sms_notifications: false,\n    push_notifications: true,\n    marketing_emails: false\n  });\n\n  const [privacySettings, setPrivacySettings] = useState({\n    profile_visibility: 'public',\n    data_sharing: false,\n    analytics_tracking: true\n  });\n\n  useEffect(() => {\n    loadUserData();\n  }, []);\n\n  const loadUserData = async () => {\n    try {\n      const { data: { user }, error: userError } = await supabase.auth.getUser();\n      \n      if (userError || !user) {\n        \n        setLoading(false);\n        return;\n      }\n\n      setUser(user);\n\n      // Load user profile\n      \n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n      \n\n      if (profileError && profileError.code !== 'PGRST116') {\n        \n      }\n\n      if (profileData) {\n        \n        setProfile(profileData);\n        \n        // Load profile photo if it exists\n        if (profileData.avatar_url) {\n          setProfilePhotoUrl(profileData.avatar_url);\n        }\n        \n        // Load notification settings if they exist\n        if (profileData.notification_settings) {\n          setNotificationSettings({\n            ...notificationSettings,\n            ...profileData.notification_settings\n          });\n        }\n        \n        // Load privacy settings if they exist\n        if (profileData.privacy_settings) {\n          setPrivacySettings({\n            ...privacySettings,\n            ...profileData.privacy_settings\n          });\n        }\n      } else {\n        \n        // If no profile exists, set up default profile structure\n        setProfile({\n          id: user.id,\n          email: user.email,\n          full_name: '',\n          phone: '',\n          location: '',\n          avatar_url: null\n        });\n      }\n\n    } catch (error) {\n      \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const saveProfile = async () => {\n    setSaving(true);\n    try {\n\n\n      const { error } = await supabase\n        .from('profiles')\n        .update({\n          full_name: profile?.full_name,\n          phone: profile?.phone,\n          location: profile?.location,\n          avatar_url: profilePhotoUrl,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n\n      \n\n      if (error) throw error;\n\n      // Refresh the profile data to show updated changes\n      await loadUserData();\n      setMessage({ type: 'success', text: 'Profile updated successfully!' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } catch (error) {\n      \n      setMessage({ type: 'error', text: 'Failed to update profile. Please try again.' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handlePhotoUpload = async (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    // Validate file size (max 5MB)\n    if (file.size > 5 * 1024 * 1024) {\n      setMessage({ type: 'error', text: 'File size must be less than 5MB' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n      return;\n    }\n\n    try {\n      setUploadingPhoto(true);\n      \n      \n      // Create unique filename\n      const fileExt = file.name.split('.').pop();\n      const fileName = `profile-photos/profile-${user.id}-${Date.now()}.${fileExt}`;\n      \n      \n      \n      // Upload to Supabase Storage\n      \n      const { data, error: uploadError } = await supabase.storage\n        .from(STORAGE_BUCKETS.PET_OWNERS)\n        .upload(fileName, file, {\n          cacheControl: '3600',\n          upsert: false\n        });\n      \n      if (uploadError) {\n        \n        throw uploadError;\n      }\n      \n      \n      // Get public URL\n      \n      const { data: { publicUrl } } = supabase.storage\n        .from(STORAGE_BUCKETS.PET_OWNERS)\n        .getPublicUrl(fileName);\n      \n      \n      // Update profile with photo URL\n      \n      const { error: updateError } = await supabase\n        .from('profiles')\n        .update({\n          avatar_url: publicUrl,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n      \n      if (updateError) {\n        \n        throw updateError;\n      }\n      \n     \n      setProfilePhotoUrl(publicUrl);\n      setProfile(prev => ({ ...prev, avatar_url: publicUrl }));\n      setMessage({ type: 'success', text: 'Profile photo updated successfully!' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n      \n    } catch (error) {\n      setMessage({ type: 'error', text: `Failed to upload photo: ${error.message || 'Unknown error'}. Please try again.` });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } finally {\n      setUploadingPhoto(false);\n      e.target.value = ''; // Reset file input\n    }\n  };\n\n  const handlePhotoRemove = async () => {\n    try {\n      setUploadingPhoto(true);\n      \n      // Remove photo URL from profile\n      const { error } = await supabase\n        .from('profiles')\n        .update({\n          avatar_url: null,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n      \n      if (error) throw error;\n      \n      setProfilePhotoUrl(null);\n      setProfile(prev => ({ ...prev, avatar_url: null }));\n      setMessage({ type: 'success', text: 'Profile photo removed successfully!' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n      \n    } catch (error) {\n      \n      setMessage({ type: 'error', text: 'Failed to remove photo. Please try again.' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } finally {\n      setUploadingPhoto(false);\n    }\n  };\n\n  const saveNotifications = async () => {\n    setSaving(true);\n    try {\n      const { error } = await supabase\n        .from('profiles')\n        .update({\n          notification_settings: notificationSettings,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n\n      if (error) throw error;\n\n      // Refresh the profile data to show updated changes\n      await loadUserData();\n      setMessage({ type: 'success', text: 'Notification settings updated successfully!' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to update notification settings. Please try again.' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const savePrivacy = async () => {\n    setSaving(true);\n    try {\n      const { error } = await supabase\n        .from('profiles')\n        .update({\n          privacy_settings: privacySettings,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n\n      if (error) throw error;\n\n      // Refresh the profile data to show updated changes\n      await loadUserData();\n      setMessage({ type: 'success', text: 'Privacy settings updated successfully!' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to update privacy settings. Please try again.' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#5EB47C]\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Access Denied</h1>\n            <p className=\"text-gray-600 mb-6\">You need to be signed in to access settings.</p>\n            <Link\n              to=\"/signin\"\n              className=\"bg-[#5EB47C] text-white px-6 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors\"\n            >\n              Sign In\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 font-montserrat\">Settings</h1>\n          <p className=\"text-gray-600 mt-2\">Manage your account preferences and privacy settings</p>\n        </div>\n\n        {/* Debug Info */}\n        {process.env.NODE_ENV === 'development' && (\n          <div className=\"mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n            <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Debug Info:</h3>\n            <div className=\"text-xs text-gray-600 space-y-1\">\n              <div>User ID: {user?.id || 'Not loaded'}</div>\n              <div>User Email: {user?.email || 'Not loaded'}</div>\n              <div>Profile Loaded: {profile ? 'Yes' : 'No'}</div>\n              <div>Profile: {JSON.stringify(profile)}</div>\n              <div>Profile Photo URL: {profilePhotoUrl || 'None'}</div>\n            </div>\n          </div>\n        )}\n\n        {/* Message Display */}\n        {message.text && (\n          <div className={`mb-6 p-4 rounded-lg ${\n            message.type === 'success' \n              ? 'bg-green-50 text-green-800 border border-green-200' \n              : 'bg-red-50 text-red-800 border border-red-200'\n          }`}>\n            {message.text}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Sidebar Navigation */}\n          <div className=\"lg:col-span-1\">\n            <nav className=\"space-y-1\">\n              <button\n                onClick={() => setActiveSection('profile')}\n                className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                  activeSection === 'profile'\n                    ? 'bg-[#5EB47C] text-white'\n                    : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                  Profile\n                </div>\n              </button>\n              \n              <button\n                onClick={() => setActiveSection('notifications')}\n                className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                  activeSection === 'notifications'\n                    ? 'bg-[#5EB47C] text-white'\n                    : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5v-5zM4 17h5l-5 5v-5zM12 3v12\" />\n                  </svg>\n                  Notifications\n                </div>\n              </button>\n              \n              <button\n                onClick={() => setActiveSection('privacy')}\n                className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                  activeSection === 'privacy'\n                    ? 'bg-[#5EB47C] text-white'\n                    : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                  Privacy\n                </div>\n              </button>\n              \n              <button\n                onClick={() => setActiveSection('security')}\n                className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                  activeSection === 'security'\n                    ? 'bg-[#5EB47C] text-white'\n                    : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.031 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                  </svg>\n                  Security\n                </div>\n              </button>\n            </nav>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              \n              {/* Profile Settings */}\n              {activeSection === 'profile' && (\n                <div>\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Profile Information</h2>\n                  \n                  {/* Profile Photo Upload */}\n                  <div className=\"mb-8\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-4\">Profile Photo</label>\n                    <div className=\"flex items-center space-x-6\">\n                      <div className=\"relative\">\n                        <div className=\"w-24 h-24 rounded-full overflow-hidden bg-gray-100 border-2 border-gray-200\">\n                          {profilePhotoUrl ? (\n                            <img \n                              src={profilePhotoUrl} \n                              alt=\"Profile\" \n                              className=\"w-full h-full object-cover\" \n                            />\n                          ) : (\n                            <div className=\"w-full h-full flex items-center justify-center\">\n                              <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                              </svg>\n                            </div>\n                          )}\n                        </div>\n                        {uploadingPhoto && (\n                          <div className=\"absolute inset-0 bg-black/50 rounded-full flex items-center justify-center\">\n                            <div className=\"w-6 h-6 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"space-y-2\">\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          onChange={handlePhotoUpload}\n                          className=\"hidden\"\n                          id=\"profile-photo-upload\"\n                          disabled={uploadingPhoto}\n                        />\n                        <label\n                          htmlFor=\"profile-photo-upload\"\n                          className={`bg-[#5EB47C] text-white px-4 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors text-sm font-medium cursor-pointer inline-block ${uploadingPhoto ? 'opacity-50 cursor-not-allowed' : ''}`}\n                        >\n                          {uploadingPhoto ? 'Uploading...' : 'Change Photo'}\n                        </label>\n                        {profilePhotoUrl && (\n                          <button\n                            onClick={handlePhotoRemove}\n                            disabled={uploadingPhoto}\n                            className={`block text-sm text-red-600 hover:text-red-800 transition-colors ${uploadingPhoto ? 'opacity-50 cursor-not-allowed' : ''}`}\n                          >\n                            Remove Photo\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Full Name</label>\n                        <input\n                          type=\"text\"\n                          value={profile?.full_name || ''}\n                          onChange={(e) => setProfile(prev => ({ ...prev, full_name: e.target.value }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-[#5EB47C] focus:border-[#5EB47C]\"\n                          placeholder=\"Enter your full name\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\n                        <input\n                          type=\"email\"\n                          value={profile?.email || user?.email || ''}\n                          disabled\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 cursor-not-allowed\"\n                        />\n                        <p className=\"text-xs text-gray-500 mt-1\">Email cannot be changed</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Phone Number</label>\n                        <input\n                          type=\"tel\"\n                          value={profile?.phone || ''}\n                          onChange={(e) => setProfile(prev => ({ ...prev, phone: e.target.value }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-[#5EB47C] focus:border-[#5EB47C]\"\n                          placeholder=\"Enter your phone number\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Location</label>\n                        <input\n                          type=\"text\"\n                          value={profile?.location || ''}\n                          onChange={(e) => setProfile(prev => ({ ...prev, location: e.target.value }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-[#5EB47C] focus:border-[#5EB47C]\"\n                          placeholder=\"City, State\"\n                        />\n                      </div>\n                    </div>\n                    \n                    <div className=\"pt-4\">\n                      <button\n                        onClick={saveProfile}\n                        disabled={saving}\n                        className=\"bg-[#5EB47C] text-white px-6 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {saving ? 'Saving...' : 'Save Profile'}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Notification Settings */}\n              {activeSection === 'notifications' && (\n                <div>\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Notification Preferences</h2>\n                  \n                  <div className=\"space-y-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"text-sm font-medium text-gray-900\">Email Notifications</h3>\n                          <p className=\"text-sm text-gray-500\">Receive important updates via email</p>\n                        </div>\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={notificationSettings.email_notifications}\n                            onChange={(e) => setNotificationSettings({ \n                              ...notificationSettings, \n                              email_notifications: e.target.checked \n                            })}\n                            className=\"sr-only peer\"\n                          />\n                          <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#5EB47C]/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-[#5EB47C]\"></div>\n                        </label>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"text-sm font-medium text-gray-900\">SMS Notifications</h3>\n                          <p className=\"text-sm text-gray-500\">Get text messages for urgent updates</p>\n                        </div>\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={notificationSettings.sms_notifications}\n                            onChange={(e) => setNotificationSettings({ \n                              ...notificationSettings, \n                              sms_notifications: e.target.checked \n                            })}\n                            className=\"sr-only peer\"\n                          />\n                          <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#5EB47C]/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-[#5EB47C]\"></div>\n                        </label>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"text-sm font-medium text-gray-900\">Push Notifications</h3>\n                          <p className=\"text-sm text-gray-500\">Browser notifications for real-time updates</p>\n                        </div>\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={notificationSettings.push_notifications}\n                            onChange={(e) => setNotificationSettings({ \n                              ...notificationSettings, \n                              push_notifications: e.target.checked \n                            })}\n                            className=\"sr-only peer\"\n                          />\n                          <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#5EB47C]/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-[#5EB47C]\"></div>\n                        </label>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"text-sm font-medium text-gray-900\">Marketing Emails</h3>\n                          <p className=\"text-sm text-gray-500\">Receive promotional content and newsletters</p>\n                        </div>\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={notificationSettings.marketing_emails}\n                            onChange={(e) => setNotificationSettings({ \n                              ...notificationSettings, \n                              marketing_emails: e.target.checked \n                            })}\n                            className=\"sr-only peer\"\n                          />\n                          <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#5EB47C]/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-[#5EB47C]\"></div>\n                        </label>\n                      </div>\n                    </div>\n                    \n                    <div className=\"pt-4\">\n                      <button\n                        onClick={saveNotifications}\n                        disabled={saving}\n                        className=\"bg-[#5EB47C] text-white px-6 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {saving ? 'Saving...' : 'Save Notifications'}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Privacy Settings */}\n              {activeSection === 'privacy' && (\n                <div>\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Privacy Settings</h2>\n                  \n                  <div className=\"space-y-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                        Profile Visibility\n                      </label>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center\">\n                          <input\n                            type=\"radio\"\n                            name=\"profile_visibility\"\n                            value=\"public\"\n                            checked={privacySettings.profile_visibility === 'public'}\n                            onChange={(e) => setPrivacySettings({ \n                              ...privacySettings, \n                              profile_visibility: e.target.value \n                            })}\n                            className=\"h-4 w-4 text-[#5EB47C] border-gray-300 focus:ring-[#5EB47C]\"\n                          />\n                          <span className=\"ml-2 text-sm text-gray-700\">Public - Anyone can see your profile</span>\n                        </label>\n                        <label className=\"flex items-center\">\n                          <input\n                            type=\"radio\"\n                            name=\"profile_visibility\"\n                            value=\"private\"\n                            checked={privacySettings.profile_visibility === 'private'}\n                            onChange={(e) => setPrivacySettings({ \n                              ...privacySettings, \n                              profile_visibility: e.target.value \n                            })}\n                            className=\"h-4 w-4 text-[#5EB47C] border-gray-300 focus:ring-[#5EB47C]\"\n                          />\n                          <span className=\"ml-2 text-sm text-gray-700\">Private - Only you can see your profile</span>\n                        </label>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h3 className=\"text-sm font-medium text-gray-900\">Data Sharing</h3>\n                        <p className=\"text-sm text-gray-500\">Allow sharing anonymized data for research</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={privacySettings.data_sharing}\n                          onChange={(e) => setPrivacySettings({ \n                            ...privacySettings, \n                            data_sharing: e.target.checked \n                          })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#5EB47C]/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-[#5EB47C]\"></div>\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h3 className=\"text-sm font-medium text-gray-900\">Analytics Tracking</h3>\n                        <p className=\"text-sm text-gray-500\">Help improve our service with usage analytics</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={privacySettings.analytics_tracking}\n                          onChange={(e) => setPrivacySettings({ \n                            ...privacySettings, \n                            analytics_tracking: e.target.checked \n                          })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#5EB47C]/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-[#5EB47C]\"></div>\n                      </label>\n                    </div>\n                    \n                    <div className=\"pt-4\">\n                      <button\n                        onClick={savePrivacy}\n                        disabled={saving}\n                        className=\"bg-[#5EB47C] text-white px-6 py-2 rounded-lg hover:bg-[#4A9A64] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {saving ? 'Saving...' : 'Save Privacy Settings'}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Security Settings */}\n              {activeSection === 'security' && (\n                <div>\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Security</h2>\n                  \n                  <div className=\"space-y-6\">\n                    <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                      <div className=\"flex\">\n                        <svg className=\"w-5 h-5 text-yellow-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                        </svg>\n                        <div className=\"ml-3\">\n                          <h3 className=\"text-sm font-medium text-yellow-800\">Password Management</h3>\n                          <p className=\"text-sm text-yellow-700 mt-1\">\n                            Password changes are handled through your authentication provider. \n                            Please check your email for password reset options.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-4\">\n                      <div>\n                        <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Account Security</h3>\n                        <div className=\"bg-gray-50 rounded-lg p-4\">\n                          <div className=\"flex items-center justify-between\">\n                            <div>\n                              <p className=\"text-sm font-medium text-gray-900\">Two-Factor Authentication</p>\n                              <p className=\"text-xs text-gray-500\">Add an extra layer of security to your account</p>\n                            </div>\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                              Coming Soon\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Account Actions</h3>\n                        <div className=\"space-y-3\">\n                          <button className=\"w-full text-left p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\">\n                            <div className=\"flex items-center justify-between\">\n                              <div>\n                                <p className=\"text-sm font-medium text-gray-900\">Download My Data</p>\n                                <p className=\"text-xs text-gray-500\">Export all your account data</p>\n                              </div>\n                              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                              </svg>\n                            </div>\n                          </button>\n                          \n                          <button className=\"w-full text-left p-3 bg-red-50 rounded-lg hover:bg-red-100 transition-colors\">\n                            <div className=\"flex items-center justify-between\">\n                              <div>\n                                <p className=\"text-sm font-medium text-red-900\">Delete Account</p>\n                                <p className=\"text-xs text-red-600\">Permanently delete your account and all data</p>\n                              </div>\n                              <svg className=\"w-4 h-4 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                              </svg>\n                            </div>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;","// Application constants\n\n// Supabase storage bucket names\nexport const STORAGE_BUCKETS = {\n  PET_IMAGES: 'pet-images',\n  PROVIDER_IMAGES: 'provider-images',\n  PRODUCT_IMAGES: 'product-images',\n  HEALTH_RECORDS: 'health-records',\n  DOCUMENTS: 'documents',\n  AVATARS: 'avatars',\n  PROFILE_IMAGES: 'profile-images'\n};\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  TRIAGE: '/api/triage',\n  CONSULTATION: '/api/consultation',\n  PAYMENT: '/api/payment',\n  NOTIFICATIONS: '/api/notifications'\n};\n\n// User roles\nexport const USER_ROLES = {\n  PET_OWNER: 'pet_owner',\n  VETERINARIAN: 'veterinarian',\n  VET_NURSE: 'vet_nurse',\n  GROOMER: 'groomer',\n  TRAINER: 'trainer',\n  BREEDER: 'breeder',\n  NUTRITIONIST: 'nutritionist',\n  PET_BUSINESS: 'pet_business',\n  HOLISTIC_CARE: 'holistic_care',\n  ADMIN: 'admin',\n  SUPPORT: 'support'\n};\n\n// Listing types\nexport const LISTING_TYPES = {\n  SERVICE: 'service',\n  PRODUCT: 'product',\n  PROVIDER: 'provider'\n};\n\n// Case status\nexport const CASE_STATUS = {\n  PENDING: 'pending',\n  IN_PROGRESS: 'in_progress',\n  COMPLETED: 'completed',\n  CANCELLED: 'cancelled'\n};\n\n// Urgency levels\nexport const URGENCY_LEVELS = {\n  EMERGENCY: 'emergency',\n  URGENT: 'urgent',\n  ROUTINE: 'routine',\n  NON_URGENT: 'non_urgent'\n};\n\n// Pagination\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 20,\n  MAX_PAGE_SIZE: 100\n};\n\n// File upload limits\nexport const FILE_LIMITS = {\n  MAX_IMAGE_SIZE: 5 * 1024 * 1024, // 5MB\n  MAX_DOCUMENT_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_IMAGE_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],\n  ALLOWED_DOCUMENT_TYPES: ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png']\n};\n\n// Time constants\nexport const TIME_CONSTANTS = {\n  SESSION_TIMEOUT: 30 * 60 * 1000, // 30 minutes\n  REFRESH_INTERVAL: 5 * 60 * 1000, // 5 minutes\n  DEBOUNCE_DELAY: 300, // milliseconds\n  TOAST_DURATION: 3000 // milliseconds\n};\n\nexport default {\n  STORAGE_BUCKETS,\n  API_ENDPOINTS,\n  USER_ROLES,\n  LISTING_TYPES,\n  CASE_STATUS,\n  URGENCY_LEVELS,\n  PAGINATION,\n  FILE_LIMITS,\n  TIME_CONSTANTS\n};\n"],"names":["Settings","user","setUser","useState","profile","setProfile","loading","setLoading","activeSection","setActiveSection","saving","setSaving","message","setMessage","type","text","profilePhotoUrl","setProfilePhotoUrl","uploadingPhoto","setUploadingPhoto","notificationSettings","setNotificationSettings","email_notifications","sms_notifications","push_notifications","marketing_emails","privacySettings","setPrivacySettings","profile_visibility","data_sharing","analytics_tracking","useEffect","loadUserData","async","data","error","userError","supabase","auth","getUser","profileData","profileError","from","select","eq","id","single","code","avatar_url","notification_settings","privacy_settings","email","full_name","phone","location","_jsx","className","children","_jsxs","process","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","src","alt","accept","onChange","_e$target$files","file","e","target","files","size","setTimeout","fileExt","name","split","pop","fileName","Date","now","uploadError","storage","STORAGE_BUCKETS","PET_OWNERS","upload","cacheControl","upsert","publicUrl","getPublicUrl","updateError","update","updated_at","toISOString","prev","value","disabled","htmlFor","placeholder","checked","Link","to","PET_IMAGES","PROVIDER_IMAGES","PRODUCT_IMAGES","HEALTH_RECORDS","DOCUMENTS","AVATARS","PROFILE_IMAGES"],"sourceRoot":""}