{"version":3,"file":"static/js/256.63fd1385.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { supabase } from '../lib/supabase.js';\nimport { useNotificationContext } from '../contexts/NotificationContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminDashboard = () => {\n  const { showError, showSuccess } = useNotificationContext();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [users, setUsers] = useState([]);\n  const [providers, setProviders] = useState([]);\n\n  const [qualificationSubmissions, setQualificationSubmissions] = useState([]);\n  const [auditLogs, setAuditLogs] = useState([]);\n  const [stats, setStats] = useState({\n    petOwners: 0,\n    verifiedProviders: 0,\n    pendingProviders: 0,\n    pendingQualifications: 0,\n    admins: 0,\n    support: 0,\n    totalBookings: 0,\n    providersByType: {}\n  });\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const checkAdminAccess = useCallback(async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        navigate('/signin');\n        return;\n      }\n\n      const { data: profile, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n      if (profileError || !profile || profile.role !== 'admin') {\n        showError('Access denied. Admin privileges required.');\n        navigate('/');\n        return;\n      }\n\n      setCurrentUser(profile);\n    } catch (error) {\n      showError('An error occurred while checking access. Please try again.');\n      navigate('/signin');\n    }\n  }, [navigate, showError]);\n\n  const loadDashboardData = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Use Promise.all for parallel queries - performance optimization\n      const [usersResponse, providersResponse, userCountResponse, providerCountResponse, qualificationsResponse, bookingCountResponse] = await Promise.all([\n        // Load users with specific fields to reduce payload\n        supabase\n          .from('profiles')\n          .select('id, email, role, created_at, updated_at, full_name')\n          .order('created_at', { ascending: false })\n          .limit(50),\n        \n        // Load all providers from providers table\n        supabase\n          .from('providers')\n          .select('id, name, email, provider_type, city, country, created_at, verified, rating, reviews_count, is_active')\n          .order('created_at', { ascending: false })\n          .limit(50),\n        \n        // Get all profiles to count by role\n        supabase\n          .from('profiles')\n          .select('role'),\n        \n        // Get all providers to count by type and status\n        supabase\n          .from('providers')\n          .select('provider_type, verified, is_active'),\n        \n        // Load qualification submissions\n        supabase\n          .from('provider_qualifications')\n          .select('*')\n          .order('submitted_at', { ascending: false })\n          .limit(50),\n\n        supabase\n          .from('consultation_bookings')\n          .select('*', { count: 'estimated', head: true })\n      ]);\n\n      // Extract data and counts\n      const usersData = usersResponse.data || [];\n      const providersData = providersResponse.data || [];\n      const qualificationsData = qualificationsResponse.data || [];\n      const roleData = userCountResponse.data || [];\n      const allProvidersData = providerCountResponse.data || [];\n      const bookingCountData = bookingCountResponse;\n\n      // Count users by role from profiles\n      const roleCounts = roleData.reduce((acc, user) => {\n        const role = user.role || 'pet_owner';\n        acc[role] = (acc[role] || 0) + 1;\n        return acc;\n      }, {});\n\n      // Count providers by type and status\n      const verifiedProviders = allProvidersData.filter(p => p.verified);\n      const pendingProviders = allProvidersData.filter(p => !p.verified);\n      \n      const providersByType = allProvidersData.reduce((acc, provider) => {\n        const type = provider.provider_type || 'Unknown';\n        if (!acc[type]) {\n          acc[type] = { total: 0, verified: 0, pending: 0 };\n        }\n        acc[type].total++;\n        if (provider.verified) {\n          acc[type].verified++;\n        } else {\n          acc[type].pending++;\n        }\n        return acc;\n      }, {});\n\n      setUsers(usersData);\n      setProviders(providersData);\n      setQualificationSubmissions(qualificationsData);\n      setAuditLogs([]); // Audit logs table does not exist\n      setStats({\n        petOwners: roleCounts.pet_owner || 0,\n        verifiedProviders: verifiedProviders.length,\n        unverifiedProviders: pendingProviders.length,\n        pendingQualifications: qualificationsData.filter(q => q.status === 'pending').length,\n        admins: roleCounts.admin || 0,\n        support: roleCounts.support || 0,\n        totalBookings: bookingCountData.count || 0,\n        providersByType\n      });\n\n    } catch (error) {\n      showError('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  }, [showError]);\n\n  useEffect(() => {\n    checkAdminAccess();\n  }, [checkAdminAccess]);\n\n  useEffect(() => {\n    if (currentUser?.role === 'admin') {\n      loadDashboardData();\n    }\n  }, [currentUser, loadDashboardData]);\n\n  const updateUserRole = async (userId, newRole) => {\n    try {\n      const { error } = await supabase\n        .from('profiles')\n        .update({ role: newRole, updated_at: new Date().toISOString() })\n        .eq('id', userId);\n\n      if (error) throw error;\n\n      showSuccess(`User role updated to ${newRole}`);\n      loadDashboardData(); // Refresh data\n    } catch (error) {\n      showError('Failed to update user role');\n    }\n  };\n\n  const toggleUserStatus = async (userId, currentStatus) => {\n    try {\n      const { error } = await supabase\n        .from('profiles')\n        .update({ \n          is_active: !currentStatus, \n          updated_at: new Date().toISOString() \n        })\n        .eq('id', userId);\n\n      if (error) throw error;\n\n      showSuccess(`User ${!currentStatus ? 'activated' : 'deactivated'}`);\n      loadDashboardData();\n    } catch (error) {\n      showError('Failed to update user status');\n    }\n  };\n\n\n\n  const approveQualification = async (qualificationId) => {\n    try {\n      // Update qualification status\n      const { data: updatedQualification, error: qualError } = await supabase\n        .from('provider_qualifications')\n        .update({ \n          status: 'approved',\n          reviewed_by: currentUser.id,\n          reviewed_at: new Date().toISOString()\n        })\n        .eq('id', qualificationId)\n        .select()\n        .single();\n\n      if (qualError) throw qualError;\n\n      // Update provider verification status\n      const { error: providerError } = await supabase\n        .from('providers')\n        .update({ verified: true })\n        .eq('id', updatedQualification.provider_id);\n\n      if (providerError) throw providerError;\n\n      // Update local state\n      setQualificationSubmissions(qualificationSubmissions.map(qual => \n        qual.id === qualificationId ? { ...qual, status: 'approved' } : qual\n      ));\n\n      showSuccess('Qualification approved! Provider now has full access.');\n      \n      // Reload dashboard data to update stats\n      loadDashboardData();\n    } catch (error) {\n      showError('Failed to approve qualification');\n    }\n  };\n\n  const rejectQualification = async (qualificationId, reason = '') => {\n    try {\n      const { error } = await supabase\n        .from('provider_qualifications')\n        .update({ \n          status: 'rejected',\n          reviewed_by: currentUser.id,\n          reviewed_at: new Date().toISOString(),\n          review_notes: reason\n        })\n        .eq('id', qualificationId);\n\n      if (error) throw error;\n\n      // Update local state\n      setQualificationSubmissions(qualificationSubmissions.map(qual => \n        qual.id === qualificationId ? { ...qual, status: 'rejected' } : qual\n      ));\n\n      showSuccess('Qualification rejected. Provider will be notified.');\n    } catch (error) {\n      showError('Failed to reject qualification');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#5EB47C]\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"flex flex-col lg:flex-row\">\n        {/* Mobile Header */}\n        <div className=\"lg:hidden bg-white border-b border-gray-200 px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3 min-w-0 flex-1\">\n              <img \n                src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/admin.svg\" \n                alt=\"Admin\" \n                className=\"w-8 h-8 flex-shrink-0\"\n              />\n              <div className=\"min-w-0 flex-1\">\n                <h4 className=\"text-md font-medium text-gray-900 truncate\">Admin</h4>\n                <p className=\"text-sm text-gray-600 truncate\">{currentUser?.full_name}</p>\n              </div>\n            </div>\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#5EB47C] text-white\">\n              Administrator\n            </span>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        <div className=\"lg:hidden bg-white border-b border-gray-200 px-2 py-2\">\n          <div className=\"flex overflow-x-auto space-x-1 pb-2\">\n            {[\n              { \n                id: 'overview', \n                name: 'Overview', \n                icon: (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"/>\n                    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n                    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n                  </svg>\n                )\n              },\n              { \n                id: 'users', \n                name: 'Users', \n                icon: (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n                    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n                    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n                    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n                  </svg>\n                )\n              },\n              { \n                id: 'providers', \n                name: 'Providers', \n                icon: (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"/>\n                    <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"/>\n                    <path d=\"M16 10a4 4 0 0 1-8 0\"/>\n                  </svg>\n                )\n              },\n              { \n                id: 'qualifications', \n                name: 'Qualifications', \n                icon: (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"/>\n                    <polyline points=\"22,4 12,14.01 9,11.01\"/>\n                  </svg>\n                )\n              },\n              { \n                id: 'audit', \n                name: 'Audit', \n                icon: (\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n                    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n                  </svg>\n                )\n              }\n            ].map((item) => (\n              <button\n                key={item.id}\n                onClick={() => setActiveTab(item.id)}\n                className={`flex-shrink-0 flex items-center px-3 py-2 text-xs font-medium rounded-md transition-colors whitespace-nowrap ${\n                  activeTab === item.id\n                    ? 'bg-green-100 text-[#5EB47C]'\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"w-4 h-4 mr-2\">{item.icon}</div>\n                {item.name}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Desktop Sidebar */}\n        <div className=\"hidden lg:block w-64 bg-white shadow-sm border-r border-gray-200 min-h-screen\">\n          <div className=\"p-6\">\n            <div className=\"mb-6\">\n              <div className=\"flex items-center space-x-3 mb-3\">\n                <img \n                  src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/admin.svg\" \n                  alt=\"Admin\" \n                  className=\"w-10 h-10\"\n                />\n                <div className=\"min-w-0 flex-1\">\n                  <h1 className=\"text-lg font-semibold text-gray-900 truncate\">Admin</h1>\n                  <p className=\"text-sm text-gray-600 truncate\">{currentUser?.full_name}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Navigation */}\n            <nav className=\"space-y-2\">\n              {[\n                { \n                  id: 'overview', \n                  name: 'System Overview', \n                  icon: (\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"/>\n                      <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n                      <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n                    </svg>\n                  )\n                },\n                { \n                  id: 'users', \n                  name: 'User Management', \n                  icon: (\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n                      <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n                      <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n                      <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n                    </svg>\n                  )\n                },\n                { \n                  id: 'providers', \n                  name: 'All Providers', \n                  icon: (\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"/>\n                      <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"/>\n                      <path d=\"M16 10a4 4 0 0 1-8 0\"/>\n                    </svg>\n                  )\n                },\n                { \n                  id: 'qualifications', \n                  name: 'Qualifications', \n                  icon: (\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"/>\n                      <polyline points=\"22,4 12,14.01 9,11.01\"/>\n                    </svg>\n                  )\n                },\n                { \n                  id: 'audit', \n                  name: 'Audit Logs', \n                  icon: (\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n                      <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n                    </svg>\n                  )\n                }\n              ].map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveTab(item.id)}\n                  className={`w-full flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors ${\n                    activeTab === item.id\n                      ? 'bg-green-100 text-[#5EB47C]'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  <div className=\"w-5 h-5 mr-3\">{item.icon}</div>\n                  {item.name}\n                  {item.id === 'qualifications' && stats.pendingQualifications > 0 && (\n                    <span className=\"ml-auto bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                      {stats.pendingQualifications}\n                    </span>\n                  )}\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 p-3 sm:p-4 lg:p-6\">\n          {renderActiveSection()}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderActiveSection() {\n    switch(activeTab) {\n      case 'overview':\n        return (\n          <div className=\"space-y-6\">\n            {/* Welcome Header */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n                              <h1 className=\"text-2xl font-bold mb-2 text-gray-900\">\n                  {currentUser?.full_name}\n                </h1>\n              <p className=\"text-gray-600\">\n                You have {stats.pendingQualifications} pending qualifications and {stats.unverifiedProviders} providers awaiting approval.\n              </p>\n            </div>\n\n            {/* Stats Cards */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Platform Statistics</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n                <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n                  <h3 className=\"text-sm font-medium text-gray-500\">Pet Owners</h3>\n                  <p className=\"text-2xl font-bold text-[#5EB47C]\">{stats.petOwners}</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">Active customers</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n                  <h3 className=\"text-sm font-medium text-gray-500\">Verified Providers</h3>\n                  <p className=\"text-2xl font-bold text-[#5EB47C]\">{stats.verifiedProviders}</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">Approved & active</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 border-l-4 border-l-orange-400\">\n                  <h3 className=\"text-sm font-medium text-gray-500\">Pending Approvals</h3>\n                  <p className=\"text-2xl font-bold text-orange-600\">{stats.unverifiedProviders}</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">Provider accounts</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 border-l-4 border-l-blue-400\">\n                  <h3 className=\"text-sm font-medium text-gray-500\">Qualifications</h3>\n                  <p className=\"text-2xl font-bold text-blue-600\">{stats.pendingQualifications}</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">Pending review</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n                  <h3 className=\"text-sm font-medium text-gray-500\">Team Members</h3>\n                  <p className=\"text-2xl font-bold text-purple-600\">{stats.admins + stats.support}</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">Admins & support</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'providers':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">All Providers</h2>\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-[#5EB47C]\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Provider</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Type</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Location</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Joined</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Rating</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {providers.map((provider) => (\n                        <tr key={provider.id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div>\n                              <div className=\"text-sm font-medium text-gray-900\">{provider.name}</div>\n                              <div className=\"text-sm text-gray-500\">{provider.email}</div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                              {provider.provider_type}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {provider.city}, {provider.country}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {new Date(provider.created_at).toLocaleDateString()}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {provider.rating ? `${provider.rating}/5` : 'No ratings'}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'users':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">User Management</h2>\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-[#5EB47C]\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">User</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Role</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Joined</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {users.map((user) => (\n                        <tr key={user.id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div>\n                              <div className=\"text-sm font-medium text-gray-900\">{user.full_name || 'N/A'}</div>\n                              <div className=\"text-sm text-gray-500\">{user.email}</div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <select\n                              value={user.role}\n                              onChange={(e) => updateUserRole(user.id, e.target.value)}\n                              className=\"text-sm border border-gray-300 rounded px-2 py-1\"\n                            >\n                              <option value=\"pet_owner\">Pet Owner</option>\n                              <option value=\"provider\">Provider</option>\n                              <option value=\"admin\">Admin</option>\n                              <option value=\"support\">Support</option>\n                            </select>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {new Date(user.created_at).toLocaleDateString()}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                            <button\n                              onClick={() => toggleUserStatus(user.id, user.is_active)}\n                              className=\"text-[#5EB47C] hover:text-[#4A9A64] mr-3\"\n                            >\n                              {user.is_active ? 'Deactivate' : 'Activate'}\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'qualifications':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Qualification Submissions</h2>\n              \n              {qualificationSubmissions.length === 0 ? (\n                <div className=\"text-center py-12 bg-gray-50 rounded-lg border border-gray-200\">\n                  <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border border-gray-200\">\n                    <span className=\"text-2xl\">📋</span>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Qualification Submissions</h3>\n                  <p className=\"text-gray-600\">Qualification submissions will appear here for review.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {qualificationSubmissions.map((qualification) => (\n                    <div key={qualification.id} className=\"bg-gray-50 rounded-lg p-6 border border-gray-200\">\n                      <div className=\"flex justify-between items-start mb-4\">\n                        <div>\n                          <h3 className=\"text-lg font-medium text-gray-900\">\n                            {qualification.provider_name}\n                          </h3>\n                          <p className=\"text-sm text-gray-600\">{qualification.provider_email}</p>\n                          <div className=\"flex items-center mt-2\">\n                            <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                              qualification.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                              qualification.status === 'approved' ? 'bg-green-100 text-green-800' :\n                              'bg-red-100 text-red-800'\n                            }`}>\n                              {qualification.status.charAt(0).toUpperCase() + qualification.status.slice(1)}\n                            </span>\n                          </div>\n                        </div>\n                        \n                        {qualification.status === 'pending' && (\n                          <div className=\"flex space-x-2\">\n                            <button\n                              onClick={() => approveQualification(qualification.id)}\n                              className=\"bg-[#5EB47C] text-white px-4 py-2 rounded-lg hover:bg-[#4A9A64] text-sm font-medium\"\n                            >\n                              ✓ Approve\n                            </button>\n                            <button\n                              onClick={() => rejectQualification(qualification.id)}\n                              className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 text-sm font-medium\"\n                            >\n                              ✗ Reject\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n\n      case 'audit':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Audit Logs</h2>\n              <div className=\"bg-gray-50 rounded-lg border border-gray-200 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-[#5EB47C]\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Timestamp</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Action</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Resource</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">User</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\">Details</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {auditLogs.map((log) => (\n                        <tr key={log.id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {new Date(log.created_at).toLocaleString()}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            {log.action || log.event_type}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {log.resource_type}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {log.user_id || 'System'}\n                          </td>\n                          <td className=\"px-6 py-4 text-sm text-gray-500 max-w-xs truncate\">\n                            {log.details ? JSON.stringify(log.details) : '-'}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900\">Select a section from the sidebar</h2>\n            </div>\n          </div>\n        );\n    }\n  }\n};\n\nexport default AdminDashboard;\n"],"names":["AdminDashboard","showError","showSuccess","useNotificationContext","activeTab","setActiveTab","useState","users","setUsers","providers","setProviders","qualificationSubmissions","setQualificationSubmissions","auditLogs","setAuditLogs","stats","setStats","petOwners","verifiedProviders","pendingProviders","pendingQualifications","admins","support","totalBookings","providersByType","loading","setLoading","currentUser","setCurrentUser","navigate","useNavigate","checkAdminAccess","useCallback","async","data","user","supabase","auth","getUser","profile","error","profileError","from","select","eq","id","single","role","loadDashboardData","usersResponse","providersResponse","userCountResponse","providerCountResponse","qualificationsResponse","bookingCountResponse","Promise","all","order","ascending","limit","count","head","usersData","providersData","qualificationsData","roleData","allProvidersData","bookingCountData","roleCounts","reduce","acc","filter","p","verified","provider","type","provider_type","total","pending","pet_owner","length","unverifiedProviders","q","status","admin","useEffect","_jsx","className","children","_jsxs","src","alt","full_name","name","icon","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","width","height","rx","ry","x1","y1","x2","y2","d","cx","cy","r","points","map","item","onClick","email","city","country","Date","created_at","toLocaleDateString","rating","value","onChange","e","userId","newRole","update","updated_at","toISOString","updateUserRole","target","currentStatus","is_active","toggleUserStatus","qualification","provider_name","provider_email","charAt","toUpperCase","slice","updatedQualification","qualError","reviewed_by","reviewed_at","qualificationId","providerError","provider_id","qual","approveQualification","reason","arguments","undefined","review_notes","rejectQualification","log","toLocaleString","action","event_type","resource_type","user_id","details","JSON","stringify","renderActiveSection"],"sourceRoot":""}