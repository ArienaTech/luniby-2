{"version":3,"file":"static/js/918.7f57c67f.chunk.js","mappings":"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","sources":["components/SimpleProviderSignUp.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\n\nconst SimpleProviderSignUp = () => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    phone: '',\n    providerType: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('Creating account...');\n\n    // Validation\n    if (!formData.phone || formData.phone.trim() === '') {\n      setMessage('❌ Phone number is required');\n      setLoading(false);\n      return;\n    }\n\n    if (formData.phone === formData.email) {\n      setMessage('❌ Phone number cannot be the same as email');\n      setLoading(false);\n      return;\n    }\n\n    // Debug: Log form data\n\n    try {\n      // Step 1: Sign up with Supabase Auth\n      const signupData = {\n        email: formData.email,\n        password: formData.password,\n        options: {\n          data: {\n            user_type: 'provider',\n            phone: formData.phone || null, // Ensure we don't send empty string\n            full_name: `${formData.firstName} ${formData.lastName}`,\n            provider_type: formData.providerType,\n            first_name: formData.firstName,\n            last_name: formData.lastName\n          }\n        }\n      };\n\n\n      const { data, error } = await supabase.auth.signUp(signupData);\n\n      if (error) {\n        setMessage(`❌ Signup failed: ${error.message}`);\n        setLoading(false);\n        return;\n      }\n\n      if (data.user) {\n        setMessage(`✅ Success! User created: ${data.user.email}`);\n        \n        // Step 2: Wait a moment, then create provider record\n        setTimeout(async () => {\n          try {\n            const { data: providerData, error: providerError } = await supabase.rpc('create_provider_record', {\n              provider_name: `${formData.firstName} ${formData.lastName}`,\n              provider_email: formData.email,\n              provider_phone: formData.phone,\n              provider_type: formData.providerType\n            });\n\n\n            if (providerError) {\n              setMessage(prev => prev + `\\n⚠️ Provider record failed: ${providerError.message}`);\n            } else if (providerData && providerData.success === false) {\n              setMessage(prev => prev + `\\n⚠️ Provider record failed: ${providerData.error || 'Unknown error'}`);\n            } else if (providerData && providerData.success === true) {\n              setMessage(prev => prev + `\\n✅ Provider record created successfully! Type: ${providerData.provider_type || 'unknown'}`);\n            } else {\n              setMessage(prev => prev + `\\n⚠️ Provider record: Unexpected response format`);\n            }\n\n            // Step 3: Verify the profile role was set correctly\n            const { data: profileData, error: profileError } = await supabase\n              .from('profiles')\n              .select('role, phone')\n              .eq('id', data.user.id)\n              .single();\n\n            if (profileError) {\n              setMessage(prev => prev + `\\n⚠️ Could not verify profile: ${profileError.message}`);\n            } else {\n              setMessage(prev => prev + `\\n✅ Profile role: ${profileData.role}, Phone: ${profileData.phone || 'Not set'}`);\n            }\n\n          } catch (err) {\n            setMessage(prev => prev + `\\n⚠️ Provider record error: ${err.message}`);\n          }\n          \n          setLoading(false);\n        }, 2000);\n      } else {\n        setMessage('❌ No user data returned');\n        setLoading(false);\n      }\n\n    } catch (error) {\n      setMessage(`❌ Error: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '500px', margin: '50px auto', padding: '20px' }}>\n      <h2>🧪 Simple Provider Signup Test</h2>\n      \n      <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n        <input\n          name=\"firstName\"\n          placeholder=\"First Name\"\n          value={formData.firstName}\n          onChange={handleChange}\n          required\n          style={{ padding: '10px', fontSize: '16px' }}\n        />\n        \n        <input\n          name=\"lastName\"\n          placeholder=\"Last Name\"\n          value={formData.lastName}\n          onChange={handleChange}\n          required\n          style={{ padding: '10px', fontSize: '16px' }}\n        />\n        \n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n          style={{ padding: '10px', fontSize: '16px' }}\n        />\n        \n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password (min 6 chars)\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n          minLength=\"6\"\n          style={{ padding: '10px', fontSize: '16px' }}\n        />\n        \n        <input\n          name=\"phone\"\n          placeholder=\"Phone Number\"\n          value={formData.phone}\n          onChange={handleChange}\n          required\n          style={{ padding: '10px', fontSize: '16px' }}\n        />\n        \n        <select\n          name=\"providerType\"\n          value={formData.providerType}\n          onChange={handleChange}\n          required\n          style={{ padding: '10px', fontSize: '16px' }}\n        >\n          <option value=\"\">Select Provider Type</option>\n          <option value=\"veterinarian\">Veterinarian</option>\n          <option value=\"vet_nurse\">Vet Nurse</option>\n          <option value=\"groomer\">Groomer</option>\n          <option value=\"trainer\">Trainer</option>\n          <option value=\"breeder\">Breeder</option>\n          <option value=\"nutritionist\">Nutritionist</option>\n          <option value=\"pet_business\">Pet Business</option>\n          <option value=\"holistic_care\">Holistic Care</option>\n          <option value=\"other\">Other</option>\n        </select>\n        \n        <button \n          type=\"submit\" \n          disabled={loading}\n          style={{ \n            padding: '15px', \n            fontSize: '18px', \n            backgroundColor: loading ? '#ccc' : '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: loading ? 'not-allowed' : 'pointer'\n          }}\n        >\n          {loading ? 'Creating Account...' : 'Sign Up as Provider'}\n        </button>\n      </form>\n\n      <div style={{ \n        marginTop: '20px', \n        padding: '15px', \n        backgroundColor: '#f8f9fa', \n        borderRadius: '5px',\n        whiteSpace: 'pre-line',\n        fontFamily: 'monospace',\n        minHeight: '100px'\n      }}>\n        {message || 'Fill out the form and click Sign Up to test'}\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleProviderSignUp;"],"names":["SimpleProviderSignUp","formData","setFormData","useState","firstName","lastName","email","password","phone","providerType","loading","setLoading","message","setMessage","handleChange","e","target","name","value","_jsxs","style","maxWidth","margin","padding","children","_jsx","onSubmit","async","preventDefault","trim","signupData","options","data","user_type","full_name","provider_type","first_name","last_name","error","supabase","auth","signUp","user","setTimeout","providerData","providerError","rpc","provider_name","provider_email","provider_phone","prev","success","profileData","profileError","from","select","eq","id","single","role","err","display","flexDirection","gap","placeholder","onChange","required","fontSize","type","minLength","disabled","backgroundColor","color","border","borderRadius","cursor","marginTop","whiteSpace","fontFamily","minHeight"],"sourceRoot":""}