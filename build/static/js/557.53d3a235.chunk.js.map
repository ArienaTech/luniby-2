{"version":3,"file":"static/js/557.53d3a235.chunk.js","mappings":"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","sources":["services/notificationService.js","components/ConsultationBooking.js","components/ProviderDetail.js"],"sourcesContent":["// Notification service\nimport { supabase } from '../lib/supabase';\nimport { handleSupabaseError } from '../lib/supabase-utils';\n\nconst notificationService = {\n  // Get user notifications\n  async getUserNotifications(userId) {\n    try {\n      const { data, error } = await supabase\n        .from('notifications')\n        .select('*')\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false })\n        .limit(50);\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: [] };\n      }\n\n      return { success: true, data: data || [] };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: [] };\n    }\n  },\n\n  // Create a notification\n  async createNotification(notificationData) {\n    try {\n      const { data, error } = await supabase\n        .from('notifications')\n        .insert([{\n          ...notificationData,\n          read: false,\n          created_at: new Date().toISOString()\n        }])\n        .select()\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), data: null };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), data: null };\n    }\n  },\n\n  // Mark notification as read\n  async markAsRead(notificationId) {\n    try {\n      const { data, error } = await supabase\n        .from('notifications')\n        .update({ read: true })\n        .eq('id', notificationId)\n        .select()\n        .single();\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error) };\n      }\n\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error) };\n    }\n  },\n\n  // Mark all notifications as read\n  async markAllAsRead(userId) {\n    try {\n      const { error } = await supabase\n        .from('notifications')\n        .update({ read: true })\n        .eq('user_id', userId)\n        .eq('read', false);\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error) };\n      }\n\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error) };\n    }\n  },\n\n  // Delete a notification\n  async deleteNotification(notificationId) {\n    try {\n      const { error } = await supabase\n        .from('notifications')\n        .delete()\n        .eq('id', notificationId);\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error) };\n      }\n\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error) };\n    }\n  },\n\n  // Get unread count\n  async getUnreadCount(userId) {\n    try {\n      const { count, error } = await supabase\n        .from('notifications')\n        .select('*', { count: 'exact', head: true })\n        .eq('user_id', userId)\n        .eq('read', false);\n\n      if (error) {\n        return { success: false, error: handleSupabaseError(error), count: 0 };\n      }\n\n      return { success: true, count: count || 0 };\n    } catch (error) {\n      return { success: false, error: handleSupabaseError(error), count: 0 };\n    }\n  }\n};\n\nexport default notificationService;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { supabase } from '../lib/supabase.js';\nimport notificationService from '../services/notificationService';\n\nconst ConsultationBooking = ({ service, provider, onClose }) => {\n  const [bookingData, setBookingData] = useState({\n    consultationType: 'general',\n    preferredDate: '',\n    preferredTime: '',\n    petName: '',\n    petAge: '',\n    petSpecies: '',\n    consultationReason: '',\n    urgency: 'routine',\n    customerName: '',\n    customerEmail: '',\n    customerPhone: '',\n    additionalNotes: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState('');\n  \n  // Dropdown states\n  const [consultationTypeOpen, setConsultationTypeOpen] = useState(false);\n  const [timeSlotOpen, setTimeSlotOpen] = useState(false);\n  const [speciesOpen, setSpeciesOpen] = useState(false);\n  const [urgencyOpen, setUrgencyOpen] = useState(false);\n  \n  // Refs for dropdowns\n  const consultationTypeRef = useRef(null);\n  const timeSlotRef = useRef(null);\n  const speciesRef = useRef(null);\n  const urgencyRef = useRef(null);\n\n  const consultationTypes = [\n    { value: 'general', label: 'General Health Consultation' },\n    { value: 'follow_up', label: 'Follow-up Appointment' },\n    { value: 'prescription', label: 'Prescription Review' },\n    { value: 'nutrition', label: 'Nutrition Consultation' },\n    { value: 'behavior', label: 'Behavioral Consultation' },\n    { value: 'second_opinion', label: 'Second Opinion' }\n  ];\n\n  const urgencyLevels = [\n    { value: 'routine', label: 'Routine (within 1-2 weeks)' },\n    { value: 'priority', label: 'Priority (within 2-3 days)' },\n    { value: 'urgent', label: 'Urgent (within 24 hours)' }\n  ];\n\n  const timeSlots = [\n    '9:00 AM', '9:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\n    '12:00 PM', '12:30 PM', '1:00 PM', '1:30 PM', '2:00 PM', '2:30 PM',\n    '3:00 PM', '3:30 PM', '4:00 PM', '4:30 PM', '5:00 PM', '5:30 PM'\n  ];\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (consultationTypeRef.current && !consultationTypeRef.current.contains(event.target)) {\n        setConsultationTypeOpen(false);\n      }\n      if (timeSlotRef.current && !timeSlotRef.current.contains(event.target)) {\n        setTimeSlotOpen(false);\n      }\n      if (speciesRef.current && !speciesRef.current.contains(event.target)) {\n        setSpeciesOpen(false);\n      }\n      if (urgencyRef.current && !urgencyRef.current.contains(event.target)) {\n        setUrgencyOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleChange = (e) => {\n    setBookingData({\n      ...bookingData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      // Create consultation booking\n      const { data: bookingResult, error: bookingError } = await supabase\n        .from('consultation_bookings')\n        .insert([\n          {\n            service_id: service.id,\n            provider_id: provider.id,\n            consultation_type: bookingData.consultationType,\n            preferred_date: bookingData.preferredDate,\n            preferred_time: bookingData.preferredTime,\n            pet_name: bookingData.petName,\n            pet_age: parseInt(bookingData.petAge),\n            pet_species: bookingData.petSpecies,\n            consultation_reason: bookingData.consultationReason,\n            urgency: bookingData.urgency,\n            customer_name: bookingData.customerName,\n            customer_email: bookingData.customerEmail,\n            customer_phone: bookingData.customerPhone,\n            additional_notes: bookingData.additionalNotes,\n            status: 'pending',\n            total_amount: service.price,\n            created_at: new Date().toISOString()\n          }\n        ])\n        .select()\n        .single();\n\n      if (bookingError) {\n        setError('Failed to book consultation. Please try again.');\n        setLoading(false);\n        return;\n      }\n\n      // Get provider availability settings for notifications\n      const { data: providerAvailability } = await supabase\n        .from('provider_availability')\n        .select('notification_settings')\n        .eq('provider_id', provider.id)\n        .single();\n\n      // Send notifications to provider\n      if (providerAvailability?.notification_settings) {\n        try {\n          const bookingDataForNotification = {\n            id: bookingResult.id,\n            pet_name: bookingData.petName,\n            pet_type: bookingData.petSpecies,\n            pet_age: bookingData.petAge,\n            consultation_type: bookingData.consultationType,\n            preferred_date: bookingData.preferredDate,\n            preferred_time: bookingData.preferredTime,\n            consultation_notes: bookingData.consultationReason,\n            customer_name: bookingData.customerName,\n            customer_phone: bookingData.customerPhone,\n            customer_email: bookingData.customerEmail,\n            duration: 30 // Default duration\n          };\n\n          await notificationService.sendBookingNotification(\n            bookingDataForNotification,\n            provider,\n            providerAvailability.notification_settings\n          );\n\n        \n        } catch (notificationError) {\n          // Notification sending failed - handled gracefully\n          // Don't fail the booking if notifications fail\n        }\n      }\n\n      setSuccess(true);\n      setLoading(false);\n\n      // Auto-close after 3 seconds\n      setTimeout(() => {\n        onClose();\n      }, 3000);\n\n    } catch (error) {\n      setError('An unexpected error occurred. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n        <div className=\"bg-white rounded-2xl p-8 max-w-md w-full\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4\">\n              <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 font-montserrat mb-2\">\n              Consultation Booked Successfully!\n            </h3>\n            <p className=\"text-sm text-gray-500 font-montserrat\">\n              {provider.name} will contact you within 24 hours to confirm your appointment time.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white rounded-2xl p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h3 className=\"text-lg font-bold text-gray-900 font-montserrat\">\n            Book Online Consultation\n          </h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 focus:outline-none\"\n          >\n            <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Provider Info */}\n        <div className=\"bg-gray-50 rounded-xl p-4 mb-6\">\n          <div className=\"flex items-center\">\n            <div className=\"w-12 h-12 bg-primary-600 rounded-full flex items-center justify-center text-white font-bold text-base font-montserrat\">\n              {provider.name.charAt(0)}\n            </div>\n            <div className=\"ml-3\">\n              <h4 className=\"font-medium text-gray-900 font-montserrat\">{provider.name}</h4>\n              <p className=\"text-sm text-gray-500 font-montserrat\">{service.title}</p>\n              <p className=\"text-xl font-bold text-primary-600 font-montserrat\">${service.price}</p>\n            </div>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-xl font-montserrat text-sm mb-6\">\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Consultation Type */}\n          <div ref={consultationTypeRef}>\n            <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n              Consultation Type *\n            </label>\n            <div className=\"relative\">\n              <button\n                type=\"button\"\n                onClick={() => setConsultationTypeOpen(!consultationTypeOpen)}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl bg-white text-left flex items-center justify-between hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n              >\n                <span>\n                  {consultationTypes.find(type => type.value === bookingData.consultationType)?.label || 'Select consultation type'}\n                </span>\n                <svg\n                  className={`w-4 h-4 transition-transform ${consultationTypeOpen ? 'rotate-180' : ''}`}\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {consultationTypeOpen && (\n                <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 z-50 overflow-hidden max-h-60 overflow-y-auto\">\n                  {consultationTypes.map(type => (\n                    <button\n                      key={type.value}\n                      type=\"button\"\n                      onClick={() => {\n                        setBookingData({...bookingData, consultationType: type.value});\n                        setConsultationTypeOpen(false);\n                      }}\n                      className={`w-full px-3 py-3 text-left hover:bg-gray-50 flex items-center font-montserrat ${\n                        bookingData.consultationType === type.value ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                      } ${type.value !== consultationTypes[0].value ? 'border-t border-gray-200' : ''}`}\n                    >\n                      {type.label}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Date and Time */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                Preferred Date *\n              </label>\n              <input\n                type=\"date\"\n                name=\"preferredDate\"\n                required\n                min={new Date().toISOString().split('T')[0]}\n                value={bookingData.preferredDate}\n                onChange={handleChange}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n              />\n            </div>\n            <div ref={timeSlotRef}>\n              <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                Preferred Time *\n              </label>\n              <div className=\"relative\">\n                <button\n                  type=\"button\"\n                  onClick={() => setTimeSlotOpen(!timeSlotOpen)}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl bg-white text-left flex items-center justify-between hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n                >\n                  <span>\n                    {bookingData.preferredTime || 'Select time'}\n                  </span>\n                  <svg\n                    className={`w-4 h-4 transition-transform ${timeSlotOpen ? 'rotate-180' : ''}`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                \n                {timeSlotOpen && (\n                  <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 z-50 overflow-hidden max-h-60 overflow-y-auto\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setBookingData({...bookingData, preferredTime: ''});\n                        setTimeSlotOpen(false);\n                      }}\n                      className={`w-full px-3 py-3 text-left hover:bg-gray-50 flex items-center font-montserrat ${\n                        !bookingData.preferredTime ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                      }`}\n                    >\n                      Select time\n                    </button>\n                    {timeSlots.map(time => (\n                      <button\n                        key={time}\n                        type=\"button\"\n                        onClick={() => {\n                          setBookingData({...bookingData, preferredTime: time});\n                          setTimeSlotOpen(false);\n                        }}\n                        className={`w-full px-3 py-3 text-left hover:bg-gray-50 flex items-center border-t border-gray-200 font-montserrat ${\n                          bookingData.preferredTime === time ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                        }`}\n                      >\n                        {time}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Pet Information */}\n          <div className=\"bg-blue-50 rounded-xl p-4\">\n            <h4 className=\"font-medium text-gray-900 font-montserrat mb-4\">Pet Information</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                  Pet Name *\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"petName\"\n                  required\n                  value={bookingData.petName}\n                  onChange={handleChange}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n                  placeholder=\"e.g., Max\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                  Age (years) *\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"petAge\"\n                  required\n                  min=\"0\"\n                  max=\"30\"\n                  value={bookingData.petAge}\n                  onChange={handleChange}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n                />\n              </div>\n              <div ref={speciesRef}>\n                <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                  Species *\n                </label>\n                <div className=\"relative\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setSpeciesOpen(!speciesOpen)}\n                    className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl bg-white text-left flex items-center justify-between hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n                  >\n                    <span>\n                      {bookingData.petSpecies || 'Select species'}\n                    </span>\n                    <svg\n                      className={`w-4 h-4 transition-transform ${speciesOpen ? 'rotate-180' : ''}`}\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </button>\n                  \n                  {speciesOpen && (\n                    <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 z-50 overflow-hidden max-h-60 overflow-y-auto\">\n                      {['', 'Dog', 'Cat', 'Bird', 'Rabbit', 'Guinea Pig', 'Hamster', 'Fish', 'Reptile', 'Other'].map((species, index) => (\n                        <button\n                          key={species || 'empty'}\n                          type=\"button\"\n                          onClick={() => {\n                            setBookingData({...bookingData, petSpecies: species});\n                            setSpeciesOpen(false);\n                          }}\n                          className={`w-full px-3 py-3 text-left hover:bg-gray-50 flex items-center font-montserrat ${\n                            bookingData.petSpecies === species ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                          } ${index > 0 ? 'border-t border-gray-200' : ''}`}\n                        >\n                          {species || 'Select species'}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Consultation Details */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n              Reason for Consultation *\n            </label>\n            <textarea\n              name=\"consultationReason\"\n              required\n              rows={3}\n              value={bookingData.consultationReason}\n              onChange={handleChange}\n              className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n              placeholder=\"Please describe your pet's symptoms or the reason for this consultation...\"\n            />\n          </div>\n\n          {/* Urgency */}\n          <div ref={urgencyRef}>\n            <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n              Urgency Level *\n            </label>\n            <div className=\"relative\">\n              <button\n                type=\"button\"\n                onClick={() => setUrgencyOpen(!urgencyOpen)}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl bg-white text-left flex items-center justify-between hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n              >\n                <span>\n                  {urgencyLevels.find(level => level.value === bookingData.urgency)?.label || 'Select urgency level'}\n                </span>\n                <svg\n                  className={`w-4 h-4 transition-transform ${urgencyOpen ? 'rotate-180' : ''}`}\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {urgencyOpen && (\n                <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 z-50 overflow-hidden max-h-60 overflow-y-auto\">\n                  {urgencyLevels.map((level, index) => (\n                    <button\n                      key={level.value}\n                      type=\"button\"\n                      onClick={() => {\n                        setBookingData({...bookingData, urgency: level.value});\n                        setUrgencyOpen(false);\n                      }}\n                      className={`w-full px-3 py-3 text-left hover:bg-gray-50 flex items-center font-montserrat ${\n                        bookingData.urgency === level.value ? 'bg-[#E5F4F1] text-[#4A9A64]' : 'text-gray-900'\n                      } ${index > 0 ? 'border-t border-gray-200' : ''}`}\n                    >\n                      {level.label}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Customer Information */}\n          <div className=\"bg-gray-50 rounded-xl p-4\">\n            <h4 className=\"font-medium text-gray-900 font-montserrat mb-4\">Your Information</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                  Your Name *\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"customerName\"\n                  required\n                  value={bookingData.customerName}\n                  onChange={handleChange}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                  Phone Number *\n                </label>\n                <input\n                  type=\"tel\"\n                  name=\"customerPhone\"\n                  required\n                  value={bookingData.customerPhone}\n                  onChange={handleChange}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n                />\n              </div>\n            </div>\n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n                Email Address *\n              </label>\n              <input\n                type=\"email\"\n                name=\"customerEmail\"\n                required\n                value={bookingData.customerEmail}\n                onChange={handleChange}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n              />\n            </div>\n          </div>\n\n          {/* Additional Notes */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 font-montserrat mb-2\">\n              Additional Notes\n            </label>\n            <textarea\n              name=\"additionalNotes\"\n              rows={2}\n              value={bookingData.additionalNotes}\n              onChange={handleChange}\n              className=\"block w-full px-3 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary-500 font-montserrat\"\n              placeholder=\"Any additional information you'd like to share...\"\n            />\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex space-x-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-1 px-6 py-3 border border-gray-300 text-gray-700 rounded-xl font-medium font-montserrat hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"flex-1 px-6 py-3 bg-primary-600 text-white rounded-xl font-medium font-montserrat hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\n            >\n              {loading ? (\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Booking...\n                </div>\n              ) : (\n                `Book Consultation - $${service.price}`\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ConsultationBooking;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport ConsultationBooking from './ConsultationBooking';\nimport FavoriteButton from './FavoriteButton';\n\nconst ProviderDetail = () => {\n  const { providerId } = useParams();\n  const [provider, setProvider] = useState(null);\n  const [services, setServices] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [packages, setPackages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('services');\n  const [showBookingModal, setShowBookingModal] = useState(false);\n  const [selectedService, setSelectedService] = useState(null);\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [showCustomBuilder, setShowCustomBuilder] = useState(false);\n\n  useEffect(() => {\n    const loadProviderData = async () => {\n      try {\n        const decodedProviderId = decodeURIComponent(providerId);\n        \n        // Load provider's listings from marketplace_listings first\n        let providerEmail = decodedProviderId;\n        \n        // If it's not an email, try to find by provider_id\n        if (!decodedProviderId.includes('@')) {\n          const { data: sampleListing } = await supabase\n            .from('marketplace_listings')\n            .select('provider_email')\n            .eq('provider_id', decodedProviderId)\n            .limit(1)\n            .single();\n          \n          if (sampleListing?.provider_email) {\n            providerEmail = sampleListing.provider_email;\n          } else {\n            console.error('Provider not found with ID:', decodedProviderId);\n            setLoading(false);\n            return;\n          }\n        }\n\n        // Load all provider's listings from marketplace_listings\n        const { data: allListingsData, error: listingsError } = await supabase\n          .from('marketplace_listings')\n          .select('*')\n          .eq('provider_email', providerEmail)\n          .eq('active', true);\n\n        if (listingsError || !allListingsData || allListingsData.length === 0) {\n          console.error('No listings found for provider:', providerEmail, listingsError);\n          setLoading(false);\n          return;\n        }\n\n        // Create provider data from the first listing\n        const firstListing = allListingsData[0];\n        let rating = firstListing.rating || 0;\n        let reviews_count = firstListing.reviews_count || 0;\n        \n        // Add default ratings for specific providers if they don't have ratings\n        if (rating === 0 || !rating) {\n          const defaultRatings = {\n            'Emily Summer': { rating: 4.8, reviews: 23 },\n            'Sara Lee': { rating: 4.6, reviews: 15 },\n            'Sarah Smith': { rating: 4.9, reviews: 127 },\n            'Luna Groomer': { rating: 4.9, reviews: 31 }\n          };\n          \n          const providerRating = defaultRatings[firstListing.provider_name];\n          if (providerRating) {\n            rating = providerRating.rating;\n            reviews_count = providerRating.reviews;\n          } else if (firstListing.provider_type === 'vet_nurse' || firstListing.provider_type === 'Vet Nurse') {\n            // Default rating for other vet nurses\n            rating = 4.7;\n            reviews_count = 18;\n          }\n        }\n        \n        const providerData = {\n          id: firstListing.provider_id || providerEmail,\n          email: firstListing.provider_email,\n          name: firstListing.provider_name,\n          provider_type: firstListing.provider_type,\n          phone: firstListing.provider_phone,\n          address: firstListing.provider_address,\n          city: firstListing.provider_city || firstListing.city,\n          verified: firstListing.verified || true, // Default to verified for better UX\n          rating: rating,\n          reviews_count: reviews_count,\n          profile_image_url: firstListing.profile_image_url,\n          offers_services: true,\n          offers_products: true\n        };\n\n        setProvider(providerData);\n\n        if (!listingsError && allListingsData) {\n          // Separate services, packages, and products\n          const servicesData = allListingsData.filter(listing => \n            listing.listing_type === 'service' || \n            (listing.listing_type !== 'product' && listing.listing_type !== 'package' && \n             listing.service_types !== 'product' && listing.service_types !== 'package')\n          );\n          \n          const packagesData = allListingsData.filter(listing => \n            listing.listing_type === 'package' || listing.service_types === 'package'\n          );\n          \n          const productsData = allListingsData.filter(listing => \n            listing.listing_type === 'product' || listing.service_types === 'product'\n          );\n\n          // Map services to the expected format\n          const mappedServices = servicesData.map(listing => ({\n            id: listing.listing_id,\n            title: listing.name,\n            description: listing.description,\n            price: listing.price,\n            duration_minutes: 30, // Default duration\n            service_type: listing.service_types || listing.service_type,\n            location_type: 'mobile'\n          }));\n\n          // Map packages to the expected format\n          const mappedPackages = packagesData.map(listing => ({\n            id: listing.listing_id,\n            name: listing.name,\n            description: listing.description,\n            package_price: listing.price,\n            original_price: listing.price * 1.2, // Assume 20% discount\n            savings: listing.price * 0.2,\n            is_active: listing.active\n          }));\n\n          // Map products to the expected format\n          const mappedProducts = productsData.map(listing => ({\n            id: listing.listing_id,\n            name: listing.name,\n            description: listing.description,\n            price: listing.price,\n            category: listing.category,\n            brand: listing.brand,\n            stock_quantity: listing.stock_quantity,\n            image_url: listing.image_url\n          }));\n            \n          setServices(mappedServices);\n          setPackages(mappedPackages);\n          setProducts(mappedProducts);\n        } else if (listingsError) {\n          console.error('Error loading listings:', listingsError);\n        }\n\n        // All data (services, packages, products) is now loaded from marketplace_listings above\n\n        setLoading(false);\n      } catch (error) {\n        \n        setLoading(false);\n      }\n    };\n\n    if (providerId) {\n      loadProviderData();\n    }\n  }, [providerId]);\n\n  // Booking handlers\n  const handleBookConsultation = (service) => {\n    setSelectedService(service);\n    setShowBookingModal(true);\n  };\n\n  // Package system logic - now uses actual packages from provider dashboard\n\n  const handleServiceToggle = (serviceId) => {\n    setSelectedServices(prev => \n      prev.includes(serviceId) \n        ? prev.filter(id => id !== serviceId)\n        : [...prev, serviceId]\n    );\n  };\n\n  const handlePackageSelect = (packageData) => {\n    // Use service_ids from the actual package data\n    setSelectedServices(packageData.service_ids || []);\n  };\n\n  const getSelectedTotal = () => {\n    return services\n      .filter(service => selectedServices.includes(service.id))\n      .reduce((total, service) => total + parseFloat(service.price || 0), 0);\n  };\n\n  const getSelectedDuration = () => {\n    return services\n      .filter(service => selectedServices.includes(service.id))\n      .reduce((total, service) => total + (service.duration_minutes || 30), 0);\n  };\n\n  const closeBookingModal = () => {\n    setShowBookingModal(false);\n    setSelectedService(null);\n  };\n\n  const getProviderTypeIcon = (type) => {\n    const icons = {\n      'Veterinary': '🏥',\n      'Vet Nurse': '👩‍⚕️',\n      'Groomer': '✂️',\n      'Trainer': '🎓',\n      'Breeder': '🐕',\n      'Nutritionist': '🥗',\n      'Pet Business': '🏪',\n      'Holistic Care': '🌿',\n      'Expert': '🎯'\n    };\n    return icons[type] || '🐾';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#5EB47C] mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 font-montserrat\">Loading provider details...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!provider) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-24 h-24 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n            <svg className=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2 font-montserrat\">Provider not found</h3>\n          <p className=\"text-gray-500 font-montserrat mb-4\">The provider you're looking for doesn't exist.</p>\n          <Link\n            to=\"/marketplace\"\n            className=\"inline-flex items-center px-4 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] transition-colors font-montserrat\"\n          >\n            Back to Marketplace\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Provider Header */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8\">\n          <div className=\"flex flex-col sm:flex-row gap-4 sm:gap-6\">\n            {/* Provider Avatar */}\n            <div className=\"flex-shrink-0 self-center sm:self-start\">\n              <div className=\"w-24 h-24 sm:w-32 sm:h-32 bg-gradient-to-br from-primary-100 to-primary-200 rounded-2xl flex items-center justify-center\">\n                {provider.profile_image_url ? (\n                  <img\n                    src={provider.profile_image_url}\n                    alt={provider.name}\n                    className=\"w-full h-full object-cover rounded-2xl\"\n                  />\n                ) : (\n                  <span className=\"text-base\">\n                    {getProviderTypeIcon(provider.provider_type)}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Provider Info */}\n            <div className=\"flex-1\">\n              <div className=\"flex flex-col sm:flex-row sm:items-start sm:justify-between mb-4 gap-4\">\n                <div className=\"flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-3 mb-2\">\n                    <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 font-montserrat\">\n                      {provider.business_name || provider.name}\n                    </h1>\n                    {provider.verified && (\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary-100 text-primary-800 font-montserrat\">\n                        <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                        </svg>\n                        Verified\n                      </span>\n                    )}\n                  </div>\n                  {provider.business_name && provider.name !== provider.business_name && (\n                    <p className=\"text-base sm:text-lg text-gray-600 font-montserrat mb-2\">by {provider.name}</p>\n                  )}\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 text-sm text-gray-600 font-montserrat\">\n                    <span className=\"flex items-center\">\n                      <span className=\"mr-2\">{getProviderTypeIcon(provider.provider_type)}</span>\n                      {provider.provider_type}\n                    </span>\n                    {provider.city && (\n                      <span className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        </svg>\n                        {provider.city}, {provider.country}\n                      </span>\n                    )}\n                  </div>\n                  \n                  {/* Rating Display */}\n                  <div className=\"flex items-center mt-3\">\n                    <div className=\"flex text-yellow-400 mr-2\">\n                      {[...Array(5)].map((_, i) => (\n                        <svg key={i} className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                        </svg>\n                      ))}\n                    </div>\n                    <span className=\"text-lg font-semibold text-gray-900 mr-2 font-montserrat\">\n                      {provider.rating || 4.8}\n                    </span>\n                    <span className=\"text-gray-600 font-montserrat\">\n                      ({provider.reviews_count || 23} review{(provider.reviews_count || 23) !== 1 ? 's' : ''})\n                    </span>\n                  </div>\n                </div>\n\n                {/* Contact Button and Favorite */}\n                <div className=\"flex flex-col sm:flex-row gap-3\">\n                  <FavoriteButton\n                    listingId={provider.id}\n                    listingType=\"service\"\n                    size=\"md\"\n                    className=\"self-center sm:self-start\"\n                  />\n                  <button className=\"w-full sm:w-auto px-4 sm:px-6 py-3 bg-[#5EB47C] text-white rounded-xl hover:bg-[#4A9A64] transition-colors font-montserrat font-medium\">\n                    Contact Provider\n                  </button>\n                </div>\n              </div>\n\n\n\n              {/* Bio */}\n              {provider.bio && (\n                <p className=\"text-gray-700 font-montserrat leading-relaxed\">\n                  {provider.bio}\n                </p>\n              )}\n\n              {/* Offerings */}\n              <div className=\"flex flex-wrap gap-2 sm:gap-4 mt-4\">\n                {provider.offers_services && (\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-[#E5F4F1] text-[#4A9A64] font-montserrat\">\n                    🛠️ Services\n                  </span>\n                )}\n                {provider.offers_products && (\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 font-montserrat\">\n                    🛍️ Products\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content Tabs */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8\">\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200 mb-6 sm:mb-8\">\n          <nav className=\"-mb-px flex space-x-4 sm:space-x-8 overflow-x-auto scrollbar-hide\">\n            {provider.offers_services && (\n              <button\n                onClick={() => setActiveTab('services')}\n                className={`py-2 px-1 font-medium text-sm font-montserrat whitespace-nowrap ${\n                  activeTab === 'services'\n                    ? 'text-[#5EB47C]'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Services ({services.length})\n              </button>\n            )}\n            {provider.offers_products && (\n              <button\n                onClick={() => setActiveTab('products')}\n                className={`py-2 px-1 font-medium text-sm font-montserrat whitespace-nowrap ${\n                  activeTab === 'products'\n                    ? 'text-[#5EB47C]'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Products ({products.length})\n              </button>\n            )}\n            <button\n              onClick={() => setActiveTab('about')}\n              className={`py-2 px-1 font-medium text-sm font-montserrat whitespace-nowrap ${\n                activeTab === 'about'\n                  ? 'text-[#5EB47C]'\n                  : 'text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              About\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'services' && provider.offers_services && (\n          <div>\n            <h2 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-4 sm:mb-6 font-montserrat\">\n              Book Services\n            </h2>\n            {services.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                  </svg>\n                </div>\n                <p className=\"text-gray-500 font-montserrat\">No services available at the moment.</p>\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                {/* Popular Packages */}\n                {packages.length > 0 && (\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4 font-montserrat\">\n                      📦 Popular Packages\n                    </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {packages.map((pkg) => (\n                      <div key={pkg.id} className=\"bg-gradient-to-r from-green-50 to-blue-50 rounded-2xl border-2 border-green-200 p-6\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div>\n                            <h4 className=\"font-bold text-gray-900 font-montserrat\">{pkg.name}</h4>\n                            <p className=\"text-sm text-gray-600 font-montserrat\">{pkg.description}</p>\n                          </div>\n                                                      <div className=\"text-right\">\n                            <p className=\"text-xl font-bold text-green-600 font-montserrat\">${pkg.package_price}</p>\n                            <p className=\"text-xs text-gray-500 line-through font-montserrat\">${pkg.original_price}</p>\n                            <p className=\"text-xs text-green-600 font-bold font-montserrat\">Save ${pkg.savings}!</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"mb-4\">\n                          <p className=\"text-sm font-medium text-gray-700 mb-2 font-montserrat\">Includes:</p>\n                          <ul className=\"text-sm text-gray-600 space-y-1 font-montserrat\">\n                            {pkg.service_ids?.map((serviceId, index) => {\n                              const service = services.find(s => s.id === serviceId);\n                              return service ? (\n                                <li key={index} className=\"flex items-center\">\n                                  <span className=\"text-green-500 mr-2\">✓</span>\n                                  {service.title}\n                                </li>\n                              ) : null;\n                            })}\n                          </ul>\n                        </div>\n                        \n                        <button \n                          onClick={() => {\n                            handlePackageSelect(pkg);\n                            setShowCustomBuilder(true);\n                          }}\n                          className=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-montserrat font-medium\"\n                        >\n                          Select Package\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                )}\n\n                {/* Custom Package Builder */}\n                <div>\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 font-montserrat\">\n                      🔧 Build Custom Package\n                    </h3>\n                    <button\n                      onClick={() => setShowCustomBuilder(!showCustomBuilder)}\n                      className=\"text-blue-600 hover:text-blue-700 font-medium font-montserrat\"\n                    >\n                      {showCustomBuilder ? 'Hide Builder' : 'Show Builder'}\n                    </button>\n                  </div>\n                  \n                  {showCustomBuilder && (\n                    <div className=\"bg-white rounded-2xl border border-gray-200 p-6\">\n                      <div className=\"grid grid-cols-1 gap-4 mb-6\">\n                        {services.map((service) => (\n                          <div key={service.id} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50\">\n                            <div className=\"flex items-center\">\n                              <input\n                                type=\"checkbox\"\n                                id={`service-${service.id}`}\n                                checked={selectedServices.includes(service.id)}\n                                onChange={() => handleServiceToggle(service.id)}\n                                className=\"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded\"\n                              />\n                              <label htmlFor={`service-${service.id}`} className=\"ml-3 flex-1\">\n                                <div className=\"font-medium text-gray-900 font-montserrat\">{service.title}</div>\n                                {service.description && (\n                                  <div className=\"text-sm text-gray-500 font-montserrat\">{service.description}</div>\n                                )}\n                              </label>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className=\"font-bold text-gray-900 font-montserrat\">${service.price}</div>\n                              {service.duration_minutes && (\n                                <div className=\"text-xs text-gray-500 font-montserrat\">{service.duration_minutes} min</div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      \n                      {selectedServices.length > 0 && (\n                        <div className=\"border-t border-gray-200 pt-4\">\n                          <div className=\"flex items-center justify-between mb-4\">\n                            <div>\n                              <p className=\"font-medium text-gray-900 font-montserrat\">\n                                {selectedServices.length} service{selectedServices.length !== 1 ? 's' : ''} selected\n                              </p>\n                              <p className=\"text-sm text-gray-500 font-montserrat\">\n                                Estimated time: {getSelectedDuration()} minutes\n                              </p>\n                            </div>\n                            <div className=\"text-right\">\n                              <p className=\"text-2xl font-bold text-gray-900 font-montserrat\">\n                                ${getSelectedTotal().toFixed(2)}\n                              </p>\n                            </div>\n                          </div>\n                          \n                          <button \n                            onClick={() => {\n                              // Handle booking multiple services\n                              const selectedServiceObjects = services.filter(s => selectedServices.includes(s.id));\n                              setSelectedService({ \n                                title: `${selectedServices.length} Services Package`,\n                                price: getSelectedTotal(),\n                                duration_minutes: getSelectedDuration(),\n                                services: selectedServiceObjects\n                              });\n                              setShowBookingModal(true);\n                            }}\n                            className=\"w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-montserrat font-medium\"\n                          >\n                            Book Selected Services\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'products' && provider.offers_products && (\n          <div>\n            <h2 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-4 sm:mb-6 font-montserrat\">\n              Products Available\n            </h2>\n            {products.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n                  </svg>\n                </div>\n                <p className=\"text-gray-500 font-montserrat\">No products available at the moment.</p>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n                {products.map((product) => (\n                  <div key={product.id} className=\"bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden\">\n                    <div className=\"aspect-w-1 aspect-h-1 bg-gradient-to-br from-primary-100 to-primary-200 h-48 rounded-t-2xl overflow-hidden\">\n                      {product.image_url ? (\n                        <img\n                          src={product.image_url}\n                          alt={product.name}\n                          className=\"w-full h-full object-cover border-0\"\n                        />\n                      ) : (\n                        <div className=\"w-full h-full flex items-center justify-center text-base\">\n                          📦\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"p-4 sm:p-6\">\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <h3 className=\"font-semibold text-gray-900 font-montserrat flex-1\">\n                          {product.name}\n                        </h3>\n                        <p className=\"text-lg font-bold text-gray-900 font-montserrat ml-2\">\n                          ${product.price}\n                        </p>\n                      </div>\n                      \n                      <div className=\"flex items-center gap-2 mb-3\">\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 font-montserrat\">\n                          {product.category}\n                        </span>\n                        {product.brand && (\n                          <span className=\"text-xs text-gray-500 font-montserrat\">\n                            {product.brand}\n                          </span>\n                        )}\n                      </div>\n\n                      {product.description && (\n                        <p className=\"text-sm text-gray-600 mb-4 font-montserrat line-clamp-2\">\n                          {product.description}\n                        </p>\n                      )}\n\n                      <div className=\"flex items-center justify-between\">\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium font-montserrat ${\n                          product.stock_quantity > 10 \n                            ? 'bg-green-100 text-green-800' \n                            : product.stock_quantity > 0 \n                            ? 'bg-yellow-100 text-yellow-800'\n                            : 'bg-red-100 text-red-800'\n                        }`}>\n                          {product.stock_quantity > 10 ? 'In Stock' : \n                           product.stock_quantity > 0 ? `${product.stock_quantity} left` : 'Out of Stock'}\n                        </span>\n                        \n                        <button \n                          disabled={product.stock_quantity === 0}\n                          className={`px-4 py-2 rounded-lg font-montserrat font-medium transition-colors ${\n                            product.stock_quantity > 0\n                              ? 'bg-[#5EB47C] text-white hover:bg-[#4A9A64]'\n                              : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                          }`}\n                        >\n                          Add to Cart\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'about' && (\n          <div>\n            <h2 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-4 sm:mb-6 font-montserrat\">\n              About {provider.business_name || provider.name}\n            </h2>\n            \n            <div className=\"bg-white rounded-2xl shadow-sm border border-gray-200 p-4 sm:p-6\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6\">\n                <div>\n                  <h3 className=\"font-medium text-gray-900 mb-3 font-montserrat\">Contact Information</h3>\n                  <div className=\"space-y-2 text-sm text-gray-600 font-montserrat\">\n                    {provider.email && (\n                      <p className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                        </svg>\n                        {provider.email}\n                      </p>\n                    )}\n                    {provider.phone && (\n                      <p className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                        </svg>\n                        {provider.phone}\n                      </p>\n                    )}\n                    {provider.address && (\n                      <p className=\"flex items-start\">\n                        <svg className=\"w-4 h-4 mr-2 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        </svg>\n                        {provider.address}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium text-gray-900 mb-3 font-montserrat\">Business Details</h3>\n                  <div className=\"space-y-2 text-sm text-gray-600 font-montserrat\">\n                    <p><span className=\"font-medium\">Type:</span> {provider.provider_type}</p>\n                    <p><span className=\"font-medium\">Verified:</span> {provider.verified ? 'Yes' : 'No'}</p>\n                    <p><span className=\"font-medium\">Member since:</span> {new Date(provider.created_at).toLocaleDateString()}</p>\n\n                  </div>\n                </div>\n              </div>\n\n              {provider.bio && (\n                <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                  <h3 className=\"font-medium text-gray-900 mb-3 font-montserrat\">About</h3>\n                  <p className=\"text-gray-700 font-montserrat leading-relaxed\">\n                    {provider.bio}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Consultation Booking Modal */}\n      {showBookingModal && selectedService && provider && (\n        <ConsultationBooking\n          service={selectedService}\n          provider={provider}\n          onClose={closeBookingModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ProviderDetail;"],"names":["getUserNotifications","userId","data","error","supabase","from","select","eq","order","ascending","limit","success","handleSupabaseError","createNotification","notificationData","insert","read","created_at","Date","toISOString","single","markAsRead","notificationId","update","markAllAsRead","deleteNotification","delete","getUnreadCount","count","head","_ref","_consultationTypes$fi","_urgencyLevels$find","service","provider","onClose","bookingData","setBookingData","useState","consultationType","preferredDate","preferredTime","petName","petAge","petSpecies","consultationReason","urgency","customerName","customerEmail","customerPhone","additionalNotes","loading","setLoading","setSuccess","setError","consultationTypeOpen","setConsultationTypeOpen","timeSlotOpen","setTimeSlotOpen","speciesOpen","setSpeciesOpen","urgencyOpen","setUrgencyOpen","consultationTypeRef","useRef","timeSlotRef","speciesRef","urgencyRef","consultationTypes","value","label","urgencyLevels","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleChange","e","name","_jsx","className","children","_jsxs","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","charAt","title","price","onSubmit","async","preventDefault","bookingResult","bookingError","service_id","id","provider_id","consultation_type","preferred_date","preferred_time","pet_name","pet_age","parseInt","pet_species","consultation_reason","customer_name","customer_email","customer_phone","additional_notes","status","total_amount","providerAvailability","notification_settings","bookingDataForNotification","pet_type","consultation_notes","duration","notificationService","sendBookingNotification","notificationError","setTimeout","ref","type","find","map","required","min","split","onChange","time","placeholder","max","species","index","rows","level","disabled","ProviderDetail","providerId","useParams","setProvider","services","setServices","products","setProducts","packages","setPackages","activeTab","setActiveTab","showBookingModal","setShowBookingModal","selectedService","setSelectedService","selectedServices","setSelectedServices","showCustomBuilder","setShowCustomBuilder","decodedProviderId","decodeURIComponent","providerEmail","includes","sampleListing","provider_email","console","allListingsData","listingsError","length","firstListing","rating","reviews_count","providerRating","reviews","provider_name","provider_type","providerData","email","phone","provider_phone","address","provider_address","city","provider_city","verified","profile_image_url","offers_services","offers_products","servicesData","filter","listing","listing_type","service_types","packagesData","productsData","mappedServices","listing_id","description","duration_minutes","service_type","location_type","mappedPackages","package_price","original_price","savings","is_active","active","mappedProducts","category","brand","stock_quantity","image_url","loadProviderData","getSelectedTotal","reduce","total","parseFloat","getSelectedDuration","getProviderTypeIcon","src","alt","business_name","fillRule","clipRule","country","Array","_","i","FavoriteButton","listingId","listingType","size","bio","pkg","_pkg$service_ids","service_ids","serviceId","s","checked","handleServiceToggle","prev","htmlFor","toFixed","selectedServiceObjects","product","toLocaleDateString","ConsultationBooking","closeBookingModal","Link","to"],"sourceRoot":""}