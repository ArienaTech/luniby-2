{"version":3,"file":"static/js/782.05250882.chunk.js","mappings":"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","sources":["components/QualificationForm.js","components/vet-nurse/SOAPNoteEditor.js","components/vet-nurse/CaseManager.js","components/VetNurseDashboard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { supabase } from '../lib/supabase.js';\nimport { useNotificationContext } from '../contexts/NotificationContext';\n\nconst QualificationForm = ({ \n  providerData, \n  onClose, \n  onSubmissionComplete \n}) => {\n  const { showInfo } = useNotificationContext();\n  const [formData, setFormData] = useState({\n    license_number: '',\n    qualification_type: '',\n    institution: '',\n    graduation_year: '',\n    experience_years: '',\n    specializations: '',\n    additional_notes: ''\n  });\n  const [submitting, setSubmitting] = useState(false);\n\n  const updateFormData = useCallback((field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      \n      // Insert qualification submission\n      const { data, error } = await supabase\n        .from('provider_qualifications')\n        .insert({\n          provider_id: user.id,\n          provider_email: providerData.email,\n          provider_name: providerData.name,\n          provider_type: providerData.provider_type,\n          license_number: formData.license_number || null,\n          qualification_type: formData.qualification_type,\n          institution: formData.institution,\n          graduation_year: parseInt(formData.graduation_year),\n          experience_years: parseInt(formData.experience_years),\n          specializations: formData.specializations || null,\n          additional_notes: formData.additional_notes || null,\n          status: 'pending',\n          submitted_at: new Date().toISOString()\n        })\n        .select();\n\n      if (error) {\n        showInfo('Failed to submit qualifications. Please try again.', 'error');\n        return;\n      }\n\n      showInfo('Qualifications submitted successfully! Admin will review within 2-3 business days.', 'success');\n      onSubmissionComplete(data[0]);\n      onClose();\n\n      // Send notification to admin\n      try {\n        const emailService = await import('../lib/email-service.js');\n        await emailService.default.sendAdminQualificationNotification({\n          provider_name: providerData.name,\n          provider_email: providerData.email,\n          provider_type: providerData.provider_type,\n          license_number: formData.license_number || 'Not provided',\n          qualification_type: formData.qualification_type,\n          institution: formData.institution,\n          experience_years: formData.experience_years,\n          submitted_at: new Date().toISOString()\n        });\n      } catch (emailError) {\n        // Failed to send admin notification\n      }\n\n    } catch (error) {\n      showInfo('Failed to submit qualifications. Please try again.', 'error');\n    } finally {\n      setSubmitting(false);\n    }\n  }, [formData, providerData, showInfo, onClose, onSubmissionComplete]);\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-8 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">Submit Your Qualifications</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n            type=\"button\"\n          >\n            ✕\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                License/Registration Number <span className=\"text-gray-500 font-normal\">(if applicable)</span>\n              </label>\n              <input\n                type=\"text\"\n                value={formData.license_number}\n                onChange={(e) => updateFormData('license_number', e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"e.g., WA: VN12345, VNCA: AVNAT123, or leave blank if not required in your state\"\n                autoComplete=\"off\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Qualification Type *\n              </label>\n              <select\n                required\n                value={formData.qualification_type}\n                onChange={(e) => updateFormData('qualification_type', e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              >\n                <option value=\"\">Select qualification</option>\n                <option value=\"Certificate IV in Veterinary Nursing\">Certificate IV in Veterinary Nursing</option>\n                <option value=\"Diploma of Veterinary Nursing\">Diploma of Veterinary Nursing</option>\n                <option value=\"Bachelor of Veterinary Science\">Bachelor of Veterinary Science</option>\n                <option value=\"Veterinary Nurse Registration\">Veterinary Nurse Registration</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Institution *\n              </label>\n              <input\n                type=\"text\"\n                required\n                value={formData.institution}\n                onChange={(e) => updateFormData('institution', e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"e.g., TAFE NSW, Massey University\"\n                autoComplete=\"off\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Graduation Year *\n              </label>\n              <input\n                type=\"number\"\n                required\n                min=\"1980\"\n                max={new Date().getFullYear()}\n                value={formData.graduation_year}\n                onChange={(e) => updateFormData('graduation_year', e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"2020\"\n                autoComplete=\"off\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Years of Experience *\n              </label>\n              <input\n                type=\"number\"\n                required\n                min=\"0\"\n                max=\"50\"\n                value={formData.experience_years}\n                onChange={(e) => updateFormData('experience_years', e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"3\"\n                autoComplete=\"off\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Specializations\n              </label>\n              <input\n                type=\"text\"\n                value={formData.specializations}\n                onChange={(e) => updateFormData('specializations', e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n                placeholder=\"e.g., Surgery, Emergency Care, Dental\"\n                autoComplete=\"off\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Additional Notes\n            </label>\n            <textarea\n              rows=\"4\"\n              value={formData.additional_notes}\n              onChange={(e) => updateFormData('additional_notes', e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#5EB47C] focus:border-transparent\"\n              placeholder=\"Any additional information about your qualifications, certifications, or experience...\"\n            />\n          </div>\n\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-blue-900 mb-2\">📋 Required Documents</h4>\n            <p className=\"text-sm text-blue-700\">\n              Please prepare digital copies of your license and certificates. \n              You can upload them after submitting this form or email them to hello@luniby.com \n              with your license number as reference.\n            </p>\n          </div>\n\n          <div className=\"flex justify-end space-x-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-6 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={submitting}\n              className=\"px-6 py-2 bg-[#5EB47C] text-white rounded-lg hover:bg-[#4A9A64] disabled:opacity-50\"\n            >\n              {submitting ? 'Submitting...' : 'Submit Qualifications'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default QualificationForm;","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../lib/supabase';\n\nconst SOAPNoteEditor = ({ caseId, existingNote, onSave, onCancel }) => {\n  const [noteData, setNoteData] = useState({\n    subjective: '',\n    objective: '',\n    assessment: '',\n    plan: '',\n    priority: 'moderate',\n    recommendations: '',\n    follow_up_required: false,\n    follow_up_date: ''\n  });\n  const [saving, setSaving] = useState(false);\n  const [isTriageCase, setIsTriageCase] = useState(false);\n\n  useEffect(() => {\n    // Check if this is a triage case\n    setIsTriageCase(caseId?.toString().startsWith('triage_'));\n    \n    // Load existing note data\n    if (existingNote) {\n      setNoteData({\n        subjective: existingNote.subjective || '',\n        objective: existingNote.objective || '',\n        assessment: existingNote.assessment || '',\n        plan: existingNote.plan || '',\n        priority: existingNote.priority || 'moderate',\n        recommendations: existingNote.recommendations || '',\n        follow_up_required: existingNote.follow_up_required || false,\n        follow_up_date: existingNote.follow_up_date || ''\n      });\n    }\n  }, [caseId, existingNote]);\n\n  const handleSave = async () => {\n    try {\n      setSaving(true);\n      \n      if (isTriageCase) {\n        // For triage cases, we might save to a different table or handle differently\n        console.log('Saving triage assessment:', noteData);\n        // This could update the consultation_booking status and add assessment notes\n        const bookingId = caseId.replace('triage_', '');\n        \n        const { error } = await supabase\n          .from('consultation_bookings')\n          .update({\n            status: 'assessed',\n            triage_notes: JSON.stringify(noteData),\n            priority: noteData.priority,\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', bookingId);\n\n        if (error) throw error;\n      } else {\n        // For regular cases, save to soap_notes table\n        const soapNoteData = {\n          case_id: caseId,\n          subjective: noteData.subjective,\n          objective: noteData.objective,\n          assessment: noteData.assessment,\n          plan: noteData.plan,\n          priority: noteData.priority,\n          recommendations: noteData.recommendations,\n          follow_up_required: noteData.follow_up_required,\n          follow_up_date: noteData.follow_up_date || null,\n          status: 'completed',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n\n        if (existingNote) {\n          const { error } = await supabase\n            .from('soap_notes')\n            .update(soapNoteData)\n            .eq('id', existingNote.id);\n          if (error) throw error;\n        } else {\n          const { error } = await supabase\n            .from('soap_notes')\n            .insert([soapNoteData]);\n          if (error) throw error;\n        }\n      }\n\n      onSave();\n    } catch (error) {\n      console.error('Error saving SOAP note:', error);\n      alert('Failed to save SOAP note. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n      <div className=\"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\">\n        <div className=\"mt-3\">\n          {/* Header */}\n          <div className=\"flex justify-between items-center mb-6\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              {isTriageCase ? 'LuniTriage Assessment' : 'SOAP Note Editor'}\n            </h3>\n            <button\n              onClick={onCancel}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* SOAP Form */}\n          <div className=\"space-y-6\">\n            {/* Priority Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Priority Level\n              </label>\n              <select\n                value={noteData.priority}\n                onChange={(e) => setNoteData(prev => ({ ...prev, priority: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"low\">Low Priority</option>\n                <option value=\"moderate\">Moderate Priority</option>\n                <option value=\"urgent\">Urgent</option>\n                <option value=\"emergency\">Emergency</option>\n              </select>\n            </div>\n\n            {/* Subjective */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Subjective (S) - Chief Complaint & History\n              </label>\n              <textarea\n                value={noteData.subjective}\n                onChange={(e) => setNoteData(prev => ({ ...prev, subjective: e.target.value }))}\n                rows=\"4\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"What the pet owner reports, symptoms observed, history...\"\n              />\n            </div>\n\n            {/* Objective */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Objective (O) - Physical Findings\n              </label>\n              <textarea\n                value={noteData.objective}\n                onChange={(e) => setNoteData(prev => ({ ...prev, objective: e.target.value }))}\n                rows=\"4\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Physical examination findings, vital signs, observable facts...\"\n              />\n            </div>\n\n            {/* Assessment */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Assessment (A) - Diagnosis & Analysis\n              </label>\n              <textarea\n                value={noteData.assessment}\n                onChange={(e) => setNoteData(prev => ({ ...prev, assessment: e.target.value }))}\n                rows=\"3\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Professional assessment, differential diagnosis, analysis...\"\n              />\n            </div>\n\n            {/* Plan */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Plan (P) - Treatment & Next Steps\n              </label>\n              <textarea\n                value={noteData.plan}\n                onChange={(e) => setNoteData(prev => ({ ...prev, plan: e.target.value }))}\n                rows=\"3\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Treatment plan, medications, procedures, monitoring...\"\n              />\n            </div>\n\n            {/* Recommendations */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Recommendations & Instructions\n              </label>\n              <textarea\n                value={noteData.recommendations}\n                onChange={(e) => setNoteData(prev => ({ ...prev, recommendations: e.target.value }))}\n                rows=\"3\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Home care instructions, when to return, warning signs...\"\n              />\n            </div>\n\n            {/* Follow-up */}\n            <div className=\"flex items-center space-x-4\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={noteData.follow_up_required}\n                  onChange={(e) => setNoteData(prev => ({ ...prev, follow_up_required: e.target.checked }))}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">Follow-up required</span>\n              </label>\n              \n              {noteData.follow_up_required && (\n                <div>\n                  <input\n                    type=\"date\"\n                    value={noteData.follow_up_date}\n                    onChange={(e) => setNoteData(prev => ({ ...prev, follow_up_date: e.target.value }))}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end space-x-3 mt-8 pt-6 border-t\">\n            <button\n              onClick={onCancel}\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSave}\n              disabled={saving}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50\"\n            >\n              {saving ? 'Saving...' : (isTriageCase ? 'Complete Assessment' : 'Save SOAP Note')}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SOAPNoteEditor;","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../lib/supabase';\nimport SOAPNoteEditor from './SOAPNoteEditor';\n\nconst CaseManager = ({ nurseId, initialFilter = 'all' }) => {\n  const [allCases, setAllCases] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCase, setSelectedCase] = useState(null);\n  const [showSOAPEditor, setShowSOAPEditor] = useState(false);\n  const [dbError, setDbError] = useState(null);\n  const [activeFilter, setActiveFilter] = useState(initialFilter);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('severity'); // Default sort by severity (most urgent first)\n\n  // LuniTriage severity levels (matching the AI system)\n  const SEVERITY_LEVELS = {\n    emergency: { \n      label: 'Emergency', \n      color: 'bg-red-100 text-red-800 border-red-200', \n      icon: '🚨', \n      priority: 4,\n      description: 'Immediate veterinary attention required'\n    },\n    serious: { \n      label: 'Serious', \n      color: 'bg-orange-100 text-orange-800 border-orange-200', \n      icon: '⚠️', \n      priority: 3,\n      description: 'Urgent veterinary care needed'\n    },\n    moderate: { \n      label: 'Moderate', \n      color: 'bg-yellow-100 text-yellow-800 border-yellow-200', \n      icon: '📋', \n      priority: 2,\n      description: 'Veterinary assessment recommended'\n    },\n    mild: { \n      label: 'Mild', \n      color: 'bg-green-100 text-green-800 border-green-200', \n      icon: '✅', \n      priority: 1,\n      description: 'Monitor and routine care'\n    },\n    pending: { \n      label: 'Pending Assessment', \n      color: 'bg-blue-100 text-blue-800 border-blue-200', \n      icon: '⏳', \n      priority: 0,\n      description: 'Awaiting triage assessment'\n    }\n  };\n\n  // Service type indicators\n  const SERVICE_TYPES = {\n    'LuniTriage SOAP Review': { icon: '📋', label: 'SOAP Review', color: 'bg-purple-100 text-purple-800' },\n    'LuniTriage Consultation': { icon: '💬', label: 'Consultation', color: 'bg-blue-100 text-blue-800' },\n    'Mobile Consultation': { icon: '🏠', label: 'Mobile Visit', color: 'bg-green-100 text-green-800' },\n    'Emergency Care': { icon: '🚨', label: 'Emergency', color: 'bg-red-100 text-red-800' },\n    'Health Check': { icon: '🩺', label: 'Health Check', color: 'bg-teal-100 text-teal-800' },\n    'Follow-up': { icon: '🔄', label: 'Follow-up', color: 'bg-gray-100 text-gray-800' }\n  };\n\n  // Filter options based on severity\n  const filterOptions = [\n    { id: 'all', name: 'All Cases', count: allCases.length },\n    { id: 'emergency', name: 'Emergency', count: allCases.filter(c => c.severity === 'emergency').length, color: 'text-red-600' },\n    { id: 'serious', name: 'Serious', count: allCases.filter(c => c.severity === 'serious').length, color: 'text-orange-600' },\n    { id: 'moderate', name: 'Moderate', count: allCases.filter(c => c.severity === 'moderate').length, color: 'text-yellow-600' },\n    { id: 'mild', name: 'Mild', count: allCases.filter(c => c.severity === 'mild').length, color: 'text-green-600' },\n    { id: 'pending', name: 'Pending Assessment', count: allCases.filter(c => c.severity === 'pending').length, color: 'text-blue-600' },\n    { id: 'assigned', name: 'My Cases', count: allCases.filter(c => c.assigned_nurse_id === nurseId).length, color: 'text-purple-600' }\n  ];\n\n  useEffect(() => {\n    if (initialFilter && initialFilter !== 'all') {\n      setActiveFilter(initialFilter);\n    }\n  }, [initialFilter]);\n\n  useEffect(() => {\n    loadAllCases();\n  }, [nurseId]);\n\n  const loadAllCases = async () => {\n    try {\n      setLoading(true);\n      setDbError(null);\n      \n      if (!nurseId) {\n        setLoading(false);\n        setAllCases([]);\n        return;\n      }\n\n      // Load all cases from multiple sources and unify them\n      const casesFromSources = await Promise.allSettled([\n        loadRegularCases(),\n        loadTriageBookings(),\n        loadConsultationBookings()\n      ]);\n\n      const allCasesData = [];\n      \n      // Process results from all sources\n      casesFromSources.forEach((result, index) => {\n        if (result.status === 'fulfilled' && result.value) {\n          allCasesData.push(...result.value);\n        }\n      });\n\n      // Sort by severity (Emergency -> Serious -> Moderate -> Mild -> Pending)\n      allCasesData.sort((a, b) => {\n        const severityA = SEVERITY_LEVELS[a.severity]?.priority || 0;\n        const severityB = SEVERITY_LEVELS[b.severity]?.priority || 0;\n        return severityB - severityA; // Highest priority first\n      });\n\n      setAllCases(allCasesData);\n    } catch (error) {\n      console.error('Error loading cases:', error);\n      setDbError('general_error');\n      setAllCases([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadRegularCases = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('cases')\n        .select(`\n          *,\n          customer:profiles!cases_customer_id_fkey(full_name, email),\n          soap_notes(id, status, created_at)\n        `)\n        .or(`assigned_nurse_id.eq.${nurseId},status.eq.new`);\n\n      if (error && !error.message?.includes('relation \"cases\" does not exist')) {\n        throw error;\n      }\n\n      return (data || []).map(case_item => ({\n        ...case_item,\n        source: 'cases',\n        service_type: case_item.case_type || 'General Case',\n        severity: case_item.priority || 'pending' // Map existing priority to severity\n      }));\n    } catch (error) {\n      console.error('Error loading regular cases:', error);\n      return [];\n    }\n  };\n\n  const loadTriageBookings = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('consultation_bookings')\n        .select(`\n          *,\n          marketplace_listings (name, service_types)\n        `)\n        .in('consultation_type', ['LuniTriage SOAP Review', 'LuniTriage Consultation'])\n        .in('status', ['pending', 'confirmed', 'in_progress']);\n\n      if (error) throw error;\n\n      return (data || []).map(booking => ({\n        id: `booking_${booking.id}`,\n        case_number: `LT-${booking.id}`,\n        title: `${booking.pet_name} - ${booking.consultation_type}`,\n        description: booking.consultation_reason || 'LuniTriage assessment required',\n        severity: booking.triage_priority || 'pending', // Use triage priority if available\n        status: booking.status === 'pending' ? 'pending_assessment' : booking.status,\n        pet_name: booking.pet_name,\n        customer_name: booking.customer_name,\n        customer_email: booking.customer_email,\n        service_type: booking.consultation_type,\n        created_at: booking.created_at,\n        updated_at: booking.updated_at,\n        source: 'triage_booking',\n        customer: {\n          full_name: booking.customer_name,\n          email: booking.customer_email\n        },\n        booking_data: {\n          appointment_date: booking.appointment_date,\n          appointment_time: booking.appointment_time,\n          booking_id: booking.id\n        }\n      }));\n    } catch (error) {\n      console.error('Error loading triage bookings:', error);\n      return [];\n    }\n  };\n\n  const loadConsultationBookings = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('consultation_bookings')\n        .select(`\n          *,\n          marketplace_listings (name, service_types)\n        `)\n        .not('consultation_type', 'in', ['LuniTriage SOAP Review', 'LuniTriage Consultation'])\n        .in('status', ['pending', 'confirmed', 'in_progress']);\n\n      if (error) throw error;\n\n      return (data || []).map(booking => ({\n        id: `consultation_${booking.id}`,\n        case_number: `CS-${booking.id}`,\n        title: `${booking.pet_name} - ${booking.consultation_type || 'Consultation'}`,\n        description: booking.consultation_reason || 'Consultation scheduled',\n        severity: 'moderate', // Default severity for regular consultations\n        status: booking.status,\n        pet_name: booking.pet_name,\n        customer_name: booking.customer_name,\n        customer_email: booking.customer_email,\n        service_type: booking.consultation_type || 'Consultation',\n        created_at: booking.created_at,\n        updated_at: booking.updated_at,\n        source: 'consultation_booking',\n        customer: {\n          full_name: booking.customer_name,\n          email: booking.customer_email\n        },\n        booking_data: {\n          appointment_date: booking.appointment_date,\n          appointment_time: booking.appointment_time,\n          booking_id: booking.id\n        }\n      }));\n    } catch (error) {\n      console.error('Error loading consultation bookings:', error);\n      return [];\n    }\n  };\n\n  const getSeverityBadge = (severity) => {\n    const config = SEVERITY_LEVELS[severity] || SEVERITY_LEVELS.pending;\n    return (\n      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${config.color}`}>\n        <span className=\"mr-1\">{config.icon}</span>\n        {config.label}\n      </span>\n    );\n  };\n\n  const getServiceTypeBadge = (serviceType) => {\n    const config = SERVICE_TYPES[serviceType] || { icon: '📄', label: serviceType, color: 'bg-gray-100 text-gray-800' };\n    return (\n      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${config.color}`}>\n        <span className=\"mr-1\">{config.icon}</span>\n        {config.label}\n      </span>\n    );\n  };\n\n  const getFilteredCases = () => {\n    let filtered = allCases;\n\n    // Apply severity filter\n    if (activeFilter !== 'all' && activeFilter !== 'assigned') {\n      filtered = filtered.filter(c => c.severity === activeFilter);\n    } else if (activeFilter === 'assigned') {\n      filtered = filtered.filter(c => c.assigned_nurse_id === nurseId);\n    }\n\n    // Apply search filter\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(c => \n        c.title?.toLowerCase().includes(searchLower) ||\n        c.description?.toLowerCase().includes(searchLower) ||\n        c.case_number?.toLowerCase().includes(searchLower) ||\n        c.pet_name?.toLowerCase().includes(searchLower) ||\n        c.customer_name?.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Apply sorting\n    if (sortBy === 'severity') {\n      filtered.sort((a, b) => {\n        const severityA = SEVERITY_LEVELS[a.severity]?.priority || 0;\n        const severityB = SEVERITY_LEVELS[b.severity]?.priority || 0;\n        return severityB - severityA;\n      });\n    } else if (sortBy === 'created_at') {\n      filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n    }\n\n    return filtered;\n  };\n\n  const handleCaseClick = (caseItem) => {\n    setSelectedCase(caseItem);\n    if (caseItem.source === 'triage_booking') {\n      // For triage cases, could open LuniTriage interface or SOAP editor\n      console.log('Opening triage case for assessment:', caseItem);\n    }\n    setShowSOAPEditor(true);\n  };\n\n  const handleUpdateSeverity = async (caseId, newSeverity) => {\n    try {\n      // Update severity based on case source\n      const caseItem = allCases.find(c => c.id === caseId);\n      if (!caseItem) return;\n\n      if (caseItem.source === 'triage_booking') {\n        const bookingId = caseItem.booking_data.booking_id;\n        const { error } = await supabase\n          .from('consultation_bookings')\n          .update({ \n            triage_priority: newSeverity,\n            status: 'assessed',\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', bookingId);\n        \n        if (error) throw error;\n      } else if (caseItem.source === 'cases') {\n        const { error } = await supabase\n          .from('cases')\n          .update({ \n            priority: newSeverity,\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', caseId);\n        \n        if (error) throw error;\n      }\n\n      // Update local state\n      setAllCases(prev => prev.map(c => \n        c.id === caseId ? { ...c, severity: newSeverity } : c\n      ));\n\n    } catch (error) {\n      console.error('Error updating severity:', error);\n    }\n  };\n\n  const getTimeAgo = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    \n    if (diffInMinutes < 60) {\n      return `${diffInMinutes}m ago`;\n    } else if (diffInMinutes < 1440) {\n      return `${Math.floor(diffInMinutes / 60)}h ago`;\n    } else {\n      return `${Math.floor(diffInMinutes / 1440)}d ago`;\n    }\n  };\n\n  const filteredCases = getFilteredCases();\n\n  // If database migration is needed, show setup message\n  if (dbError === 'migration_needed') {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center\">\n          <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-2xl\">⚙️</span>\n          </div>\n          <h3 className=\"text-lg font-medium text-yellow-800 mb-2\">Database Setup Required</h3>\n          <p className=\"text-yellow-700 mb-4\">\n            The case management system needs to be set up in your database. Please run the case management migration to enable this feature.\n          </p>\n          <div className=\"bg-yellow-100 border border-yellow-300 rounded p-3 text-left\">\n            <p className=\"text-sm font-medium text-yellow-800 mb-2\">Migration File:</p>\n            <code className=\"text-xs text-yellow-700 bg-yellow-200 px-2 py-1 rounded\">\n              database/migrations/011_case_management_system.sql\n            </code>\n          </div>\n          <button \n            onClick={loadAllCases}\n            className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-yellow-700 bg-yellow-100 hover:bg-yellow-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n          >\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // If general database error, show error message\n\n\n  if (dbError === 'general_error') {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 text-center\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-2xl\">❌</span>\n          </div>\n          <h3 className=\"text-lg font-medium text-red-800 mb-2\">Database Error</h3>\n          <p className=\"text-red-700 mb-4\">\n            There was an error connecting to the case management system. Please try again or contact support.\n          </p>\n          <button \n            onClick={loadAllCases}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n          >\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (showSOAPEditor && selectedCase) {\n    return (\n      <SOAPNoteEditor\n        caseId={selectedCase.id}\n        existingNote={selectedCase.soap_notes?.[0]}\n        onSave={() => {\n          setShowSOAPEditor(false);\n          setSelectedCase(null);\n          loadAllCases();\n        }}\n        onCancel={() => {\n          setShowSOAPEditor(false);\n          setSelectedCase(null);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h1 className=\"text-xl font-bold text-gray-900\">Cases</h1>\n            <p className=\"text-sm text-gray-700\">All cases with LuniTriage severity assessment</p>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <span className=\"text-sm text-gray-500\">\n              {filteredCases.length} case{filteredCases.length !== 1 ? 's' : ''}\n            </span>\n            <button className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\">\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              New Case\n            </button>\n          </div>\n        </div>\n\n\n\n        {/* Filters Row */}\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4 mt-4 w-full\">\n            {/* Search - Takes up more space */}\n            <div className=\"md:col-span-3\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Search\n              </label>\n              <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Search cases...\"\n              />\n            </div>\n\n            {/* Filter by Severity */}\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Filter by Severity\n              </label>\n              <select\n                value={activeFilter}\n                onChange={(e) => setActiveFilter(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                {filterOptions.map((option) => (\n                  <option key={option.id} value={option.id}>\n                    {option.name} ({option.count})\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Sort */}\n            <div className=\"md:col-span-1\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Sort By\n              </label>\n              <select\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"severity\">Severity (Most Urgent)</option>\n                <option value=\"created_at\">Newest First</option>\n                <option value=\"case_number\">Case Number</option>\n              </select>\n            </div>\n          </div>\n      </div>\n\n      {/* Cases List */}\n      {loading ? (\n        <div className=\"text-center py-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"text-gray-600 mt-4\">Loading cases...</p>\n        </div>\n      ) : filteredCases.length === 0 ? (\n        <div className=\"text-center py-12 bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-2xl\">📋</span>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No cases found</h3>\n          <p className=\"text-gray-600\">\n            {searchTerm || activeFilter !== 'all' || activeFilter !== 'assigned'\n              ? 'Try adjusting your filters to see more cases.'\n              : 'New cases will appear here when customers book consultations.'}\n          </p>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {filteredCases.map((caseItem) => (\n            <div \n              key={caseItem.id} \n              className={`bg-white rounded-lg shadow border-2 hover:shadow-lg transition-all cursor-pointer ${\n                caseItem.severity === 'emergency' ? 'border-red-300 bg-red-50' :\n                caseItem.severity === 'serious' ? 'border-orange-300 bg-orange-50' :\n                caseItem.severity === 'moderate' ? 'border-yellow-300 bg-yellow-50' :\n                caseItem.severity === 'mild' ? 'border-green-300 bg-green-50' :\n                'border-blue-300 bg-blue-50'\n              }`}\n              onClick={() => handleCaseClick(caseItem)}\n            >\n              <div className=\"p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <h3 className=\"text-lg font-medium text-gray-900\">\n                        {caseItem.title}\n                      </h3>\n                      <span className=\"text-sm font-mono text-gray-500\">\n                        #{caseItem.case_number}\n                      </span>\n                    </div>\n\n                    {/* Severity and Service Type Badges */}\n                    <div className=\"flex items-center space-x-2 mb-3\">\n                      {getSeverityBadge(caseItem.severity)}\n                      {getServiceTypeBadge(caseItem.service_type)}\n                    </div>\n                    \n                    <p className=\"text-gray-700 mb-4 line-clamp-2\">\n                      {caseItem.description}\n                    </p>\n                    \n                    <div className=\"flex items-center space-x-6 text-sm text-gray-600\">\n                      <div className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                        </svg>\n                        {caseItem.customer?.full_name || caseItem.customer_name || 'Unknown Customer'}\n                      </div>\n                      \n                      {/* Pet name */}\n                      {caseItem.pet_name && (\n                        <div className=\"flex items-center\">\n                          <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                          </svg>\n                          Pet: {caseItem.pet_name}\n                        </div>\n                      )}\n                      <div className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        {getTimeAgo(caseItem.created_at)}\n                      </div>\n                      {caseItem.due_date && (\n                        <div className=\"flex items-center\">\n                          <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                          </svg>\n                          Due: {new Date(caseItem.due_date).toLocaleDateString()}\n                        </div>\n                      )}\n                      {caseItem.soap_notes?.length > 0 && (\n                        <div className=\"flex items-center text-green-600\">\n                          <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                          </svg>\n                          SOAP Note Available\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Right side - Actions and Status */}\n                  <div className=\"flex flex-col items-end space-y-3 ml-6\">\n                    {/* Time stamp */}\n                    <div className=\"text-xs text-gray-500\">\n                      {getTimeAgo(caseItem.created_at)}\n                    </div>\n\n                    {/* Primary action button */}\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleCaseClick(caseItem);\n                      }}\n                      className={`inline-flex items-center px-4 py-2 rounded-lg text-sm font-medium text-white transition-colors ${\n                        caseItem.severity === 'emergency' ? 'bg-red-600 hover:bg-red-700' :\n                        caseItem.severity === 'serious' ? 'bg-orange-600 hover:bg-orange-700' :\n                        caseItem.severity === 'moderate' ? 'bg-yellow-600 hover:bg-yellow-700' :\n                        caseItem.severity === 'mild' ? 'bg-green-600 hover:bg-green-700' :\n                        'bg-blue-600 hover:bg-blue-700'\n                      }`}\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      {caseItem.severity === 'pending' ? 'Start Triage' : \n                       caseItem.source === 'triage_booking' ? 'Review' : \n                       'View Details'}\n                    </button>\n\n                    {/* Quick severity update for pending cases */}\n                    {caseItem.severity === 'pending' && (\n                      <select\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (e.target.value) {\n                            handleUpdateSeverity(caseItem.id, e.target.value);\n                          }\n                        }}\n                        className=\"text-xs px-2 py-1 border border-gray-300 rounded bg-white text-gray-700 focus:ring-2 focus:ring-blue-500\"\n                        defaultValue=\"\"\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Quick Assess</option>\n                        <option value=\"mild\">✅ Mild</option>\n                        <option value=\"moderate\">📋 Moderate</option>\n                        <option value=\"serious\">⚠️ Serious</option>\n                        <option value=\"emergency\">🚨 Emergency</option>\n                      </select>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseManager;","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase.js';\nimport { getUserSafely } from '../lib/supabase-utils.js';\nimport { useNotificationContext } from '../contexts/NotificationContext';\nimport QualificationForm from './QualificationForm';\nimport ProviderAvailability from './ProviderAvailability';\nimport StatsOverview from './dashboard/StatsOverview';\nimport MarketplaceSummary from './dashboard/MarketplaceSummary';\nimport MarketplaceManager from './dashboard/MarketplaceManager';\nimport CasesSummary from './dashboard/CasesSummary';\nimport ErrorBoundary from './common/ErrorBoundary';\nimport * as Sentry from '@sentry/react';\nimport { PROVIDER_TYPES } from '../constants/providerTypes';\nimport { getProviderConfig, getProviderLabels, getProviderNavigation, hasFeature } from '../config/providerConfig';\nimport CaseManager from './vet-nurse/CaseManager';\n\n// Renamed component to handle both veterinarians and veterinarians\nconst VeterinaryProviderDashboard = () => {\n  const { showInfo, showSuccess, showError } = useNotificationContext();\n  \n  // MVP Pricing Constants\n  const FREE_SERVICE_LIMIT = 5;\n  const FREE_PRODUCT_LIMIT = 5;\n  const FREE_PACKAGE_LIMIT = 3; // 3 packages for free users\n  const SERVICE_COMMISSION_RATE = 0.18; // 18%\n  const PRODUCT_COMMISSION_RATE = 0.10; // 10%\n  \n  // Monthly Listing Fees (Individual)\n  const SERVICE_MONTHLY_FEE = 1.99; // $1.99/month per additional service listing\n  const PRODUCT_MONTHLY_FEE = 1.49; // $1.49/month per additional product listing\n  const PACKAGE_MONTHLY_FEE = 2.49; // $2.49/month per additional package listing\n  \n  // Yearly Listing Fees (Individual - 2 months free = ~17% off)\n  const SERVICE_YEARLY_FEE = 19.90; // $19.90/year per service ($1.66/month equivalent)\n  const PRODUCT_YEARLY_FEE = 14.90; // $14.90/year per product ($1.24/month equivalent)\n  const PACKAGE_YEARLY_FEE = 24.90; // $24.90/year per package ($2.08/month equivalent)\n  \n  // Bundle Monthly Fees (Better Value)\n  const SERVICE_3_PACK_MONTHLY = 4.99;   // 3 services for $4.99/month ($1.66 each)\n  const SERVICE_5_PACK_MONTHLY = 7.99;   // 5 services for $7.99/month ($1.60 each)\n  const PRODUCT_3_PACK_MONTHLY = 3.99;   // 3 products for $3.99/month ($1.33 each)\n  const PRODUCT_5_PACK_MONTHLY = 5.99;   // 5 products for $5.99/month ($1.20 each)\n  const PACKAGE_3_PACK_MONTHLY = 6.99;   // 3 packages for $6.99/month ($2.33 each)\n  const PACKAGE_5_PACK_MONTHLY = 9.99;   // 5 packages for $9.99/month ($2.00 each)\n  \n  // Bundle Yearly Fees (Best Value - 2 months free = ~17% off)\n  const SERVICE_3_PACK_YEARLY = 49.90;   // 3 services for $49.90/year ($4.16/month equivalent)\n  const SERVICE_5_PACK_YEARLY = 79.90;   // 5 services for $79.90/year ($6.66/month equivalent)\n  const PRODUCT_3_PACK_YEARLY = 39.90;   // 3 products for $39.90/year ($3.33/month equivalent)\n  const PRODUCT_5_PACK_YEARLY = 59.90;   // 5 products for $59.90/year ($4.99/month equivalent)\n  const PACKAGE_3_PACK_YEARLY = 69.90;   // 3 packages for $69.90/year ($5.83/month equivalent)\n  const PACKAGE_5_PACK_YEARLY = 99.90;   // 5 packages for $99.90/year ($8.33/month equivalent) // $25/month\n\n  // Pricing helper functions\n  const getIndividualPrice = (type) => {\n    if (billingPeriod === 'yearly') {\n      return type === 'service' ? SERVICE_YEARLY_FEE : \n             type === 'product' ? PRODUCT_YEARLY_FEE : \n             PACKAGE_YEARLY_FEE;\n    }\n    return type === 'service' ? SERVICE_MONTHLY_FEE : \n           type === 'product' ? PRODUCT_MONTHLY_FEE : \n           PACKAGE_MONTHLY_FEE;\n  };\n\n  const get3PackPrice = (type) => {\n    if (billingPeriod === 'yearly') {\n      return type === 'service' ? SERVICE_3_PACK_YEARLY : \n             type === 'product' ? PRODUCT_3_PACK_YEARLY : \n             PACKAGE_3_PACK_YEARLY;\n    }\n    return type === 'service' ? SERVICE_3_PACK_MONTHLY : \n           type === 'product' ? PRODUCT_3_PACK_MONTHLY : \n           PACKAGE_3_PACK_MONTHLY;\n  };\n\n  const get5PackPrice = (type) => {\n    if (billingPeriod === 'yearly') {\n      return type === 'service' ? SERVICE_5_PACK_YEARLY : \n             type === 'product' ? PRODUCT_5_PACK_YEARLY : \n             PACKAGE_5_PACK_YEARLY;\n    }\n    return type === 'service' ? SERVICE_5_PACK_MONTHLY : \n           type === 'product' ? PRODUCT_5_PACK_MONTHLY : \n           PACKAGE_5_PACK_MONTHLY;\n  };\n\n  // Commission calculation functions\n  const calculateServiceCommission = (price) => {\n    return (parseFloat(price) * SERVICE_COMMISSION_RATE).toFixed(2);\n  };\n\n  const calculateProductCommission = (price) => {\n    return (parseFloat(price) * PRODUCT_COMMISSION_RATE).toFixed(2);\n  };\n\n  const getNetEarnings = (price, isProduct = false) => {\n    const commission = isProduct ? calculateProductCommission(price) : calculateServiceCommission(price);\n    return (parseFloat(price) - parseFloat(commission)).toFixed(2);\n  };\n\n  // Helper function to filter only services (exclude products and packages)\n  const getServicesOnly = (listings) => {\n    return listings.filter(listing => {\n      // Explicitly check for service type\n      return listing.listing_type === 'service' || \n             (listing.listing_type !== 'product' && \n              listing.listing_type !== 'package' && \n              (listing.service_types || listing.service_type) !== 'product' && \n              (listing.service_types || listing.service_type) !== 'package');\n    });\n  };\n\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [providerData, setProviderData] = useState(null);\n  const [listings, setListings] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [triageCases, setTriageCases] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [qualificationSubmission, setQualificationSubmission] = useState(null);\n  const [showQualificationForm, setShowQualificationForm] = useState(false);\n  const [showAvailabilityModal, setShowAvailabilityModal] = useState(false);\n  const [showCreateServiceModal, setShowCreateServiceModal] = useState(false);\n  const [showEditServiceModal, setShowEditServiceModal] = useState(false);\n\n  const [showPayPerListingModal, setShowPayPerListingModal] = useState(false);\n  const [payPerListingType, setPayPerListingType] = useState(null); // 'service', 'product', or 'package'\n  const [billingPeriod, setBillingPeriod] = useState('monthly'); // 'monthly' or 'yearly'\n  const [editingService, setEditingService] = useState(null);\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [showMessagesModal, setShowMessagesModal] = useState(false);\n  const [showAnalyticsModal, setShowAnalyticsModal] = useState(false);\n  const [packages, setPackages] = useState([]);\n  const [showPackageModal, setShowPackageModal] = useState(false);\n  const [showAddProductModal, setShowAddProductModal] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [editingPackage, setEditingPackage] = useState(null);\n  const [openDropdown, setOpenDropdown] = useState(null);\n  const [activeSection, setActiveSection] = useState('overview');\n  \n  // Veterinarian-specific state variables\n  const [patients, setPatients] = useState([]);\n  const [procedures, setProcedures] = useState([]);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [showProcedureModal, setShowProcedureModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [editingProcedure, setEditingProcedure] = useState(null);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  \n  // Profile form states\n  const [profileForm, setProfileForm] = useState({\n    fullName: '',\n    phone: '',\n    address: '',\n    description: '',\n    serviceAreas: '',\n    maxTravelDistance: '25',\n    yearsOfExperience: '',\n    profilePicture: ''\n  });\n  const [formInitialized, setFormInitialized] = useState(false);\n\n  // Product form states\n  const [productForm, setProductForm] = useState({\n    name: '',\n    description: '',\n    price: '',\n    category: 'Accessories', // Default to Accessories\n    brand: '',\n    stockQuantity: '',\n    photos: [],\n    specifications: ''\n  });\n\n  const [stats, setStats] = useState({\n    totalListings: 0,\n    activeBookings: 0,\n    totalBookings: 0,\n    totalEarnings: 0,\n    averageRating: 0,\n    triageCasesHandled: 0,\n    clientsHelped: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Dynamic provider labels based on provider type\n  // Use centralized provider configuration\n  const getProviderLabelsLocal = (providerType) => {\n    return getProviderLabels(providerType);\n  };\n\n  // Get current provider labels\n  const providerLabels = getProviderLabelsLocal(providerData?.provider_type);\n\n  // Migration function for localStorage packages to Supabase\n  const migrateLocalPackagesToSupabase = async (userId, localPackages) => {\n    try {\n      console.log('Migrating packages to Supabase...', localPackages);\n      \n      // Convert localStorage packages to Supabase format\n      const packagesToMigrate = localPackages.map(pkg => ({\n        provider_id: userId,\n        name: pkg.name,\n        description: pkg.description,\n        service_ids: pkg.service_ids || [],\n        original_price: pkg.original_price || 0,\n        package_price: pkg.package_price || 0,\n        savings: pkg.savings || 0,\n        is_active: pkg.is_active !== undefined ? pkg.is_active : true\n      }));\n\n      // Insert packages into Supabase\n      const { data, error } = await supabase\n        .from('packages')\n        .insert(packagesToMigrate)\n        .select();\n\n      if (error) {\n        console.error('Migration error:', error);\n        throw error;\n      }\n\n      // Clear localStorage after successful migration\n      localStorage.removeItem(`packages_${userId}`);\n      \n      // Update local state with migrated packages\n      setPackages(data || []);\n      \n      showSuccess(`Successfully migrated ${localPackages.length} packages to Supabase!`, 5000);\n      console.log('Migration successful:', data);\n      \n    } catch (error) {\n      console.error('Failed to migrate packages:', error);\n      showError('Failed to migrate packages to database. Using local storage for now.');\n    }\n  };\n\n  // Experience level categorization\n  const getExperienceLevel = (years, providerType) => {\n    // Note: Luniby only hires veterinarians with at least 1 year experience\n    if (!years || years === 0) return { level: 'Vet Professional', color: 'blue', description: 'Qualified professional' };\n    \n    if (providerType === 'veterinarian') {\n      if (years <= 3) return { level: 'Veterinarian', color: 'blue', description: 'Qualified veterinarian' };\n      if (years <= 7) return { level: 'Experienced Veterinarian', color: 'green', description: 'Experienced professional' };\n      if (years <= 12) return { level: 'Senior Veterinarian', color: 'purple', description: 'Highly experienced' };\n      return { level: 'Expert Veterinarian', color: 'gold', description: 'Expert level' };\n    } else {\n      // Veterinarian levels (minimum 1 year for Luniby hiring)\n      if (years <= 3) return { level: 'Veterinarian', color: 'blue', description: 'Qualified veterinarian' };\n      if (years <= 7) return { level: 'Experienced Veterinarian', color: 'green', description: 'Experienced professional' };\n      if (years <= 12) return { level: 'Senior Veterinarian', color: 'purple', description: 'Highly experienced' };\n      return { level: 'Expert Veterinarian', color: 'gold', description: 'Expert level' };\n    }\n  };\n\n  // Role-based service options\n  const getServiceOptions = (providerType) => {\n    const baseServices = [\n      { value: \"Mobile Consultation\", label: \"Mobile Consultation\" },\n      { value: \"Mobile Emergency Care\", label: \"Mobile Emergency Care\" }\n    ];\n    \n    if (providerType === 'veterinarian') {\n      return [\n        ...baseServices,\n        { value: \"Clinic Consultation\", label: \"Clinic Consultation\" },\n        { value: \"Surgery Services\", label: \"Surgery Services\" },\n        { value: \"Diagnostic Testing\", label: \"Diagnostic Testing\" },\n        { value: \"Preventive Care\", label: \"Preventive Care\" },\n        { value: \"Dental Care\", label: \"Dental Care\" },\n        { value: \"Orthopedic Care\", label: \"Orthopedic Care\" },\n        { value: \"Laboratory Services\", label: \"Laboratory Services\" },\n        { value: \"Telemedicine Consultation\", label: \"Telemedicine Consultation\" },\n        { value: \"Emergency Surgery\", label: \"Emergency Surgery\" },\n        { value: \"Specialist Referral\", label: \"Specialist Referral\" },\n        { value: \"Prescription Management\", label: \"Prescription Management\" },\n        { value: \"Vaccination Programs\", label: \"Vaccination Programs\" }\n      ];\n    }\n    \n    return [\n      ...baseServices,\n      { value: \"Mobile Health Check\", label: \"Mobile Health Check\" },\n      { value: \"Mobile Vaccination\", label: \"Mobile Vaccination\" },\n      { value: \"Mobile Nail Trimming\", label: \"Mobile Nail Trimming\" },\n      { value: \"Mobile Grooming\", label: \"Mobile Grooming\" },\n      { value: \"LuniTriage SOAP Review\", label: \"LuniTriage SOAP Review\" },\n      { value: \"LuniTriage Consultation\", label: \"LuniTriage Consultation\" }\n    ];\n    };\n\n  // Dynamic navigation sections based on provider type\n  // Use centralized navigation configuration\n  const getNavigationSectionsLocal = (providerType) => {\n    return getProviderNavigation(providerType);\n  };\n\n  useEffect(() => {\n    checkUserAndLoadData();\n  }, []);\n\n  // Reload products when navigating to marketplace section\n  useEffect(() => {\n    if (activeSection === 'marketplace') {\n      // Always check and reload products when entering marketplace to ensure fresh data\n      const lastReload = localStorage.getItem('lastProductsReload');\n      const now = Date.now();\n      \n      // Products are now loaded from marketplace_listings in checkUserAndLoadData\n      // No need for separate product loading\n    }\n  }, [activeSection]);\n\n  // Initialize form when profile or provider data first loads (but preserve user changes)\n  useEffect(() => {\n    if ((profile || providerData || user) && !formInitialized) {\n      // Prioritize the more complete name (providerData?.name is usually more complete)\n      const fullName = (providerData?.name && providerData.name.trim().split(' ').length > 1) \n        ? providerData.name \n        : (profile?.full_name || providerData?.name || user?.email?.split('@')[0] || 'User');\n\n      setProfileForm(prev => ({\n        ...prev,\n        fullName: fullName,\n        phone: providerData?.phone || '',\n        address: providerData?.address || '',\n        description: providerData?.description || '',\n        serviceAreas: providerData?.service_areas || 'Auckland',\n        maxTravelDistance: providerData?.max_travel_distance || '25',\n        profilePicture: providerData?.profile_picture || profile?.avatar_url || ''\n      }));\n      setFormInitialized(true);\n    }\n  }, [profile, providerData, user, formInitialized]);\n\n  // Update product form when editing\n  useEffect(() => {\n    if (editingProduct) {\n      setProductForm({\n        name: editingProduct.name || '',\n        description: editingProduct.description || '',\n        price: (editingProduct.price || 0).toString(),\n        category: editingProduct.category || 'Accessories',\n        brand: editingProduct.brand || '',\n        stockQuantity: (editingProduct.stockQuantity || editingProduct.stock_quantity || 0).toString(),\n        photos: editingProduct.photos || [],\n        specifications: editingProduct.specifications || ''\n      });\n    }\n  }, [editingProduct]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (openDropdown && !event.target.closest('.relative')) {\n        setOpenDropdown(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [openDropdown]);\n\n  // Check and create products table if needed\n  const ensureProductsTable = async () => {\n    try {\n      // First, try to query the products table to see if it exists\n      const { error: tableCheckError } = await supabase\n        .from('products')\n        .select('id')\n        .limit(1);\n\n      if (tableCheckError && tableCheckError.message.includes('does not exist')) {\n        alert('Products table needs to be created. Please check the console for SQL to run in Supabase.');\n        \n        // Provide SQL to create the table\n        const createTableSQL = `\n-- Create products table\nCREATE TABLE products (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  description TEXT,\n  price DECIMAL(10,2) NOT NULL,\n  category VARCHAR(100) NOT NULL,\n  subcategory VARCHAR(100),\n  brand VARCHAR(100),\n  stock_quantity INTEGER DEFAULT 0,\n  specifications TEXT,\n  image_url TEXT,\n  photos_data JSONB,\n  provider_id INTEGER REFERENCES providers(id) ON DELETE CASCADE,\n  is_active BOOLEAN DEFAULT true,\n  sku VARCHAR(100),\n  weight_kg DECIMAL(8,3),\n  dimensions VARCHAR(100),\n  age_group VARCHAR(50),\n  pet_type VARCHAR(50),\n  is_prescription BOOLEAN DEFAULT false,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Add indexes\nCREATE INDEX idx_products_provider_id ON products(provider_id);\nCREATE INDEX idx_products_category ON products(category);\nCREATE INDEX idx_products_is_active ON products(is_active);\n\n-- Enable RLS\nALTER TABLE products ENABLE ROW LEVEL SECURITY;\n\n-- Create policies\nCREATE POLICY \"Providers can manage their own products\" ON products\n  FOR ALL USING (provider_id IN (\n    SELECT id FROM providers WHERE email = auth.jwt() ->> 'email'\n  ));\n\nCREATE POLICY \"Anyone can view active products\" ON products\n  FOR SELECT USING (is_active = true);\n        `;\n        \n        return false;\n      } else {\n        \n        // Try to get a sample record to see what columns are available\n        const { data: sampleProduct } = await supabase\n          .from('products')\n          .select('*')\n          .limit(1);\n        \n        if (sampleProduct && sampleProduct.length > 0) {\n          // Products table has data, continue normally\n        } else {\n          // Try to insert a test record to see what constraints exist\n          const testCategories = ['food', 'treats', 'toys', 'accessories', 'health', 'grooming', 'medication', 'supplements', 'supplies', 'other'];\n          for (const category of testCategories) {\n            const { error: testError } = await supabase\n              .from('products')\n              .insert([{\n                name: 'TEST_PRODUCT_DELETE_ME',\n                description: 'Test product',\n                price: 1.00,\n                category: category,\n                provider_id: 1,\n                is_active: false\n              }]);\n            \n            if (!testError) {\n              // Delete the test record\n              await supabase\n                .from('products')\n                .delete()\n                .eq('name', 'TEST_PRODUCT_DELETE_ME');\n              break;\n            }\n          }\n        }\n      }\n      \n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  // Product management functions\n  const handleAddProduct = async () => {\n    const tableExists = await ensureProductsTable();\n    if (!tableExists) {\n      return;\n    }\n\n    if (!productForm.name || !productForm.price || !productForm.category || !productForm.stockQuantity) {\n      alert('Please fill in all required fields (name, price, category, stock quantity)');\n      return;\n    }\n\n    // Validate price\n    const price = parseFloat(productForm.price);\n    if (isNaN(price) || price < 0) {\n      alert('Please enter a valid price');\n      return;\n    }\n\n    // Validate stock quantity\n    const stock = parseInt(productForm.stockQuantity);\n    if (isNaN(stock) || stock < 0) {\n      alert('Please enter a valid stock quantity (0 or greater)');\n      return;\n    }\n\n    const photoDataSize = JSON.stringify(productForm.photos).length;\n    if (photoDataSize > 2000000) {\n      alert('Photos are too large. Please use smaller images or reduce the number of photos.');\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Check free tier limits (15 products for free users)\n      const currentProductCount = products.length;\n      const currentProviderData = providerData || profile || {};\n      // Default to free tier if no subscription plan is set\n      const subscriptionPlan = currentProviderData?.subscription_plan;\n      const isFreeTier = !subscriptionPlan || subscriptionPlan === 'free' || subscriptionPlan !== 'premium';\n\n      console.log('Product creation limit check:', {\n        currentProductCount,\n        FREE_PRODUCT_LIMIT,\n        isFreeTier,\n        editingProduct: !!editingProduct,\n        subscription_plan: currentProviderData?.subscription_plan\n      });\n\n      if (isFreeTier && currentProductCount >= FREE_PRODUCT_LIMIT && !editingProduct) {\n        setPayPerListingType('product');\n        setShowPayPerListingModal(true);\n        return;\n      }\n\n      // Use marketplace_listings instead of separate products table\n      const productData = {\n        listing_type: 'product',\n        listing_id: editingProduct ? (editingProduct.listing_id || editingProduct.id) : window.crypto?.randomUUID?.() || Math.random().toString(36),\n        name: productForm.name.trim(),\n        description: productForm.description.trim(),\n        price: price,\n        category: productForm.category || 'Accessories',\n        brand: productForm.brand.trim() || null,\n        stock_quantity: stock,\n        service_types: 'product',\n        provider_email: user.email,\n        provider_name: profile?.full_name || providerData?.name || user.email?.split('@')[0],\n        provider_type: profile?.provider_type || providerData?.provider_type || 'Vet Nurse',\n        active: true,\n        image_url: productForm.photos.length > 0 ? productForm.photos[0].url : null,\n        created_at: editingProduct ? undefined : new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      let savedProduct;\n      if (editingProduct) {\n        const { data, error } = await supabase\n          .from('marketplace_listings')\n          .update(productData)\n          .eq('listing_id', editingProduct.listing_id || editingProduct.id)\n          .eq('provider_email', user.email)\n          .select()\n          .single();\n\n        if (error) throw error;\n        savedProduct = data;\n      } else {\n        const { data, error } = await supabase\n          .from('marketplace_listings')\n          .insert([productData])\n          .select()\n          .single();\n\n        if (error) {\n          if (error.message.includes('check constraint') && error.message.includes('category')) {\n            const { data: existingProducts } = await supabase\n              .from('products')\n              .select('category')\n              .limit(50);\n            \n            if (existingProducts && existingProducts.length > 0) {\n              const uniqueCategories = [...new Set(existingProducts.map(p => p.category))];\n              alert(`Category constraint error. Allowed categories appear to be: ${uniqueCategories.join(', ')}`);\n            } else {\n              alert('Category constraint error. Please check the console and try a different category.');\n            }\n          }\n          throw error;\n        }\n        savedProduct = data;\n      }\n\n      // Check if product appears in marketplace_listings view\n      const { data: marketplaceCheck } = await supabase\n        .from('marketplace_listings')\n        .select('*')\n        .eq('listing_type', 'product')\n        .eq('listing_id', savedProduct.listing_id || savedProduct.id);\n\n      if (!marketplaceCheck || marketplaceCheck.length === 0) {\n        alert('Product saved but may not appear in public marketplace. The view might need to be updated.');\n      }\n\n      // Update local products state with the saved product\n      const newProduct = {\n        id: savedProduct.id,\n        name: savedProduct.name,\n        description: savedProduct.description,\n        price: savedProduct.price,\n        category: savedProduct.category,\n        brand: savedProduct.brand,\n        stockQuantity: savedProduct.stock_quantity,\n        photos: productForm.photos, // Keep the photo objects for display\n        specifications: productForm.specifications, // Keep form data since DB doesn't store this\n        createdAt: savedProduct.created_at,\n        updatedAt: savedProduct.updated_at,\n        type: 'product'\n      };\n\n      let updatedProducts;\n      if (editingProduct) {\n        updatedProducts = products.map(p => p.id === editingProduct.id ? newProduct : p);\n      } else {\n        updatedProducts = [...products, newProduct];\n      }\n\n      setProducts(updatedProducts);\n      \n      // Try to save to localStorage with error handling (for offline access)\n      try {\n        localStorage.setItem(`products_${user.id}`, JSON.stringify(updatedProducts));\n      } catch (storageError) {\n        // Don't throw error for localStorage issues since data is saved to database\n      }\n\n      // Refresh data to show updated product\n      checkUserAndLoadData();\n\n      // Reset form\n      setProductForm({\n        name: '',\n        description: '',\n        price: '',\n        category: 'Accessories',\n        brand: '',\n        stockQuantity: '',\n        photos: [],\n        specifications: ''\n      });\n      setShowAddProductModal(false);\n      setEditingProduct(null);\n\n    } catch (error) {\n      // Check if it's a localStorage size issue\n      if (error.name === 'QuotaExceededError' || error.message.includes('quota')) {\n        alert('Error: Product photos are too large. Please use smaller images or reduce the number of photos.');\n      } else if (error.message.includes('JSON')) {\n        alert('Error: Invalid product data. Please check your inputs and try again.');\n      } else {\n        alert(`Error saving product: ${error.message}. Please try again.`);\n      }\n    }\n  };\n\n  const handleDeleteProduct = async (productId, productName) => {\n    if (!window.confirm(`Are you sure you want to delete \"${productName}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Delete from marketplace_listings instead of products table\n      const { error } = await supabase\n        .from('marketplace_listings')\n        .delete()\n        .eq('listing_id', productId)\n        .eq('provider_email', user.email)\n        .eq('listing_type', 'product');\n\n      if (error) throw error;\n\n      // Update local state\n      const updatedProducts = products.filter(p => p.id !== productId);\n      setProducts(updatedProducts);\n      \n      // Update localStorage\n      try {\n        localStorage.setItem(`products_${user.id}`, JSON.stringify(updatedProducts));\n      } catch (storageError) {\n        // Don't throw error for localStorage issues\n      }\n\n      // Also remove from local listings state\n      const updatedListings = listings.filter(listing => listing.id !== `product_${productId}`);\n      setListings(updatedListings);\n\n    } catch (error) {\n      alert(`Error deleting product: ${error.message}. Please try again.`);\n    }\n  };\n\n  // Photo handling functions\n  const handlePhotoUpload = (event) => {\n    const files = Array.from(event.target.files);\n    const maxFiles = 4;\n    \n    if (productForm.photos.length + files.length > maxFiles) {\n      alert(`You can only upload up to ${maxFiles} photos`);\n      return;\n    }\n\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        // Check file size (10MB limit per file)\n        if (file.size > 10 * 1024 * 1024) {\n          alert(`File ${file.name} is too large. Please use images under 10MB.`);\n          return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          // Create an image to compress it\n          const img = new Image();\n          img.onload = () => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            \n            // Calculate new dimensions (max 800px width/height)\n            let { width, height } = img;\n            const maxDimension = 800;\n            \n            if (width > height) {\n              if (width > maxDimension) {\n                height = (height * maxDimension) / width;\n                width = maxDimension;\n              }\n            } else {\n              if (height > maxDimension) {\n                width = (width * maxDimension) / height;\n                height = maxDimension;\n              }\n            }\n            \n            canvas.width = width;\n            canvas.height = height;\n            \n            // Draw and compress\n            ctx.drawImage(img, 0, 0, width, height);\n            const compressedDataUrl = canvas.toDataURL('image/jpeg', 0.8);\n            \n            const newPhoto = {\n              id: Date.now() + Math.random(),\n              file: file,\n              url: compressedDataUrl,\n              name: file.name\n            };\n            \n            setProductForm(prev => ({\n              ...prev,\n              photos: [...prev.photos, newPhoto]\n            }));\n          };\n          img.src = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      } else {\n        alert('Please select only image files');\n      }\n    });\n  };\n\n  const removePhoto = (photoId) => {\n    setProductForm(prev => ({\n      ...prev,\n      photos: prev.photos.filter(photo => photo.id !== photoId)\n    }));\n  };\n\n\n\n  const checkUserAndLoadData = async () => {\n    try {\n      const user = await getUserSafely();\n      if (!user) {\n        navigate('/signin');\n        return;\n      }\n\n      // Set user state\n      setUser(user);\n\n      // Get user profile\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n\n\n      if (!profileData) {\n        console.log('VetNurseDashboard Debug - No profile data found');\n        navigate('/');\n        return;\n      }\n      \n      console.log('VetNurseDashboard Debug - Profile data:', profileData);\n      console.log('VetNurseDashboard Debug - Role:', profileData.role);\n      \n      if (profileData.role !== 'vet_nurse' && profileData.role !== 'veterinarian') {\n        console.log('VetNurseDashboard Debug - Wrong role, redirecting to home. Expected: vet_nurse or veterinarian, Got:', profileData.role);\n        navigate('/');\n        return;\n      }\n      \n      console.log('VetNurseDashboard Debug - Access granted for', profileData.role);\n\n      setProfile(profileData);\n\n      // Get provider data\n      const { data: provider, error: providerError } = await supabase\n        .from('providers')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n\n\n      setProviderData(provider);\n\n      // Populate profile form with existing data\n      \n      // Prioritize updated profile data over provider name\n      const fullName = profileData?.full_name || provider?.name || user?.email?.split('@')[0] || 'Unknown User';\n      \n      const formData = {\n        fullName: fullName,\n        phone: provider?.phone || '',\n        address: provider?.address || '',\n        description: provider?.description || '',\n        serviceAreas: provider?.service_areas || 'Auckland',\n        maxTravelDistance: provider?.max_travel_distance || '25',\n        yearsOfExperience: provider?.years_experience || '',\n        profilePicture: provider?.profile_picture || profileData?.avatar_url || ''\n              };\n        \n        setProfileForm(formData);\n\n      // Check if qualifications have been submitted\n      const { data: qualificationData } = await supabase\n        .from('provider_qualifications')\n        .select('*')\n        .eq('provider_id', user.id)\n        .single();\n\n      setQualificationSubmission(qualificationData);\n\n      // Load provider's listings from marketplace_listings (revert to working solution)\n      const { data: listingsData } = await supabase\n        .from('marketplace_listings')\n        .select('*')\n        .eq('provider_email', profileData.email)\n        .order('created_at', { ascending: false });\n\n      setListings(listingsData || []);\n\n      // Load packages from marketplace_listings (not separate packages table)\n      const packagesFromMarketplace = (listingsData || []).filter(listing => \n        listing.listing_type === 'package' || \n        listing.service_types === 'package' ||\n        (typeof listing.service_types === 'string' && listing.service_types.toLowerCase().includes('package'))\n      ).map(listing => ({\n        id: listing.listing_id,\n        name: listing.name,\n        description: listing.description,\n        service_ids: [], // Could be parsed from description or stored differently\n        original_price: listing.price * 1.2, // Assume 20% discount for display\n        package_price: listing.price,\n        savings: listing.price * 0.2, // 20% savings\n        is_active: listing.active !== false,\n        provider_id: listing.provider_id,\n        created_at: listing.created_at,\n        updated_at: listing.updated_at\n      }));\n      \n      setPackages(packagesFromMarketplace);\n\n      // Load products from marketplace_listings (not separate products table)\n      const productsFromMarketplace = (listingsData || []).filter(listing => \n        listing.listing_type === 'product' || listing.service_types === 'product'\n      ).map(listing => ({\n        id: listing.listing_id,\n        name: listing.name,\n        description: listing.description,\n        price: listing.price,\n        category: listing.category,\n        brand: listing.brand,\n        stockQuantity: listing.stock_quantity,\n        photos: listing.image_url ? [{ id: 1, url: listing.image_url, name: 'Product Image' }] : [],\n        specifications: '',\n        createdAt: listing.created_at,\n        updatedAt: listing.updated_at,\n        type: 'product'\n      }));\n      \n      setProducts(productsFromMarketplace);\n\n      // Load bookings for this provider\n      const { data: bookingsData } = await supabase\n        .from('consultation_bookings')\n        .select(`\n          *,\n          marketplace_listings (\n            name,\n            service_types\n          )\n        `)\n        .in('listing_id', (listingsData || []).map(l => l.listing_id))\n        .order('created_at', { ascending: false })\n        .limit(20);\n\n      setBookings(bookingsData || []);\n\n      // Load triage cases (for verified providers only)\n      let triageData = [];\n      if (provider?.verified) {\n        // Filter bookings for LuniTriage services\n        triageData = (bookingsData || []).filter(booking => {\n          const serviceType = booking.marketplace_listings?.service_types || booking.consultation_type;\n          return serviceType === 'LuniTriage SOAP Review' || serviceType === 'LuniTriage Consultation';\n        });\n        setTriageCases(triageData);\n      } else {\n        // No triage cases to show in demo mode\n        setTriageCases([]);\n      }\n\n      // Load patients and procedures for veterinarians\n      if (profileData.role === 'veterinarian') {\n        // Load patients\n        const { data: patientsData } = await supabase\n          .from('patients')\n          .select('*')\n          .eq('provider_id', user.id)\n          .order('created_at', { ascending: false });\n\n        setPatients(patientsData || []);\n\n        // Load procedures\n        const { data: proceduresData } = await supabase\n          .from('procedures')\n          .select('*')\n          .eq('provider_id', user.id)\n          .order('scheduled_date', { ascending: true });\n\n        setProcedures(proceduresData || []);\n      }\n\n      // Calculate stats\n      const activeBookings = (bookingsData || []).filter(b => \n        b.status === 'confirmed' || b.status === 'pending'\n      ).length;\n\n      // Check if provider is published (has record in providers table)\n      const { data: publishedProvider } = await supabase\n        .from('providers')\n        .select('id, verified')\n        .eq('id', user.id)\n        .single();\n\n      // Provider record will be created when first service is submitted\n\n      // Update provider data with published info\n      if (publishedProvider && providerData) {\n        setProviderData({\n          ...providerData,\n          verified: publishedProvider.verified\n        });\n      }\n\n      const averageRating = (listingsData || []).reduce((sum, listing) => \n        sum + (listing.rating || 0), 0\n      ) / Math.max((listingsData || []).length, 1);\n\n      setStats({\n        totalListings: (listingsData || []).length,\n        activeBookings,\n        totalBookings: (bookingsData || []).length,\n        totalEarnings: 0, // This would come from a payments table\n        averageRating: Math.round(averageRating * 10) / 10,\n        triageCasesHandled: provider?.verified ? triageData.length : 0,\n        clientsHelped: (bookingsData || []).filter(b => b.status === 'completed').length\n      });\n\n    } catch (error) {\n      Sentry.captureException(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n    const handleQualificationSubmissionComplete = useCallback((submission) => {\n    setQualificationSubmission(submission);\n  }, []);\n\n  // Add missing click handlers for dashboard buttons\n  const handleAddNewService = () => {\n    // Check limits before opening modal\n    const currentProviderData = providerData || profile || {};\n    const currentServiceCount = getServicesOnly(listings).length;\n    const subscriptionPlan = currentProviderData?.subscription_plan;\n    const isFreeTier = !subscriptionPlan || subscriptionPlan === 'free' || subscriptionPlan !== 'premium';\n    \n    console.log('Add New Service button limit check:', {\n      currentServiceCount,\n      FREE_SERVICE_LIMIT,\n      isFreeTier,\n      subscriptionPlan\n    });\n    \n    if (isFreeTier && currentServiceCount >= FREE_SERVICE_LIMIT) {\n      setPayPerListingType('service');\n      setShowPayPerListingModal(true);\n      return;\n    }\n    \n    // Open service creation modal\n    setShowCreateServiceModal(true);\n  };\n\n  const handleAddNewPackage = () => {\n    // Check limits before opening modal\n    const currentProviderData = providerData || profile || {};\n    const currentPackageCount = packages.length;\n    const subscriptionPlan = currentProviderData?.subscription_plan;\n    const isFreeTier = !subscriptionPlan || subscriptionPlan === 'free' || subscriptionPlan !== 'premium';\n    \n    console.log('Add New Package button limit check:', {\n      currentPackageCount,\n      FREE_PACKAGE_LIMIT,\n      isFreeTier,\n      subscriptionPlan\n    });\n    \n    if (isFreeTier && currentPackageCount >= FREE_PACKAGE_LIMIT) {\n      setPayPerListingType('package');\n      setShowPayPerListingModal(true);\n      return;\n    }\n    \n    // Open package creation modal\n    setShowPackageModal(true);\n  };\n\n  const handleEditListing = (listing) => {\n    // Open edit modal with listing data instead of navigating\n    setEditingService(listing);\n    setShowEditServiceModal(true);\n  };\n\n  const handleToggleListingStatus = async (listingId, currentStatus) => {\n    try {\n      const { error } = await supabase\n        .from('marketplace_listings')\n        .update({ active: !currentStatus })\n        .eq('listing_id', listingId);\n\n      if (error) throw error;\n\n      // Refresh listings\n      checkUserAndLoadData();\n      showSuccess(!currentStatus ? 'Service activated successfully' : 'Service deactivated successfully', 4000);\n    } catch (error) {\n      // Error updating listing status\n              showError('Failed to update service status');\n    }\n  };\n\n  const handleViewSchedule = () => {\n    // Show schedule modal instead of navigating\n    setShowScheduleModal(true);\n  };\n\n  const handleViewMessages = () => {\n    // Show messages modal instead of navigating\n    setShowMessagesModal(true);\n  };\n\n  const handleViewAnalytics = () => {\n    // Show analytics modal instead of navigating\n    setShowAnalyticsModal(true);\n  };\n\n  const handleManageAvailability = () => {\n    // Show availability modal instead of navigating\n    setShowAvailabilityModal(true);\n  };\n\n  // Go Live function - publishes provider profile to marketplace\n  const handleGoLive = async () => {\n    try {\n      const user = await getUserSafely();\n      if (!user) {\n        showInfo('User not authenticated', 'error');\n        return;\n      }\n\n      // Check if provider record exists\n      const { data: existingProvider } = await supabase\n        .from('providers')\n        .select('id, verified')\n        .eq('id', user.id)\n        .single();\n\n      if (existingProvider) {\n        // Update existing provider to be verified/live\n        const { error: updateError } = await supabase\n          .from('providers')\n          .update({ verified: true, is_active: true })\n          .eq('id', user.id);\n\n        if (updateError) throw updateError;\n        \n        showSuccess('🎉 Your profile is now live on the marketplace! You can view it using \"View My Listing\".', 5000);\n      } else {\n        // Create new provider record\n        const providerData = profile || {};\n        const newProviderData = {\n          id: user.id,\n          name: providerData?.full_name || user.email,\n          email: user.email,\n          phone: providerData?.phone || null,\n          provider_type: providerData?.provider_type || 'vet_nurse',\n          business_name: providerData?.business_name || null,\n          address: null,\n          city: 'Location TBD',\n          country: 'Australia',\n          bio: 'Professional veterinary nurse providing quality care for your pets. Experienced in various treatments and dedicated to animal welfare.',\n          offers_services: true,\n          offers_products: false,\n          verified: true, // Live on marketplace\n          is_active: true,\n          featured: false,\n          rating: 0.00,\n          reviews_count: 0,\n          profile_image_url: null,\n          service_types: ['Veterinary Nursing']\n        };\n\n        const { error: insertError } = await supabase.from('providers').insert(newProviderData);\n        if (insertError) throw insertError;\n\n        showSuccess('🎉 Your profile is now live on the marketplace! You can view it using \"View My Listing\".', 5000);\n      }\n\n      // Update all services to be verified/active\n      const { error: servicesError } = await supabase\n        .from('marketplace_listings')\n        .update({ verified: true, active: true })\n        .eq('provider_email', user.email);\n\n      if (servicesError) {\n        // Error updating services\n      }\n\n      // Reload data to reflect changes\n      checkUserAndLoadData();\n      \n    } catch (error) {\n      // Error going live\n      showInfo('Failed to go live: ' + error.message, 'error');\n    }\n  };\n\n  // Service creation handler\n  const handleCreateService = async (serviceData) => {\n    try {\n      \n      const user = await getUserSafely();\n      if (!user) {\n        throw new Error('User not authenticated');\n      }\n\n      // Get provider data first\n      const currentProviderData = providerData || profile || {};\n      \n      // Check free tier limits (5 services for free users)\n      const currentServiceCount = getServicesOnly(listings).length;\n      // Default to free tier if no subscription plan is set\n      const subscriptionPlan = currentProviderData?.subscription_plan;\n      const isFreeTier = !subscriptionPlan || subscriptionPlan === 'free' || subscriptionPlan !== 'premium';\n\n              console.log('Service creation limit check:', {\n          currentServiceCount,\n          FREE_SERVICE_LIMIT,\n          isFreeTier,\n          subscriptionPlan,\n          providerData: !!currentProviderData\n        });\n\n              if (isFreeTier && currentServiceCount >= FREE_SERVICE_LIMIT) {\n          showError(`Free tier limit reached! You can have up to ${FREE_SERVICE_LIMIT} services. Click \"Upgrade to Premium\" to get unlimited services.`);\n          return;\n        }\n      \n              const insertData = {\n        title: serviceData.title,\n        description: serviceData.description,\n        service_type: serviceData.service_type,\n        location: serviceData.location || 'Location TBD',\n        price_from: parseFloat(serviceData.price),\n        price_to: parseFloat(serviceData.price),\n        provider_name: currentProviderData?.full_name || user.email,\n        provider_type: currentProviderData?.role || 'vet_nurse',\n        provider_email: user.email,\n        provider_phone: currentProviderData?.phone || 'N/A',\n        active: true,\n        verified: false,\n        rating: 0.0,\n        reviews_count: 0\n      };\n\n\n\n      const { data, error } = await supabase\n        .from('marketplace_listings')\n        .insert(insertData)\n        .select();\n        \n      // Services created successfully - ready to go live!\n\n      if (error) {\n        throw new Error(`Database error: ${error.message} (Code: ${error.code})`);\n      }\n      showSuccess('Service created successfully!', 4000);\n      setShowCreateServiceModal(false);\n      checkUserAndLoadData(); // Refresh data\n    } catch (error) {\n      showInfo(`Failed to create service: ${error.message}`, 'error');\n    }\n  };\n\n  // Service editing handler\n  const handleDeletePackage = async (packageId, packageName) => {\n    if (!window.confirm(`Are you sure you want to delete \"${packageName}\" package? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Delete from Supabase\n      const { error } = await supabase\n        .from('packages')\n        .delete()\n        .eq('id', packageId)\n        .eq('provider_id', user.id);\n\n      if (error) throw error;\n\n      // Update local state\n      const updatedPackages = packages.filter(pkg => pkg.id !== packageId);\n      setPackages(updatedPackages);\n\n      showSuccess('Package deleted successfully!', 4000);\n      \n    } catch (error) {\n              showError(`Failed to delete package: ${error.message}`);\n    }\n  };\n\n  const handleDeleteService = async (serviceId, serviceTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${serviceTitle}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Debug: Check what ID we're trying to delete\n      console.log('Attempting to delete service with ID:', serviceId);\n      \n      // First, verify the service exists and belongs to the user\n      const { data: existingService, error: checkError } = await supabase\n        .from('marketplace_listings')\n        .select('listing_id, name, provider_email')\n        .eq('listing_id', serviceId)\n        .eq('provider_email', user.email);\n\n      if (checkError) throw checkError;\n\n      if (!existingService || existingService.length === 0) {\n        // Service not found, let's refresh the data and show current listings\n        console.log('Service not found, refreshing data...');\n        checkUserAndLoadData();\n        throw new Error(`Service not found. The listing may have been already deleted or the page data is outdated. Please refresh and try again.`);\n      }\n\n      // Now delete the service\n      const { data, error } = await supabase\n        .from('marketplace_listings')\n        .delete()\n        .eq('listing_id', serviceId)\n        .eq('provider_email', user.email)  // Extra security\n        .select();\n\n      if (error) throw error;\n\n      // Check if anything was actually deleted\n      if (!data || data.length === 0) {\n        throw new Error(`Service not found or you don't have permission to delete it (ID: ${serviceId})`);\n      }\n\n      // Immediately update local state\n      const updatedListings = listings.filter(listing => listing.listing_id !== serviceId);\n      setListings(updatedListings);\n\n      // Update stats immediately\n      setStats(prevStats => ({\n        ...prevStats,\n        totalListings: updatedListings.length\n      }));\n\n      showSuccess('Service deleted successfully!', 4000);\n      \n      // Refresh bookings and other dependent data (but not listings since we already updated them)\n      try {\n        const { data: bookingsData } = await supabase\n          .from('consultation_bookings')\n          .select(`\n            *,\n            marketplace_listings (\n              name,\n              service_types\n            )\n          `)\n                                             .in('listing_id', updatedListings.map(l => l.listing_id))\n          .order('created_at', { ascending: false })\n          .limit(20);\n\n        setBookings(bookingsData || []);\n      } catch (bookingError) {\n        // Don't fail the whole operation if booking refresh fails\n        console.warn('Failed to refresh bookings after service deletion:', bookingError);\n      }\n      \n    } catch (error) {\n      console.error('Delete service error:', error);\n      showError(`Failed to delete service: ${error.message}`);\n      \n      // If it's a \"not found\" error, refresh the data to show current state\n      if (error.message.includes('not found') || error.message.includes('outdated')) {\n        setTimeout(() => {\n          checkUserAndLoadData();\n        }, 2000);\n      }\n    }\n  };\n\n  const handleUpdateService = async (serviceData) => {\n    try {\n      \n      const updateData = {\n        title: serviceData.title,\n        description: serviceData.description,\n        service_type: serviceData.service_type,\n        location: serviceData.location || 'Location TBD',\n        price_from: parseFloat(serviceData.price),\n        price_to: parseFloat(serviceData.price),\n        updated_at: new Date().toISOString()\n      };\n      \n\n      \n      const { error } = await supabase\n        .from('marketplace_listings')\n        .update(updateData)\n        .eq('listing_id', editingService.listing_id || editingService.id);\n\n      if (error) {\n        throw new Error(`Database error: ${error.message} (Code: ${error.code})`);\n      }\n      showSuccess('Service updated successfully!', 4000);\n      setShowEditServiceModal(false);\n      setEditingService(null);\n      checkUserAndLoadData(); // Refresh data\n    } catch (error) {\n      showInfo(`Failed to update service: ${error.message}`, 'error');\n    }\n  };\n\n  \n\n\n\n  // View live listing\n  const handleViewListing = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        const listingUrl = `/provider/${user.id}`;\n        window.open(listingUrl, '_blank');\n      } else {\n        showInfo('Please log in to view your listing', 'error');\n      }\n    } catch (error) {\n      showInfo('Unable to open your listing. Please try again.', 'error');\n    }\n  };\n\n\n\n  // Service edit component\n  const ServiceEditForm = ({ service, onClose }) => {\n    const [serviceData, setServiceData] = useState({\n      title: service.name || service.title || '',\n      description: service.description || '',\n      price_from: service.price || service.price_from || '',\n      service_type: service.service_types || service.service_type || ''\n    });\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      \n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) throw new Error('User not authenticated');\n\n\n\n        const { data, error } = await supabase\n          .from('marketplace_listings')\n          .update({\n            name: serviceData.title,\n            description: serviceData.description,\n            price: parseFloat(serviceData.price_from),\n            service_types: serviceData.service_type,\n            updated_at: new Date().toISOString()\n          })\n          .eq('listing_id', service.listing_id || service.id)\n          .select();\n\n        if (error) throw error;\n\n\n        showSuccess('Service updated successfully!', 4000);\n        onClose();\n        checkUserAndLoadData(); // Refresh data\n        \n              } catch (error) {\n          showInfo(`Failed to update service: ${error.message}`, 'error');\n        }\n    };\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">Edit Service</h2>\n              <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600 text-2xl\">×</button>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Service Title *</label>\n              <input\n                type=\"text\"\n                required\n                value={serviceData.title}\n                onChange={(e) => setServiceData({...serviceData, title: e.target.value})}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g., Mobile Health Check\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Service Type *</label>\n              <select\n                required\n                value={serviceData.service_type}\n                onChange={(e) => setServiceData({...serviceData, service_type: e.target.value})}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select service type</option>\n                {getServiceOptions(providerData?.provider_type).map((service) => (\n                  <option key={service.value} value={service.value}>\n                    {service.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Price *\n                {serviceData.service_type?.includes('LuniTriage') && (\n                  <span className=\"text-sm text-blue-600 ml-2\">(Fixed pricing)</span>\n                )}\n              </label>\n              <input\n                type=\"number\"\n                required\n                min=\"0\"\n                step=\"0.01\"\n                value={serviceData.price_from}\n                onChange={(e) => setServiceData({...serviceData, price_from: e.target.value})}\n                disabled={serviceData.service_type?.includes('LuniTriage')}\n                className={`w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                  serviceData.service_type?.includes('LuniTriage') ? 'bg-gray-100' : ''\n                }`}\n                placeholder=\"50.00\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n              <textarea\n                value={serviceData.description}\n                onChange={(e) => setServiceData({...serviceData, description: e.target.value})}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows=\"3\"\n                placeholder=\"Describe your service...\"\n              />\n            </div>\n\n            <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm font-medium\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm font-medium\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n                Update Service\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  // Package creation component\n  const PackageForm = ({ isEdit = false, initialData = {}, onClose }) => {\n    const [packageData, setPackageData] = useState({\n      name: initialData.name || '',\n      description: initialData.description || '',\n      selectedServices: initialData.service_ids || [],\n      packagePrice: initialData.package_price || '',\n      isActive: initialData.is_active !== undefined ? initialData.is_active : true\n    });\n\n    const handleServiceToggle = (serviceId) => {\n      setPackageData(prev => ({\n        ...prev,\n        selectedServices: prev.selectedServices.includes(serviceId)\n          ? prev.selectedServices.filter(id => id !== serviceId)\n          : [...prev.selectedServices, serviceId]\n      }));\n    };\n\n    const getOriginalPrice = () => {\n      return getServicesOnly(listings)\n        .filter(service => packageData.selectedServices.includes(service.listing_id || service.id))\n        .reduce((total, service) => total + parseFloat(service.price || service.price_from || 0), 0);\n    };\n\n    const getSavings = () => {\n      const original = getOriginalPrice();\n      const packagePrice = parseFloat(packageData.packagePrice || 0);\n      return original - packagePrice;\n    };\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      \n      if (!isEdit && packageData.selectedServices.length < 2) {\n        showInfo('Please select at least 2 services for a package', 'error');\n        return;\n      }\n\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) throw new Error('User not authenticated');\n\n        // Check free tier limits (3 packages for free users)\n        const currentPackageCount = packages.length;\n        const currentProviderData = providerData || profile || {};\n        // Default to free tier if no subscription plan is set\n        const subscriptionPlan = currentProviderData?.subscription_plan;\n        const isFreeTier = !subscriptionPlan || subscriptionPlan === 'free' || subscriptionPlan !== 'premium';\n\n        console.log('Package creation limit check:', {\n          currentPackageCount,\n          FREE_PACKAGE_LIMIT,\n          isFreeTier,\n          isEdit,\n          subscription_plan: currentProviderData?.subscription_plan\n        });\n\n        // Note: For new packages, limit check is now done before opening modal (handleAddNewPackage)\n        // This check is kept only for edge cases or if someone bypasses the button handler\n\n        const packageInfo = {\n          listing_type: 'package',\n          listing_id: isEdit ? initialData.id : window.crypto?.randomUUID?.() || Math.random().toString(36),\n          name: packageData.name,\n          description: packageData.description,\n          price: parseFloat(packageData.packagePrice),\n          service_types: 'package',\n          provider_email: user.email,\n          provider_name: profile?.full_name || providerData?.name || user.email?.split('@')[0],\n          provider_type: profile?.provider_type || providerData?.provider_type || 'Vet Nurse',\n          active: packageData.isActive,\n          verified: false,\n          rating: 0.0,\n          reviews_count: 0,\n          created_at: isEdit ? undefined : new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n\n        // Save to marketplace_listings\n        let savedPackage;\n        if (isEdit) {\n          const { data, error } = await supabase\n            .from('marketplace_listings')\n            .update(packageInfo)\n            .eq('listing_id', initialData.id)\n            .eq('provider_email', user.email)\n            .select()\n            .single();\n\n          if (error) throw error;\n          savedPackage = data;\n        } else {\n          const { data, error } = await supabase\n            .from('marketplace_listings')\n            .insert([packageInfo])\n            .select()\n            .single();\n\n          if (error) throw error;\n          savedPackage = data;\n        }\n\n        // Refresh data to show updated packages\n        checkUserAndLoadData();\n\n        showSuccess(`Package ${isEdit ? 'updated' : 'created'} successfully!`, 4000);\n        onClose();\n        \n      } catch (error) {\n        showInfo('Failed to save package', 'error');\n      }\n    };\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                {isEdit ? 'Edit Package' : 'Create Package'}\n              </h2>\n              <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600 text-2xl\">×</button>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Package Name *</label>\n                <input\n                  type=\"text\"\n                  required\n                  value={packageData.name}\n                  onChange={(e) => setPackageData({...packageData, name: e.target.value})}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"e.g., Wellness Package\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Package Price *</label>\n                <input\n                  type=\"number\"\n                  required\n                  min=\"0\"\n                  step=\"0.01\"\n                  value={packageData.packagePrice}\n                  onChange={(e) => setPackageData({...packageData, packagePrice: e.target.value})}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"120.00\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n              <textarea\n                value={packageData.description}\n                onChange={(e) => setPackageData({...packageData, description: e.target.value})}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                rows=\"3\"\n                placeholder=\"Describe what's included in this package...\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-4\">Select Services *</label>\n              <div className=\"grid grid-cols-1 gap-3\">\n                {getServicesOnly(listings).map((service) => (\n                  <div key={service.listing_id || service.id} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50\">\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id={`package-service-${service.listing_id || service.id}`}\n                        checked={packageData.selectedServices.includes(service.listing_id || service.id)}\n                        onChange={() => handleServiceToggle(service.listing_id || service.id)}\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor={`package-service-${service.listing_id || service.id}`} className=\"ml-3 flex-1\">\n                        <div className=\"font-medium text-gray-900\">{service.name || service.title}</div>\n                        <div className=\"text-sm text-gray-500\">{service.description}</div>\n                      </label>\n                    </div>\n                    <div className=\"font-bold text-gray-900\">${service.price || service.price_from}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {packageData.selectedServices.length > 0 && (\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-900\">Package Summary</span>\n                </div>\n                <div className=\"space-y-1 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Original Price:</span>\n                    <span>${getOriginalPrice().toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Package Price:</span>\n                    <span>${parseFloat(packageData.packagePrice || 0).toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between font-bold text-green-600\">\n                    <span>Customer Saves:</span>\n                    <span>${getSavings().toFixed(2)}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"package-active\"\n                checked={packageData.isActive}\n                onChange={(e) => setPackageData({...packageData, isActive: e.target.checked})}\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"package-active\" className=\"ml-2 text-sm text-gray-700\">\n                Make this package available to customers\n              </label>\n            </div>\n\n            <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm font-medium\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={!isEdit && packageData.selectedServices.length < 2}\n                                  className={`inline-flex items-center px-4 py-2 rounded-lg text-white text-sm font-medium ${\n                    (isEdit || packageData.selectedServices.length >= 2)\n                      ? 'bg-blue-600 hover:bg-blue-700'\n                      : 'bg-gray-400 cursor-not-allowed'\n                  }`}\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n                {isEdit ? 'Update Package' : 'Create Package'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  // Quick service cards component\n  const QuickServiceCards = ({ onClose }) => {\n    const [selectedServices, setSelectedServices] = useState([]);\n    const [customPrices, setCustomPrices] = useState({});\n\n    // Role-based available services\n    const getAvailableServices = (providerType) => {\n      const baseServices = [\n        {\n          id: 'consultation',\n          title: 'Mobile Consultation',\n          description: 'Professional consultation at your location',\n          defaultPrice: providerType === 'veterinarian' ? 120.00 : 75.00,\n          category: 'Mobile Consultation',\n          icon: '🩺',\n          preset: false\n        },\n        {\n          id: 'emergency',\n          title: 'Mobile Emergency Care',\n          description: 'Emergency care service at your location',\n          defaultPrice: providerType === 'veterinarian' ? 200.00 : 150.00,\n          category: 'Mobile Emergency Care',\n          icon: '🚨',\n          preset: false\n        }\n      ];\n\n      if (providerType === 'veterinarian') {\n        return [\n          ...baseServices,\n          {\n            id: 'clinicConsult',\n            title: 'Clinic Consultation',\n            description: 'In-clinic veterinary consultation',\n            defaultPrice: 80.00,\n            category: 'Clinic Consultation',\n            icon: '🏥',\n            preset: false\n          },\n          {\n            id: 'surgery',\n            title: 'Surgery Services',\n            description: 'Surgical procedures and operations',\n            defaultPrice: 300.00,\n            category: 'Surgery Services',\n            icon: '⚕️',\n            preset: false\n          },\n          {\n            id: 'diagnostic',\n            title: 'Diagnostic Testing',\n            description: 'Laboratory tests and diagnostic procedures',\n            defaultPrice: 150.00,\n            category: 'Diagnostic Testing',\n            icon: '🔬',\n            preset: false\n          },\n          {\n            id: 'preventive',\n            title: 'Preventive Care',\n            description: 'Wellness exams and preventive treatments',\n            defaultPrice: 100.00,\n            category: 'Preventive Care',\n            icon: '🛡️',\n            preset: false\n          }\n        ];\n      }\n\n      return [\n        ...baseServices,\n        {\n          id: 'lunisoap',\n          title: 'LuniTriage SOAP Review',\n          description: 'Professional assessment of SOAP notes within 2 hours',\n          defaultPrice: 4.99,\n          category: 'LuniTriage SOAP Review',\n          icon: '📋',\n          preset: true\n        },\n        {\n          id: 'luniconsult', \n          title: 'LuniTriage Consultation',\n          description: '15-minute consultation to assess if vet visit needed',\n          defaultPrice: 14.99,\n          category: 'LuniTriage Consultation', \n          icon: '💬',\n          preset: true\n        },\n        {\n          id: 'nailtrim',\n          title: 'Mobile Nail Trimming',\n          description: 'Professional nail trimming service at your location',\n          defaultPrice: 50.00,\n          category: 'Mobile Nail Trimming',\n          icon: '✂️',\n          preset: false\n        },\n        {\n          id: 'healthcheck',\n          title: 'Mobile Health Check',\n          description: 'Comprehensive health assessment at your home',\n          defaultPrice: 75.00,\n          category: 'Mobile Health Check',\n          icon: '🏥',\n          preset: false\n        },\n        {\n          id: 'vaccination',\n          title: 'Mobile Vaccination',\n          description: 'Vaccination service at your location',\n          defaultPrice: 60.00,\n          category: 'Mobile Vaccination',\n          icon: '💉',\n          preset: false\n        }\n      ];\n    };\n\n    const availableServices = getAvailableServices(providerData?.provider_type);\n\n    const handleServiceToggle = (service) => {\n      if (selectedServices.find(s => s.id === service.id)) {\n        setSelectedServices(selectedServices.filter(s => s.id !== service.id));\n        const newPrices = { ...customPrices };\n        delete newPrices[service.id];\n        setCustomPrices(newPrices);\n      } else {\n        setSelectedServices([...selectedServices, service]);\n        setCustomPrices({\n          ...customPrices,\n          [service.id]: service.defaultPrice\n        });\n      }\n    };\n\n    const handlePriceChange = (serviceId, price) => {\n      setCustomPrices({\n        ...customPrices,\n        [serviceId]: parseFloat(price) || 0\n      });\n    };\n\n    const handleSubmitServices = async () => {\n      if (selectedServices.length === 0) {\n        showInfo('Please select at least one service', 'error');\n        return;\n      }\n\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) throw new Error('User not authenticated');\n\n        // Check free tier limits BEFORE creating services\n        const currentProviderData = providerData || profile || {};\n        const currentServiceCount = getServicesOnly(listings).length;\n        const subscriptionPlan = currentProviderData?.subscription_plan;\n        const isFreeTier = !subscriptionPlan || subscriptionPlan === 'free' || subscriptionPlan !== 'premium';\n        \n        console.log('Bulk service creation limit check:', {\n          currentServiceCount,\n          selectedServicesCount: selectedServices.length,\n          totalAfterCreation: currentServiceCount + selectedServices.length,\n          FREE_SERVICE_LIMIT,\n          isFreeTier,\n          subscriptionPlan\n        });\n\n        if (isFreeTier && (currentServiceCount + selectedServices.length) > FREE_SERVICE_LIMIT) {\n          setPayPerListingType('service');\n          setShowPayPerListingModal(true);\n          return;\n        }\n\n        const currentProviderDataForInsert = profile || {};\n        \n        // Create all selected services\n        const servicePromises = selectedServices.map(service => {\n          const insertData = {\n            listing_type: 'service',\n            listing_id: window.crypto?.randomUUID?.() || Math.random().toString(36),\n            name: service.title,\n            description: service.description,\n            service_types: service.category,\n            price: customPrices[service.id] || service.defaultPrice,\n            provider_name: currentProviderDataForInsert?.full_name || user.email,\n            provider_type: currentProviderDataForInsert?.provider_type || 'vet_nurse',\n            provider_email: user.email,\n            provider_phone: currentProviderDataForInsert?.phone || 'N/A',\n            active: true,\n            verified: false, // Will be set to true when going live\n            rating: 0.0,\n            reviews_count: 0,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          };\n\n          return supabase.from('marketplace_listings').insert(insertData).select();\n        });\n\n        const results = await Promise.all(servicePromises);\n        const errors = results.filter(r => r.error);\n        \n        if (errors.length > 0) {\n          throw new Error(`Failed to create ${errors.length} services`);\n        }\n\n        showSuccess(`✅ ${selectedServices.length} services created! Ready to go live.`, 4000);\n        onClose();\n        checkUserAndLoadData(); // Reload data\n        \n      } catch (error) {\n        showInfo('Failed to create services: ' + error.message, 'error');\n      }\n    };\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">Add Services</h2>\n              <button\n                onClick={onClose}\n                className=\"text-gray-400 hover:text-gray-600 text-2xl\"\n              >\n                ×\n              </button>\n            </div>\n            <p className=\"text-gray-600 mt-2\">Select services you want to offer and set your prices</p>\n          </div>\n\n          <div className=\"p-6\">\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              {availableServices.map(service => {\n                const isSelected = selectedServices.find(s => s.id === service.id);\n                const currentPrice = customPrices[service.id] || service.defaultPrice;\n                \n                return (\n                  <div \n                    key={service.id}\n                    className={`border-2 rounded-xl p-4 cursor-pointer transition-all ${\n                      isSelected \n                        ? 'border-blue-500 bg-blue-50' \n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                    onClick={() => handleServiceToggle(service)}\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center mb-2\">\n                          <span className=\"text-2xl mr-3\">{service.icon}</span>\n                          <h3 className=\"font-semibold text-gray-900\">{service.title}</h3>\n                          {service.preset && (\n                            <span className=\"ml-2 bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full\">\n                              LuniTriage\n                            </span>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-3\">{service.description}</p>\n                        \n                        {isSelected && (\n                          <div className=\"flex items-center space-x-2\">\n                            <label className=\"text-sm font-medium text-gray-700\">Price:</label>\n                            <div className=\"flex items-center\">\n                              <span className=\"text-gray-500 mr-1\">$</span>\n                              <input\n                                type=\"number\"\n                                step=\"0.01\"\n                                min=\"0\"\n                                value={currentPrice}\n                                onChange={(e) => handlePriceChange(service.id, e.target.value)}\n                                onClick={(e) => e.stopPropagation()}\n                                className={`w-20 px-2 py-1 border border-gray-300 rounded text-sm ${\n                                  service.preset ? 'bg-gray-100 cursor-not-allowed' : ''\n                                }`}\n                                disabled={service.preset}\n                              />\n                            </div>\n                            {service.preset && (\n                              <span className=\"text-xs text-gray-500\">Fixed price</span>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                      \n                      <div className={`w-6 h-6 rounded-full border-2 flex items-center justify-center ${\n                        isSelected \n                          ? 'border-blue-500 bg-blue-500' \n                          : 'border-gray-300'\n                      }`}>\n                        {isSelected && <span className=\"text-white text-sm\">✓</span>}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            <div className=\"flex justify-end space-x-3 mt-6 pt-6 border-t border-gray-200\">\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 text-sm font-medium\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSubmitServices}\n                disabled={selectedServices.length === 0}\n                className={`inline-flex items-center px-4 py-2 rounded-lg text-white text-sm font-medium ${\n                  selectedServices.length > 0\n                    ? 'bg-blue-600 hover:bg-blue-700'\n                    : 'bg-gray-400 cursor-not-allowed'\n                }`}\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add {selectedServices.length} Service{selectedServices.length !== 1 ? 's' : ''}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'confirmed': return 'bg-green-100 text-green-800';\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\n      case 'cancelled': return 'bg-red-100 text-red-800';\n      case 'completed': return 'bg-[#E5F4F1] text-[#4A9A64]';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  \n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 font-montserrat\">Loading vet nurse dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Sidebar navigation items\n  const handleSaveProfile = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        showInfo('User not authenticated', 'error');\n        return;\n      }\n\n      // Update providers table (note: name/full_name and years_experience are not updated as they are verified)\n      // Only update fields that are commonly available in the providers table\n      const updateData = {};\n      \n      if (profileForm.phone) updateData.phone = profileForm.phone;\n      if (profileForm.address) updateData.address = profileForm.address;\n      if (profileForm.description) updateData.description = profileForm.description;\n      \n      // Try to update additional fields that might exist\n      if (profileForm.serviceAreas) updateData.service_areas = profileForm.serviceAreas;\n      if (profileForm.maxTravelDistance) updateData.max_travel_distance = profileForm.maxTravelDistance;\n      if (profileForm.profilePicture) updateData.profile_picture = profileForm.profilePicture;\n      \n      // First check if provider record exists\n      const { data: existingProvider, error: checkError } = await supabase\n        .from('providers')\n        .select('id')\n        .eq('id', user.id)\n        .single();\n        \n      if (checkError || !existingProvider) {\n        showInfo('Provider record not found. Please complete your provider registration first.', 'error');\n        return;\n      }\n      \n      const { error: providerError } = await supabase\n        .from('providers')\n        .update(updateData)\n        .eq('id', user.id);\n\n      if (providerError) {\n        // If the error is due to missing columns, try with just the basic fields\n        if (providerError.message && providerError.message.includes('column')) {\n          const basicUpdateData = {};\n          if (profileForm.phone) basicUpdateData.phone = profileForm.phone;\n          if (profileForm.address) basicUpdateData.address = profileForm.address;\n          if (profileForm.description) basicUpdateData.description = profileForm.description;\n          \n          const { error: basicProviderError } = await supabase\n            .from('providers')\n            .update(basicUpdateData)\n            .eq('id', user.id);\n            \n          if (basicProviderError) {\n            showInfo(`Failed to update provider information: ${basicProviderError.message}`, 'error');\n            return;\n          }\n        } else {\n          showInfo(`Failed to update provider information: ${providerError.message}`, 'error');\n          return;\n        }\n      }\n\n      // Also update the profiles table for user profile data\n      const profileUpdateData = {};\n      if (profileForm.fullName) profileUpdateData.full_name = profileForm.fullName;\n      if (profileForm.phone) profileUpdateData.phone = profileForm.phone;\n      \n      if (Object.keys(profileUpdateData).length > 0) {\n        const { error: profileUpdateError } = await supabase\n          .from('profiles')\n          .update(profileUpdateData)\n          .eq('id', user.id);\n          \n        if (profileUpdateError) {\n          showInfo(`Warning: Provider updated but profile update failed: ${profileUpdateError.message}`, 'warning');\n        }\n      }\n\n      // Small delay to ensure database writes are committed\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Reset form initialization flag so it can be repopulated with fresh data\n      setFormInitialized(false);\n      \n      // Refresh data\n      await checkUserAndLoadData();\n      \n      showSuccess('Profile updated successfully!', 4000);\n\n    } catch (error) {\n      showInfo('Failed to save profile changes', 'error');\n    }\n  };\n\n  const handleProfilePictureChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Validate file type\n    if (!file.type.startsWith('image/')) {\n      showInfo('Please select an image file', 'error');\n      return;\n    }\n\n    // Validate file size (max 5MB)\n    if (file.size > 5 * 1024 * 1024) {\n      showInfo('Image must be smaller than 5MB', 'error');\n      return;\n    }\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        showInfo('User not authenticated', 'error');\n        return;\n      }\n\n      // Create a unique filename\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${user.id}-profile.${fileExt}`;\n\n      // Upload to Supabase Storage\n      const { data, error } = await supabase.storage\n        .from('profile-pictures')\n        .upload(fileName, file, {\n          upsert: true // Replace if exists\n        });\n\n      if (error) {\n        // Upload error occurred\n        showInfo('Failed to upload image', 'error');\n        return;\n      }\n\n      // Get the public URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('profile-pictures')\n        .getPublicUrl(fileName);\n\n      // Update the form state\n      setProfileForm(prev => ({ ...prev, profilePicture: publicUrl }));\n      \n      showInfo('Profile picture uploaded successfully!', 'success');\n\n    } catch (error) {\n      // Error uploading profile picture\n      showInfo('Failed to upload profile picture', 'error');\n    }\n  };\n\n  // Get dynamic sidebar items based on provider type\n  const sidebarItems = getNavigationSectionsLocal(providerData?.provider_type);\n\n\n\n  // Render functions for each section\n  const renderOverviewSection = () => (\n    <div className=\"space-y-6\">\n      {/* Header with quick actions */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"lg:block hidden\">\n            <p className=\"text-xl font-bold text-gray-900\">Welcome back, {profile?.full_name || 'Vet Nurse'}</p>\n          </div>\n          <button\n            onClick={() => setShowAvailabilityModal(true)}\n            className=\"hidden lg:flex px-3 sm:px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors items-center text-sm sm:text-base\"\n          >\n            <span className=\"hidden sm:inline\">Manage Schedule</span>\n            <span className=\"sm:hidden\">Schedule</span>\n          </button>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-green-600 text-sm font-medium\">Total Cases</p>\n                <p className=\"text-2xl font-bold text-green-900\">{triageCases?.length || 0}</p>\n              </div>\n              <div className=\"w-8 h-8 text-green-600\">\n                <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-blue-600 text-sm font-medium\">My Services</p>\n                <p className=\"text-2xl font-bold text-blue-900\">{stats.totalListings || 0}</p>\n              </div>\n              <div className=\"w-8 h-8 text-blue-600\">\n                <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-purple-50 p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-purple-600 text-sm font-medium\">Service Packages</p>\n                <p className=\"text-2xl font-bold text-purple-900\">{packages?.length || 0}</p>\n              </div>\n              <div className=\"w-8 h-8 text-purple-600\">\n                <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-orange-50 p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-orange-600 text-sm font-medium\">Total Bookings</p>\n                <p className=\"text-2xl font-bold text-orange-900\">{bookings?.length || 0}</p>\n              </div>\n              <div className=\"w-8 h-8 text-orange-600\">\n                <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* First Row - 2 containers */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Marketplace Summary */}\n        <MarketplaceSummary \n          listings={listings}\n          packages={packages}\n          products={products}\n          setActiveSection={setActiveSection}\n        />\n\n        {/* Upcoming Bookings Summary */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Upcoming Bookings</h3>\n            <button \n              onClick={() => setActiveSection('schedule')} \n              className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n            >\n              View All →\n            </button>\n          </div>\n              {bookings.length > 0 ? (\n                <div className=\"space-y-3\">\n                  {bookings\n                    .filter(booking => new Date(booking.appointment_date) >= new Date())\n                    .sort((a, b) => new Date(a.appointment_date) - new Date(b.appointment_date))\n                    .slice(0, 3)\n                    .map((booking, index) => (\n                    <div key={index} className=\"flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0\">\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{booking.pet_name}</p>\n                        <p className=\"text-sm text-gray-600\">\n                          {booking.marketplace_listings?.name || booking.marketplace_listings?.service_types}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-sm font-medium text-gray-900\">\n                          {new Date(booking.appointment_date).toLocaleDateString()}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          {booking.appointment_time || 'Time TBD'}\n                        </p>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          booking.status === 'confirmed' ? 'bg-green-100 text-green-800' :\n                          booking.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-blue-100 text-blue-800'\n                        }`}>\n                          {booking.status || 'Pending'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                  {bookings.filter(booking => new Date(booking.appointment_date) >= new Date()).length > 3 && (\n                    <p className=\"text-sm text-gray-500 text-center pt-2\">\n                      +{bookings.filter(booking => new Date(booking.appointment_date) >= new Date()).length - 3} more bookings\n                    </p>\n                  )}\n                </div>\n              ) : (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-gray-500 mb-2\">No upcoming bookings</p>\n                  <p className=\"text-sm text-gray-400\">\n                    Customer bookings will appear here\n                  </p>\n                </div>\n              )}\n        </div>\n      </div>\n\n      {/* Second Row - 2 containers */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Cases Summary */}\n        {true && (\n          <CasesSummary \n            triageCases={triageCases}\n            setActiveSection={setActiveSection}\n          />\n        )}\n\n        {/* Quick Actions */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n        <div className=\"space-y-3\">\n          <button \n            onClick={() => setActiveSection('marketplace')} \n            className=\"w-full flex items-center p-3 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors text-left\"\n          >\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900\">Manage Marketplace</div>\n                    <div className=\"text-sm text-gray-600\">Services & packages</div>\n                  </div>\n                </button>\n                \n                {/* Cases & Triage Quick Actions - For Vets and existing providers */}\n                {(providerData?.provider_type === 'vet_nurse' || !providerData?.provider_type) && (\n                <>\n                <button \n                  onClick={() => setActiveSection('cases')} \n                  className=\"w-full flex items-center p-3 bg-green-50 rounded-lg hover:bg-green-100 transition-colors text-left\"\n                >\n                  <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900\">Cases</div>\n                    <div className=\"text-sm text-gray-600\">All cases with triage assessment</div>\n                  </div>\n                </button>\n\n                                 {/* Pending Assessment Quick Access */}\n                 {triageCases.filter(c => c.status === 'pending').length > 0 && (\n                 <button \n                   onClick={() => {\n                     setActiveSection('cases');\n                     // Could add logic to automatically switch to pending filter\n                   }} \n                   className=\"w-full flex items-center p-3 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors text-left\"\n                 >\n                   <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center mr-3\">\n                     <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                     </svg>\n                   </div>\n                   <div>\n                     <div className=\"font-medium text-gray-900\">Pending Assessment</div>\n                     <div className=\"text-sm text-gray-600\">{triageCases.filter(c => c.status === 'pending').length} cases need triage</div>\n                   </div>\n                 </button>\n                 )}\n                </>\n                )}\n                \n                <button \n                  onClick={() => setActiveSection('schedule')} \n                  className=\"w-full flex items-center p-3 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors text-left\"\n                >\n                  <div className=\"w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900\">View Bookings</div>\n                    <div className=\"text-sm text-gray-600\">Manage appointments</div>\n                  </div>\n                </button>\n\n                <button \n                  onClick={() => setActiveSection('messages')} \n                  className=\"w-full flex items-center p-3 bg-orange-50 rounded-lg hover:bg-orange-100 transition-colors text-left\"\n                >\n                  <div className=\"w-8 h-8 bg-orange-500 rounded-md flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900\">Open Messages</div>\n                    <div className=\"text-sm text-gray-600\">View client messages</div>\n                  </div>\n                </button>\n              </div>\n        </div>\n      </div>\n\n      {/* Veterinarian-specific sections */}\n      {providerData?.provider_type === 'veterinarian' && (\n        <React.Fragment>\n          {/* Clinic Overview */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">🏥 Clinic Overview</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Today's Appointments</span>\n                  <span className=\"font-medium text-gray-900\">{bookings.filter(b => new Date(b.created_at).toDateString() === new Date().toDateString()).length}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Surgeries Scheduled</span>\n                  <span className=\"font-medium text-gray-900\">0</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Emergency Cases</span>\n                  <span className=\"font-medium text-gray-900\">0</span>\n                </div>\n              </div>\n          </div>\n\n          {/* Recent Procedures */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">⚕️ Recent Procedures</h3>\n            <div className=\"text-center py-4\">\n                <p className=\"text-gray-500 mb-2\">No recent procedures</p>\n                <p className=\"text-sm text-gray-400\">\n                  Completed surgeries and treatments will appear here\n                </p>\n              </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n\n  const renderServicesSection = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">My Services</h3>\n            <p className=\"text-sm text-gray-600 mt-1\">Manage your service offerings and create service packages</p>\n\n          </div>\n\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        {/* Services Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <h4 className=\"text-md font-medium text-gray-900\">Services</h4>\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                {getServicesOnly(listings).length}\n                {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n                  `/${FREE_SERVICE_LIMIT}`\n                }\n              </span>\n              {getServicesOnly(listings).length > 0 && (\n                <button\n                  onClick={() => {\n                    // Navigate to marketplace to show services - more reliable than provider profile\n                    window.open('/marketplace', '_blank');\n                  }}\n                  className=\"inline-flex items-center text-gray-500 hover:text-green-600 text-xs font-medium\"\n                  title=\"View Service Listings\"\n                >\n                  <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                  </svg>\n                  View Listing\n                </button>\n              )}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n                getServicesOnly(listings).length >= FREE_SERVICE_LIMIT && (\n                <span className=\"text-xs text-green-600 font-medium\">\n                  At limit - ${SERVICE_MONTHLY_FEE}/month each\n                </span>\n              )}\n              <button \n                onClick={handleAddNewService} \n                className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Service\n              </button>\n            </div>\n          </div>\n                     {getServicesOnly(listings).length > 0 ? (\n             <div className=\"space-y-6\">\n               {getServicesOnly(listings).map((listing) => (\n                                  <div key={listing.listing_id || listing.id} className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n                 <div className=\"flex justify-between items-start mb-3\">\n                   <div className=\"flex-1\">\n                     <div className=\"flex items-center gap-2 mb-1\">\n                       <h3 className=\"font-semibold text-gray-900\">{listing.name || listing.title}</h3>\n                        {(listing.service_types || listing.service_type) === 'product' && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                            Product\n                          </span>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-gray-600\">{listing.description}</p>\n                      {listing.brand && (\n                        <p className=\"text-xs text-gray-500 mt-1\">Brand: {listing.brand}</p>\n                      )}\n                    </div>\n                    <div className=\"relative\">\n                      <button \n                        onClick={() => setOpenDropdown(openDropdown === `service-${listing.listing_id || listing.id}` ? null : `service-${listing.listing_id || listing.id}`)}\n                        className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-lg transition-colors\"\n                        title=\"More options\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n                        </svg>\n                      </button>\n                      \n                      {openDropdown === `service-${listing.listing_id || listing.id}` && (\n                        <div className=\"absolute right-0 mt-2 w-32 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                          <div className=\"py-1\">\n                            <button\n                              onClick={() => {\n                                if ((listing.service_types || listing.service_type) === 'product') {\n                                  // For products, pass the listing data directly since it contains all product info\n                                  const productData = {\n                                    id: listing.listing_id || listing.id,\n                                    name: listing.name,\n                                    description: listing.description,\n                                    price: listing.price,\n                                    category: listing.category,\n                                    brand: listing.brand,\n                                    stock_quantity: listing.stock_quantity,\n                                    stockQuantity: listing.stock_quantity, // For form compatibility\n                                    photos: listing.image_url ? [{ id: 1, url: listing.image_url, name: 'Product Image' }] : [],\n                                    specifications: ''\n                                  };\n                                  setEditingProduct(productData);\n                                  setShowAddProductModal(true);\n                                } else {\n                                  setEditingService(listing);\n                                  setShowEditServiceModal(true);\n                                }\n                                setOpenDropdown(null);\n                              }}\n                              className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                            >\n                              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                              </svg>\n                              Edit\n                            </button>\n                            <button\n                              onClick={() => {\n                                if ((listing.service_types || listing.service_type) === 'product') {\n                                  const productId = (listing.listing_id || listing.id).replace('product_', '');\n                                  handleDeleteProduct(productId, listing.name || listing.title);\n                                } else {\n                                  handleDeleteService(listing.listing_id || listing.id, listing.name || listing.title);\n                                }\n                                setOpenDropdown(null);\n                              }}\n                              className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                            >\n                              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                              </svg>\n                              Delete\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Display photos for products */}\n                  {(listing.service_types || listing.service_type) === 'product' && listing.photos && listing.photos.length > 0 && (\n                    <div className=\"mb-3\">\n                      <div className=\"relative\">\n                        <img \n                          src={listing.photos[0].url} \n                          alt={listing.name || listing.title} \n                          className=\"w-full h-24 object-cover rounded-lg\" \n                        />\n                        {listing.photos.length > 1 && (\n                          <div className=\"absolute top-2 right-2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded-full\">\n                            +{listing.photos.length - 1} more\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex justify-between items-center\">\n                    <p className=\"text-sm text-gray-600\">{(listing.service_types || listing.service_type) === 'product' ? listing.category : (listing.service_types || listing.service_type)}</p>\n                    <div className=\"text-right\">\n                      <p className=\"text-sm font-medium text-gray-900\">${listing.price || listing.price_from}</p>\n                      <p className=\"text-xs text-gray-500\">\n                        You earn: ${getNetEarnings(listing.price || listing.price_from, (listing.service_types || listing.service_type) === 'product')}\n                      </p>\n                      {(listing.service_types || listing.service_type) === 'product' && (\n                        <p className={`text-xs ${(listing.stockQuantity || 0) > 0 ? 'text-green-600' : 'text-red-600'}`}>\n                          {(listing.stockQuantity || 0) > 0 ? `${listing.stockQuantity || 0} in stock` : 'Out of stock'}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">🏥</span>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No services yet</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Create your first service to start accepting bookings.\n              </p>\n            </div>\n          )}\n        </div>\n\n               {/* Packages Section */}\n         <div className=\"border-t border-gray-200 pt-8\">\n           <div className=\"flex items-center justify-between mb-4\">\n             <div className=\"flex items-center gap-2\">\n               <h4 className=\"text-md font-medium text-gray-900\">Packages</h4>\n               <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                 {packages.length}\n                 {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n                   `/${FREE_PACKAGE_LIMIT}`\n                 }\n               </span>\n             </div>\n             {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n               packages.length >= FREE_PACKAGE_LIMIT ? (\n               <div className=\"flex items-center gap-2\">\n                 <span className=\"text-xs text-green-600 font-medium\">\n                   At limit - ${PACKAGE_MONTHLY_FEE}/month each\n                 </span>\n                 <button onClick={handleAddNewPackage} className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\">\n                   <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                   </svg>\n                   Create Package\n                 </button>\n               </div>\n             ) : (\n                             <button \n                onClick={handleAddNewPackage} \n                className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n              >\n                 <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                 </svg>\n                 Add Package\n               </button>\n             )}\n           </div>\n           {packages.length > 0 ? (\n             <div className=\"space-y-6\">\n               {packages.map((pkg) => (\n              <div key={pkg.id} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900\">{pkg.name}</h3>\n                        <p className=\"text-sm text-gray-600 mt-1\">{pkg.description}</p>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          pkg.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                        }`}>\n                          {pkg.is_active ? 'Active' : 'Inactive'}\n                        </span>\n                        <div className=\"relative\">\n                          <button \n                            onClick={() => setOpenDropdown(openDropdown === `package-${pkg.id}` ? null : `package-${pkg.id}`)}\n                            className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-lg transition-colors\"\n                            title=\"More options\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n                            </svg>\n                          </button>\n                          \n                          {openDropdown === `package-${pkg.id}` && (\n                            <div className=\"absolute right-0 mt-2 w-36 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                              <div className=\"py-1\">\n                                <button\n                                  onClick={() => {\n                                    setEditingPackage(pkg);\n                                    setShowPackageModal(true);\n                                    setOpenDropdown(null);\n                                  }}\n                                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                                >\n                                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                                  </svg>\n                                  Edit\n                                </button>\n                                <button\n                                  onClick={async () => {\n                                    try {\n                                      const { data: { user } } = await supabase.auth.getUser();\n                                      if (!user) return;\n\n                                      // Update in Supabase\n                                      const { error } = await supabase\n                                        .from('packages')\n                                        .update({ is_active: !pkg.is_active })\n                                        .eq('id', pkg.id)\n                                        .eq('provider_id', user.id);\n\n                                      if (error) throw error;\n\n                                      // Update local state\n                                      const updatedPackages = packages.map(p => \n                                        p.id === pkg.id ? { ...p, is_active: !p.is_active } : p\n                                      );\n                                      setPackages(updatedPackages);\n                                      setOpenDropdown(null);\n                                    } catch (error) {\n                                      console.error('Error updating package status:', error);\n                                    }\n                                  }}\n                                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                                >\n                                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={pkg.is_active ? \"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" : \"M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"} />\n                                  </svg>\n                                  {pkg.is_active ? 'Deactivate' : 'Activate'}\n                                </button>\n                                <button\n                                  onClick={() => {\n                                    handleDeletePackage(pkg.id, pkg.name);\n                                    setOpenDropdown(null);\n                                  }}\n                                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                                >\n                                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                  </svg>\n                                  Delete\n                                </button>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2 mb-4\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Services included:</span>\n                        <span className=\"font-medium\">{pkg.service_ids?.length || 0}</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Original price:</span>\n                        <span className=\"line-through text-gray-500\">${pkg.original_price?.toFixed(2)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"font-medium\">Package price:</span>\n                        <span className=\"font-bold text-green-600\">${pkg.package_price?.toFixed(2)}</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-green-600\">Customer saves:</span>\n                        <span className=\"font-medium text-green-600\">${pkg.savings?.toFixed(2)}</span>\n                      </div>\n                    </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-2xl\">📦</span>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No packages created yet</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Create service packages to offer customers better deals and increase your booking value.\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* Products Section */}\n        <div className=\"border-t border-gray-200 pt-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <h4 className=\"text-md font-medium text-gray-900\">Products</h4>\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                {products.length}\n                {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n                  `/${FREE_PRODUCT_LIMIT}`\n                }\n              </span>\n            </div>\n            {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n              products.length >= FREE_PRODUCT_LIMIT ? (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-xs text-green-600 font-medium\">\n                  At limit - ${PRODUCT_MONTHLY_FEE}/month each\n                </span>\n                <button onClick={() => { setPayPerListingType('product'); setShowPayPerListingModal(true); }} className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\">\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Add More Products\n                </button>\n              </div>\n            ) : (\n              <button \n                onClick={() => setShowAddProductModal(true)} \n                className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Product\n              </button>\n            )}\n          </div>\n          \n          {products.length > 0 ? (\n            <div className=\"space-y-6\">\n              {products.map((product) => (\n                <div key={product.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-gray-900 mb-1\">{product.name}</h4>\n                      <p className=\"text-sm text-gray-600 mb-2\">{product.brand}</p>\n                      <p className=\"text-xs text-gray-500 line-clamp-2\">{product.description}</p>\n                    </div>\n                    <div className=\"relative ml-2\">\n                      <button \n                        onClick={() => setOpenDropdown(openDropdown === `product-${product.id}` ? null : `product-${product.id}`)}\n                        className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded transition-colors\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n                        </svg>\n                      </button>\n                      {openDropdown === `product-${product.id}` && (\n                        <div className=\"absolute right-0 mt-1 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                          <button\n                            onClick={() => {\n                              setEditingProduct(product);\n                              setShowAddProductModal(true);\n                              setOpenDropdown(null);\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-t-lg\"\n                          >\n                            Edit Product\n                          </button>\n                          <button\n                            onClick={() => {\n                              handleDeleteProduct(product.id, product.name);\n                              setOpenDropdown(null);\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-b-lg\"\n                          >\n                            Delete Product\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {product.photos && product.photos.length > 0 && (\n                    <div className=\"mb-3\">\n                      <img \n                        src={product.photos[0].url} \n                        alt={product.name}\n                        className=\"w-full h-32 object-cover rounded-lg\"\n                      />\n                    </div>\n                  )}\n\n                  <div className=\"flex justify-between items-center\">\n                    <div>\n                      <p className=\"text-lg font-bold text-gray-900\">${product.price}</p>\n                      <p className=\"text-xs text-gray-500\">Stock: {product.stockQuantity}</p>\n                    </div>\n                    <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\n                      {product.category}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-2xl\">🛍️</span>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No products created yet</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Add veterinary products and supplies to sell to pet parents.\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n\n\n\n  const renderProductsSection = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">My Products</h3>\n            <p className=\"text-sm text-gray-600 mt-1\">Sell veterinary products and supplies to pet parents</p>\n            {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n              products.length >= FREE_PRODUCT_LIMIT && (\n              <div className=\"flex items-center gap-2 mt-2\">\n                <span className=\"text-xs text-green-600 font-medium\">\n                  At limit - ${PRODUCT_MONTHLY_FEE}/month each\n                </span>\n                <button onClick={handleAddProduct} className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\">\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Add Product\n                </button>\n              </div>\n            )}\n          </div>\n          {(!providerData?.subscription_plan || providerData?.subscription_plan === 'free') && \n            products.length < FREE_PRODUCT_LIMIT && (\n            <button \n              onClick={() => setShowAddProductModal(true)} \n              className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add Product\n            </button>\n          )}\n          {providerData?.subscription_plan && providerData?.subscription_plan !== 'free' && (\n            <button \n              onClick={() => setShowAddProductModal(true)} \n              className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add Product\n            </button>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n\n      {products.length > 0 ? (\n        <div className=\"space-y-6\">\n          {products.map((product) => (\n            <div key={product.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n              <div className=\"flex justify-between items-start mb-3\">\n                <div className=\"flex-1\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">{product.name}</h4>\n                  <p className=\"text-sm text-gray-600 mb-2\">{product.brand}</p>\n                  <p className=\"text-xs text-gray-500 line-clamp-2\">{product.description}</p>\n                </div>\n                <div className=\"relative ml-2\">\n                  <button \n                    onClick={() => setOpenDropdown(openDropdown === `product-${product.id}` ? null : `product-${product.id}`)}\n                    className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded transition-colors\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n                    </svg>\n                  </button>\n                  \n                  {openDropdown === `product-${product.id}` && (\n                    <div className=\"absolute right-0 mt-2 w-32 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                      <div className=\"py-1\">\n                        <button\n                          onClick={() => {\n                            setEditingProduct(product);\n                            setShowAddProductModal(true);\n                            setOpenDropdown(null);\n                          }}\n                          className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                        >\n                          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                          </svg>\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => handleDeleteProduct(product.id, product.name)}\n                          className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                        >\n                          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                          </svg>\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n                             {product.photos && product.photos.length > 0 && (\n                 <div className=\"mb-3\">\n                   <div className=\"relative\">\n                     <img \n                       src={product.photos[0].url} \n                       alt={product.name} \n                       className=\"w-full h-32 object-cover rounded-lg\" \n                     />\n                     {product.photos.length > 1 && (\n                       <div className=\"absolute top-2 right-2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded-full\">\n                         +{product.photos.length - 1} more\n                       </div>\n                     )}\n                   </div>\n                 </div>\n               )}\n\n                              <div className=\"space-y-2 mb-3\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-600\">Category:</span>\n                    <span className=\"font-medium capitalize\">{product.category}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-600\">Stock:</span>\n                    <span className={`font-medium ${(product.stockQuantity || 0) > 10 ? 'text-green-600' : (product.stockQuantity || 0) > 0 ? 'text-orange-600' : 'text-red-600'}`}>\n                      {product.stockQuantity || 0} units\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"font-medium\">Price:</span>\n                    <span className=\"font-bold text-green-600\">${product.price}</span>\n                  </div>\n                </div>\n\n                              <div className=\"flex items-center justify-between\">\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                    (product.stockQuantity || 0) > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                  }`}>\n                    {(product.stockQuantity || 0) > 0 ? 'In Stock' : 'Out of Stock'}\n                  </span>\n                </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n            <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No products added yet</h3>\n          <p className=\"text-gray-600 mb-4\">\n            Start selling veterinary products and supplies to provide additional value to your clients.\n          </p>\n          <button \n            onClick={() => setShowAddProductModal(true)} \n            className=\"inline-flex items-center bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n          >\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n            Add Your First Product\n          </button>\n        </div>\n      )}\n      </div>\n      </div>\n    </div>\n  );\n\n\n\n      // New case management section for vets\n  const renderCasesSection = (filter = 'all') => (\n    <CaseManager nurseId={user?.id} initialFilter={filter} />\n  );\n\n  const renderScheduleSection = () => (\n    <div className=\"space-y-6\">\n      {/* Schedule Header */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-xl font-bold text-gray-900\">Bookings & Availability</h3>\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                Available Today\n              </span>\n              <button className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Block Time\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Today's Schedule */}\n        <div className=\"p-6\">\n          <h4 className=\"text-md font-medium text-gray-900 mb-4\">Today - {new Date().toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h4>\n          \n          <div className=\"space-y-3\">\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-400 text-4xl mb-4\">📅</div>\n              <h4 className=\"text-lg font-medium text-gray-900 mb-2\">No appointments today</h4>\n              <p className=\"text-gray-600 text-sm\">\n                Today's appointments will appear here once they're scheduled\n              </p>\n            </div>\n\n            {/* Available time slot */}\n            <div className=\"flex items-center justify-between p-4 bg-green-50 rounded-lg border border-green-200\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">Available for bookings</p>\n                  <p className=\"text-xs text-gray-600\">Open time slot</p>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <p className=\"text-sm font-medium text-gray-900\">4:00 PM - 5:00 PM</p>\n                <p className=\"text-xs text-green-600\">Available</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Weekly Overview */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h4 className=\"text-md font-medium text-gray-900\">This Week</h4>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-7 gap-2\">\n            {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) => (\n              <div key={day} className=\"text-center\">\n                <div className=\"text-xs font-medium text-gray-500 mb-2\">{day}</div>\n                <div className={`w-full h-16 rounded-lg border-2 border-dashed flex items-center justify-center text-xs ${\n                  index === 2 ? 'border-blue-300 bg-blue-50 text-blue-600' : \n                  index === 4 ? 'border-yellow-300 bg-yellow-50 text-yellow-600' : \n                  'border-gray-300 bg-gray-50 text-gray-500'\n                }`}>\n                  {index === 2 ? '3 appts' : index === 4 ? '2 appts' : 'Available'}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h4 className=\"text-md font-medium text-gray-900\">Quick Actions</h4>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            <button className=\"flex items-center p-4 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors text-left\">\n              <div className=\"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center mr-3\">\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">Set Availability</div>\n                <div className=\"text-sm text-gray-600\">Update your working hours</div>\n              </div>\n            </button>\n\n            <button className=\"flex items-center p-4 bg-green-50 rounded-lg hover:bg-green-100 transition-colors text-left\">\n              <div className=\"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center mr-3\">\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">Block Time</div>\n                <div className=\"text-sm text-gray-600\">Reserve time slots</div>\n              </div>\n            </button>\n\n            <button className=\"flex items-center p-4 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors text-left\">\n              <div className=\"w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center mr-3\">\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                </svg>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">View All Bookings</div>\n                <div className=\"text-sm text-gray-600\">See upcoming appointments</div>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderMessagesSection = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        {/* Messages Header */}\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-xl font-bold text-gray-900\">Messages</h3>\n            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n              1 unread\n            </span>\n          </div>\n        </div>\n\n        {/* Messages List */}\n        <div className=\"p-6\">\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 text-6xl mb-4\">💬</div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No messages yet</h3>\n            <p className=\"text-gray-600\">\n              Patient messages and communications will appear here\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderAnalyticsSection = () => {\n    // Calculate financial metrics\n    const calculateRevenue = () => {\n      const completedBookings = bookings.filter(b => b.status === 'completed');\n      const serviceRevenue = completedBookings.reduce((total, booking) => {\n        const listing = listings.find(l => l.id === booking.listing_id);\n        if (listing) {\n          const price = parseFloat(listing.price_from || listing.price || 0);\n          const netEarnings = parseFloat(getNetEarnings(price, listing.service_type === 'product'));\n          return total + netEarnings;\n        }\n        return total;\n      }, 0);\n\n      // Estimate product revenue (since we don't have actual sales data)\n      const productRevenue = products.length * 25; // Estimated average monthly revenue per product\n\n      // Package revenue estimation\n      const packageRevenue = packages.filter(p => p.is_active).reduce((total, pkg) => {\n        return total + (pkg.package_price * 2); // Estimated 2 sales per month per package\n      }, 0);\n\n      return {\n        total: serviceRevenue + productRevenue + packageRevenue,\n        services: serviceRevenue,\n        products: productRevenue,\n        packages: packageRevenue\n      };\n    };\n\n    const revenue = calculateRevenue();\n    const thisMonthBookings = bookings.filter(b => {\n      const bookingDate = new Date(b.created_at);\n      const now = new Date();\n      return bookingDate.getMonth() === now.getMonth() && bookingDate.getFullYear() === now.getFullYear();\n    });\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Financial Analytics - Main Container */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"mb-6\">\n            <h3 className=\"text-xl font-bold text-gray-900\">Financial Analytics</h3>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              Track your earnings from services, products, and packages. All figures show net earnings after platform fees.\n            </p>\n          </div>\n\n          {/* Revenue Stats Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-green-600 text-sm font-medium\">Total Earnings</p>\n                  <p className=\"text-2xl font-bold text-green-900\">${revenue.total.toFixed(2)}</p>\n                </div>\n                <div className=\"w-8 h-8 text-green-600\">\n                  <span className=\"text-2xl\">💵</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-blue-600 text-sm font-medium\">Service Revenue</p>\n                  <p className=\"text-2xl font-bold text-blue-900\">${revenue.services.toFixed(2)}</p>\n                </div>\n                <div className=\"w-8 h-8 text-blue-600\">\n                  <span className=\"text-2xl\">🛠️</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-purple-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-purple-600 text-sm font-medium\">Product Sales</p>\n                  <p className=\"text-2xl font-bold text-purple-900\">${revenue.products.toFixed(2)}</p>\n                </div>\n                <div className=\"w-8 h-8 text-purple-600\">\n                  <span className=\"text-2xl\">📦</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-orange-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-orange-600 text-sm font-medium\">Package Revenue</p>\n                  <p className=\"text-2xl font-bold text-orange-900\">${revenue.packages.toFixed(2)}</p>\n                </div>\n                <div className=\"w-8 h-8 text-orange-600\">\n                  <span className=\"text-2xl\">📋</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Revenue Breakdown and Performance Metrics - 2 Column Layout */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Revenue Breakdown */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Revenue Breakdown</h4>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-4 h-4 bg-blue-500 rounded-full mr-3\"></div>\n                  <span className=\"text-sm font-medium text-gray-700\">Services</span>\n                </div>\n                <div className=\"text-right\">\n                  <span className=\"text-sm font-bold text-gray-900\">${revenue.services.toFixed(2)}</span>\n                  <div className=\"w-32 bg-gray-200 rounded-full h-2 mt-1\">\n                    <div \n                      className=\"bg-blue-500 h-2 rounded-full\" \n                      style={{ width: `${revenue.total > 0 ? (revenue.services / revenue.total) * 100 : 0}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-4 h-4 bg-purple-500 rounded-full mr-3\"></div>\n                  <span className=\"text-sm font-medium text-gray-700\">Products</span>\n                </div>\n                <div className=\"text-right\">\n                  <span className=\"text-sm font-bold text-gray-900\">${revenue.products.toFixed(2)}</span>\n                  <div className=\"w-32 bg-gray-200 rounded-full h-2 mt-1\">\n                    <div \n                      className=\"bg-purple-500 h-2 rounded-full\" \n                      style={{ width: `${revenue.total > 0 ? (revenue.products / revenue.total) * 100 : 0}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-4 h-4 bg-orange-500 rounded-full mr-3\"></div>\n                  <span className=\"text-sm font-medium text-gray-700\">Packages</span>\n                </div>\n                <div className=\"text-right\">\n                  <span className=\"text-sm font-bold text-gray-900\">${revenue.packages.toFixed(2)}</span>\n                  <div className=\"w-32 bg-gray-200 rounded-full h-2 mt-1\">\n                    <div \n                      className=\"bg-orange-500 h-2 rounded-full\" \n                      style={{ width: `${revenue.total > 0 ? (revenue.packages / revenue.total) * 100 : 0}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Performance Metrics */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Performance Metrics</h4>\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Booking Success Rate</span>\n                <span className=\"text-sm font-bold text-green-600\">\n                  {bookings.length > 0 ? Math.round((bookings.filter(b => b.status === 'completed').length / bookings.length) * 100) : 0}%\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Average Service Price</span>\n                <span className=\"text-sm font-bold text-gray-900\">\n                  ${listings.length > 0 ? (listings.reduce((sum, l) => sum + parseFloat(l.price_from || 0), 0) / listings.length).toFixed(2) : '0.00'}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">This Month Bookings</span>\n                <span className=\"text-sm font-bold text-blue-600\">{thisMonthBookings.length}</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Active Listings</span>\n                <span className=\"text-sm font-bold text-gray-900\">{listings.filter(l => l.active).length}</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Customer Rating</span>\n                <span className=\"text-sm font-bold text-yellow-600\">\n                  {stats.averageRating > 0 ? `${stats.averageRating} ⭐` : 'No ratings yet'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Transactions */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Recent Transactions</h4>\n          {bookings.filter(b => b.status === 'completed').length > 0 ? (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Earnings</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {bookings.filter(b => b.status === 'completed').slice(0, 5).map((booking) => {\n                    const listing = listings.find(l => l.id === booking.listing_id);\n                    const price = listing ? parseFloat(listing.price_from || listing.price || 0) : 0;\n                    const earnings = listing ? getNetEarnings(price, listing.service_type === 'product') : '0.00';\n                    \n                    return (\n                      <tr key={booking.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {booking.consultation_type || 'Service'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {booking.customer_name || 'Customer'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(booking.created_at).toLocaleDateString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-600\">\n                          ${earnings}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <span className=\"text-4xl mb-4 block\">💸</span>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No completed transactions yet</h3>\n              <p className=\"text-gray-500\">\n                Once you complete services, your earnings will appear here.\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* Earning Tips */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-green-50 border border-blue-200 rounded-lg p-6\">\n          <h4 className=\"text-lg font-medium text-gray-900 mb-3\">Tips to Increase Earnings</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex items-start space-x-3\">\n              <span className=\"text-blue-500 mt-1\">📈</span>\n              <div>\n                <h5 className=\"font-medium text-gray-900\">Create Package Deals</h5>\n                <p className=\"text-sm text-gray-600\">Bundle services together for higher-value bookings</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3\">\n              <span className=\"text-green-500 mt-1\">⭐</span>\n              <div>\n                <h5 className=\"font-medium text-gray-900\">Maintain High Ratings</h5>\n                <p className=\"text-sm text-gray-600\">Better ratings lead to more bookings and higher prices</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3\">\n              <span className=\"text-purple-500 mt-1\">🛍️</span>\n              <div>\n                <h5 className=\"font-medium text-gray-900\">Add Products</h5>\n                <p className=\"text-sm text-gray-600\">Sell veterinary products for additional passive income</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3\">\n              <span className=\"text-orange-500 mt-1\">📅</span>\n              <div>\n                <h5 className=\"font-medium text-gray-900\">Update Availability</h5>\n                <p className=\"text-sm text-gray-600\">More availability means more booking opportunities</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderProfileSection = () => {\n    return (\n      <div className=\"space-y-6\">\n        {/* Profile Information */}\n        <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-xl font-bold text-gray-900\">Profile Information</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">Manage your public profile and contact details</p>\n        </div>\n        <div className=\"p-6\">\n          {/* Profile Picture Section */}\n          <div className=\"mb-6 flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200\">\n                  {profileForm.profilePicture ? (\n                    <img \n                      src={profileForm.profilePicture} \n                      alt=\"Profile\" \n                      className=\"w-full h-full object-cover\"\n                      onError={(e) => {\n                        e.target.style.display = 'none';\n                        e.target.nextSibling.style.display = 'flex';\n                      }}\n                    />\n                  ) : null}\n                  <div \n                    className={`w-full h-full flex items-center justify-center text-gray-400 ${profileForm.profilePicture ? 'hidden' : 'flex'}`}\n                    style={{ display: profileForm.profilePicture ? 'none' : 'flex' }}\n                  >\n                    <span className=\"text-xl\">👤</span>\n                  </div>\n                </div>\n              </div>\n                             <div>\n                 <h4 className=\"font-medium text-gray-900\">{profileForm.fullName || 'Your Name'}</h4>\n                 <p className=\"text-sm text-gray-600\">Profile Picture • Verified User</p>\n               </div>\n            </div>\n            <div className=\"relative\">\n              <button \n                onClick={() => setOpenDropdown(openDropdown === 'profile-pic' ? null : 'profile-pic')}\n                className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-full\"\n              >\n                <span className=\"text-lg\">⋮</span>\n              </button>\n              {openDropdown === 'profile-pic' && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n                  <div className=\"py-1\">\n                    <button \n                      onClick={() => {\n                        document.getElementById('profile-picture-input').click();\n                        setOpenDropdown(null);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                    >\n                      <span className=\"mr-3\">📷</span>\n                      Upload Photo\n                    </button>\n                    {profileForm.profilePicture && (\n                      <button \n                        onClick={() => {\n                          setProfileForm(prev => ({ ...prev, profilePicture: '' }));\n                          setOpenDropdown(null);\n                        }}\n                        className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100\"\n                      >\n                        <span className=\"mr-3\">🗑️</span>\n                        Remove Photo\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            <input \n              id=\"profile-picture-input\"\n              type=\"file\" \n              accept=\"image/*\"\n              onChange={handleProfilePictureChange}\n              className=\"hidden\"\n            />\n          </div>\n\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Full Name</label>\n              <input \n                type=\"text\" \n                value={profileForm.fullName || ''} \n                readOnly\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600 cursor-not-allowed\"\n                placeholder=\"Verified name cannot be changed\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">Name is locked after verification for security</p>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\n              <input \n                type=\"email\" \n                value={profile?.email || user?.email || ''} \n                readOnly\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600\"\n                placeholder=\"Email address\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">Email cannot be changed</p>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Phone Number</label>\n              <input \n                type=\"tel\" \n                value={profileForm.phone} \n                onChange={(e) => setProfileForm(prev => ({ ...prev, phone: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"+64279293666\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Address</label>\n              <input \n                type=\"text\" \n                value={profileForm.address} \n                onChange={(e) => setProfileForm(prev => ({ ...prev, address: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"2 Heller Road\"\n              />\n            </div>\n          </div>\n          <div className=\"mt-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">About/Bio</label>\n            <textarea \n              value={profileForm.description} \n              onChange={(e) => setProfileForm(prev => ({ ...prev, description: e.target.value }))}\n              rows={4}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Tell customers about yourself and your services...\"\n            />\n          </div>\n\n                      <div className=\"mt-6 pt-4 border-t border-gray-200 flex justify-between items-center\">\n                              <div>\n                  <p className=\"text-sm text-gray-600\">Changes will be reflected across your marketplace listing</p>\n              </div>\n              <button \n                onClick={handleSaveProfile}\n                className=\"inline-flex items-center bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\n                </svg>\n                Save Changes\n              </button>\n            </div>\n        </div>\n      </div>\n\n      {/* Business Information */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Business Information</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">Your professional credentials and status</p>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-gray-50 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">{providerLabels.businessType}</p>\n                                      <p className=\"text-xs text-gray-500\">Vet Nurse Business Type</p>\n                </div>\n                <span className=\"text-lg\">🩺</span>\n              </div>\n            </div>\n            <div className=\"p-4 bg-green-50 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-green-700\">Verified</p>\n                  <p className=\"text-xs text-gray-500\">Status</p>\n                </div>\n                <span className=\"w-3 h-3 bg-green-400 rounded-full\"></span>\n              </div>\n            </div>\n            <div className=\"p-4 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">\n                    {providerData?.years_experience || profileForm.yearsOfExperience || 'Not specified'} \n                    {(providerData?.years_experience || profileForm.yearsOfExperience) && ' years'}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">Experience</p>\n                  {/* Experience Level Badge */}\n                  {(providerData?.years_experience || profileForm.yearsOfExperience) && (\n                    <div className=\"mt-1\">\n                      {(() => {\n                        const years = providerData?.years_experience || profileForm.yearsOfExperience;\n                        const experienceLevel = getExperienceLevel(years, providerData?.provider_type);\n                        const colorClasses = {\n                          gray: 'bg-gray-100 text-gray-800',\n                          blue: 'bg-blue-100 text-blue-800', \n                          green: 'bg-green-100 text-green-800',\n                          purple: 'bg-purple-100 text-purple-800',\n                          gold: 'bg-yellow-100 text-yellow-800'\n                        };\n                        return (\n                          <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${colorClasses[experienceLevel.color]}`}>\n                            {experienceLevel.level}\n                          </span>\n                        );\n                      })()}\n                    </div>\n                  )}\n                </div>\n                <span className=\"text-lg\">⭐</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Service Areas */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Service Areas</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">Define where you provide services</p>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Cities/Areas You Serve</label>\n              <input \n                type=\"text\" \n                value={profileForm.serviceAreas} \n                onChange={(e) => setProfileForm(prev => ({ ...prev, serviceAreas: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Auckland, Hamilton, Tauranga\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">Separate multiple areas with commas</p>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Travel Distance</label>\n              <select \n                value={profileForm.maxTravelDistance} \n                onChange={(e) => setProfileForm(prev => ({ ...prev, maxTravelDistance: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"10\">10 km</option>\n                <option value=\"25\">25 km</option>\n                <option value=\"50\">50 km</option>\n                <option value=\"100\">100 km</option>\n              </select>\n              <p className=\"text-xs text-gray-500 mt-1\">Maximum distance you'll travel</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Account Settings */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Account Settings</h3>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900\">Email Notifications</h4>\n                <p className=\"text-sm text-gray-600\">Receive booking and message notifications</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n              </label>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900\">SMS Notifications</h4>\n                <p className=\"text-sm text-gray-600\">Receive urgent notifications via SMS</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input type=\"checkbox\" className=\"sr-only peer\" />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n              </label>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900\">Marketing Emails</h4>\n                <p className=\"text-sm text-gray-600\">Receive tips and platform updates</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Danger Zone */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-l-4 border-red-400\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-red-600\">Account Management</h3>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900\">Temporarily Disable Account</h4>\n                <p className=\"text-sm text-gray-600\">Hide your profile from customers temporarily</p>\n              </div>\n              <button className=\"inline-flex items-center bg-yellow-600 text-white px-3 py-2 rounded-lg hover:bg-yellow-700 text-sm font-medium\">\n                <svg className=\"w-4 h-4 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728\" />\n                </svg>\n                Disable\n              </button>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900\">Delete Account</h4>\n                <p className=\"text-sm text-gray-600\">Permanently delete your account and all data</p>\n              </div>\n              <button className=\"inline-flex items-center bg-red-600 text-white px-3 py-2 rounded-lg hover:bg-red-700 text-sm font-medium\">\n                <svg className=\"w-4 h-4 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  };\n\n  const renderMarketplaceSection = () => (\n    <div className=\"space-y-6\">\n      {/* Marketplace Status */}\n              <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Marketplace</h3>\n            <p className=\"text-gray-600 text-sm\">\n              {providerData?.verified \n                ? \"Your profile is live and accepting bookings\" \n                : listings.length > 0 \n                  ? \"Ready to publish your services to the marketplace\"\n                  : \"Create services to get started on the marketplace\"\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Marketplace Content - Services and Packages */}\n      {renderServicesSection()}\n\n    </div>\n  );\n\n  // Veterinarian-specific render functions\n  const renderPatientsSection = () => (\n    <div className=\"space-y-6\">\n      {/* Patients Header */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-xl font-bold text-gray-900\">Patient Management</h3>\n            <button \n              onClick={() => setShowPatientModal(true)} \n              className=\"inline-flex items-center bg-blue-600 text-white px-3 py-2 rounded-lg hover:bg-blue-700 text-sm font-medium\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add Patient\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6\">\n          {patients.length > 0 ? (\n            <div className=\"space-y-6\">\n              {patients.map((patient) => (\n                <div key={patient.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-gray-900 mb-1\">{patient.name}</h4>\n                      <p className=\"text-sm text-gray-600 mb-2\">{patient.breed} • {patient.species}</p>\n                      <p className=\"text-xs text-gray-500 mb-2\">{patient.age} years • {patient.weight} kg</p>\n                      <p className=\"text-xs text-gray-500\">Owner: {patient.owner_name}</p>\n                    </div>\n                    <div className=\"relative ml-2\">\n                      <button \n                        onClick={() => setOpenDropdown(openDropdown === `patient-${patient.id}` ? null : `patient-${patient.id}`)}\n                        className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded transition-colors\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n                        </svg>\n                      </button>\n                      {openDropdown === `patient-${patient.id}` && (\n                        <div className=\"absolute right-0 mt-1 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                          <button\n                            onClick={() => {\n                              setEditingPatient(patient);\n                              setShowPatientModal(true);\n                              setOpenDropdown(null);\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-t-lg\"\n                          >\n                            Edit Patient\n                          </button>\n                          <button\n                            onClick={() => {\n                              handleDeletePatient(patient.id, patient.name);\n                              setOpenDropdown(null);\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-b-lg\"\n                          >\n                            Delete Patient\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Phone:</span>\n                      <span className=\"font-medium\">{patient.owner_phone}</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Email:</span>\n                      <span className=\"font-medium\">{patient.owner_email}</span>\n                    </div>\n                    {patient.medical_history && (\n                      <div className=\"mt-3 p-2 bg-gray-50 rounded text-xs text-gray-600\">\n                        <strong>Medical History:</strong> {patient.medical_history}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-2xl\">🐕</span>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No patients added yet</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Start managing your patients by adding their information and medical records.\n              </p>\n              <button \n                onClick={() => setShowPatientModal(true)} \n                className=\"inline-flex items-center bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 text-sm font-medium\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Your First Patient\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderProceduresSection = () => (\n    <div className=\"space-y-6\">\n      {/* Procedures Header */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-xl font-bold text-gray-900\">Procedure Management</h3>\n            <button \n              onClick={() => setShowProcedureModal(true)} \n              className=\"inline-flex items-center bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n              Schedule Procedure\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6\">\n          {procedures.length > 0 ? (\n            <div className=\"space-y-6\">\n              {procedures.map((procedure) => (\n                <div key={procedure.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-gray-900 mb-1\">{procedure.procedure_type}</h4>\n                      <p className=\"text-sm text-gray-600 mb-2\">\n                        {new Date(procedure.scheduled_date).toLocaleDateString('en-US', { \n                          weekday: 'long', \n                          year: 'numeric', \n                          month: 'long', \n                          day: 'numeric' \n                        })}\n                      </p>\n                      <p className=\"text-xs text-gray-500 mb-2\">Duration: {procedure.estimated_duration} minutes</p>\n                      <p className=\"text-xs text-gray-500\">Status: {procedure.status}</p>\n                    </div>\n                    <div className=\"relative ml-2\">\n                      <button \n                        onClick={() => setOpenDropdown(openDropdown === `procedure-${procedure.id}` ? null : `procedure-${procedure.id}`)}\n                        className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded transition-colors\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n                        </svg>\n                      </button>\n                      {openDropdown === `procedure-${procedure.id}` && (\n                        <div className=\"absolute right-0 mt-1 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                          <button\n                            onClick={() => {\n                              setEditingProcedure(procedure);\n                              setShowProcedureModal(true);\n                              setOpenDropdown(null);\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-t-lg\"\n                          >\n                            Edit Procedure\n                          </button>\n                          <button\n                            onClick={() => {\n                              handleDeleteProcedure(procedure.id, procedure.procedure_type);\n                              setOpenDropdown(null);\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-b-lg\"\n                          >\n                            Delete Procedure\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {procedure.notes && (\n                    <div className=\"mt-3 p-2 bg-gray-50 rounded text-xs text-gray-600\">\n                      <strong>Notes:</strong> {procedure.notes}\n                    </div>\n                  )}\n\n                  <div className=\"mt-3 flex items-center justify-between\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      procedure.status === 'scheduled' ? 'bg-blue-100 text-blue-800' :\n                      procedure.status === 'completed' ? 'bg-green-100 text-green-800' :\n                      procedure.status === 'cancelled' ? 'bg-red-100 text-red-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {procedure.status.charAt(0).toUpperCase() + procedure.status.slice(1)}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-2xl\">🏥</span>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No procedures scheduled yet</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Schedule medical procedures, surgeries, and diagnostic tests for your patients.\n              </p>\n              <button \n                onClick={() => setShowProcedureModal(true)} \n                className=\"inline-flex items-center bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 text-sm font-medium\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Schedule Your First Procedure\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Veterinarian-specific functions\n  const handleAddPatient = async (patientData) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      const newPatient = {\n        provider_id: user.id,\n        name: patientData.name,\n        species: patientData.species,\n        breed: patientData.breed,\n        age: patientData.age,\n        weight: patientData.weight,\n        owner_name: patientData.ownerName,\n        owner_phone: patientData.ownerPhone,\n        owner_email: patientData.ownerEmail,\n        medical_history: patientData.medicalHistory || '',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      const { data, error } = await supabase\n        .from('patients')\n        .insert([newPatient])\n        .select();\n\n      if (error) throw error;\n\n      setPatients(prev => [...prev, data[0]]);\n      showSuccess('Patient added successfully!', 4000);\n      setShowPatientModal(false);\n      \n    } catch (error) {\n      showError(`Failed to add patient: ${error.message}`);\n    }\n  };\n\n  const handleAddProcedure = async (procedureData) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      const newProcedure = {\n        provider_id: user.id,\n        patient_id: procedureData.patientId,\n        procedure_type: procedureData.procedureType,\n        scheduled_date: procedureData.scheduledDate,\n        estimated_duration: procedureData.estimatedDuration,\n        notes: procedureData.notes || '',\n        status: 'scheduled',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      const { data, error } = await supabase\n        .from('procedures')\n        .insert([newProcedure])\n        .select();\n\n      if (error) throw error;\n\n      setProcedures(prev => [...prev, data[0]]);\n      showSuccess('Procedure scheduled successfully!', 4000);\n      setShowProcedureModal(false);\n      \n    } catch (error) {\n      showError(`Failed to schedule procedure: ${error.message}`);\n    }\n  };\n\n  const handleDeletePatient = async (patientId, patientName) => {\n    if (!window.confirm(`Are you sure you want to delete patient \"${patientName}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const { error } = await supabase\n        .from('patients')\n        .delete()\n        .eq('id', patientId);\n\n      if (error) throw error;\n\n      setPatients(prev => prev.filter(p => p.id !== patientId));\n      showSuccess('Patient deleted successfully!', 4000);\n      \n    } catch (error) {\n      showError(`Failed to delete patient: ${error.message}`);\n    }\n  };\n\n  const handleDeleteProcedure = async (procedureId, procedureType) => {\n    if (!window.confirm(`Are you sure you want to delete procedure \"${procedureType}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const { error } = await supabase\n        .from('procedures')\n        .delete()\n        .eq('id', procedureId);\n\n      if (error) throw error;\n\n      setProcedures(prev => prev.filter(p => p.id !== procedureId));\n      showSuccess('Procedure deleted successfully!', 4000);\n      \n    } catch (error) {\n      showError(`Failed to delete procedure: ${error.message}`);\n    }\n  };\n\n  const renderActiveSection = () => {\n    switch(activeSection) {\n      case 'overview':\n        return renderOverviewSection();\n      case 'marketplace':\n        return renderMarketplaceSection();\n      case 'services':\n        return renderServicesSection();\n      case 'packages':\n        return renderServicesSection(); // Packages are now part of services\n      case 'cases':\n        return renderCasesSection(); // All cases with LuniTriage severity assessment\n      case 'patients':\n        return renderPatientsSection();\n      case 'procedures':\n        return renderProceduresSection();\n      case 'schedule':\n        return renderScheduleSection();\n      case 'messages':\n        return renderMessagesSection();\n      case 'analytics':\n        return renderAnalyticsSection();\n      case 'profile':\n        return renderProfileSection();\n      default:\n        return renderOverviewSection();\n    }\n  };\n\n  return (\n    <ErrorBoundary message=\"There was an error loading your dashboard. Please try refreshing the page.\">\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"flex flex-col lg:flex-row\">\n          {/* Mobile Header */}\n          <div className=\"lg:hidden bg-white border-b border-gray-200 px-4 py-3\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h4 className=\"text-md font-medium text-gray-900\">Welcome back, {profile?.full_name || 'Vet Nurse'}</h4>\n              </div>\n              <button\n                onClick={() => setShowAvailabilityModal(true)}\n                className=\"px-3 py-1.5 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors text-sm\"\n              >\n                Schedule\n              </button>\n            </div>\n          </div>\n\n          {/* Mobile Navigation */}\n          <div className=\"lg:hidden bg-white border-b border-gray-200 px-2 py-2\">\n            <div className=\"flex overflow-x-auto space-x-1 pb-2\">\n              {sidebarItems.map((section) => (\n                <button\n                  key={section.id}\n                  onClick={() => setActiveSection(section.id)}\n                  className={`flex-shrink-0 flex items-center px-3 py-2 text-xs font-medium rounded-md transition-colors whitespace-nowrap ${\n                    activeSection === section.id\n                      ? 'bg-green-100 text-green-700'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  <span className=\"mr-1.5\">{section.icon}</span>\n                  {section.name}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Desktop Sidebar */}\n          <div className=\"hidden lg:block w-64 bg-white shadow-sm border-r border-gray-200 min-h-screen\">\n            <div className=\"p-6\">\n              <div className=\"mb-6\">\n                <div className=\"flex items-center space-x-3 mb-3\">\n                  <img \n                    src=\"https://wagrmmbkukwblfpfxxcb.supabase.co/storage/v1/object/public/web-img/vet-nurse%20(1).svg\" \n                    alt=\"Vet Nurse\" \n                    className=\"w-10 h-10\"\n                  />\n                  <div className=\"min-w-0 flex-1\">\n                    <h1 className=\"text-lg font-semibold text-gray-900 truncate\">Vet Nurse</h1>\n                    <p className=\"text-sm text-gray-600 truncate\">{profile?.full_name}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Navigation */}\n              <nav className=\"space-y-2\">\n                {sidebarItems.map((section) => (\n                  <button\n                    key={section.id}\n                    onClick={() => setActiveSection(section.id)}\n                    className={`w-full flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors ${\n                      activeSection === section.id\n                        ? 'bg-green-100 text-green-700'\n                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                    }`}\n                  >\n                    <span className=\"mr-3\">{section.icon}</span>\n                    {section.name}\n                  </button>\n                ))}\n              </nav>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 p-3 sm:p-4 lg:p-6\">\n            {renderActiveSection()}\n          </div>\n        </div>\n\n        {/* Modals */}\n        {/* Qualification Submission Modal */}\n        {showQualificationForm && (\n        <QualificationForm\n          providerData={providerData}\n          onClose={() => setShowQualificationForm(false)}\n          onSubmissionComplete={handleQualificationSubmissionComplete}\n        />\n      )}\n\n      {/* Availability Modal */}\n      {showAvailabilityModal && (\n        <ProviderAvailability\n          providerId={profile?.id}\n          onClose={() => setShowAvailabilityModal(false)}\n        />\n      )}\n\n              {/* Create Service Modal */}\n        {showCreateServiceModal && (\n          <QuickServiceCards\n            onClose={() => setShowCreateServiceModal(false)}\n          />\n        )}\n\n        {/* Package Modal */}\n        {showPackageModal && (\n          <PackageForm\n            isEdit={!!editingPackage}\n            initialData={editingPackage || {}}\n            onClose={() => {\n              setShowPackageModal(false);\n              setEditingPackage(null);\n            }}\n          />\n        )}\n\n        {/* Service Edit Modal */}\n        {showEditServiceModal && editingService && (\n          <ServiceEditForm\n            service={editingService}\n            onClose={() => {\n              setShowEditServiceModal(false);\n              setEditingService(null);\n            }}\n          />\n        )}\n\n      \n\n      {/* Schedule Modal */}\n      {showScheduleModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-2xl font-bold\">Today's Bookings</h2>\n              <button\n                onClick={() => setShowScheduleModal(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\n                <h3 className=\"font-medium text-blue-900\">📅 Today's Appointments</h3>\n                <p className=\"text-sm text-blue-700 mt-1\">\n                  {new Date().toLocaleDateString('en-AU', { \n                    weekday: 'long', \n                    year: 'numeric', \n                    month: 'long', \n                    day: 'numeric' \n                  })}\n                </p>\n              </div>\n\n              {bookings.filter(booking => \n                new Date(booking.preferred_date).toDateString() === new Date().toDateString()\n              ).length > 0 ? (\n                <div className=\"space-y-3\">\n                  {bookings.filter(booking => \n                    new Date(booking.preferred_date).toDateString() === new Date().toDateString()\n                  ).map((booking) => (\n                    <div key={booking.id} className=\"border border-gray-200 rounded-lg p-4\">\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h4 className=\"font-medium text-gray-900\">{booking.preferred_time}</h4>\n                          <p className=\"text-sm text-gray-600\">\n                            {booking.customer_name} - {booking.pet_name} ({booking.pet_species})\n                          </p>\n                          <p className=\"text-xs text-gray-500\">{booking.consultation_type}</p>\n                        </div>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(booking.status)}`}>\n                          {booking.status}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-2xl\">📅</span>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No appointments today</h3>\n                  <p className=\"text-gray-600\">Your schedule is clear for today.</p>\n                </div>\n              )}\n\n              <div className=\"flex justify-end pt-4\">\n                <button\n                  onClick={() => setShowScheduleModal(false)}\n                  className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n        {/* Messages Modal */}\n        {showMessagesModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-2xl font-bold\">Messages</h2>\n                <button\n                  onClick={() => setShowMessagesModal(false)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  ✕\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <h3 className=\"font-medium text-purple-900\">💬 Recent Messages</h3>\n                  <p className=\"text-sm text-purple-700 mt-1\">\n                    Communicate with pet owners about their bookings and consultations.\n                  </p>\n                </div>\n\n                {bookings.length > 0 ? (\n                  <div className=\"space-y-3\">\n                    {bookings.slice(0, 5).map((booking) => (\n                      <div key={booking.id} className=\"border border-gray-200 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-start\">\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">{booking.customer_name}</h4>\n                            <p className=\"text-sm text-gray-600\">\n                              Pet: {booking.pet_name} ({booking.pet_species})\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                              Booking: {new Date(booking.preferred_date).toLocaleDateString()} at {booking.preferred_time}\n                            </p>\n                          </div>\n                          <button className=\"text-[#5EB47C] hover:text-[#4A9A64] text-sm font-medium\">\n                            Message\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"text-center py-8\">\n                    <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <span className=\"text-2xl\">💬</span>\n                    </div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No messages yet</h3>\n                    <p className=\"text-gray-600\">Messages from pet owners will appear here.</p>\n                  </div>\n                )}\n\n                <div className=\"flex justify-end pt-4\">\n                  <button\n                    onClick={() => setShowMessagesModal(false)}\n                    className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Analytics Modal */}\n        {showAnalyticsModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-2xl font-bold\">Analytics Dashboard</h2>\n                <button\n                  onClick={() => setShowAnalyticsModal(false)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  ✕\n                </button>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h3 className=\"font-medium text-green-900\">📊 Performance Overview</h3>\n                  <p className=\"text-sm text-green-700 mt-1\">\n                    Track your service performance and client satisfaction.\n                  </p>\n                </div>\n\n                {/* Analytics Stats Grid */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                  <div className=\"bg-white border border-gray-200 p-4 rounded-lg\">\n                    <h4 className=\"text-sm font-medium text-gray-500\">Total Bookings</h4>\n                    <p className=\"text-2xl font-bold text-gray-900\">{bookings.length}</p>\n                    <p className=\"text-xs text-gray-500 mt-1\">All time</p>\n                  </div>\n                  \n                  <div className=\"bg-white border border-gray-200 p-4 rounded-lg\">\n                    <h4 className=\"text-sm font-medium text-gray-500\">Completed Services</h4>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {bookings.filter(b => b.status === 'completed').length}\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-1\">Success rate: {\n                      bookings.length > 0 ? \n                      Math.round((bookings.filter(b => b.status === 'completed').length / bookings.length) * 100) : 0\n                    }%</p>\n                  </div>\n                  \n                  <div className=\"bg-white border border-gray-200 p-4 rounded-lg\">\n                    <h4 className=\"text-sm font-medium text-gray-500\">Active Services</h4>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {listings.filter(l => l.active).length}\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-1\">Out of {listings.length} total</p>\n                  </div>\n                  \n                  <div className=\"bg-white border border-gray-200 p-4 rounded-lg\">\n                    <h4 className=\"text-sm font-medium text-gray-500\">Avg. Rating</h4>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {stats.averageRating > 0 ? `${stats.averageRating} ⭐` : 'N/A'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-1\">Based on reviews</p>\n                  </div>\n                </div>\n\n                {/* Recent Activity */}\n                <div>\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-3\">Recent Activity</h4>\n                  {bookings.length > 0 ? (\n                    <div className=\"space-y-2\">\n                      {bookings.slice(0, 5).map((booking) => (\n                        <div key={booking.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                          <div>\n                            <span className=\"font-medium\">{booking.customer_name}</span>\n                            <span className=\"text-gray-500 text-sm ml-2\">\n                              booked {booking.consultation_type}\n                            </span>\n                          </div>\n                          <span className=\"text-xs text-gray-500\">\n                            {new Date(booking.created_at).toLocaleDateString()}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <p className=\"text-gray-500 text-center py-4\">No recent activity</p>\n                  )}\n                </div>\n\n                <div className=\"flex justify-end pt-4\">\n                  <button\n                    onClick={() => setShowAnalyticsModal(false)}\n                    className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add Product Modal */}\n        {showAddProductModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-2xl font-bold\">\n                  {editingProduct ? 'Edit Product' : 'Add Product'}\n                </h2>\n                <button\n                  onClick={() => {\n                    setShowAddProductModal(false);\n                    setEditingProduct(null);\n                    setProductForm({\n                      name: '',\n                      description: '',\n                      price: '',\n                      category: 'Accessories',\n                      brand: '',\n                      stockQuantity: '',\n                      photos: [],\n                      specifications: ''\n                    });\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <form onSubmit={(e) => { e.preventDefault(); handleAddProduct(); }} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Product Name *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={productForm.name}\n                      onChange={(e) => setProductForm({...productForm, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"e.g., Premium Dog Food\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Brand\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={productForm.brand}\n                      onChange={(e) => setProductForm({...productForm, brand: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"e.g., Royal Canin\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Description\n                  </label>\n                  <textarea\n                    value={productForm.description}\n                    onChange={(e) => setProductForm({...productForm, description: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    rows=\"3\"\n                    placeholder=\"Describe the product, its benefits, and usage instructions...\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Price ($) *\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      value={productForm.price}\n                      onChange={(e) => setProductForm({...productForm, price: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"0.00\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category *\n                    </label>\n                    <select\n                      value={productForm.category}\n                      onChange={(e) => setProductForm({...productForm, category: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      required\n                    >\n                      <option value=\"Accessories\">Accessories</option>\n                      <option value=\"Supplements\">Supplements</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Stock Quantity *\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={productForm.stockQuantity}\n                      onChange={(e) => setProductForm({...productForm, stockQuantity: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"0\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Product Photos (up to 4)\n                  </label>\n                  \n                  {/* Photo Upload Area */}\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-gray-400 transition-colors\">\n                    <input\n                      type=\"file\"\n                      id=\"photo-upload\"\n                      multiple\n                      accept=\"image/*\"\n                      onChange={handlePhotoUpload}\n                      className=\"hidden\"\n                      disabled={productForm.photos.length >= 4}\n                    />\n                    <label \n                      htmlFor=\"photo-upload\" \n                      className={`cursor-pointer ${productForm.photos.length >= 4 ? 'cursor-not-allowed opacity-50' : ''}`}\n                    >\n                      <div className=\"space-y-2\">\n                        <svg className=\"mx-auto h-8 w-8 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                          <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                        </svg>\n                        <div className=\"text-sm text-gray-600\">\n                          <span className=\"font-medium text-blue-600 hover:text-blue-500\">\n                            Click to upload photos\n                          </span>\n                          <span> or drag and drop</span>\n                        </div>\n                        <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB each</p>\n                        <p className=\"text-xs text-gray-500\">\n                          {productForm.photos.length}/4 photos uploaded\n                        </p>\n                      </div>\n                    </label>\n                  </div>\n\n                  {/* Photo Preview Grid */}\n                  {productForm.photos.length > 0 && (\n                    <div className=\"mt-4 grid grid-cols-2 md:grid-cols-4 gap-3\">\n                      {productForm.photos.map((photo, index) => (\n                        <div key={photo.id} className=\"relative group\">\n                          <img\n                            src={photo.url}\n                            alt={`Product view ${index + 1}`}\n                            className=\"w-full h-20 object-cover rounded-lg border border-gray-200\"\n                          />\n                          <button\n                            type=\"button\"\n                            onClick={() => removePhoto(photo.id)}\n                            className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600 opacity-0 group-hover:opacity-100 transition-opacity\"\n                          >\n                            ×\n                          </button>\n                          {index === 0 && (\n                            <div className=\"absolute bottom-1 left-1 bg-blue-500 text-white text-xs px-1 py-0.5 rounded\">\n                              Main\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Specifications\n                  </label>\n                  <textarea\n                    value={productForm.specifications}\n                    onChange={(e) => setProductForm({...productForm, specifications: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    rows=\"3\"\n                    placeholder=\"Size, weight, ingredients, dosage instructions, etc...\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowAddProductModal(false);\n                      setEditingProduct(null);\n                                             setProductForm({\n                         name: '',\n                         description: '',\n                         price: '',\n                         category: 'Accessories',\n                         brand: '',\n                         stockQuantity: '',\n                         photos: [],\n                         specifications: ''\n                       });\n                    }}\n                    className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                  >\n                    {editingProduct ? 'Update Product' : 'Add Product'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n\n\n\n\n\n\n        {/* Pay-Per-Listing Modal */}\n        {showPayPerListingModal && payPerListingType && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-2xl max-w-md w-full\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <div className=\"flex justify-between items-center\">\n                  <h2 className=\"text-xl font-bold text-gray-900\">\n                    Add More {payPerListingType === 'service' ? 'Services' : payPerListingType === 'product' ? 'Products' : 'Packages'}\n                  </h2>\n                  <button \n                    onClick={() => setShowPayPerListingModal(false)} \n                    className=\"text-gray-400 hover:text-gray-600 text-2xl\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"p-6\">\n                <div className=\"text-center mb-6\">\n\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    Expand Your {payPerListingType === 'service' ? 'Services' : payPerListingType === 'product' ? 'Products' : 'Packages'}\n                  </h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    You have {payPerListingType === 'service' ? \n                      `${getServicesOnly(listings).length}/${FREE_SERVICE_LIMIT} services` :\n                      payPerListingType === 'product' ? \n                      `${products.length}/${FREE_PRODUCT_LIMIT} products` :\n                      `${packages.length}/${FREE_PACKAGE_LIMIT} packages`\n                    }. Add more to grow your business!\n                  </p>\n                </div>\n\n                {/* Billing Period Toggle */}\n                <div className=\"flex items-center justify-center mb-6\">\n                  <div className=\"bg-gray-100 p-1 rounded-lg flex\">\n                    <button\n                      onClick={() => setBillingPeriod('monthly')}\n                      className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                        billingPeriod === 'monthly'\n                          ? 'bg-white text-gray-900 shadow-sm'\n                          : 'text-gray-600 hover:text-gray-900'\n                      }`}\n                    >\n                      Monthly\n                    </button>\n                    <button\n                      onClick={() => setBillingPeriod('yearly')}\n                      className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                        billingPeriod === 'yearly'\n                          ? 'bg-white text-gray-900 shadow-sm'\n                          : 'text-gray-600 hover:text-gray-900'\n                      }`}\n                    >\n                      Yearly\n                      <span className=\"ml-1 text-xs text-green-600 font-semibold\">SAVE 17%</span>\n                    </button>\n                  </div>\n                </div>\n\n                {/* Pricing Options */}\n                <div className=\"space-y-3 mb-6\">\n                                    {/* Individual Option */}\n                  <button \n                    onClick={() => {\n                      // TODO: Implement payment processing\n                      showSuccess(`Payment integration coming soon! Contact support to add ${billingPeriod} billing for 1 ${payPerListingType} listing.`, 5000);\n                      setShowPayPerListingModal(false);\n                    }}\n                    className=\"w-full border border-gray-200 rounded-lg p-4 hover:border-green-300 hover:bg-gray-50 transition-colors text-left\"\n                  >\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          1 {payPerListingType === 'service' ? 'Service' : payPerListingType === 'product' ? 'Product' : 'Package'}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-xl font-bold text-gray-900\">\n                           ${getIndividualPrice(payPerListingType)}\n                         </p>\n                         <p className=\"text-xs text-gray-500\">\n                           ${billingPeriod === 'yearly' ? (getIndividualPrice(payPerListingType) / 12).toFixed(2) + '/month' : getIndividualPrice(payPerListingType) + '/month'}\n                           {billingPeriod === 'yearly' && <span className=\"text-green-600 ml-1\">(billed yearly)</span>}\n                         </p>\n                      </div>\n                    </div>\n                  </button>\n\n                                    {/* 3-Pack Option */}\n                  <button \n                    onClick={() => {\n                      // TODO: Implement payment processing\n                      showSuccess(`Payment integration coming soon! Contact support to add ${billingPeriod} billing for 3 ${payPerListingType} listings.`, 5000);\n                      setShowPayPerListingModal(false);\n                    }}\n                    className=\"w-full border-2 border-green-200 rounded-lg p-4 bg-green-50 hover:bg-green-100 transition-colors text-left relative\"\n                  >\n                    <div className=\"absolute -top-2 left-4\">\n                      <span className=\"bg-green-500 text-white px-2 py-1 rounded text-xs font-medium\">\n                        POPULAR\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          3 {payPerListingType === 'service' ? 'Services' : payPerListingType === 'product' ? 'Products' : 'Packages'}\n                        </p>\n                        <p className=\"text-sm text-green-700\">Save money</p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-xl font-bold text-green-600\">\n                           ${get3PackPrice(payPerListingType)}\n                        </p>\n                        <p className=\"text-xs text-green-600\">\n                           ${billingPeriod === 'yearly' ? (get3PackPrice(payPerListingType) / 12 / 3).toFixed(2) + '/month each' : (get3PackPrice(payPerListingType) / 3).toFixed(2) + '/month each'}\n                           {billingPeriod === 'yearly' && <span className=\"ml-1\">(billed yearly)</span>}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n\n                                    {/* 5-Pack Option */}\n                  <button \n                    onClick={() => {\n                      // TODO: Implement payment processing\n                      showSuccess(`Payment integration coming soon! Contact support to add ${billingPeriod} billing for 5 ${payPerListingType} listings.`, 5000);\n                      setShowPayPerListingModal(false);\n                    }}\n                    className=\"w-full border-2 border-blue-200 rounded-lg p-4 bg-blue-50 hover:bg-blue-100 transition-colors text-left relative\"\n                  >\n                    <div className=\"absolute -top-2 left-4\">\n                      <span className=\"bg-blue-500 text-white px-2 py-1 rounded text-xs font-medium\">\n                        BEST VALUE\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          5 {payPerListingType === 'service' ? 'Services' : payPerListingType === 'product' ? 'Products' : 'Packages'}\n                        </p>\n                        <p className=\"text-sm text-blue-700\">Best value</p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-xl font-bold text-blue-600\">\n                           ${get5PackPrice(payPerListingType)}\n                        </p>\n                        <p className=\"text-xs text-blue-600\">\n                           ${billingPeriod === 'yearly' ? (get5PackPrice(payPerListingType) / 12 / 5).toFixed(2) + '/month each' : (get5PackPrice(payPerListingType) / 5).toFixed(2) + '/month each'}\n                           {billingPeriod === 'yearly' && <span className=\"ml-1\">(billed yearly)</span>}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">What you get:</h4>\n                  <ul className=\"space-y-2 text-sm text-gray-600\">\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 text-green-500 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      Active {payPerListingType === 'service' ? 'service listing' : payPerListingType === 'product' ? 'product listing' : 'service package listing'}{billingPeriod === 'yearly' ? 's' : ''} while subscribed\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 text-green-500 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      Full marketplace visibility\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 text-green-500 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      Same commission rates ({payPerListingType === 'service' ? SERVICE_COMMISSION_RATE * 100 : PRODUCT_COMMISSION_RATE * 100}%)\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 text-green-500 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      {billingPeriod === 'yearly' ? 'Save 17% with yearly billing' : 'Flexible monthly billing'}\n                    </li>\n                    <li className=\"flex items-center\">\n                      <svg className=\"w-4 h-4 text-green-500 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      Cancel anytime\n                    </li>\n                  </ul>\n                </div>\n\n                {/* Cancel Button */}\n                <div className=\"text-center\">\n                  <button\n                    onClick={() => setShowPayPerListingModal(false)}\n                    className=\"text-gray-500 hover:text-gray-700 transition-colors text-sm underline\"\n                  >\n                    Maybe Later\n                  </button>\n                </div>\n\n                                  <p className=\"text-xs text-gray-500 text-center mt-4\">\n                    Secure payment processing • {billingPeriod === 'yearly' ? 'Yearly billing (save 17%)' : 'Monthly billing'} • Cancel anytime\n                  </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Patient Modal */}\n        {showPatientModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <div className=\"flex justify-between items-center\">\n                  <h2 className=\"text-2xl font-bold text-gray-900\">\n                    {editingPatient ? 'Edit Patient' : 'Add New Patient'}\n                  </h2>\n                  <button onClick={() => setShowPatientModal(false)} className=\"text-gray-400 hover:text-gray-600 text-2xl\">×</button>\n                </div>\n              </div>\n\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                const patientData = {\n                  name: formData.get('name'),\n                  species: formData.get('species'),\n                  breed: formData.get('breed'),\n                  age: formData.get('age'),\n                  weight: formData.get('weight'),\n                  ownerName: formData.get('ownerName'),\n                  ownerPhone: formData.get('ownerPhone'),\n                  ownerEmail: formData.get('ownerEmail'),\n                  medicalHistory: formData.get('medicalHistory')\n                };\n                handleAddPatient(patientData);\n              }} className=\"p-6 space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Pet Name *</label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      required\n                      defaultValue={editingPatient?.name || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., Max\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Species *</label>\n                    <select\n                      name=\"species\"\n                      required\n                      defaultValue={editingPatient?.species || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Select species</option>\n                      <option value=\"Dog\">Dog</option>\n                      <option value=\"Cat\">Cat</option>\n                      <option value=\"Bird\">Bird</option>\n                      <option value=\"Rabbit\">Rabbit</option>\n                      <option value=\"Horse\">Horse</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Breed</label>\n                    <input\n                      type=\"text\"\n                      name=\"breed\"\n                      defaultValue={editingPatient?.breed || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., Golden Retriever\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Age (years)</label>\n                    <input\n                      type=\"number\"\n                      name=\"age\"\n                      min=\"0\"\n                      step=\"0.1\"\n                      defaultValue={editingPatient?.age || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., 3\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Weight (kg)</label>\n                    <input\n                      type=\"number\"\n                      name=\"weight\"\n                      min=\"0\"\n                      step=\"0.1\"\n                      defaultValue={editingPatient?.weight || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., 25.5\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Owner Name *</label>\n                    <input\n                      type=\"text\"\n                      name=\"ownerName\"\n                      required\n                      defaultValue={editingPatient?.owner_name || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., John Smith\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Owner Phone *</label>\n                    <input\n                      type=\"tel\"\n                      name=\"ownerPhone\"\n                      required\n                      defaultValue={editingPatient?.owner_phone || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., +1 234 567 8900\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Owner Email</label>\n                    <input\n                      type=\"email\"\n                      name=\"ownerEmail\"\n                      defaultValue={editingPatient?.owner_email || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., john@example.com\"\n                    />\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Medical History</label>\n                  <textarea\n                    name=\"medicalHistory\"\n                    rows=\"3\"\n                    defaultValue={editingPatient?.medical_history || ''}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Any relevant medical history, allergies, or special needs...\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPatientModal(false)}\n                    className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                  >\n                    {editingPatient ? 'Update Patient' : 'Add Patient'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Procedure Modal */}\n        {showProcedureModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <div className=\"flex justify-between items-center\">\n                  <h2 className=\"text-2xl font-bold text-gray-900\">\n                    {editingProcedure ? 'Edit Procedure' : 'Schedule New Procedure'}\n                  </h2>\n                  <button onClick={() => setShowProcedureModal(false)} className=\"text-gray-400 hover:text-gray-600 text-2xl\">×</button>\n                </div>\n              </div>\n\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                const procedureData = {\n                  patientId: formData.get('patientId'),\n                  procedureType: formData.get('procedureType'),\n                  scheduledDate: formData.get('scheduledDate'),\n                  estimatedDuration: formData.get('estimatedDuration'),\n                  notes: formData.get('notes')\n                };\n                handleAddProcedure(procedureData);\n              }} className=\"p-6 space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Patient *</label>\n                    <select\n                      name=\"patientId\"\n                      required\n                      defaultValue={editingProcedure?.patient_id || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Select patient</option>\n                      {patients.map(patient => (\n                        <option key={patient.id} value={patient.id}>\n                          {patient.name} ({patient.species})\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Procedure Type *</label>\n                    <select\n                      name=\"procedureType\"\n                      required\n                      defaultValue={editingProcedure?.procedure_type || ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Select procedure type</option>\n                      <option value=\"Consultation\">Consultation</option>\n                      <option value=\"Vaccination\">Vaccination</option>\n                      <option value=\"Surgery\">Surgery</option>\n                      <option value=\"Dental Cleaning\">Dental Cleaning</option>\n                      <option value=\"Blood Test\">Blood Test</option>\n                      <option value=\"X-Ray\">X-Ray</option>\n                      <option value=\"Ultrasound\">Ultrasound</option>\n                      <option value=\"Emergency Care\">Emergency Care</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Scheduled Date *</label>\n                    <input\n                      type=\"datetime-local\"\n                      name=\"scheduledDate\"\n                      required\n                      defaultValue={editingProcedure?.scheduled_date ? editingProcedure.scheduled_date.slice(0, 16) : ''}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Estimated Duration (minutes)</label>\n                    <input\n                      type=\"number\"\n                      name=\"estimatedDuration\"\n                      min=\"15\"\n                      step=\"15\"\n                      defaultValue={editingProcedure?.estimated_duration || '60'}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"e.g., 60\"\n                    />\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Notes</label>\n                  <textarea\n                    name=\"notes\"\n                    rows=\"3\"\n                    defaultValue={editingProcedure?.notes || ''}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Any special instructions, preparation requirements, or additional notes...\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowProcedureModal(false)}\n                    className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                  >\n                    {editingProcedure ? 'Update Procedure' : 'Schedule Procedure'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n                )}\n      </div>\n    </ErrorBoundary>\n  );\n };\n \n export default VeterinaryProviderDashboard;"],"names":["_ref","providerData","onClose","onSubmissionComplete","showInfo","useNotificationContext","formData","setFormData","useState","license_number","qualification_type","institution","graduation_year","experience_years","specializations","additional_notes","submitting","setSubmitting","updateFormData","useCallback","field","value","prev","handleSubmit","async","e","preventDefault","data","user","supabase","auth","getUser","error","from","insert","provider_id","id","provider_email","email","provider_name","name","provider_type","parseInt","status","submitted_at","Date","toISOString","select","emailService","default","sendAdminQualificationNotification","emailError","_jsx","className","children","_jsxs","onClick","type","onSubmit","onChange","target","placeholder","autoComplete","required","min","max","getFullYear","rows","disabled","caseId","existingNote","onSave","onCancel","noteData","setNoteData","subjective","objective","assessment","plan","priority","recommendations","follow_up_required","follow_up_date","saving","setSaving","isTriageCase","setIsTriageCase","useEffect","toString","startsWith","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","checked","console","log","bookingId","replace","update","triage_notes","JSON","stringify","updated_at","eq","soapNoteData","case_id","created_at","alert","nurseId","initialFilter","allCases","setAllCases","loading","setLoading","selectedCase","setSelectedCase","showSOAPEditor","setShowSOAPEditor","dbError","setDbError","activeFilter","setActiveFilter","searchTerm","setSearchTerm","sortBy","setSortBy","SEVERITY_LEVELS","emergency","label","color","icon","description","serious","moderate","mild","pending","SERVICE_TYPES","filterOptions","count","length","filter","c","severity","assigned_nurse_id","loadAllCases","casesFromSources","Promise","allSettled","loadRegularCases","loadTriageBookings","loadConsultationBookings","allCasesData","forEach","result","index","push","sort","a","b","_SEVERITY_LEVELS$a$se","_SEVERITY_LEVELS$b$se","severityA","_error$message","or","message","includes","map","case_item","source","service_type","case_type","in","booking","case_number","title","pet_name","consultation_type","consultation_reason","triage_priority","customer_name","customer_email","customer","full_name","booking_data","appointment_date","appointment_time","booking_id","not","getSeverityBadge","config","getServiceTypeBadge","serviceType","handleCaseClick","caseItem","getTimeAgo","dateString","date","now","diffInMinutes","Math","floor","filteredCases","getFilteredCases","filtered","searchLower","toLowerCase","_c$title","_c$description","_c$case_number","_c$pet_name","_c$customer_name","_SEVERITY_LEVELS$a$se2","_SEVERITY_LEVELS$b$se2","SOAPNoteEditor","_selectedCase$soap_no","soap_notes","option","_caseItem$customer","_caseItem$soap_notes","due_date","toLocaleDateString","stopPropagation","newSeverity","find","handleUpdateSeverity","defaultValue","VeterinaryProviderDashboard","showSuccess","showError","PRODUCT_MONTHLY_FEE","getIndividualPrice","billingPeriod","get3PackPrice","get5PackPrice","getNetEarnings","price","commission","arguments","undefined","parseFloat","toFixed","calculateProductCommission","calculateServiceCommission","getServicesOnly","listings","listing","listing_type","service_types","setUser","profile","setProfile","setProviderData","setListings","bookings","setBookings","triageCases","setTriageCases","products","setProducts","qualificationSubmission","setQualificationSubmission","showQualificationForm","setShowQualificationForm","showAvailabilityModal","setShowAvailabilityModal","showCreateServiceModal","setShowCreateServiceModal","showEditServiceModal","setShowEditServiceModal","showPayPerListingModal","setShowPayPerListingModal","payPerListingType","setPayPerListingType","setBillingPeriod","editingService","setEditingService","showScheduleModal","setShowScheduleModal","showMessagesModal","setShowMessagesModal","showAnalyticsModal","setShowAnalyticsModal","packages","setPackages","showPackageModal","setShowPackageModal","showAddProductModal","setShowAddProductModal","editingProduct","setEditingProduct","editingPackage","setEditingPackage","openDropdown","setOpenDropdown","activeSection","setActiveSection","patients","setPatients","procedures","setProcedures","showPatientModal","setShowPatientModal","showProcedureModal","setShowProcedureModal","editingPatient","setEditingPatient","editingProcedure","setEditingProcedure","selectedPatient","setSelectedPatient","profileForm","setProfileForm","fullName","phone","address","serviceAreas","maxTravelDistance","yearsOfExperience","profilePicture","formInitialized","setFormInitialized","productForm","setProductForm","category","brand","stockQuantity","photos","specifications","stats","setStats","totalListings","activeBookings","totalBookings","totalEarnings","averageRating","triageCasesHandled","clientsHelped","navigate","useNavigate","providerLabels","providerType","getProviderLabels","getServiceOptions","baseServices","checkUserAndLoadData","localStorage","getItem","_user$email","trim","split","service_areas","max_travel_distance","profile_picture","avatar_url","stock_quantity","handleClickOutside","event","closest","document","addEventListener","removeEventListener","handleAddProduct","tableCheckError","limit","sampleProduct","testCategories","testError","is_active","delete","ensureProductsTable","isNaN","stock","_window$crypto","_window$crypto$random","_user$email2","Error","currentProductCount","currentProviderData","subscriptionPlan","subscription_plan","isFreeTier","FREE_PRODUCT_LIMIT","productData","listing_id","window","crypto","randomUUID","call","random","active","image_url","url","savedProduct","single","existingProducts","uniqueCategories","Set","p","join","marketplaceCheck","newProduct","createdAt","updatedAt","updatedProducts","setItem","storageError","handleDeleteProduct","productId","productName","confirm","updatedListings","_user$email3","getUserSafely","profileData","profileError","role","provider","providerError","years_experience","qualificationData","listingsData","order","ascending","packagesFromMarketplace","service_ids","original_price","package_price","savings","productsFromMarketplace","bookingsData","l","triageData","verified","_booking$marketplace_","marketplace_listings","patientsData","proceduresData","publishedProvider","reduce","sum","rating","round","Sentry","handleQualificationSubmissionComplete","submission","handleAddNewService","currentServiceCount","FREE_SERVICE_LIMIT","handleAddNewPackage","currentPackageCount","FREE_PACKAGE_LIMIT","ServiceEditForm","_serviceData$service_","_serviceData$service_2","_serviceData$service_3","service","serviceData","setServiceData","price_from","step","PackageForm","_ref2","isEdit","initialData","packageData","setPackageData","selectedServices","packagePrice","isActive","getOriginalPrice","total","_window$crypto2","_window$crypto2$rando","_user$email4","packageInfo","reviews_count","savedPackage","handleServiceToggle","serviceId","htmlFor","QuickServiceCards","_ref3","setSelectedServices","customPrices","setCustomPrices","availableServices","defaultPrice","preset","getAvailableServices","isSelected","s","currentPrice","newPrices","handlePriceChange","selectedServicesCount","totalAfterCreation","currentProviderDataForInsert","servicePromises","_window$crypto3","_window$crypto3$rando","insertData","provider_phone","errors","all","r","getStatusColor","handleSaveProfile","updateData","existingProvider","checkError","basicUpdateData","basicProviderError","profileUpdateData","Object","keys","profileUpdateError","resolve","setTimeout","handleProfilePictureChange","file","files","size","fileExt","pop","fileName","storage","upload","upsert","publicUrl","getPublicUrl","sidebarItems","getProviderNavigation","getNavigationSectionsLocal","renderOverviewSection","MarketplaceSummary","slice","_booking$marketplace_2","_booking$marketplace_3","CasesSummary","_Fragment","React","toDateString","renderServicesSection","open","serviceTitle","existingService","prevStats","bookingError","warn","handleDeleteService","src","alt","pkg","_pkg$service_ids","_pkg$original_price","_pkg$package_price","_pkg$savings","updatedPackages","packageId","packageName","handleDeletePackage","product","handleDeletePatient","patientId","patientName","handleDeleteProcedure","procedureId","procedureType","ErrorBoundary","section","renderActiveSection","CaseManager","renderCasesSection","patient","breed","species","age","weight","owner_name","owner_phone","owner_email","medical_history","procedure","procedure_type","scheduled_date","weekday","year","month","day","estimated_duration","notes","charAt","toUpperCase","renderAnalyticsSection","revenue","calculateRevenue","serviceRevenue","productRevenue","packageRevenue","services","thisMonthBookings","bookingDate","getMonth","style","width","earnings","onError","display","nextSibling","getElementById","click","accept","readOnly","businessType","experienceLevel","years","level","getExperienceLevel","gray","blue","green","purple","gold","defaultChecked","QualificationForm","ProviderAvailability","providerId","preferred_date","preferred_time","pet_species","multiple","Array","reader","FileReader","onload","img","Image","canvas","createElement","ctx","getContext","height","maxDimension","drawImage","compressedDataUrl","toDataURL","newPhoto","readAsDataURL","photo","removePhoto","photoId","SERVICE_COMMISSION_RATE","PRODUCT_COMMISSION_RATE","FormData","newPatient","patientData","ownerName","ownerPhone","ownerEmail","medicalHistory","handleAddPatient","get","newProcedure","patient_id","procedureData","scheduledDate","estimatedDuration","handleAddProcedure"],"sourceRoot":""}